t.getCause.printStackTrace 1
System.exit(-1) 1
ifaces 1
postTransform(mainTransform(tree)) 1
target.addAnnotation(readAnnotationInfo(end)) 1
prefix 2
!message.isInstanceOf[scala.collection.immutable.Tree[_,_]] 2
logFile.write( 1
opcode(Stind_I2, 1
opcode(Stelem_I4, 1
v(findBit(INTERFACE_PKL))=INTERFACE 1
traverse(ref) 1
nme.REPEATED_PARAM_CLASS_NAME, 1
assert(mods.isLazy) 1
Literal(const).setType(const.tpe) 1
c.scope 1
times(len, 1
opcode(Ldc_I4_6, 1
Some((block, 1
treeSymTypeMsg(tree) 1
(!forMSIL 1
List(TypeTree(meth.tpe.finalResultType))), 1
sym.setFlag(DEPRECATED) 1
isThereSpaceForMove(move) 1
stack.push(stack.head) 1
!isNumericValueClass(actual) 1
putType(pre); 2
pickledBytes 1
targs 1
addWriteResource(writeResource, 1
println((new 1
nme.toLong 1
substExpr(tree, 2
reporter.reset 1
null; 1
needTryLift 2
a.start 1
isNullary(tpe1) 2
updateData(x) 1
entries(i) 1
reporter 1
validateVariance(base.info, 1
method.params 1
&& 36
if(elems2.hasNext 5
_partial 1
argContext 1
genLocalVariableTable(m, 1
test5({argName 1
DefDef(Modifiers(FINAL), 1
AnnotationDefaultAttr, 1
k 2
c.retyping 1
cloneSymbol(owner) 1
getScope(jflags).enter(sym) 2
NOT 1
LiftRules.loggedInTest 1
checkVersion(filename) 1
that.isInstanceOf[State] 1
exh.setStartBlock(ctx.bb) 1
compileGroup(noSuffix) 1
endPC(b) 1
stricterBound(hkarg, 1
assert(b3.matrix 1
txt 1
putType(sym.typeOfThis); 1
scala.concurrent.ops.spawn 1
executor.mainLock.lock() 1
jcode.emitINVOKESPECIAL(owner, 2
isAbstractTypeWithoutFBound(member) 1
CharClass, 1
resCtx 1
symIndex(stat.symbol) 1
until 1
clazz.info.decls.enter(sym) 1
Object_eq 1
drawLine(size,0,0,0) 2
instantiateToBound(tvar, 1
global.inform( 2
settings.Xdce.value 1
writeNat(SUPERtree) 1
test4(14) 1
addDefDef(sym, 4
ctx1.bb.emit(CALL_PRIMITIVE(StringConcat(kind)), 1
newDefs.clear 1
opcode(Ldarg_0, 1
nme.LE 1
unescape(ref,sb) 1
todo() 2
instrs.toList 1
in.clear; 1
buf.append().append(label.toString()) 1
writeRef(arg) 1
testEnqueue 1
settings.encoding.value 1
!parents.flatMap(_.baseClasses).removeDuplicates.exists(bc 1
w2: 3
fun.symbol.simpleName 1
typed 2
code.blocks 1
args.map(TypeTree(_)) 1
name.hashCode 1
types 2
typer 1
javaType(s.tpe) 1
x.normalize 1
DeBruijnIndex(level, 1
jcode.emitFCONST_0(); 1
checkBounds(NoPrefix, 1
updateDefinitions(files) 1
PUSH_size(PUSH_R8) 1
alias 1
future.await 2
CaseDef(pat, 1
!message.isInstanceOf[List[_]] 2
__ 1
this.instanceCode 1
context.setServer(server) 2
DependencyFactory.time.default.set(() 1
writeNat(THIStree) 1
c.enclClass 2
writeRefs(stats) 2
setFlag(notPRIVATE) 1
inlinedBlock(bb).close 1
sym.setFlag(flags.toLong 1
_desc 1
tok.pred.transform(liftF(tok, 1
errVar.withValue(err)(thunk) 1
context.error(tpsym.pos, 1
.asInstanceOf[java.util.List[String]] 1
sc.depth 1
(exprTypeArgs(uninstantiated.toList, 1
context.undetparams 1
caller.exh 1
EmptyTree) 1
EmptyTree, 1
setErr(new 1
failCompileFilesIn(file, 1
decrementTransaction 2
addModuleMethod(FloatClass, 6
(flags 5
ah.addAsyncFilter(new 1
private[collection] 1
traverse(fun); 3
_callbacks.afterRollback.add(callback, 1
outVar.withValue(out)(thunk) 1
array 2
ctx1.bb.emit(STORE_ARRAY_ITEM(BYTE), 1
rp 1
txt.variance 1
NOPREFIXtpe 1
self: 18
NestedAnnotArg(readAnnotation()) 1
rc 3
transformValDefss(vparamss), 1
emitClass(mirrorClass, 1
r.parent 1
@Transactional 3
sym.setInfo(info) 2
currentOwner 4
this.numThreads 1
opcode(Cgt, 1
for(vparams 1
out.writeObject(ListSerializeEnd) 1
dumpMirrorClass(c.symbol, 1
translate(width, 1
VAL(methodSym) 1
dependencyAnalysis.saveDependencies(fromFile) 1
emitAnnotation(annInfo) 1
If( 1
isModuleInitialized 2
newInits 1
master 1
.setTarget(this.getClass.getName) 4
out.flush 2
sym.asInstanceOf[TermSymbol].setAlias(alias) 1
buf.put('F'.toByte) 1
opcode(Ldnull, 1
fill() 1
doMove(move) 1
treeCopy.ApplyDynamic(tree, 1
Some(List(i2)) 1
accept(';') 1
renato.pets.add(leao) 1
super.transform(tree) 7
STORE_LOCAL(inlinedLocals(l)) 1
this(rows.toArray) 1
isRunning 1
opcode(Ldind_R4, 1
liftStringConcat(larg) 1
tree 44
MethodType(mt.params, 1
opcode(Ldlen, 1
member.varianceString 1
rawSelf.asInstanceOf[ReplyReactor].reply(msg) 1
THIS(definitions.ObjectClass) 1
get(key) 1
name.toString.endsWith(nme.INTERPRETER_WRAPPER_SUFFIX) 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(BYTE)), 1
(src(0).zipBy(src(1))(_ 1
writeRefs(tparams) 3
.setInfo(PolyType(List(), 2
object 253
errors 2
tree.resetType() 1
parser: 2
addOwnInnerClasses(clasz.symbol.linkedClassOfClass) 1
addGenericSignature(jmethod, 1
expandName(base) 1
implicitsRunId 2
classSymbol, 1
opcode(Starg, 1
barrier.await 3
forceMangledName(name, 1
assert(interv.sameElements(List(1, 1
apparentSize 6
assert(pending.isEmpty, 1
busy 2
vparamss, 1
writeNat(MATCHtree) 1
isPackageClass 1
vparamss1 1
touched 3
setDaemon(daemon) 1
check(clazz.info.members) 1
vparamss: 2
latch.await 1
code.emit(UNBOX(toTypeKind(m.info.resultType))) 1
+owner.nameString 2
INLINE_length(INLINE_TARGET) 1
exhCtx 1
new 207
(!sym.isModule 1
opcode(Blt, 1
println(mn.bar(10)) 1
(functionType.normalize 1
accept('<') 1
settings.dependenciesFile.value 2
.toHashCode 1
originalName 3
MainGenericRunner.main(args) 1
tree.setType(ErrorType) 1
atomic 2
traverse 1
opcode(Conv_U1, 1
ctx1.method.setCode(null) 1
.format(rows.size) 1
result 37
pickle(unit.body) 1
writeNat(ALTERNATIVEtree) 1
(howMany 1
javaType(field)) 4
opcode(Br, 1
_1.subscribe(k.noEnd) 1
score 6
tp.parents 1
tryToSet(s 1
!message.isInstanceOf[Long] 2
TypeDef(sym, 1
addGenericSignature(jfield, 1
opcode(Ldc_I4_4, 1
args.length 1
atPos(itree.pos) 1
w.unlock() 1
lvTab.array()) 1
callee.exh 1
info.baseTypeIndex(that) 1
@equivalentTo("foreach{ 1
POP_size(POP_REF_I_R4) 1
assert(ctx.clazz.symbol 1
isWeaklyCompatible(tp, 1
cunit.warning(tvars.head.lhs.pos, 1
runApplicationBootClasses 1
member.isValue 1
diff 10
putType(sym.info) 1
implicitInfoss 1
owner.newValue(tree.pos, 2
(false, 2
errorAndValue(, 2
putTree(elemtpt) 1
(sym.hasFlag(Flags.JAVA) 1
t1.f(b 1
writeRef(cond) 1
getCode(jflags).addMethod(this.method) 1
nme.toInt 1
msg+(if 1
opcode(Bge, 1
out.write(result) 1
ctx1.bb.emit(MONITOR_EXIT(), 1
mirrorCode.emitGETSTATIC(moduleName, 1
INLINE_length(INLINE_TYPE) 1
MethodType(ownerParam 1
!sym.isTerm 3
KMP(source.slice(sourceOffset, 1
assert(!board.isLegalMove(m_bad)) 2
adapter.setHandleStaticResources(true) 1
accessorName 1
assert(((-100).toShort: 1
(symtpe.parents 1
nme.toFloat 1
setInfo(NoType) 1
foldLeft(subst)((b, 1
in(p) 1
errorBadTag(start) 1
assert(low 1
@Id 1
RightTriangle(3,4).draw 4
alwaysEqual) 1
writeRef(const) 1
error( 5
treess 2
sig2typeBounds(tparams, 1
(e1 1
map(matrix.value(_,0) 1
_callbacks.afterCommit 1
UnTyper.traverse(p1) 1
List(ByteClass, 1
addRemoteException(jmethod, 1
_remoteAddress 2
assertEquals(clienteRecuperado.nome, 1
previous 1
unset() 1
shortCuts 1
Console.println(e) 1
ctx1.bb.emit(STORE_ARRAY_ITEM(ANY_REF_CLASS), 1
data(index 1
isAsSpecific(ftpe1.skolemizeExistential, 1
p.parent 2
sym.setFlag(DEFAULTPARAM) 1
List(FloatClass, 1
v.caseOpCode(this) 1
dependencyAnalysis.loadFrom(AbstractFile.getFile(depFilePath), 1
putTree(tpt) 6
private[xml] 1
copyToArray(xs, 1
old 1
left1 1
left2 1
skipAttributes(); 1
staticModule.moduleClass.setFlag(JAVA) 1
paramsToString(params), 1
assert(mlist.head 2
opcode(Add_Ovf_Un, 1
withDisambiguation(tp1, 1
(tree.pos)) 1
pickle.bytes, 1
getImpl(key, 3
cleanRecord(rec); 1
for 257
this.next 1
groups.addToGroup(groups.groupOf(q), 1
(!hasFlag(METHOD 1
lifeCycle 2
isAsSpecificValueType(ftpe1, 1
_lastInstruction 1
(!sym.owner.isClass 1
TypeTree(nonLocalReturnExceptionType(expr.tpe)), 1
(sflags 1
o 4
tree.symbol.tpe.typeSymbol 1
freshToken.pred 4
menuBar 1
buf.putShort(index) 1
sym.defaultGetter 3
chtp 2
Any_asInstanceOf), 1
_size 2
ByteClass, 1
ctx.bb.emit(LOAD_MODULE(sym), 1
assert(putEntry((sym, 1
getExternalName(in.getChar(start 1
opcode(Localloc, 1
avail 43
POP_size(POP_NONE) 1
!hasFlag(PRIVATE 1
println(cart 3
opcode(Ldelema, 1
caseCtx.bb.close 2
putTree(selector) 1
context.MatrixInit(List(v), 1
Block(List(init, 1
'u' 2
reduceLeft(_ 2
assert(even.size 1
b1 5
arg.tpe 1
inlinedBlock(bb).emit(map(i), 1
opcode(Bgt, 1
ctx.scope.add(lv) 1
ms.moduleClass.asInstanceOf[ClassSymbol].classFile 1
!message.isInstanceOf[Tuple2[_,_]] 2
genCond(rhs, 1
finalCtx.bb.close 1
actor 9
isConcreteAccessor(sym) 1
assumeShooterExists(shooter) 2
Static(false) 1
transformTypeDefs(tparams), 3
server.start() 1
HashMap(bs 1
classFile 1
require(scrut.isSimple 1
Thread.sleep(intervalMillis) 1
(kind: 6
link(a) 1
clazz.newMethod(field.pos, 1
_count 2
opcode(Add_Ovf, 1
.setId(request.getId) 5
sampleBegin 1
!(forMSIL 1
.setInfo(mkTypeBounds(NothingClass.typeConstructor, 1
(!(sym 2
:: 1
if(lt(left1.head, 1
isPackageObject 1
WildcardType) 1
log(+parts(pt)+implicitsOfExpectedType) 1
c.reportGeneralErrors 4
attr.info.decls 1
super.transform(result) 1
suspending 2
default1 1
bootstrap.setPipelineFactory(new 1
default: 3
Typed(Ident(nme.WILDCARD), 1
addendumPos 1
jcode.emitPUSH() 1
println(bn1(b 1
internalFrame.visible 1
mkTypeBounds(NothingClass.tpe, 1
this.staticModule 2
loads 1
s.toFloat 1
in.readObject.asInstanceOf[MyMessage] 1
newInstr 1
readByte() 2
uninstantiated: 1
local.end 1
sizeRef 15
enterSyntheticSym(beanGetterDef) 1
current 9
assert(biggerBoard.isAdjacentToSelf(move.cells, 1
NoContext.enclMethod 1
opcode(Ldstr, 1
edit(_.appendLine()) 4
adapt(generatedType, 1
Object_!= 1
Console.println(context) 1
alts1 1
caseFields(x).mkString(x.productPrefix 1
opcode(Conv_Ovf_I4_Un, 1
Assign(lhs, 1
ctx1.bb.emit(CALL_PRIMITIVE(Shift(ASR, 1
_slotsByPrio.clear() 1
ctx.bb.emit(CALL_PRIMITIVE(Conversion(from, 2
other.isInstanceOf[Local] 1
javaFiles 1
appliedType(definitions.ArrayClass.tpe, 1
readTypeRef() 1
writeRef(clazz); 1
assert(!(alias 1
f(array(i).asInstanceOf[A]) 2
writeRef(privateWithin) 1
println(t3.f(a2 1
next.append(that) 1
println(t3.f(a1 1
opcode(Bge_S, 1
isCornerToSelf(move)) 1
code.removeBlock(succ) 1
scope 6
cls.fields.foreach(printField); 1
!sym.isImplClass 1
!message.isInstanceOf[Tuple8[_,_,_,_,_,_,_,_]] 2
wait(timeout) 1
values 2
opcode(Ceq, 1
assertEquals(iterative.Of((1,"2"),(2,"3"),(99,"99")), 4
xp.right 3
opcode(Throw, 1
print((if 1
newAbstractType(pos, 2
opcode(Unbox, 1
.append(id) 1
getNumber 2
squeezedBlock(pvs 1
opcode(Bgt_S, 1
leftlst 1
+outDir.getCanonicalFile.getAbsolutePath+ 1
_zeroSlot.add(elem) 1
buf.putShort(cpool.addInteger(const.charValue).toShort) 1
symbolValue.owner.linkedClassOfClass.tpe 1
writeSymInfo(sym) 3
decodePair(freshPred.nonTxn.getAndSet(IdentityPair(freshToken, 1
succ 1
Apply(staticRef(initializer(sym)), 1
validateVariance(tp.normalize, 1
writeNat(BINDtree) 1
data 1
traverse(expr) 3
doGet(k) 2
ss 1
sr 1
enterInScope(sym) 1
ARRAY(toTypeKind(targs.head)) 1
sl 1
sc 4
awaitWith(partFunsRest) 1
treeCopy.Star(tree, 1
printInfoStart(files(fileCnt-1), 1
jcode.emitGOTO_maybe_W(labels(whereto), 1
mkThisType(readSymbolRef()) 1
assert(rhs.isTerm, 2
assert(allgt55.contains(60)) 1
cardBinOps 1
ctx.bb.emit(getZeroOf(expectedType)) 1
ctx1.bb.emit(RETURN(ctx.method.returnType), 1
cps.filter(mps 1
println(test9) 2
INLINE_length(INLINE_R8) 1
matches 2
writeLikeResources.clear() 1
applicationLoader 1
pre1: 1
in(m.code.startBlock) 2
txt.checking 1
DefDef(lazyDefSym, 1
pet.proprietarios.add(new 3
finalCtx 1
ctx1.bb.emit(init, 1
b2.test1(b 1
buf.putShort(assocs.length.toShort) 1
<lift:bind 1
!sym.isModuleClass 1
gen.mkRuntimeCall(, 1
sameType(lo1, 1
opcode(Ldelem_R4, 1
writeRef(pre); 2
System.gc 1
code.emit(NEW(REFERENCE(pool.getClassSymbol(in.nextChar)))) 1
b.prependToList(ys1) 2
(new 7
DROP(ANY_REF_CLASS) 1
((tpe.prefix 1
sym.locationString) 1
Block(List(DefDef(sym, 1
queue.enqueue(30) 3
List.map2(a.stack, 1
writeRef(localizedOwner(sym)) 1
assert(s 3
boxedClass(clazz) 1
assert(x 10
((new 1
assert(f 1
tl.last0 1
List()), 1
stack.push(typeLattice.Object) 1
opcode(Ldsflda, 1
filter(matrix.value(_,0) 2
.setFlag(Flags.SYNTHETIC) 1
afterRollback(callback, 1
member.makeNotPrivate(clazz) 1
Constant(in.getLong(start 1
putChar('.'); 1
predicateTokenRefUpdater.compareAndSet(this, 3
cells.filter((p:Cell) 1
enterInScope{ 1
buf.putShort(args.length.toShort) 1
concrOvers.map(_.name.decode).mkString()) 1
fresh(s) 2
TypeTree(sym.tpe) 1
assert(! 1
putEntry(if 1
REF(reflPolyCacheSym) 1
comesBefore(sym, 1
assert(queue.nonEmpty 1
parseInnerClasses() 2
this.labels 1
future 2
register(clazz.tpe) 1
javaName(field), 4
assert(sgt60 1
it(){ 20
(isRootSym(sym) 1
sysenvopt( 1
hasExplicitResultType(sym) 1
assert(rawowner.isClass, 2
addExceptionsAttribute(mirrorMethod, 1
abort(.format(tree, 1
Some(Class.forName(fqn) 1
lr.parent 1
rfb.append(c) 1
nme.ZOR 1
opcode(Conv_Ovf_I_Un, 1
println(t6.f(b 1
(forBody: 1
stripMargin.format( 1
buffer 3
nextBlock 1
hasFlag(PROTECTED) 1
findSubManifest(pre) 1
atPos(fun.pos) 1
tree.selectors 1
compose(List(flagsToString(f), 1
.format(getClass.getSimpleName, 1
!isEmpty 1
error(pos, 6
unit.error(currentLevel.refpos, 1
decls1 1
ctx.bb.emit(LOAD_MODULE(definitions.ScalaRunTimeModule)) 1
slot 1
ctx1.bb.emit(DUP(ANY_REF_CLASS)) 2
ctx1.bb.emit(LOAD_ARRAY_ITEM(BYTE), 1
tl.first0 1
AtomicLongFieldUpdater.newUpdater(classOf[TIdentityPairRef[_,_]], 1
cb(this) 1
classConstantMeth.clear 1
next(); 1
MODULE 1
server.addHandler(context) 2
typedPos(pos)(BLOCK(result, 1
try{ 1
}.traverse(tree); 1
super.transformStats(stats1, 1
m.moduleClass.setFlag(JAVA 1
ccon.newInstance(charset.newDecoder(), 1
assert(pdopt 1
DefDef(sym, 4
opcode(Sub_Ovf, 1
stack.push(t.getKind(in)) 1
(DefDef(mods, 1
putSymbol(clazz); 1
writeNat(FUNCTIONtree) 1
scheduler.newActor(this) 1
(info.baseClasses 1
putConstant(Constant(comment)) 1
v(findBit(DEFERRED_PKL 1
newMembers 3
jcode.emitIF_ACMP(conds(negate(cond)), 1
opcode(Conv_Ovf_U1, 1
e.printStackTrace() 2
_callbacks.afterRollback 1
assert(sometail.head 1
jcode.emitLSHL() 1
assert(b2.possibleMoves(one_piece_player).length 1
this.method.addParam(code.enterParam(idx, 1
forceRollback(InvalidReadResourceCause(res)) 1
typedPos(tree.pos) 1
s 15
sb.toString 2
staticCode.methods 1
field.hasFlag(LAZY)) 1
unit.icode.clear 1
assertEquals(iterative.Of(1,2,3,4,5, 1
indent; 4
(superRef 1
numBlocked 2
+outDir+File.pathSeparator+CLASSPATH+ 2
code.emit(CHECK_CAST(toTypeKind(pool.getClassOrArrayType(in.nextChar)))); 1
RootClass.info.decls.enter(EmptyPackage) 1
m(x 1
MethodType(newParams, 1
assert(resKind.isNumericType 1
out.print(if 2
hidden 1
decls.iterator 1
test1(b 4
+formals+ 1
Thread.sleep(5000) 2
opcode(Mkrefany, 1
buf.putShort(cpool.addInteger(const.intValue).toShort) 1
opcode(Blt_Un_S, 1
PolyType(List(), 1
argtypess 1
@transient 1
printRef(localizedOwner(sym)) 1
ctx1.bb.emit(CALL_PRIMITIVE(Shift(LSR, 1
genLoad(rhs, 1
finalCtx.bb.emit(JUMP(afterCtx.bb)) 1
hostname 1
opcode(Ldc_I4_8, 1
enterKeyword(, 50
settingSet.find(x 1
icodes.icode(receiver, 1
c.checking 1
context.unit.uncheckedWarning(pos, 1
sym.setFlag(BRIDGE) 1
nextch() 1
agent(increment 1
writeRef(name) 8
annot.assocs 1
NullValue.decodeOption(pred(key).nonTxn.getAndSet(NullValue.encode(value))) 1
code.emit(STORE_LOCAL(local)) 2
being 1
(s 1
rest 1
(i 1
testAddFewElements 1
(c 1
buf.append() 1
isItInBounds(move) 1
vparamSymss 1
pred.get 1
make(unit, 2
res2 1
existentialAbstraction(tparams.toList, 1
(0 2
res1 2
enclosingSuperClassContext(clazz) 1
undo() 3
ScalaPackageClass.info.decls.enter(module) 1
CJUMP(success.block, 1
() 26
@cloneable 1
!sc.typeSymbol.isTrait 1
ctx1.bb.close 4
unit.warning(pos, 1
abort( 23
p.addLast(, 5
pivot.subsequences(c, 1
putMods(mods) 5
(meth.hasAnnotation(RemoteAttr) 1
index(i) 1
toStringType) 1
syntaxError(+in.ch.toInt) 1
CJUMP(cont, 2
serialVUID 3
origin1 1
origin2 1
sym.name 2
NullValue.decodeEntrySetSnapshot(underlying) 2
traverse(definition) 1
if(!kindErrors.isEmpty) 3
w.setup(id, 1
writeNat(VALDEFtree) 1
jcode.emitMULTIANEWARRAY(javaType(ArrayN(elem, 1
clazz.setInfo(newNamer(context.makeNewScope(tree, 1
opcode(Ldfld, 1
bb.open 1
msym 1
tvar.owner 1
moduleClass.infoString(tp) 1
Charset.forName(settings.encoding.value) 2
acc 9
unit.error(pos, 4
package 248
uncurry(tp) 1
INLINE_length(INLINE_VARIABLE_S) 1
info.stack.types 1
putClassfileAnnotArg(asc._2) 1
opcode(Bne_Un, 1
printRef(restpe); 1
assert(ps.size 1
at(i, 3
thenCtx.bb.close 1
Console.printf(, 1
(1, 1
sealed 22
putTrees(catches) 1
results0.foldLeft(true)((x,y) 1
TypeBoundsTree(lo, 1
array(b) 1
NestUI.verbose(+exitCode) 1
jcode.emitINVOKESTATIC(, 3
CZJUMP(thenCtx.bb, 5
instantiate(tp); 1
enterReference(tree.pos, 2
l.other 1
nme.GT 1
.setType(baseFun1.tpe).setSymbol(baseFun1.symbol) 1
as 1
nme.GE 1
at 3
nme.UNARY_- 1
nme.UNARY_+ 1
isClass 4
code.emit(THIS(method.symbol.owner)); 2
owner.info.decls.enter(sym) 1
OVERRIDE 1
assert(handlerCount 1
start: 1
nme.UNARY_~ 1
Pair({cnt+=1; 1
s.toInt 1
w.counts.clear 1
assert(infos.prev 1
underlying.remove(key) 2
ctx1.bb.emit(STORE_LOCAL(loc1)) 1
mask 1
tvars 6
(is 1
println(+tparams+ 1
getParts(tp.bounds.hi) 1
out.println( 2
(argtpes1, 1
(if 37
ts 3
tp 23
assert(lst.init.last 1
tl 1
println(t2.f(1, 1
(i: 1
nonSensibleWarning(pre++normalizeAll(args.head.tpe.widen), 1
+sym0.info) 1
typed1 1
(i) 1
CHILDREN 1
+tpsym.varianceString 1
isMethod(tpe2) 3
sym.sourceFile 1
currentRun.symSource(m) 1
t2 1
(in.ch: 2
t1 3
array(size0) 1
ctx2.bb.emit(LOAD_LOCAL(tmp)) 1
this.staticCode 1
(isSubClassOfEnclosing(pre.widen.typeSymbol) 1
(vparamss0 1
local.start 1
setFlag(param.mods.flags 1
pass 1
Object_asInstanceOf 1
b.validate 1
isStrictlyMoreSpecific(tp1, 1
forMSIL 1
clone.defGetter 1
assert(phase 1
System.exit(1) 1
writeNat(EXISTENTIALTYPEtree) 1
Import(qual, 1
putTree(cond) 1
INLINE_length(INLINE_I8) 1
adapter.setServletInstance(new 1
savedTypeBounds 2
+swriter.toString 1
doubleDefError(sym.pos, 1
addGenericSignature(mirrorMethod, 1
((cell2.x 1
updateData(fun(data)) 1
c.tree 1
proc.exitValue() 1
ctx1.bb.emitOnly(CZJUMP(thenCtx.bb, 1
newDefs.append(cdef, 1
tempLogFileReader.close() 1
outerCtx.bb.emit(JUMP(bodyCtx.bb)) 1
ArrayClass, 1
opcode(Volatile, 1
infoTransformers 1
sb.append('<') 1
writeNat(APPLYtree) 1
weakRef.pred 3
tracing(, 5
((!owner.isAnonymousClass 1
groups.size 1
unescapedArgs(i) 2
in.stack(n) 1
context.error(tpt.pos, 2
!((expr1.symbol 1
println(y) 3
queue.enqueue(11) 1
withOut(new 1
mapping 1
scheduleActor(f, 2
accept('V') 1
writeRef(pat) 1
toXML(f, 1
setColor(root, 1
cases: 1
key(i) 1
addCopyMethod(cdef, 1
cases) 1
_linkedActors.remove(actor) 4
actors.put(name, 1
hasFlag(FINAL) 1
Piece.single, 6
v(findBit(CASE_PKL 1
args, 1
writeNat(UNAPPLYtree) 1
args: 2
traverse(lhs); 2
itr 1
isValueClass(suffix.tpe.typeArgs.head.typeSymbol) 1
INLINE_length(INLINE_I_S) 1
SuperType(thistpe, 1
clazz.tpe.nonPrivateMemberAdmitting(sym.name, 1
opcode(Conv_Ovf_U2_Un, 1
msym.setInfo(PolyType(List(tparam), 1
assert(gt5.size 1
resType.toString 1
sym2.name 1
out.close*/ 1
atPhase(currentRun.picklerPhase.next) 1
(b1.toList, 1
annotated.setAnnotations(ainfos) 1
writeRef(pid) 1
modname 1
(sym.linkedSym.rawInfo.isInstanceOf[loaders.SymbolLoader] 1
map((x:String) 1
vsym 1
found 2
existentialAbstraction(existentials.toList, 1
NullValue.decodeOption(pred(key).nonTxn.get) 1
drawLine(0,0,0,a) 2
ctx.bb.varsInScope 1
m.setFlag(moduleFlags) 1
errpos 2
code.emit(LOAD_MODULE(field)) 1
javaName(f.symbol), 1
assert(hd 1
reportSyntaxError() 1
misses 1
setPrivateWithin(param, 1
decodePair(tok.pred.nonTxn.getAndSet((tok, 1
explainTypes(tp2, 1
tagArray(i) 1
assert(charCode 1
maxSize, 1
writeNat(DOCDEFtree) 1
sym.isRefinementClass 1
concatPath(guessedScalaExtDirs) 1
jmethod, 1
addModuleInstanceField; 1
entries.map(_.asInstanceOf[AnyRef]).toArray, 1
w 1
tree.setSymbol(sym).setType(tpe) 1
UnitClass.tpe 1
writeRefs(catches) 1
putSymbol(tree.symbol) 1
lookupClass(name) 1
(best, 1
(method.name 1
sym.owner.info.decls.enter(factory) 1
jcode.emitATHROW() 1
checkDefaultsInOverloaded(currentOwner) 1
setOut(new 1
rawSelf.react(f) 1
clinit.emitRETURN() 1
segments.toList.flatMap(x 1
mlist(5) 1
methodSymbol, 1
instructionList.last 1
IF 7
clazz.info.nonPrivateDecl(member.name).alternatives.exists( 1
pre2++ 1
scrut.createVar(app.tpe, 1
first0 5
opcode(Nop, 1
'K' 2
owner.rawInfo 1
tp.typeSymbol 1
ctx1.bb.emit(LOAD_LOCAL(m)) 1
paramNames(i) 1
MIN_SWITCH_DENSITY); 1
rawSelf(sched).asInstanceOf[Actor] 1
writeIndex 2
enterSelf(templ.self) 1
(IF 1
methSym 1
assert(pieces 1
opcode(Stloc, 1
name.toString 2
putTree(expr) 5
tvar.constr.inst 2
self 2
tp) 1
reportAll(topcont) 3
tp1 3
tp0 1
opcode(Bge_Un_S, 1
rawInfo.typeParams 1
rawname 1
flatOwnerInfo.decl(name.toTermName).suchThat( 1
sym.name, 2
!(m.symbol.name 1
loop(drop(n), 1
invalidateRecords(out); 1
clazz, 2
require(size 1
tpe 11
ends2 1
ends1 1
exh 5
tpt 6
tps 1
LOAD_LOCAL(tmp1), 9
assert(!busy.isDefined, 1
clazz.sourceFile 1
nme.EQ 1
reporter) 1
fun.setType(fun.symbol.info) 1
logs.get.writers 1
reporter.setSource(oldSource) 1
validateVariance(hi, 1
tree.setSymbol(best).setType(pre.memberType(best)) 2
jcode.emitISHR() 2
.filter(_.isVirtualTrait) 1
dir.fileNamed(pathParts.last 1
m.returnType 1
assert(Piece.all.size 1
xs(i) 2
labels(oldLabel) 2
addDef(clazz.pos, 1
}).normalize 1
opcode(Isinst, 1
idsToGroups 1
jcode.emitINVOKEINTERFACE(owner, 1
writeRef(tree.symbol) 17
(minorVersion 1
assert(result 1
rfb 1
transform(tpt), 1
more(data, 1
cond.tpe 1
SCOPE_EXIT(inlinedLocals(l)) 1
isSameFunction(unfn, 1
assert(alias 1
assert(mlist.isEmpty) 2
c.cunit.source.toString) 2
ObjectRunner.run(classpath, 3
(around(l), 1
mkFail(remaining 1
buf.append().append(scope).append('\n') 1
settings.sourcepath.value) 1
unit.icode 2
(delegateType.member(nme.apply).tpe 1
scheduler.execute(new 1
vdef.duplicate, 1
println(test6(10)()) 1
printRef(target) 2
recordMove(move) 1
thenCtx 2
RepeatedParamClass, 1
typedPos 1
currentRun.symSource(c) 1
suffix.tpe.typeSymbol 1
et.withTypeVars(isAsSpecific(ftpe1, 1
putTree(pid) 1
); 4
): 1
deleteNode(x) 1
jclass.addAttribute(markerAttr) 1
assert(bin.isDefined, 1
)) 16
), 19
tp2.normalize 1
ModuleDef(Modifiers(sym.flags), 1
ctx1, 1
name.subName(i, 1
assert(isAbsolute 1
opcode(Rethrow, 1
jcode.emitIF_ACMP(conds(cond), 1
describe(){ 1
implicit 107
writeRef(selfsym) 1
Try(block, 1
checkBounds(itree2.pos, 1
println(c2.print) 1
sym.reset(new 1
agent( 1
opcode(Cgt_Un, 1
validateVariances(tparams 1
NestUI.verbose(+sourcepath) 1
name.toString, 1
syntaxError(in.cpos 1
emitJavaAnnotations(jmethod.getConstantPool, 1
NullValue.decodeOption(pred.get) 2
tryToSetIfExists(p, 3
swr.flush() 2
parseHeader 1
showLog(logs.get.file) 1
print((i 1
tl.set(null) 1
map(_.shift(move.cell)). 1
putConstant(value) 1
bb.removeLastInstruction 1
predicates.remove(key, 3
opcode(Ldarga_S, 1
enterPackageSymbol(pos, 1
printSymInfo() 1
Character.isUnicodeIdentifierStart(c) 1
lv.start 1
r.other 1
printRef(atp) 2
isChecked: 1
.format(s) 1
assert((-100).toShort 1
this.ctx 1
sym.cloneSymbol(tp.typeSymbol)) 1
stack 13
newChangesOf(sym) 1
sig2type(tparams, 3
elem 1
@equivalentTo("(take(n), 1
opcode(Clt, 1
(in.lineStartPos 1
!(sym.isDeferred 1
pvgroup: 1
underlying.put(key, 2
productIterator.toList 1
syms.find(_.fullNameString 1
emitEntry(, 1
rt.withAnnotation(AnnotationInfo(definitions.uncheckedVarianceClass.tpe, 1
TypeDef(Modifiers(sym.flags), 1
tsym.info.baseTypeSeq 1
(isClass 1
formalTypes(tp.paramTypes, 1
parents 6
incompleteInputError(pos, 1
owntype 1
format 1
out.bindings 2
annots 2
updatePosFlags(c, 1
cont(files.length-errors, 1
@aliasOf("append") 1
withInConstructorFlag(0) 1
d 1
assert(mlist.last 3
buf.putShort(cpool.addInteger(const.byteValue).toShort) 1
methods 1
opcode(Stind_I8, 1
/*val 1
(nextInt.toLong 1
b2 3
b3 1
ACCESSOR 1
opcode(Dup, 1
PUSH_size(PUSH_NONE) 1
jcode.emitINEG() 1
this.pre 1
!this.owner.isPackageClass 1
context.unit.synthetics 1
tpePeriod 3
_callbacks.writeLikeResources.add(writeResource, 1
isStrictlyBetter(tpe1, 1
bb 3
NestUI.normal(swr.toString) 2
txn.afterRollback(t 3
m.moduleClass.sourceFile 1
bp 7
isFunctionType(functionType) 1
Modifiers(vd.mods.flags 1
log.info( 3
recurse(useParts)(Car()) 1
!(member.owner 1
locals.get(idx 1
isScala 1
assert(alllt75.contains(70)) 1
em.get 4
putSymbol(sym.privateWithin) 1
m.moduleClass.setFlag(moduleClassFlags(moduleFlags)) 1
assert(args.isEmpty) 1
assert(args.isEmpty, 1
tl.set(new 1
exh.resultKind 1
this.defdef 1
fromArray(xs, 1
sizeRef.nonTxn.get 6
tree.setSymbol(sym).setType(pre.memberType(sym)) 1
jcode.emitASTORE(strKind) 1
nsafeRef 1
Select( 2
writeRef(elemtpt) 1
opcode(Initblk, 1
drawLine(b,0,0,0) 2
this(color, 1
imps 3
src.start 1
x.color 1
inform(msg) 1
nodes.foldLeft(new 1
localTyper.typed 7
n.isEmpty 2
char 1
test1(c 1
test1(a 2
jerseySelectorThread.setAdapter(adapter) 1
+sym0+ 1
POP_size(POP_I_R8) 1
Select(REF(boxedModule(tpe.typeSymbol)), 1
jcode.emitT2T(javaType(INT), 6
setter(owner).expandName(base) 1
set(x) 1
fieldOffset(f) 1
trait 93
Schemifier.schemify(true, 2
putEntry(selector) 2
putTrees(cases) 1
ClassPath.XO 1
context.error(sym.pos, 11
fresh 6
CALL_METHOD(Object_equals, 2
code 7
Pair(genSet, 1
printer.setWriter(new 1
results 2
(_arityMismatches.toList, 1
('0' 1
Worker.stopSampling 1
accessError() 1
this.unit 2
assert(lattice.bottom 1
cond(other) 1
bindings(LocalVar(target)) 1
(newSyms 1
scalaPrimitives.init 1
assert(queue(0) 1
v(findBit(SEALED_PKL 1
log.info() 5
log.info(, 11
paramtypes 1
INLINE_length(INLINE_FIELD) 1
try 84
race 3
rotateLeft(sib) 1
ctx.bb.emit(LOAD_MODULE(tree.symbol), 3
impls 2
t3.f(1)(2) 1
index 13
(vo, 1
drawLine(size,size,size,0) 2
writeRefs(trees) 2
TypeBounds(lt, 1
gen(stats, 1
LOAD_LOCAL(tmp1))); 9
impl) 1
rule(entry.byteCode) 1
caze 1
genBeanInfoClass(c) 1
addMember(thistp, 1
len 8
checkReferences(file) 1
opcode(Bgt_Un_S, 1
ctx 12
innerNamerCache 2
{ 50
skipSuperclasses() 1
addAnnotations(jfield, 1
Props.get(, 1
writeRefs(cases) 1
(isLocal 1
atPhase(currentRun.picklerPhase) 2
POP_size(POP_REF_I_I) 1
Assign(gen.mkAttributedRef(vsym), 1
next 6
(Return(expr). 1
@throws(classOf[IOException]) 1
assert(instructionList.length 1
List(tparam), 1
setInst(upper) 2
assert(value 1
writeRef(restpe); 3
pfs 1
txt.imports 1
thiz 1
otherBlock 4
this 59
treeSubst.traverseTrees(args) 1
private[mutable] 1
CZJUMP(nullCtx.bb, 1
assert((-100).toByte 1
assert(all.contains(40)) 2
traverse(lo); 1
lock 1
block: 1
pieces 2
abort() 4
treeCopy.ValDef(tree, 1
opcode(Div_Un, 1
elseCtx: 1
recurse(printParts)(Car()) 1
targ.baseType(ArrayClass) 1
assert(!b2.isLegalMove(m1)) 1
selector: 1
nonLocalReturnKeys(meth) 1
assert( 4
(style.isSuper 1
(DocDef(comment, 1
treeInfo.isUnitInScala(unit.body, 1
alt.paramss.exists(_.exists(_.hasFlag(DEFAULTPARAM))) 1
jcode.emitIFNONNULL(labels(success)) 1
in.stack 2
testPossibleMoves 1
blocks 3
JType.LONG) 1
vparamss 2
CZJUMP(cont, 2
addModuleMethod(IntClass, 2
dsym.setFlag(PARAM) 1
mixinTraitMembers(mc) 1
stack.pop(dims) 1
newValueParameter(owner.pos.focus, 1
selectors 1
w.counts 1
errorBadTag(in.bp 1
exc.printStackTrace(Console.err) 1
producer 2
move 1
!message.isInstanceOf[Char] 2
workQueue, 1
instructionList.head 1
require(isVarPattern(tree) 1
============================== 1
code.jmpTargets 1
addOwnInnerClasses(clasz.symbol) 1
clasz.fields 1
opcode(Neg, 1
loop(xs) 1
treeCopy.DefDef(thePrimaryConstructor, 1
guess(List(), 3
nodeCount 1
sym.rawInfo 1
((buf(bp 6
that.CEE_flow 1
ModuleAE 1
ModuleAI 1
DB.defineConnectionManager(DefaultConnectionIdentifier, 2
(instr.pos).line 1
f(these.elem) 1
putTree(fun) 3
tparamSyms, 1
writeNat(COMPOUNDTYPEtree) 1
INLINE_length(INLINE_NONE) 1
!message.isInstanceOf[Byte] 2
Apply(gen.mkAttributedSelect(tree, 1
curRun 1
transform(tree: 1
meth 3
Console.withOut(new 1
(b.isReferenceType 1
NoContext.make( 1
' 1
assert(anchored, 1
phasesSet 27
writeNat(TYPEBOUNDStree) 1
cells.flatMap(cornersForCell) 1
(that 2
enterSym(tree) 1
traverseTrees(stats); 1
List.unzip( 1
sib.color 2
(null, 2
fileManager.JAVAC_CMD.equals()) 1
writeNat(vparams.length) 1
that.CEE_push 1
optionType: 2
assert(lt25 1
log.debug(event.toString) 1
assert(fgt60 1
frob(y) 1
nonSensibleWarning(, 1
tree.symbol.toString() 1
scalaDot(f( 1
POP_size(POP_REF) 1
!message.getClass.isAnnotationPresent(Annotations.immutable)) 2
owner 1
writeByte(0); 1
println(Fact2(x 1
(pat.symbol.tpe.typeSymbol, 1
cpp.init(m) 1
opcode(Sub, 1
PUSH_size(PUSH_REF) 1
rl.parent 1
inner(c 1
predicateForRead(key).get 1
opcode(Stind_R8, 1
Row(emptyPatterns(1 1
(latest.end 1
ErrorType 5
solvedTypes(tvars, 1
drainedTasks 1
buf.toList 1
super.executeExpectations(ex, 1
false 32
v(findBit(OVERRIDE_PKL 1
stack.pop(stack.length) 1
ctx1.bb.emit(RETURN(m.returnType), 1
ctx1.bb.emit(RETURN(m.returnType)) 1
sameType(res1, 3
notifyImport(name, 1
javaName(c.symbol) 1
super.resumeReceiver(item, 1
TypeApply(fun, 1
println(bn4(a 1
ctx1.bb.emit(LOAD_LOCAL(exception)); 1
(rest 1
(____ 1
writeRef(definition) 1
testAddMoreElements 1
*/ 14
assert(b.possibleMoves(two_piece_player).length 1
Responder.run(body) 1
setError(tree) 4
opcode(Initobj, 1
execTestObjectRunner(file, 2
that.append(next) 1
should 1
assert(ScalaPackage 1
60000L, 1
== 2
l.right 1
info.getFieldValue(r1, 1
changesOf(oldSym) 1
assert(!four.isWideType, 1
async.join() 2
AnnotationInfo(attr.tpe, 1
this.currentExceptionHandler 1
.getSingleResult 3
newMethod(StringClass, 22
fn, 1
h 1
buf.put('e'.toByte) 1
assert(imports.tail 1
end: 1
(!alt.isConstructor 1
NestUI.verbose(.format(argsFile, 1
outerCtx.bb.close 1
unpickler.unpickle(in.buf, 1
writeRef(body) 3
writeRefs(vparams) 2
someFunction 1
opcode(Not, 1
expectedType 1
in.skip(attrLen) 13
buf.put('Z'.toByte) 1
atPos(tree.pos)(Apply(tree, 1
(that.sourceFile 1
DROP(REFERENCE(cls)) 1
bridges 1
reportResult(None) 1
typedWithPos(tree.pos) 1
!owner.isEmptyPackageClass) 1
assert(ten 1
nme.MOD 1
context.MatrixInit(vs, 1
collect[Int, 1
assert(!tree.symbol.isPackageClass, 4
Some(z) 1
withErr(new 1
buf.put('S'.toByte) 1
jcode.emitPUTFIELD(owner, 1
ch 2
myBindVars(varMap, 1
println(test5(b 2
parse(classFile, 1
putTree(impl) 2
cs 6
compileSources(List(scriptFile)) 1
printResult( 1
sym.setInfo(tpe1) 1
lastPos 3
assert(queue.init.isEmpty) 1
IState(resultingLocals, 1
self.tpt 1
POP_size(POP_1_1) 1
_labelSym 1
readTree() 1
applyUnary() 2
(cell.y 1
(cell.x 1
sym.pos.pointOrElse(0) 1
isHidden(p.underlying) 1
(annot.atp.typeSymbol.initialize.hasFlag(Flags.JAVA) 1
_2.subscribe(k) 1
prune(ctx1.method) 1
setSourceModule(module) 1
ifs.info.decls.rehash(this, 1
abort(msg.format(name, 1
currentRun.currentUnit 2
assert(!currentOwner.enclClass.isImplClass) 1
tyconRunId 2
cache(tree) 1
jcode.emitPUSH(new 1
targ.widen 1
checkDeprecated(sym, 2
((qualSym 2
p.replaceInstruction(p.lastInstruction, 3
assert(cls 3
server.setConnectors(Array(scc)) 1
sym.setInfo(oldLabel.tpe) 2
optionType.id, 2
JType.VOID, 1
concatPath(syspropopt(), 2
List.unzip(rows 1
_1.subscribe(j1) 1
b.boot 1
writeRef(from) 1
private[this] 10
singleCase 1
compiler.dependencyAnalysis.dependenciesFile 1
traverseTrees(stats) 1
atPhase(firstPhase) 1
buildCompilerFromPhasesSet() 1
c.enclMethod 2
opcode(Ldloca, 1
slot._visited 1
dest 1
STORE_LOCAL(tmp3), 5
decodeEntities: 1
_slotsByPrio.put(priority, 1
txt.retyping 1
opcode(Ldelem_I4, 1
overlaps(dtor1, 1
treeCopy.ClassDef(tree, 1
This(qual).setSymbol(symbol).setType(tpe) 1
(ob 1
Pattern(wrapBindings(boundVariables, 1
assert(!b.isCornerMove(player1topMove)) 1
definitions(src).find(_.fullNameString 1
getter(owner).expandName(base) 1
event.getChannel.close 1
replacement 1
timer.start 1
.setFlag(field.flags 2
.setSymbol(applyMethod) 1
clientes 2
Predef.error( 1
traverse(pat); 1
jmethod.addNewLocalVariable(javaType(local.kind), 1
drawLine(0,size,size,size) 2
ctx1.bb.emit(SCOPE_ENTER(local)) 1
System.setProperty(, 4
sym.isInitialized 1
ctx1.method.code 1
(instanceDefs.lookup(nme.CONSTRUCTOR) 1
s.setInfo(valType) 1
copyRefinedType(rtp, 2
(isView 1
ctx1.defdef 1
enterLocalElems(c.scope.elems) 1
out.print(newTermName(buf.bytes, 1
fields.length 1
writeNat(APPLIEDTYPEtree) 1
LOAD_LOCAL(inlinedThis); 1
System.arraycopy(buf, 1
currentOp 10
newValue(pos, 7
putType(underlying) 1
out.print(tag2string(tag)) 1
existentialAbstraction(tparams, 1
overridesType(PolyType(List(), 1
tok.pred.nonTxn.transformIfDefined(liftPF(tok, 2
cleanReferencesTo(out, 3
Apply(TypeApply(Select(_, 1
test7((m 1
paramNames); 1
if(ownerSym.isAbstractType) 1
treatedClassInfos(clazz) 2
rows.map(_. 1
setType(tpe)) 11
count 6
selfRef(tree.pos) 1
abstractClassError(true, 1
jcode.emitIF(conds(negate(cond)), 3
genCast(l, 1
target.nonTxn.foreach(e 1
thenCtx.bb.emit(JUMP(contCtx.bb)) 1
jcode.emitPUTSTATIC(owner, 1
dupped 1
getParts(tp) 1
resetFlag(DIRTYSUCCS 1
jcode.emitGETFIELD(javaName(clasz.symbol), 1
NestUI.normal(log) 1
printRef(tp) 2
last0.elem 2
ExistentialType(tparams, 1
DependencyFactory.time.doWith(d) 1
(b.toList, 2
this.name 2
appliedType(NonLocalReturnExceptionClass.typeConstructor, 1
isTerm 2
namer.enterSyntheticSym(caseModuleUnapplyMeth(cdef)) 1
newTyper(typer1.context.make(vdef, 1
POP_size(POP_REF_I_R8) 1
unit.error(member.pos, 3
ClassInfoType(parents.toList, 1
other.lookahead 1
AnyRefReference 2
make(pvgroup.pvs 1
cls.methods.foreach 2
block.close 1
activeHandlers.foreach 1
Serializer.Java.deepClone(message) 2
treeCopy.ExistentialTypeTree(tree, 1
validateVariance(sym.info, 1
getScope(jflags).enter(innerModule) 1
ValDef( 1
info.stack.types.drop(1) 1
saved 1
decodedEqualsType(head.tpe) 1
sym.setFlag(SYNTHETIC) 1
setter.setInfo(MethodType(setter.newSyntheticValueParams(List(field.info)), 1
assert(board.isSolveable) 1
addLocal(caller, 2
exception 2
sym.addAnnotation(AnnotationInfo(definitions.AnnotationDefaultAttr.tpe, 1
self.symbol.name 1
equals0(this0.productElement(i), 1
opcode(Castclass, 1
hasFlag(STATIC) 2
format(, 2
}.mkString() 1
cmp 1
rtpe1 1
overrideError(); 4
JOptionPane.showMessageDialog(nullPeer(parent), 1
mirrorCode.emitLOAD(index, 1
Runtime.getRuntime.addShutdownHook(new 2
putSymbol(sym.defaultGetter) 1
sym.privateWithin 3
checkDir(AbstractFile.getDirectory(outDir), 1
newExistential(pos, 1
tree.tpe 4
decls.unlink(e1) 1
buf.append(c) 2
abort()) 1
memberWildcardType(name, 1
+ 157
preds 3
CJUMP(inlinedBlock(success), 1
Some(nullSafe(cmpFunction 1
assert(((-100).toChar: 2
e.getCause.printStackTrace 1
assert(impl 1
notThePrimaryConstructor 1
'P' 2
out.print( 8
queue.clear 4
unit.error(clazz.pos, 4
computeArgs 2
nonNullCtx.bb.emitOnly( 2
@SerialVersionUID(0L 2
bodyCtx.addFinalizer(finalizer) 1
items 1
data.copyToArray(z.data, 1
.foreach 1
('A' 1
buf.putShort(pos, 1
computeLocalVarsIndex(m) 2
v(i)=rawFlagsToPickledAux(i) 1
c.implicitsEnabled 4
Square(5).draw 4
instr 4
Actor.receive(reaction) 1
putTree(templ) 1
transform(t) 2
context.unit.depends 1
ctx1.bb.emit(stores) 1
opcode(Ldloc_1, 1
j2d() 2
(locals 1
in(b) 4
treeCopy.Annotated(tree, 1
!tpsym.allOverriddenSymbols.forall{verifyOverriding(_)}) 1
nme.ZAND 1
((member 1
ctx1.bb.emit(STORE_ARRAY_ITEM(FLOAT), 1
is 1
printInfoEnd(succeeded, 1
(local, 1
ctx.bb.emit(LOAD_LOCAL(l), 1
newMethod(BooleanClass, 1
JavaRepeatedParamClass, 1
rdef.init(method) 1
nullables 1
printVMConfig 1
@equivalentTo("map(f).flatten") 1
globalPhase 2
putSymbol(sym.owner) 1
tp.resultType 1
transform(treeCopy.Apply(tree, 1
unit.body 2
ctx1.bb.emit(CALL_PRIMITIVE(EndConcat), 1
cbuf.setLength(0) 1
assert(ctor.owner 1
rawSelf.asInstanceOf[ReplyReactor].reply(()) 1
EqualsPatternClass 1
(baseSegs, 1
opcode(Starg_S, 1
_undetparams 1
POP_size(POP_1) 1
staticModule.setFlag(JAVA) 1
choices: 1
assert(mlist(0) 4
setAnnotations 1
writeRef(thenp) 1
resourceConfig.getProperties.put( 1
isSuspended 3
Some(prev) 1
exhCtx.bb.emit(LOAD_LOCAL(monitor)) 1
sym.name.toTermName 1
hasRepeatedParam(member.tpe) 1
rawSelf.react(new 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(DOUBLE), 1
code.emit(CREATE_ARRAY(tpe, 1
break 4
!m.symbol.isGetter 1
l 9
setColor(sib, 6
outDir.toURL 1
List() 6
assert(b2.matrix 2
(this.sourceFile 3
noApply 1
getResultOrThrowException(future) 2
(a, 1
buf.toByteArray 1
Constant(getName(in.getChar(start 1
callee.params.reverse.foreach 1
sym.alternatives.head.typeParams) 1
symbolCounts 1
cbf2: 1
@Inject 1
clazz.pos, 1
log( 91
ctx1.bb.emitOnly( 4
code.emit(LOAD_LOCAL(code.getLocal(local, 1
setColor(xp, 8
}).mkString() 2
logFile 1
writeNat(SELECTtree) 1
Flags.flagsToString(module.flags)); 1
(tparams1.length 2
!sym.hasFlag(symtab.Flags.MUTABLE) 1
addMember(clazz, 2
checkSelectors(selectors) 1
txn.addReference(token) 10
this.lastPos 1
ctx1.bb.emit(PJUMP(label), 1
println(b10.bar()) 1
(2,1)))) 1
_2.subscribe(j2) 1
inlinedBlock(bb).emit(STORE_LOCAL(retVal), 1
.map(_.info.decl(name)) 1
replace(). 1
block.varsInScope 2
!sym.isDeprecated 1
writeNat(NEWtree) 1
putTree(body) 3
inApp.run() 2
target 6
assert(n98 1
branchArray, 1
queue.enqueue(40) 2
(member.isValue 1
getClassOrArrayType(index).typeSymbol 1
PUSH_size(PUSH_1_1) 1
transformBlock(b) 1
nextToken 2
assert(local.index 1
((rawflags 1
javaType(module)); 1
List(ArrayValue(_, 1
this.count 1
initName: 1
contents 6
current.getChars(0, 1
newTermName(fullNameString('$') 2
t.printStackTrace 1
parseAnnotation(in.nextChar) 1
})), 1
@methodized 2
putTree(guard) 1
tokenRef.pred 4
buf(bp 1
jerseySelectorThread.setAsyncHandler(ah) 1
assert(mlist.tail.tail.length 1
assertTrue(numeroDeClientesAntesDaExclusao 1
phase 9
this.size 1
name(0) 1
NestUI.verbose(+batchFile) 1
(pre 1
!byNameArgs.contains(tree) 1
_zeroSlot._visited 1
finishWith(tparams) 4
pkg.setInfo(pkg.moduleClass.tpe) 1
exitReason 4
base.info.decl(sname) 1
seenTypes(index) 1
assert(queue.head 14
rfb.setLength(0) 1
testMoreEnqueues 1
ftpe 1
putTrees(params) 1
inform(itree++reason) 1
p+qualify(p,a)+) 2
Path(createRelativePath(segments, 1
mixinImplClassMembers(implClass(mc), 1
explanation) 1
Object_== 1
opcode(Conv_I, 1
unboxMethod(clazz) 1
rawSelf.asInstanceOf[ReplyReactor].sender 1
treeCopy.This(tree, 1
do 15
assert(clazz.sourceModule 1
genPrimitive(primitive, 1
-128 1
testEmpty 2
assert(gt25 1
unit.error( 1
!compileMgr.shouldFailCompile(outDir, 1
collection.Map( 1
cells.flatMap(_.neighbors). 1
overrideTypeError(); 2
(classConstantMeth 1
ltype.complete(sym) 1
ctx1.bb.emit(nw, 1
opcode(Shr_Un, 1
jcode.emitISUB() 1
this.method.addLocal(new 1
readResources.clear() 1
isScalaModule 1
server.stop() 2
assert(tpt.isType, 2
ctx: 4
treeCopy.CaseDef(tree, 3
assert(tpt.isType) 1
ctx1 55
ctx2 1
actor.lifeCycle 2
(Map[ImplicitInfo, 1
addAttribute(jmethod, 2
Typed(expr, 1
jerseySelectorThread 1
readIndex 6
t7.g(new 1
received 6
matrix.targets 1
typer.context.undetparams 1
DefDef(getterMods, 1
sym1.toString() 1
jcode.emitPUSH(methodList.length) 1
apply(arrayType( 1
assert(!sym.isMethod, 1
writeRef(sym); 1
ctx.method.addLocals(params 3
Boxed 16
parseAnnotArg 2
printBanner 1
FloatClass 1
jcode.emitLXOR() 2
SingletonClass, 1
emit(instr, 2
availValue.succInsCount.get 1
.resetFlag(DEFERRED 1
freeMutableVars 1
Select(qual, 1
treeCopy.Throw(tree, 1
totalBusySamples 1
runTests(kind, 1
code.emit(CALL_PRIMITIVE(Arithmetic(ADD, 2
log.debug(, 11
line.substring(0, 1
printResult(, 1
opcode(Ldloc_3, 1
tparams.exists(!_.typeParams.isEmpty)) 1
List.map2(tparams, 2
opcode(Ldftn, 1
ctx.bb.emit(LOAD_FIELD(sym, 1
patternWarning(arg, 1
treeCopy.DefDef(stat, 4
assert(tag 1
assertTrue(petService.listarTodos().size 2
fromStrings(source 1
v(i)=pickledToRawFlagsAux(i) 1
skipMembers() 4
buf.put('C'.toByte) 1
opcode(Ldelem_R8, 1
tparam.tpe 1
definitions.getMember(definitions.BoxesRunTimeClass, 1
ctx.labels.get(sym) 1
println(test8()) 1
c.reportAmbiguousErrors 4
NestUI.verbose(+classpath) 1
opcode(Ldflda, 1
tp.instantiateTypeParams(undetParams, 1
generatedType 36
addStaticInit(jclass) 1
file.endsWith() 2
opcode(Ldtoken, 1
assert(mlist.nonEmpty) 3
LazyAnnotationInfo(() 1
in.skip(2) 5
rng 2
unlink(linked) 1
assert(tpeCache 1
listToString(for 1
DoubleClass 1
test5(a 1
fromStrings(source.iterator) 1
sym.hasFlag(Flags.INTERFACE) 1
assert(top 1
cond(p.tree) 1
(fun, 1
stack.pop 19
wait() 1
exit() 1
List(if 1
jcode.emitSTORE(indexOf(_this), 1
Deref(Field(r, 1
lvTab.putShort(entries.toShort) 1
pos0 2
javaName(method), 6
/ 2105
assert(hasFlag(MODULE)) 1
clazz.isClass 1
errorTree(fn, 1
jcode.emitIFNONNULL(labels(failure)) 1
settings.classpath.value 1
server.start(); 1
obj 2
_____ 1
loop(this) 2
exhCtx.bb.emit(MONITOR_EXIT(), 1
assert(name 2
globalPhase.run 1
isAsSpecific(ftpe1, 2
Ident(idparam), 1
matrix.rotateLeft, 1
isSubType(delegateType, 1
onTimeout 4
sym.setInfo(new 1
b1.result 2
testTwoEnqueues 1
Some(const.stringValue) 1
decodePair(freshPred.getAndSet(IdentityPair(freshToken, 1
withHelpSyntax() 6
printNameRef() 3
idsToGroups.filter 1
clazz 8
.asInstanceOf[String] 1
println(t5.f()) 1
edit(_.updateLine(1, 1
true 37
vargss: 1
reset 1
writeRef(sym.name.toTermName); 1
resReader.close() 1
loop(resCompile) 1
ctx.bb.emit(CONSTANT(Constant(value.longValue)), 1
infoString(member) 1
abstract 66
)); 2
writeNat(TYPEAPPLYtree) 1
isLocal: 1
s.start() 2
))) 4
List.range(0, 1
worklist.clear; 1
ActorRegistry.register(this) 2
code.emit(STORE_LOCAL(code.getLocal(0, 1
traverse(expr); 1
putTrees(trees) 2
instr: 1
existentialParams 1
stream.read(data) 1
jcode.emitGOTO_maybe_W(labels(failure), 7
p.left 1
fail(msg) 1
mlist 3
TRACE(.format(name, 1
unit.warning(cd.pos, 1
code.emit(LOAD_LOCAL(local)) 1
block(slot._elems(slot._visited).asInstanceOf[T]) 1
println(Fact2()()) 1
instrs 11
List(nme.EQ, 1
@volatile 37
jclass.addAttribute(scalaAttr) 1
opcode(Endfinally, 1
loop(n) 1
buf.append().append(handlers).append('\n') 1
addBeanGetterSetter(vd, 1
javaType(m.info.resultType), 1
putTree(qualifier) 2
s.toLong 1
Literal(value).setType(tpe) 1
polyType(ownTypeParams, 1
(namelessArgs, 1
sym.expandName(this) 1
test4() 1
entries 2
treeCopy.AppliedTypeTree(tree, 1
assert(alllt75.size 1
ANNOTATEDtpe 1
attrName 3
p 23
cbf1: 2
writeNat(parents.length) 2
enterSym(defn) 1
addMethodParams(ctx1, 1
PartialFunction[A, 1
value1 1
'^' 1
DoubleClass, 1
buf.append().append(packg).append('\n') 1
Elem(pre,lab,md,scp, 1
jerseySelectorThread.setEnableAsyncExecution(true) 1
jcode.emitINVOKEVIRTUAL(StringBuilderClass, 2
txt.owner 1
!(tvar.isTypeParameterOrSkolem 1
.setFlag(clazz.flags 1
isMethod 1
change 3
(m.owner 2
toTypeKind(t.underlying) 1
rootContext(unit, 1
exiting 2
printf(, 2
make0(tree, 1
assertEquals("Veludo",petRecuperado.nome) 1
error(tree.pos, 2
assert(hash(x) 3
PUSH_size(PUSH_I) 1
preserveWhitespace: 1
this.isScala 2
sym1.locationString 1
icodes.classes.retain 1
ctx1.bb.emit(STORE_LOCAL(monitor)) 1
caseCtx.bb.emit(JUMP(afterCtx.bb), 2
printTypeRef() 2
invalidated(files, 1
if(hkargs.length 1
stack.pop(1 3
_callbacks.afterCommit.add(callback, 1
_else(x) 1
atPhase(p) 1
mkTypeBounds(definitions.NothingClass.tpe, 1
isIrrefutable(pat, 1
javaType(outerField)) 1
addDef(position(sym), 4
getMember(sym, 1
messageType.id, 2
println(+MinorVersion) 1
putEntry(from) 1
jcode.emitGETSTATIC(, 1
DUP(ANY_REF_CLASS), 2
channel.write(replyMessage) 5
traverseTrees(ts) 1
treeCopy.ValDef(vd, 1
@deprecated(+ 10
@deprecated() 63
info.stack(0) 1
AtomicLongFieldUpdater.newUpdater(classOf[TPairRef[_,_]], 1
caseClassOfModuleClass.clear 1
buf.append().append(labels).append('\n') 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(DOUBLE)), 1
ctx1.bb.emit(CALL_PRIMITIVE(Arithmetic(NOT, 1
getFieldNonRecordValue(r1, 2
Any_!= 1
ANNOTINFO 1
txt.tree 1
STORE_LOCAL(tmp2), 9
result.asInstanceOf[a] 1
complexity(pre) 1
stack.push(STRING) 1
traverse(tpt) 1
!terminating 1
context.warning 1
validateVariance(lo, 1
postRestart(reason, 2
fileManager.synchronized 1
Map[String, 1
labels(branches.last), 1
writeRef(to) 1
sym.setInfo(newType) 1
mkLazyDef(clazz, 4
elemtp 1
Constant(byteValue) 1
this.id 1
this.in 1
(x, 1
jcode.emitANEWARRAY(javaType(elem).asInstanceOf[JReferenceType]) 1
opcode(Ldc_I4_5, 1
mkConstantType(readConstantRef()) 1
code.emit(CREATE_ARRAY(kind, 1
jclass.addNewField(JAccessFlags.ACC_STATIC 1
parseAttributes(sym, 2
ctx1.bb.emit(CALL_PRIMITIVE(StartConcat), 1
opcode(Ldind_U2, 1
addScalaAttr(if 1
Cell(1, 2
pclazz.setInfo(atPhase(typerPhase)(pclazz.info)) 1
hasTry 1
ctx1.bb.emit(CALL_PRIMITIVE(Logical(AND, 1
boxedArrayClass(clazz) 1
nme.BYNAME_PARAM_CLASS_NAME, 1
nme.MUL 1
STM.atomic(unbind.transformIfDefined(key, 4
txn.forceRollback(Txn.InvalidReadCause(unbind, 6
this.pool 1
LOAD_LOCAL(tmp3), 5
MUTABLE 1
ep 1
l.maxindex 1
assert((mlist.tail 1
sig.subName(start, 1
secondTry 1
sym1.name 1
validateVariance(tree.symbol) 3
e, 1
move(m.orig, 1
args 11
cart 7
in.skip(4) 2
e: 1
test2(get(8), 1
e1 1
carg 2
ctx.bb.emit(CONSTANT(Constant(value.doubleValue)), 1
bb.emit(instr) 3
instr.setPos(instrs(pos).pos) 1
activeLocks 2
this.infos 3
opcode(Conv_Ovf_I8, 1
INLINE_length(INLINE_I) 1
xl 1
xc 9
.setIsActor(false) 3
.setModuleClass(clazz) 1
xs 8
xp 6
size 17
.setFlag(PARAM) 1
assert(!b.isCornerToSelf(new 1
List(Ident(key))), 1
make(tree, 2
res.performCommit(this) 1
that 3
aliasSymbol, 1
addParamAnnotations(mirrorMethod, 1
sym.isAbstractType 4
x: 1
qual 2
jclass.writeTo(outstream) 1
scrut: 1
genLoadArguments(args, 1
NestUI.verbose(+line) 1
nme.XOR 1
m.message 1
+itree1.symbol+itree1.symbol.locationString) 1
annots1 1
CZJUMP(success.block, 1
(cond, 1
assert(!argss.isEmpty) 1
this.pos 1
!message.isInstanceOf[scala.collection.immutable.Map[_,_]] 2
currentLevel.scope.enter(stat.symbol) 1
opcode(Ldelem_I2, 1
(param, 1
transformTrees(newDefs.toList) 1
NoPrefix 1
allSame(hashes) 1
.setIsActor(true) 6
setInfo(getter)(namerOf(getter).getterTypeCompleter(vd)) 1
_linkedActors.toArray.toList.asInstanceOf[List[Actor]].foreach 2
!clazz.isNonBottomSubClass(c.owner) 1
println(b 1
println(a 1
if(!r.bindings.isDefinedAt(f)) 1
runtime.BoxesRunTime.hashFromNumber(x) 1
println(k 1
title 1
getParts(tp.normalize) 1
formals1.init 1
nme.isSetterName(newS.name) 1
printInfoTimeout(wr) 1
argtpes0.length 1
n.m(point._1)(point._2) 1
addParamAnnotations(jmethod, 1
compose(List(kindString, 1
invariant 4
println(+ 4
println() 18
treeCopy.Assign(tree, 1
x.scope.buildString(sb, 1
executor.mainLock.unlock() 1
ctx.bb.emit(THIS(ctx.clazz.symbol), 2
context.implicitsEnabled 5
finalizer, 1
traverseTrees(vparams); 1
finalizer: 1
+member.varianceString 1
mkTypeCompleter(tree) 1
MODIFIERS 1
bootstrap.bind(new 1
link(actor) 8
anchored 1
(this 5
NestUI.verbose() 20
handlers, 1
in(exh.startBlock) 1
POP_size(POP_REF_I) 1
assert(tyconCache 1
import 831
handlers: 1
entries: 2
isPlausiblyCompatible(qtpe, 1
CONSTANT(Constant(null)) 1
.isInstanceOf[java.lang.Integer] 1
require(hasStar) 1
buf.put('s'.toByte) 1
assert(generatedType.isReferenceType 1
.setInfo(getter.tpe.resultType) 1
getModuleOrClass(name2, 2
aaa.foo 1
ensureCapacity(name.length 1
!(receiver 3
setFlag(module.getFlag(ModuleToClassFlags) 1
lvTab.putShort(start) 1
.asInstanceOf[ShooterData] 1
beanInfoClass.writeTo(outstream) 1
self.receiveWithin(msec)(f) 1
javaName(outerField), 1
outputDirs.setSingleOutput(str) 1
Actor.this.suspendActor() 1
assert(!tpe.parents.isEmpty, 1
atPos(vDef.pos.focus) 1
assert(!b.isFirstMove(player1upperLeftMove)) 1
handler.covered 2
assert(mlist.tail.get(0) 1
hasFlag(DEFERRED) 3
explainName(sym1) 1
vars.foreach 1
writeRef(tp.typeSymbol); 1
in.next 83
str.indexOf() 1
println(c1.print) 1
(that.isType 1
typeErrorMsg(found, 2
analyzeMethod(m) 1
these 14
ValDef(Modifiers(sym.flags), 1
.setFlag(FINAL 3
manifestFactoryCall(, 2
printSymInfo(sym) 3
putType(restpe); 3
sym.reset(NoType) 1
currentRun.symData(sym) 1
txt.prefix 1
finish 2
putEntry(qual) 1
undetparams 2
!(owner.ownerChain 1
POP_size(POP_REF_1) 1
inPattern 6
+argtpes+ 1
caseClassOfModuleClass(m.moduleClass) 1
NoContext.enclClass 1
push(one); 5
writeRef(selector) 3
matrix.rotateRight, 1
!hasFlag(MUTABLE) 1
bcs.head 1
ltype 1
addStaticVariableToClass(, 6
jcode.emitIFNONNULL(labels(success)); 1
!parents.exists(p 1
ctx1.labels.get(tree.symbol) 1
mlist(9) 1
rt.nref 1
assert(isDefinitionsInitialized) 1
successors.foreach((x: 1
paramsToString(mparams), 1
ctx.clazz.bootstrapClass 1
faultHandler.get 2
other.asInstanceOf[Local].sym 1
coll3: 1
currentLevel 2
assert(tree.symbol.isModule, 1
pv.sym 1
!(c.owner.isModuleClass 1
(alwaysEqual 1
println(i.toString()) 1
ifs 1
genExceptionHandlers; 1
i+=1 2
isDefined 5
buf.append().append(bb).append('\n') 1
resumeActor() 2
t 14
Annotated(annot, 1
getBinding(alias) 1
q2.add(e) 1
super.run 1
typedPos(tree.pos)((transformSuper(qual) 1
a.start() 4
appender.run() 3
Some(LiteralAnnotArg(Constant(pool.getType(index)))) 1
assert(somepd 1
nmr 2
actor.start 9
(sym.isMethod 1
assert(tvar.constr.inst 1
this.close 1
hasRepeatedParam(restpe) 2
throw 101
System.setOut(logWriter) 3
owner.info.decls.enter(clazz) 1
baseContext 1
woPath.replace('\\', 1
opc.next 1
codeGenerator.genClass(cls) 1
println(t1.f(1, 1
run.compileFiles(files.toList) 1
log 2
Array.copy(array, 4
treeCopy.New(tree, 1
List(Byte.MinValue, 1
start 9
runCommand(cmd, 1
!(field 1
accept('>') 2
+line 1
DefDef(NoMods, 1
assert(hasFlag(validAliasFlags), 1
currentApplication 3
super.setup(id, 2
hasFlag(PRIVATE) 3
fromLines(source.getLines()) 1
default 4
requestBody(bx, 1
starts(i) 1
tree.setSymbol(sym0).setType(pre.memberType(sym0)) 1
lookupSetting(cmd) 1
ExplicitFlags 1
sb.setLength(0) 1
cpp.run 1
buf.toString 4
assert(!classSym.hasFlag(OVERLOADED), 1
bb.close 8
(unescMap 1
_isRunning 4
testComplexBoard 1
values(index) 6
moves 3
validateNoThrow(readResource) 1
assert(expectedBoard 2
isAsSpecificValueType(rtpe1, 1
terminating 3
opcode(Add, 1
data.script 1
last0.next 2
_callbacks.writeLikeResources.add(new 1
genCoercion(tree, 1
writeRef(self) 1
get((x: 1
jcode.emitSWITCH(tagArray, 1
tracing[this.type](, 1
opcode(Brtrue, 1
TypeTree(sym.tpe.finalResultType) 1
NestUI.verbose(+command) 1
strings 2
runJvmTest(file, 2
Unknown 1
k.react(_3(q1.poll, 1
(e 1
ctx.bb.emit(IS_INSTANCE(REFERENCE(definitions.boxedClass(r.toType.typeSymbol)))) 1
assert(stat.symbol 1
atmosphereHandlers.put(/ 1
assert(board.isSolved) 1
m.native 1
(g, 1
setColor(xppl, 1
get(k) 14
annotated.deSkolemize.setAnnotations(ainfos) 1
newMethod(clazz, 2
timer.cancel() 1
PackageDef(pid, 1
verify(mockResponse).sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED) 8
content((x: 3
this.elem 1
ctx1.newBlock 1
applyErrorMsg( 1
moduleSymbol.info 1
sym1.isModuleClass 1
MatrixTest.run 1
putTree(elsep) 1
cunit.error(scrut.pos, 1
currentMethod 2
icon: 4
opcode(Conv_U8, 1
-1 2
-> 5
matrix.m.map(_.map(_ 1
handle.send 4
.suchThat(_.isGetter) 1
assert(nogt60 1
flipped, 1
ModuleBG, 1
!Actor.this.isSuspended 1
falseCtx.bb.emit(CONSTANT(Constant(false)), 1
ctx1.bb.emit(MONITOR_ENTER(), 1
Constant(longValue) 1
assertEquals(SexoEnum.indefinido,petRecuperado.sexo) 1
(IdentityPair(null, 1
(superAccess 1
private[Settings] 4
executor.execute(new 1
super.traverse(rhs) 1
traverse(elem) 1
fixResult((IF 1
.setInfo(qual.tpe) 1
assert(Actor.self(scheduler) 7
Object_ne 1
wr.flush() 2
formals.nonEmpty 1
this(y 1
assert(game.gameOver) 1
execTest(outDir, 2
transformTrees(body) 1
method.setCode(code) 1
transformFunction(fun) 1
stricterBounds(sb) 1
sb.append('>') 2
writeNat(tparams.length) 1
menuBar.contents 1
-shortCuts.length 1
emitAnnotation(annot) 1
this() 4
writeRef(fun) 3
y1.productElement(i) 1
bridges.toList 1
toXML(x, 1
f: 17
Constant(charValue) 1
Block(stats, 1
context.error(vd.pos, 2
it.next() 1
assert(odd.size 1
occupiedPositionsBottomUp.foreach 2
nme.MODULE_INSTANCE_FIELD.toString, 4
'Z' 2
handler.setStartBlock(inlinedBlock(e.startBlock)) 1
server.join() 2
groupNum 2
!member.isDeferred 1
+JAVACMD+ 1
global.lub(t1 1
(member 1
innerSym.rawname.toString, 1
CellTest.run 1
inlinedBlock 1
vparamss.map(_.map(enterValueParam)) 1
(((buf(bp) 1
pathSegments 1
fi 1
instr.setPos(pos) 1
a 5
assertTrue(clienteRecuperado.pets.size 1
newMethod(owner, 1
writeRef(lo); 1
print(f.symbol.keyString); 1
Worker.startSampling(sampleIntervalMillis) 1
ctx1.bb.emit(CALL_PRIMITIVE(Arithmetic(REM, 1
maxLocals 1
DefDef(constrMods, 1
putTree(ref) 1
addUnit(unit) 1
fjbgContext.JOtherAttribute(jclass, 2
entry(index) 1
this.synchronized 1
opcode(Stobj, 1
c.unit 1
println(t2.f(28, 1
resetLocalAttrs( 1
buildingFiles(files) 1
ctx2.bb.close 2
yc 4
newBoard 1
LOAD_LOCAL(tmp4), 1
getResultOrThrowException(future).get 2
writeNat(STARtree) 1
Modifiers(meth.flags 1
isBoxed(l.tpe.typeSymbol) 1
buf.put('['.toByte) 1
collectNamespaces(i, 1
assert(phaseId(infos.validFrom) 1
tl.set(r) 1
trailer 1
reporter.error(FakePos(), 1
POP_size(POP_I_R4) 1
print(+i) 1
Any_== 1
NullClass, 1
@elidable(ASSERTION) 4
!message.isInstanceOf[Tuple6[_,_,_,_,_,_]] 2
forwardAnalysis(blockTransfer) 2
nme.LocalVariableTableATTR.toString, 1
abstractClassError( 1
opcode(Beq_S, 1
mylinks.foreach((linked: 1
outDir.mkdir() 1
List(applyMethodDef(fun.body)) 1
None 22
target.nonTxn 1
fileset 1
tree.setSymbol(if 1
base 3
adapter.setContextPath(uri.getPath) 1
Some((sym.name, 1
inlinedLocals(l) 1
that.CEE_popush 1
assert(hasFlag(ACCESSOR)) 1
leftlst.next 2
ftpe2 1
print(index(ref)+ 1
fixAfterInsertion(n) 1
tokenRef.get 3
super.insert(that) 1
buf.copyToArray(result.array.asInstanceOf[Array[Any]], 1
assert((prev 1
info.getFieldNonRecordValue(r, 1
Some(NullValue.decode(prev)) 6
concreteMethod 1
ctx.bb.emit(JUMP(ctx1.bb)) 1
ctx.bb.emit(JUMP(ctx1.bb), 1
getter 1
predicateForPut(key).nonTxn.getAndSet(Some(value)) 1
supersym 1
readLine() 1
doAllPhases 1
SelectFromTypeTree(qualifier, 1
STORE_LOCAL(l).setPos(arg.head.pos) 1
str 1
usedIn 1
createdOutputDirs 1
setInfo(sym)(mkTypeCompleter(tree)(copySym 1
cond(_ 1
null 11
jcode.emitLOR() 1
stack.push(elem) 1
List(Function( 1
super.processWindowEvent(e) 1
varSym 1
rhs 4
ctx1.bb.emit(THROW()) 1
writeNat(IFtree) 1
ctx1.bb.emit(THROW(), 1
The 1
in.skip(8) 1
opcode(Ldelem_U1, 1
column(endPoint 1
nonSensible(, 4
javaType(sym.tpe.underlying)) 1
method.invoke(sysloader, 1
typer.reportTypeError(tree.pos, 2
assertEquals(iterative.Of((1,"2"),(2,"3"),(3,"4"),(99,"99")), 1
toTypeKind(lub0(a.toType, 1
\__ 1
sym.linkedSym.rawInfo.isComplete 1
jcode.emitPUSH(javaType(c.symbol).asInstanceOf[JReferenceType]) 1
nannots 2
tree: 1
(ACC_PUBLIC 1
tree1 1
tree, 3
tree) 1
first.getValue.predInsCount.get 1
opcode(Ble, 1
resultIsBetter(tpe1, 1
@Autowired 4
test7 1
loader.loadClass(clazz).newInstance 1
receiveTimeout 2
(such 1
Some(Nil); 1
(info2 1
(info1 1
implname.subName(0, 1
REF(reflClassCacheSym) 1
trees 6
argContext.scope 1
t3.f(1) 1
'a' 2
adapt(returnedKind, 1
array(idx) 2
NestUI.verbose(+logFile) 2
POP_size(POP_I) 1
localTyper.getManifestTree(tree.pos, 1
treeCopy.CompoundTypeTree(tree, 1
printInfoStart(file, 4
src.shutdown(dst.assertMe) 1
pred.creationInfo 3
x 37
currentRun.symData 2
fail(+info.sym+info.sym.locationString+ 1
moves(rng.nextInt(moves.length)) 1
cell1.x 1
resetDef(tree) 1
writeNat(LABELtree) 1
((resType 1
s.tpe.paramTypes.map(javaType).toArray) 1
m.sourceFile 1
locals 9
ctx1.bb.emit(STORE_ARRAY_ITEM(CHAR), 1
(REF(forReceiverSym) 1
branchArray(i) 1
minimizeTags: 1
exhCtx.bb.enterIgnoreMode 1
addAnnotations(jclass, 1
e.printStackTrace 9
jclass, 1
undent; 4
waitingFor 3
typeError(tree.pos, 1
sameTypes(parents1, 1
(varianceInType(restpe)(tparam) 1
hasMeta 2
cls.info.nonPrivateMembers.exists(_.name 1
f.getName.endsWith() 3
assert(b1.matrix 1
rawflags 2
isStrictlyMoreSpecific(info1.tpe, 1
blocker.block() 1
opcode(Shr, 1
this.references 1
in.ch 4
overrideTypeError() 1
EmptyPackage.setInfo(EmptyPackageClass.tpe) 1
txt.scope 1
}).force 1
newsymbuf 1
else 731
sett.sourcepath.value 1
writeRef(ref) 1
this.info 1
putType(supertpe) 1
inVar.value 1
_linkedActors.add(actor) 2
CASE(Literal(tag)) 1
while 229
writeRef(qual) 3
assert(!clazz.isTrait, 1
error(); 1
!(s 1
treeCopy.Block(rhs, 1
tree.symbol.setInfo(clazz.tpe) 1
infos.info 1
Array.copy(bytes, 2
event.getRequest.setAttribute(ReflectorServletProcessor.ATMOSPHERE_RESOURCE, 1
x.nameToString(sb) 2
wait(CHECK_FREQ) 1
get(externalName) 1
(None, 2
opcode(Conv_I1, 1
run() 1
pickle.writeIndex) 1
typed1(itree, 1
argContext.reportGeneralErrors 1
linearizer.linearize(callee).foreach 1
.setInfo(MethodType(List(), 2
putTree(pat) 1
symbolCounts.values.forall 1
assert(!instrAfter.isEmpty, 1
loadCometSupport(sc.getInitParameter()) 1
map2Conserve(args, 1
debruijnFor(sym) 1
parents.drop(1).map((s) 1
classLiteral 9
pred.set((null, 2
+pt 1
treeSubst.traverse(fn) 1
qual.tpe.members 1
prev.next 1
informProgress(msg 1
v(findBit(PRIVATE_PKL 1
opcode(And, 1
queue.dequeueAll(_ 1
txn.addReference(tok) 2
putSymbol(sym) 1
symbol.toString 1
List(TypeTree(tparg)) 1
CaseDef(cdef.pat.duplicate, 1
em.get.merge(data) 1
newValue(alternatives.head.pos, 1
INLINE_length(INLINE_TOKEN) 1
!typer.checkNonCyclic(tree.pos, 1
test3(get(14), 1
g(this) 1
opcode(Conv_R8, 1
jcode.emitSTORE(indexOf(local), 1
last0 2
ScriptRunner.wrappedScript(scriptMain, 1
Some((b, 2
protected[this] 20
LogContext(logFile, 8
tree.symbol.owner 1
@returnThis 1
m.params.foreach(p 1
writeRef(mods) 5
writeLongNat(x.toLong 1
ctx1.bb.emit(STORE_ARRAY_ITEM(SHORT), 1
owner.info.decls.enter(tpsym) 1
agent(decrement(3) 1
EmptyTree))))) 1
m.exh 3
newInstrs(j) 3
opcode(Ldarga, 1
println(countsToStr) 1
idx 4
Namers.this.caseClassOfModuleClass 2
unsafeTypeParams 1
allPossiblePieces.toList.flatMap(possibleMovesForPiece) 1
coreMsg++req 1
v(findBit(MODULE_PKL 1
protected[Settings] 1
checkNotRedundant(tree.pos, 1
block 3
docBuffer 3
collectImplicitImports(imports.head) 1
sizeDelta 2
repl.parent 1
logFile.write(prefix) 1
appliedType(ClassClass.tpe, 1
ImplicitMethodType(params, 2
linked.exit(this, 1
CJUMP(block, 1
logAppender.run() 2
succPred.succInsCount.get 1
tp.subst(tparams, 1
sym.setInfo( 1
LongClass, 1
this.context 2
treeCopy.TypeTree(tree) 1
mapOver(tp) 7
jcode.emitLUSHR() 1
info 7
Modifiers(flags, 2
System.arraycopy(entries, 1
writeNat(TEMPLATEtree) 1
nme.LSR 1
checkAnnotations(annots.map(a 1
RootClass.setSourceModule(rp) 1
instrAfter.foreach(i 1
List(x.toByte, 1
nme.LSL 1
result.decls 1
atPos(vdef.pos.focus) 1
setInst(lower) 1
guess(List( 1
ctx.bb.emit(DROP(REFERENCE(ThrowableClass))) 1
jcode.emitPUSH(f) 1
varianceString(sym.variance) 1
ancestors 1
errorBadSignature( 2
typedImplicit0(info) 1
update0(files, 1
Apply(fun, 1
assert(!two.isWideType 1
this.master 1
listToString(List(flagsToString(f), 1
linearization 2
mirrorName, 1
e 4
compiler.reporter.reset 1
required 2
newNamer(paramContext) 1
checkSensible(tree.pos, 1
Actor.loopWhile(fileCnt 1
Swing.toOption(r) 1
assert(queue.front 5
Helpers.bind( 1
txt.savedTypeBounds 1
writeRef(tree.mods) 1
opcode(Ble_Un, 1
List.map2(formals, 1
assert(layout 1
isType 1
opcode(Brtrue_S, 1
cs(j) 1
!mods.isLazy) 1
instanceCode.methods 1
popLevel() 1
apply(MethodType(params 1
opcode(Ldind_U4, 1
isNonBottomSubClass(that) 1
typer.infer.checkBounds(pos, 1
suite 1
sym.info 2
more: 1
!args.isEmpty 1
super.reset(completer) 2
SearchFailure 5
opcode(Conv_Ovf_I2, 1
stack.push(tpe) 1
List.map2(argtps, 2
Apply(tree, 1
Star(elem).setType(tpe) 1
zc 1
beeblebroxReqvar.is.open_! 1
scalaPrimitives.getPrimitive(fun.symbol) 1
textComponents(new 1
Object_synchronized 1
jcode.emitDUP 1
ctx1.bb.emit(CALL_PRIMITIVE(Logical(OR, 1
cell 1
genLoad(body, 3
queue.enqueue(70) 1
sizeRef.get 6
(pre.widen.typeSymbol.isNonBottomSubClass(sym.owner) 1
; 15
afterRollback.clear() 1
opcode(Sizeof, 1
v(findBit(IMPLICIT_PKL 1
ctx.bb.emit(CONSTANT(Constant(from 1
formalTypes(formals, 1
callee: 1
sym 51
Apply(staticRef(sym.alias), 1
jcode.emitINVOKEINTERFACE(, 1
@equivalentTo("(takeWhile(p), 1
NullValue.decodeOption[B](underlying.put(key, 2
strictPt: 1
setColor(sr, 2
layout.lines.zipWithIndex.foreach 1
opcode(Stloc_2, 1
jcode.emitIUSHR() 2
putAnnotations(staticAnnotations(annotations)) 1
!vparamss1.head.isEmpty 1
reportResult(if 1
compileSources(files 1
println(b11.copy()()) 1
emptyNeighbors.flatMap((cell1: 1
opcode(Stelem_I1, 1
INLINE_length(INLINE_SWITCH) 1
typedPos(tree.pos)((qual 1
r.left 1
AnnotationInfo(atp, 1
(others.head 1
links 2
member1.asInstanceOf[TermSymbol] 2
assert(params 1
addModuleMethod(ShortClass, 2
assert(toArraySym 1
agent{_ 1
opcode(Ldc_I4_3, 1
logWriter.flush() 3
setFlag(DIRTYSUCCS 2
testCornerCheck 1
scala.`package` 1
private[scala] 1
opcode(Ldelem_I8, 1
+outDir.getParent+ 1
this.filterConfig 1
peer.setJMenuBar(if(m 1
println(+clazz) 1
outdir 1
res.performRollback(this) 1
putTrees(vparams) 1
Full(dm) 1
(row.toList 1
assert(hasFlag(LAZY), 1
+pt) 2
+pt+ 1
outer 1
protected[akka] 4
genLoad(qualifier, 1
lst.clear 1
ApplyDynamic(qual, 1
instanceDefs.enter( 1
Alternative(trees).setType(tpe) 1
writeNat(DEFDEFtree) 1
addForwarders(jclass, 1
printList(cls.symbol.info.parents, 1
atPos(pos) 2
(sym.name 1
putSymbols(tparams) 1
latestPartestFile} 2
!owner.isPackageClass 1
Record(cls, 2
opcode(Ble_Un_S, 1
singleOutDir 3
REF(sym.owner.sourceModule) 1
Select(Super(nme.EMPTY.toTypeName, 1
future.awaitBlocking 2
println(+(tvars 1
Menu(Loc()) 1
'F' 2
apply(appliedType(SeqClass.typeConstructor, 1
out.print(newTypeName(buf.bytes, 1
log(owner.info.member(name).tpe 1
show() 3
closser.analyzeClass(c) 1
assert(fieldOffset.isDefinedAt(sym)) 2
merge(l1s, 1
jcode.emitALOAD_0 1
fromIterator(source.iterator) 1
Select(predef, 2
buf.put('@'.toByte) 1
(this.value 1
genLoad(duplicateFinalizer(ctx1, 1
.setPos(vd.pos.focus) 1
jerseySelectorThread.setPort(REST_PORT) 1
.setParameter(, 3
opcode(Ldarg_3, 1
this.cleanups 1
kindErrors.toList.mkString()) 3
argContext.reportAmbiguousErrors 1
typesCompatible(reorderArgs(argtpes1, 1
atPhase(currentRun.flattenPhase.prev) 1
PUSH_size(PUSH_SPECIAL) 1
PartialFunction.this.isDefinedAt(x) 1
newCaller 1
writeRefs(args) 5
assert(module.isModuleClass) 1
bb.emit(CJUMP(otherBlock, 1
while(i.hasNext) 1
final 969
nme.NE 1
GameTest.run 1
NestUI.normal(diff) 1
fileManager.JAVAC_CMD.equals() 1
opcode(Ldc_I4_S, 1
constrMods, 1
getlitch() 2
assert(info 1
name(name.length 1
uncurryTreeType(MethodType(formals, 1
ctx1.labels 2
(tparam.info.bounds 1
IntClass, 1
@tailrec 4
cells.foreach((cell) 1
(gen.mkSynchronized( 1
DependencyFactory.time.doWith(stableTime) 1
otherBinOps 1
fun.tpe.paramTypes.last.typeSymbol 1
src.path.startsWith(srcDir.path) 1
buf.putShort(cpool.addDouble(const.doubleValue).toShort) 1
instrs(instrs.length 1
LOAD_LOCAL(eqEqTempLocal), 1
LiftRules.ajaxEnd 1
((ab.isTerm 1
( 3
messages.mkString() 1
setFlag 2
isTrait 1
stdCharset 2
writeNat(IDENTtree) 1
treeCopy.Literal(tree, 1
ctx1.bb.emit(CALL_METHOD(fun.symbol, 1
setTransaction(messageHandle.tx) 4
ctx.bb.enterIgnoreMode 1
assert(rhs.isTerm) 1
clinit.emitPUSH(value) 1
processed 1
CJUMP(succ, 1
(pf 1
readNat(); 1
println(c_f(11).print) 1
opcode(Stind_R4, 1
outerName, 1
sym.linkedSym.setInfo(NoType) 1
.newValue(NoPosition, 1
CassandraStorage.insertMapStorageEntriesFor(, 1
stats 3
excludedVars 2
state 3
targets.tail.foreach(t 1
opcode(Ldloc, 1
localPhase 1
key 1
writeResourcesPresent 1
partMap.put(tsym, 1
AnyClass, 5
followApply(pre.memberType(sym2)), 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(LONG), 1
p.right 1
BoardTest.run 1
assert(mlist.tail.isEmpty) 1
reporter.cancelled 1
abstractClassError(false, 1
jcode.emitIXOR() 3
atPhase(phase.next)(clazz.owner.info) 1
addMixedinMembers(clazz.superClass,unit) 1
assert(b.isFirstMove(player2upperLeftMove)) 1
rows: 1
(!tree.tpe.isInstanceOf[PolyType] 1
(duplicator 1
buf.put('B'.toByte) 1
other.cookJavaRawInfo() 1
context: 1
args.toList 1
underlying.isEmpty 2
sawPrivateConstructor 2
ctx1.bb.emit(STORE_ARRAY_ITEM(BOOL), 1
getParts(t) 2
println(bn4()) 1
ctx1.bb.emit(CALL_METHOD(sym, 1
JavaMethodType(sym.newSyntheticValueParams(paramtypes.toList), 1
check(pre, 2
!owner.isInterpreterWrapper 1
Array.copy(branches, 1
(givenArgs 1
traverse(templ) 1
ctx1.exitSynchronized(monitor) 1
code.emit(LSWITCH(tags.reverse, 1
List(transform(tree)) 1
resTpe, 1
opcode(Stloc_0, 1
context.namedApplyBlockInfo.get._2 1
javaName(const.typeValue.typeSymbol)).shortValue) 1
context.namedApplyBlockInfo.get._1 1
atPos(tree.pos) 3
opcode(Conv_Ovf_U, 1
NestUI.verbose(this++fileBase) 6
compiler.dependencyAnalysis.saveDependencies(fromFile) 1
computeInternalPhases() 1
freeLocalsTraverser(unit.body) 1
mlist.clear 1
writeNat(ANNOTATEDtree) 1
sym.allOverriddenSymbols 1
require(sz 1
LiftRules.ajaxStart 1
TypeApply(Select(predef, 1
.setFlag(SYNTHETIC).setInfo(ObjectClass.tpe) 1
_.info.isInstanceOf[MethodType])) 1
getNode(key) 1
// 12
i 83
definitions.init 1
context.error(vparam.pos, 1
ctx1.bb.enterIgnoreMode; 1
_label 1
assert(odd.sameElements(List(1, 1
sources 4
opcode(Ldc_I4_1, 1
sym.typeParams 2
NestUI.verbose(cmd) 1
size0 1
succ.toList 1
subst(from, 1
writeRef(sym.name) 1
extends 77
log(.format(m, 1
bridge.setInfo(bridgetpe.cloneInfo(bridge)) 1
List(latestCompFile.toURL, 1
assert(!currentRun.compiles(clazz) 1
error() 8
opcode(Ldind_I1, 1
source: 2
(context.scope.enter(s), 1
flipped.rotateRight, 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(CHAR), 1
immediateCleanup(key, 3
mclass.setInfo(ClassInfoType(List(), 1
msym.setInfo(MethodType(params, 1
Array.copy(instrs, 4
jcode.emitANEWARRAY(strKind) 2
v.toList 1
psym 1
buf.append().append(cleanups).append('\n') 1
((bound 1
!owner.isRoot 1
Console.err.println( 2
ownerNamer 1
pfOrNull: 17
test5(1, 1
ctx.clazz.addField(new 1
buf.putShort(cpool.addInteger(const.shortValue).toShort) 1
requireNotCompleted() 2
Wheel(), 4
add(sym.linkedSym, 1
checkCheckable(pos, 1
ctx1.bb.emit(CALL_PRIMITIVE(Logical(XOR, 1
txt.enclClass 1
unit.depends 1
Constant(in.getInt(start 1
genLoad(r, 1
array_update(dest, 1
jcode.emitALOAD_0(); 1
assert(b.successors.length 1
em.get.remove(data) 1
withDisambiguation(found, 1
opcode(Ldarg_1, 1
AppliedTypeTree(Ident(NonLocalReturnExceptionClass), 1
Any_isInstanceOf 1
hc 19
isAsSpecificValueType(tpe1, 1
query.allEntries.foreach({ 1
hd 4
CZJUMP(block, 1
limit 2
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED) 1
w3: 2
jmember.addAttribute(attr) 1
n.set(cell, 1
usesNonPublics 2
lastLineNr 2
ctx.bb.emit(DROP(REFERENCE(tpt.tpe.typeSymbol))); 1
trueCtx.bb.emit(JUMP(afterCtx.bb)) 1
txn.afterCompletion(freshPred.creationInfo) 6
that.isType 1
LiftRules.setSiteMap(SiteMap(entries:_ 2
opcode(Conv_R4, 1
(ranges.foldLeft(Nil: 1
jcode.emitPUSH(classLiteral(kind)); 1
ANNOTARGARRAY 1
logFilePrinter.close() 1
testAdjacency 1
ctx.clazz.addMethod(m) 1
w.run(true, 1
transformTrees(m.symbol.annotations.flatMap(_.args)) 1
genStat(tree, 1
stat 2
putTrees(body) 1
x.printStackTrace(System.err) 1
scrut.tpe 1
reversedMap 1
arr, 1
Array(jtype))) 1
cache.get 1
file.getAbsolutePath.substring(filesPathLen) 1
super.resetDef(tree) 1
!message.isInstanceOf[Boolean] 2
this.rawannots 1
ClassInfoType(parents, 1
activeToken(key, 4
assert(queue.nonEmpty) 10
activeToken(key) 4
erasure.javaSig(sym, 1
variances: 1
cell2.y 1
cell2.x 1
transformTrees(annots.flatMap(_.args)) 1
withHelpSyntax(name 5
collect[Char, 2
buf.putShort(cpool.addLong(const.longValue).toShort) 1
buf.putShort(cpool.addUtf8(name.toString).toShort) 1
restp.complete(sym) 1
errorFn() 3
treeCopy.ModuleDef(tree, 1
deftParams 1
List.map2(symPs, 1
STORE_LOCAL(tmp4), 1
jcode.emitARRAYLENGTH() 1
assert(isLocalName(name)) 1
nme.LT 1
System.exit(100) 2
ofclazz.info.nonPrivateDecl(name).filter(sym 1
msg) 1
(CASE(super.transform(pattern)) 1
test1(1, 2
(primitiveTypeMap 2
mainTransform(transformFunction(fun)) 1
vector 2
SingleUseTraverser(templ) 1
arr(0) 1
-32768 1
typeRef 1
(parent.typeSymbol 2
(lo, 1
methodArgumentNames(meth) 1
(r1 2
method.setAccessible(true); 1
Some(LiteralAnnotArg(Constant(pool.getName(index).toString()))) 1
Match(selector, 1
BLOCK( 4
this.handlers 1
NothingClass, 1
afterCtx 2
(loc 1
.setIsSuccessful(true) 2
LabelDef(sym.name, 1
outstream.close() 2
staticCall(atPhase(phase.prev)(sym.overridingSymbol(implClass(sym.owner)))) 1
jmethod.getName() 1
falseCtx.bb.emit(JUMP(afterCtx.bb)) 1
opcode(Conv_Ovf_U4, 1
t.zip(u).subscribe(reactor.make(out.add((99,"99")), 7
counts 4
nprinted 1
containsDUPX 1
!sym.isPackageClass 1
context.unit.error( 1
type 46
withNeedLift(false) 1
(caseBlock: 1
m.setModuleClass(new 1
check(tp1, 1
oldsymbuf 1
phaseWithId(id) 1
opcode(Ldelem_I, 1
((p1, 2
root 7
assert(writeIndex 1
str.indexOf(stableTime.toString) 1
Console.println( 10
in(point) 1
method.symbol.newVariable(NoPosition, 1
printSymbolRef(); 3
remake(List.map2(rest.rows.tail, 1
opcode(Xor, 1
f.symbol.annotations 1
v(i)=1L 1
assert(lst.reduceLeft(_ 1
lookahead.next 3
printRef(sym.info) 1
closeOperation() 1
init(m) 2
progress((phasec 1
drainSendBuffer(mailbox) 9
putTree(hi) 1
buildFieldPositions(clazz) 1
AnnotationInfo(SerializableAttr.tpe, 1
opcode(Bgt_Un, 1
'0' 1
ctx.enterScope 1
tpeCache 4
syntaxError() 7
Some(LiteralAnnotArg(Constant(s))) 1
fromFile(new 1
(clazz 1
log.error(, 4
log.error() 1
, 32
PCDataXmlParser(new 1
nme.toShort 1
context.reportGeneralErrors 3
sym.name.toString() 1
ctx1.bb.loopHeader 1
sym.simpleName.toString.trim()) 1
assert(!from.isReferenceType 1
opcode(Mul_Ovf_Un, 1
posCounter 1
c.openImplicits 1
ModuleAG, 1
assert(queue.isEmpty) 11
ifaces, 1
super.apply(body) 1
collected.foldRight(List[List[Combo]]())((c, 1
sum(parents 1
print(if 3
List(YwarnShadow, 1
SWITCH(tags, 2
b.varsInScope 3
getClass.getClassLoader 1
opcode(Ldc_I4_7, 1
staticCall(sym) 1
newNamer(ctx.makeNewScope(owner, 1
outer.toString() 1
message: 4
code.emit(IS_INSTANCE(toTypeKind(pool.getClassOrArrayType(in.nextChar)))); 1
sc.tree 1
newSym.setInfo(info.cloneInfo(newSym)) 1
Console.println(tree) 1
sym1.cookJavaRawInfo() 1
System.setErr(logWriter) 3
extModClassRef) 1
assert(mlist.tail.head 1
other.isValue 1
writeNat(SINGLETONTYPEtree) 1
symScope(sym.owner) 1
specializes(tpe1, 1
genLoad(block, 1
assert(params.head.tpe.typeSymbol 1
preferredSize=(600,400) 1
addBinops(doubleparam, 1
(pop, 1
token: 3
adapter.addInitParameter() 1
putChildren(sym, 1
_sampler.setDaemon(true) 1
Executors.newCachedThreadPool, 1
settings.Xcodebase.value) 1
Executors.newCachedThreadPool) 1
private[akka] 14
params 3
TypeTree(tree.tpe) 1
jcode.emitNEW(StringBuilderClass) 1
cur.hasNext 2
opcode(Cpobj, 1
method.addLocal(l) 1
showDef(newTermName(settings.Xshowobj.value), 1
base.info.decl(getterName) 1
(tpe.typeSymbol 1
v(findBit(PROTECTED_PKL))=PROTECTED 1
initializer(member1) 1
toPatch 2
writeNat(TYPEtree) 1
printMixinOverrideErrors() 1
tyconCache 3
assert(lst(3) 1
txt.reportGeneralErrors 1
LOAD_LOCAL(tmp2), 11
List(ClassDef(anonClass, 1
seen 2
code.touched 8
treeCopy.ArrayValue(tree, 1
CLASSsym 1
handler(exception) 1
messageDispatcher 4
PRIVATE 1
compileGroup(grp) 1
jcode.emitNEWARRAY(javaType(elem)) 1
sym.isTypeParameter 1
writeRef(carg) 1
ctx.labels 2
racaForm 1
implicitTime 1
lv.ranges 5
site.nonPrivateMemberAdmitting(name, 1
translate(height, 2
m 8
opcode(Pop, 1
blockTyper.context.scope.enter(sym) 1
stack.push(kind) 3
ctx1.exitSynchronized(m) 1
+logFile.getParentFile.getAbsolutePath+ 1
s.toByte 1
Literal(()).setPos(tree.pos).setType(UnitClass.tpe) 1
writeRef(qualifier) 2
failure.addCallingInstruction(this) 2
clazz.info.member(name).alternatives 1
sym.owner.hasFlag(Flags.SYNTHETIC) 1
folded 1
.setTimeout(timeout) 4
private[matching] 3
tree.isTerm 1
messageDispatcher.registerHandler(this, 4
sameType(pre1, 1
putEntry(asc._1) 1
nme.toByte 1
jcode.emitIF(conds(cond), 3
stop 1
newBody 1
opcode(Ldarg, 1
jcode.emitASTORE(javaType(kind)) 1
ctx1.bb.emit(CONSTANT(Constant(false))) 1
isFullyDefined(pre) 2
14 1
assert(mlist.tail.length 3
if(elems2.hasNext) 5
cleanups 4
fields 3
member.tpe 1
19 1
assert(allgt55.size 1
settings.sourcepath.value 1
treess.foreach(putTrees 1
sym.setInfo(PolyType(List(), 1
writeRef(sym.name); 1
isStable(info.pre)) 1
outerAccessor(tpe2test.typeSymbol) 1
assert(getter 1
require(!hasStar) 1
pets 2
posAssigner.traverse(tree) 1
+JAVA_OPTS+ 1
lazy 240
newParameterlessMethod(owner, 1
!message.isInstanceOf[Float] 2
info.decls.toList 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(ANY_REF_CLASS), 1
Apply( 3
makeRemote(new 2
advancePhase 1
logWriter.close() 3
inVar.withValue(new 1
nullables.addBinding(lazyFld, 1
implicitManifest(pt.bounds.lo) 1
atPhase(currentRun.mixinPhase)(tp.typeSymbol.toInterface).tpe 1
setAnnotations(annot 1
(in.nextByte.toInt: 1
peephole.transformMethod(m); 1
::: 1
LOAD_LOCAL(eqEqTempLocal) 2
txt.inConstructorSuffix 1
owner.info.decls.enter(msym) 1
that.CEE_pop 1
assert(validFrom 1
explainTypes(_.bounds 1
TypeTree() 1
restFilter(request, 1
deleteClassfiles(files) 2
javaName(m), 1
validateVariances(parents, 2
assert(three 1
javaType(method).asInstanceOf[JMethodType]); 4
r.bindings 1
owner.info.decl(nme.getterToLocal(if 1
writeNat(ASSIGNtree) 1
additionalDefs 1
(i1, 1
needsExpandedSetterName(lhs.symbol) 1
INLINE_length(INLINE_METHOD) 1
lvTab.putShort(pool.addUtf8(signature).toShort) 1
agent.get((x: 1
labels(e.startBlock).getAnchor(), 1
opcode(Conv_Ovf_U2, 1
this.method 7
in 4
setFlag(EXPANDEDNAME) 1
if 2285
pred.set(IdentityPair(null, 1
List.forall2(this.stack, 1
.setInfo(tpe) 1
STM.atomic(unbind.transform(key, 3
e.blocks 1
opcode(Conv_Ovf_I4, 1
Kernel.boot 1
out.vars 1
rootPath.relativize(Path(file.file).normalize).path 1
newBoard.doRecordedMove(move) 1
jcode.emitGETFIELD(owner, 1
left 2
check(tp, 1
mirrorCode.emitRETURN(mirrorMethod.getReturnType()) 1
|| 15
.setPos(tree.pos) 1
app.run() 1
javaTypes(m.params 1
singleType(readTypeRef(), 1
entries(ep) 1
accept('.') 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(CHAR)), 1
for(el1 14
definitions.AnyClass.tpe) 2
jcode.emitIMUL() 1
require(isTerm) 1
(pattern 1
New( 1
test5(b 1
this(false) 1
+filename) 1
elseCtx.bb.close 1
trees.foreach(putTree 1
succs.flatMap(findSucc).removeDuplicates 1
moduleNamer 1
(cell2.y 1
sflags 1
args.take(formals.length 1
+sym+ 1
traverse(pid) 1
unit.isJava 1
println()) 6
newParameterlessMethod(BooleanClass, 1
arityMismatches(am) 1
println(); 3
@inline 11
writeNat(RETURNtree) 1
namer.enterSyms(stats) 1
opcode(Conv_U2, 1
Literal(Constant(null)) 1
_root_.junit.textui.TestRunner.run(suite) 1
opcode(Stind_I1, 1
!groups.exists(_ 1
blockWithoutQualifier(None) 5
assert(treeInfo.isPureExpr(qual), 2
assert(dims 1
setter(newVal) 1
IOException, 1
resKind 1
clienteService 5
f(x) 1
gen.mkCast(tree, 1
nme.toChar 1
validateVarianceArgs(args, 1
Apply(Select(Ident(ex), 2
AppliedTypeTree(tpt, 1
errorBadSignature() 11
!m.symbol.isSetter) 1
infos 11
collect(imp.tree.selectors) 1
(Some(value), 2
treeCopy.Alternative(tree, 1
bounds 2
infolevel 1
app.tpe 1
LiteralAnnotArg(readConstant()) 1
INLINE_length(INLINE_TARGET_S) 1
Return(REF(methodSym)) 1
buffer.toString 1
Ident(name).setSymbol(symbol).setType(tpe) 1
writeBody(tp) 1
a.run 1
opcode(Stind_Ref, 1
Body(), 1
setInfo(tree.symbol)(namerOf(tree.symbol).typeCompleter(tree)) 1
RemoteProtocolBuilder.setMessage(result, 2
writeRef(annot) 1
byNameArgs.addEntry(arg) 1
error(pat.pos, 1
this.bigDecimal.divideToIntegralValue(that.bigDecimal, 1
varianceMismatches(vm) 1
}}).reverse 1
isPatternSwitch(scrut, 1
flatname 4
putSymbol(rclazz); 1
innerClassesAttr.addEntry(javaName(innerSym), 1
code.emit(CREATE_ARRAY(toTypeKind(tpe), 1
traverseTrees(params); 1
if(filenames.length 1
blockTyper) 1
_sampler 2
(f1.symbol 1
traverse(qualifier) 3
0 2
finally 1
!message.isInstanceOf[Int] 2
_boundTree 1
squeezedBlock(casted.allValDefs, 1
tpe.baseClasses.find(x 1
newInstance._remoteAddress 1
decls.toList 2
traverse(body) 1
writeNat(PACKAGEtree) 1
index(entry) 1
sym.owner.isImplClass 1
assert(b.isCornerMove(player2upperLeftMove)) 1
assert(moduleSymbol.moduleClass 1
dir 2
ctx.bb.emit(THROW()) 1
tskolems 2
assert((-100).toChar 2
CaseDef( 1
parent.left 1
assert(!overrides 2
field.owner 1
targets 3
nbScalaCallers 1
buf.putShort(cpool.addUtf8(const.stringValue).toShort) 1
filled 2
ctx1.bb.emit(CALL_PRIMITIVE(Arithmetic(SUB, 1
_touched 2
Thread.currentThread.setContextClassLoader(getClass.getClassLoader) 1
state.bindings 1
readInto(xs, 2
apply(MethodType(mt.params, 1
assert(caller.locals 2
target: 2
setFlag(DIRTYSUCCS) 1
treeCopy.SelectFromArray(tree, 1
matchesPt(depoly(info.tpe), 1
writeRef(impl) 2
tfa.init(m) 1
dsym.setInfo(dtpe) 1
jcode.emitIF_ICMP(conds(cond), 1
gen.mkCheckInit(accessedRef) 1
alts 5
.setFlag(EXISTENTIAL) 1
AnyRefClass.tpe 2
sym2.isModuleClass 1
method.dump 2
definitions.getModule(name) 1
buf.putShort(cpool.addUtf8(javaType(const.typeValue).getSignature()).toShort) 1
nme.isTraitSetterName(sym.name) 1
pickle.finish 1
Select(New(TypeTree(rtpe)), 1
NestUI.verbose(+cp) 1
println(+tree) 1
fun.tpe.paramTypes.last.typeArgs.head.typeSymbol 1
sb.append(theChar) 1
syms1 2
writeNat(MinorVersion) 1
writeNat(BLOCKtree) 1
assert(queue.isEmpty 1
queue.enqueue(80) 1
buf.putShort(cpool.addUtf8(const.symbolValue.name.toString).toShort) 1
inlinedBlock(bb).emit(LOAD_LOCAL(retVal), 1
widen(tp.bounds.hi) 1
.setFlag(DEFERRED) 1
jcode.emitASTORE_0() 1
jerseySelectorThread.listen 1
settings.Xcloselim.value 1
fld 1
removeInstructionsAt(size) 1
agent 4
sample 1
next.token 1
processed: 1
hdDefined 3
fromIndex: 2
this.bindings 1
checkNoConflict(DEFERRED, 2
foreach 1
assertEquals(iterative.Of((99,"99")), 2
target.nonTxn.clear 1
putType(tpe) 1
map 2
(firstSymTag 2
.newInstance(config) 1
dependencyAnalysis.dependenciesFile 1
sym.setInfo(tpe) 1
externalName 1
javaType(f.symbol.tpe)); 1
opcode(Or, 1
traverse(annot); 1
exit(0) 1
System.setOut(oldStdOut) 3
runbind 2
lst 5
opcode(Conv_Ovf_U4_Un, 1
opcode(Blt_Un, 1
Bind(exname, 1
this.scope 1
newInstance.timeout 1
gen 2
apply(MethodType(List(), 1
RemoteClient.clientFor(_remoteAddress.get).send(requestBuilder.build) 2
code.emit(STORE_THIS(OBJECT)) 1
context.owner.newLocalDummy(tree.symbol.pos) 1
add(checkDir(AbstractFile.getDirectory(srcDir), 1
newBranches(hd) 1
annotationsConform(tp1, 2
opcode(Ldloca_S, 1
flatOwnerInfo.decl(name.toTypeName).suchThat(_ 1
jcode.addAttribute(attr) 1
underlying.synchronized 4
pflags 1
(!currentRun.compiles(m) 1
POP_size(POP_REF_I_I8) 1
(res1.member(name) 1
tags.zipWithIndex.reverse.foldLeft(IntMap.empty[List[Int]]) 1
putEntry(value) 1
buildView(request, 1
assert(Delegate_scalaCallers 1
sym.resetFlag(DEFERRED) 2
print(bb.label) 1
assert(!anchored, 1
pre.memberType(sym1) 1
println(fact.copy(x 1
assert(in.stack.length 1
isOperatorCharacter(name(0)) 1
ctx1.bb.emit(DUP(generatedType), 1
((tree.symbol 1
addEnclosingTParams(clazz) 1
ctx1.bb.emit(DUP(generatedType)) 1
ArrayValue(TypeTree(ClassClass.tpe), 1
testSmallGame 1
addRemoteException(mirrorMethod, 1
directDeps 2
handleOuter(scrut.id 1
Object_equals 1
first 2
jcode.emitLSHR() 1
cmd: 1
}.transform(rhs) 1
buf.putShort(cpool.addInteger(if(const.booleanValue) 1
treeCopy.SingletonTypeTree(tree, 1
instrs(0) 1
messageDispatcher.start 2
self.reactWithin(msec)(f) 1
putTree(qual) 1
method.code.removeBlock(block) 1
protected[actors] 3
trueCtx.bb.close 1
'k' 2
Match( 2
CZJUMP(inlinedBlock(success), 1
Assign(Select(This(sym.accessed.owner), 1
opcode(Conv_U4, 1
Flags.flagsToString(flag1) 1
11 1
13 1
12 1
15 1
timer.schedule(ontimeout, 1
17 1
16 1
opcode(Bge_Un, 1
18 1
localTyper.typedOperator 1
ShowPickled.printFile(this, 1
private[Exception] 2
tfa.init(method) 1
protected 139
jclass 1
getCode(jflags).addField(new 1
tp.typeSymbol.newAbstractType(sym.pos, 1
assert(gt0 1
traverseTrees(parents) 1
jcode.emitRETURN() 1
gen(body, 1
clone.referenced 2
LiftRules.addToPackages() 3
opcode(Shl, 1
senderFuture 4
opcode(Newobj, 1
actor.makeRemote(hostname, 6
print(s); 1
opcode(Stfld, 1
(!phase.erasedTypes 1
compileFilesIn(file, 3
sym.moduleClass 1
doClear 1
innerClasses 4
opcode(Conv_R_Un, 1
(settings.checkInit.value 1
writeRef(annInfo) 1
List.map2(targs, 2
NestUI.normal(, 4
buf.putShort(cpool.addUtf8(javaType(const.tpe).getSignature()).toShort) 1
assert(!locals.isDefinedAt(idx)) 1
newS.owner.isPackageClass) 1
(buf(bp 2
putEntry(mix:Name) 1
Delegate_scalaCallers 1
buf.putShort( 1
@Entity{val 1
tfa.stat 1
putTrees(args) 5
isLocal(sym.owner)) 1
sym.hasFlag(PRIVATE) 1
smaller.append( 1
writeRef(expr) 5
treeInfo.containsLeadingPredefImport(List(unit.body)))) 1
getScope(jflags).enter(innerClass) 1
maxStack 1
mclazz.setSourceModule(m) 1
TypeOfStackPos(depth) 1
Precondition.nonnegative(n, 1
NestUI.verbose(.format(file, 1
printf(text, 1
traverse(qual); 1
baseFunBlock(baseFun) 1
assert((pc 2
JMethod.INSTANCE_CONSTRUCTOR_NAME, 2
NONEsym 1
setter: 1
Actor.timer.schedule(timerTask, 1
get 1
tokenName 1
repr 7
computePluginPhases() 1
(staticCode, 1
require(scrut.tpe 1
anonCounter 1
writeNat(MajorVersion) 1
buf.putShort(0xbaba.toShort) 2
Array.copy(tokenName, 1
x.toShort, 1
thenCtx: 1
writeNat(CLASStree) 1
yield 8
specificCount 1
super.tpe_=(NoType) 1
(tps 1
x.map(_ 1
decls.unlink(e) 1
private[experimental] 2
instanceDefs 1
Select(This(clazz), 2
executor.shutdown() 1
addTypeParam(TypeBounds(NothingClass.tpe, 1
.setType(NoType) 1
parent 2
treeCopy.If(tree, 1
(tp1 2
(tp2 1
_elems 2
NestUI.normal(+name+List.toString(List.fill(totalWidth-name.length)(' 1
!message.isInstanceOf[Tuple4[_,_,_,_]] 2
assert(lst.length 3
buf.putShort(cpool.addUtf8(jtype.getSignature()).toShort) 1
assert(lt30.size 1
jf 11
fresh.clear 1
desktop.add(internalFrame) 1
putTree(finalizer) 1
z 24
putTree(arg) 1
((tp1n 1
List(tree) 2
scheduleActor(continuation, 1
(0, 6
unit.error(tree.pos, 4
vd.name, 1
treeCopy.Return(tree, 1
map(_ 4
Cell(i, 1
Select(qualifier, 2
}) 93
PUSH_size(PUSH_I8) 1
assert(infos 2
writeRef(value); 1
(outputs 1
}} 12
symbol.allOverriddenSymbols.filter(sym 1
runInContext(file, 5
Config.config.getList()) 1
transformTrees(List(cdef, 1
emitArgument(value) 1
addTypeParam(bounds) 1
New(TypeTree(anonClass.tpe), 1
setPos 1
assert(!sym.hasFlag(OVERLOADED)) 1
actor.dispatcher 4
.reverse 1
println(t7.g(new 2
((method.isFinal 1
elems 1
symbol.hasFlag(Flags.DEFERRED) 1
add(sym, 1
thisTypePeriod 1
replaceFieldAccess(r) 3
atPhase(phase.next)(currentOwner.owner.info) 1
setInfo(vsym)(namerOf(vsym).typeCompleter(tree)) 1
instrs(pos) 1
warnRedundant(e.sym); 1
fn.tpe.paramTypes.length 1
pad 2
Set(matrix, 1
Constant(intValue) 1
javaName(parents(0).typeSymbol), 1
jclass.getType()); 1
buf.putShort(0, 1
condOpt(others) 1
+nextexid 1
Template(sym.info.parents 1
logFile.write(Platform.EOL) 1
ctx1.bb.emit(STORE_FIELD(lhs.symbol, 2
(sameTypes(tp1.paramTypes, 1
putType(thistpe) 1
typer.checkStable(expr1) 1
(jflags, 2
parseAttributes(clazz, 2
addImport(imp) 1
f(what.productElement(i)) 1
code.resolveDups 1
agent(List[Int](1)) 1
cls.isFinal 1
infer.setAddendum(tree.pos, 1
innerClasses.get(externalName) 1
stack.push(BOOL) 1
}}} 1
isApplicable(tparams1 1
param 1
swriter) 1
c.symbol.fullNameString) 1
S.initIfUninitted(session) 1
atPos(wrappingPos(superPos, 2
A(23) 1
in.skip(in.nextChar) 1
jcode.emitMONITORENTER() 1
ctx.bb.emit(if 1
}}) 1
w.run(false, 1
rawowner 2
cells.map(new 1
INLINE_length(INLINE_STRING) 1
sym.getter(sym.owner) 1
sym, 1
typeRef(pre, 2
sym2 4
sym1 1
.setInfo(IntClass.tpe) 1
Constant(in.getFloat(start 1
global.definitions.RootClass.info.decls) 1
assert(multof3.size 1
transformStats(stats, 1
private[Actor] 2
errorTree(arg, 3
assert(outer 1
Select(REF(BoxedUnit_TYPE), 1
testLDF(Short.MinValue.toLong) 1
cls.methods.foreach(printMethod); 1
syms 2
testMoves 1
(sym.sourceFile 1
ctx1.bb.emit(DROP(l), 1
allsettings 1
(Nil:List[List[Double]]).reduceLeft((_: 1
preRestart(reason, 2
referenced 4
beeblebroxReqvar(Full(Beeblebrox.create)) 1
context.error(cdef.symbol.pos, 1
addString(buf, 1
deleteClassfiles(removed) 1
classAndNamerOfModule.clear 1
traverse(tpt); 2
@GeneratedValue 1
this.base 1
print(flagsToString(sym.flags 1
c.inConstructorSuffix 3
labels(b).anchorToNext() 1
'>' 1
putImpl(key, 6
opcode(Tailcall, 1
batchFile.getAbsolutePath 1
resultingLocals 2
!(sym.name.toString 1
b.fromList(newInstructions) 1
queue.enqueue(10) 2
writeRef(templ) 1
'U' 2
atPhase(phase.next) 6
javaName(m.symbol), 1
JUMP(afterBlock); 1
Engine()) 1
println(msg) 1
isFirst 1
treeCopy.Ident(tree, 1
depth 3
newInstance 2
if(triedCooking) 1
classTParams 2
scrut.createVar(tpe, 1
code.toBasicBlock 1
Object_eq), 1
es.foldRight[List[A]](Nil)((e, 1
NestUI.verbose(+outDir) 3
checkSelectors(rest) 1
super.computeInternalPhases 1
f.setAccessible(true) 2
currentCtx 2
isStable 1
searchMailbox(mailbox, 1
!context.tree.isInstanceOf[ExistentialTypeTree] 1
putSymbol(sym.alias) 1
opcode(Break, 1
f(t) 1
this.iterator.map 1
w.currentOp 6
tp1.isInstanceOf[ImplicitMethodType] 1
children 1
newsize 1
context.namedApplyBlockInfo 3
test5(argName 1
assert(even.sameElements(List(0, 1
@Column{val 1
(move.piece.corners. 1
nme.ADD 1
opcode(Newarr, 1
jcode.emitALOAD(javaType(kind)) 1
predicateForPut(key).getAndSet(Some(value)) 1
actor._supervisor 4
self.receive(f) 1
l.refsym 1
lastInsCount.get 1
putEntry(qual:Name) 1
sym.isPackageClass 1
module.initialize 1
PolyType(tparams, 4
context.unit.synthetics(tree.symbol) 1
putAnnotationBody(annot) 2
es.foldRight[(List[A], 1
test1(get(4), 1
(getInt(bp).toLong 1
explainTypes(tp1, 1
sb.append(ch).append(s).append(ch) 1
opcode(Conv_I2, 1
range: 1
tree.symbol 14
assert(args.length 4
VAL(sym) 1
isCornerMove(move) 1
overrideError() 8
overrideError(+ 2
baseFun1 1
!owner.isRefinementClass 1
(Import(expr, 1
DependencyFactory.time.request.set(() 1
loaders.openPackageModule(tree.symbol) 1
name.decode 1
singleType(sym.tpe.prefix, 1
title: 4
clone.typeOfThis 1
treeCopy.DefDef( 1
copy(pats 1
List(atPos(pos)(gen.mkTuple(actuals))) 1
update0(invalid 1
enterElems(c.outer) 1
((null, 1
log(); 10
opcode(Brfalse_S, 1
matchesType(sym.tpe, 1
CJUMP(thenCtx.bb, 1
withIn(new 1
key(tokenName(j).start) 1
assert(xs.length 1
KMP(src, 1
writeEntry(entries(i)) 1
enterSyms(stats) 1
cmd.postSetHook() 1
rotateLeft(xp) 2
stack.push(toTypeKind(method.info.resultType)); 1
tpsym.setInfo(alias) 1
elidable.ASSERTION, 1
s.toLowerCase() 1
setColor(xpp, 4
printRef(sym.name) 1
clazz.setInfo(ClassInfoType(parents, 1
opcode(Conv_U, 1
analyzer.NoContext.make(EmptyTree, 1
this.isDeferred 1
writeRef(sym.defaultGetter) 1
print(f.symbol.nameString); 1
def 3664
synchronized 9
petService 4
array(a) 1
(s.tpe.typeSymbol 1
nme.toDouble-> 1
clazz.info 1
assocs 2
List(byteparam, 1
Ident(sym.name) 1
writeNat(TYPEDtree) 1
f6(get(2.233), 1
writeNat(ep) 1
(doAllPhases 1
tvar 2
matrix.insert(move.piece.matrix.substitute(1, 1
validateVariance(result, 3
map: 3
(args.length 1
block.emit(STORE_LOCAL(inlinedLocals(param)), 1
writeRef(sym.info) 1
24 1
25 1
26 1
27 1
20 1
21 1
22 1
falseCtx.bb.close 1
TRACE(, 3
_zeroSlot.clear() 1
28 1
29 1
(alts 1
clazz.setInfo( 1
m.symbol.isPublic 1
getParts(tp.widen) 2
ByNameParamClass, 1
printEntry(entries(i)) 1
buf.put(annotations.length.toByte) 1
newTermName(name.toString() 3
((settings.Yrecursion.value 1
opcode(Ldobj, 1
parseParams(line.trim.split().toList) 1
token 63
k_onEnd() 4
pred(key).get 1
newInstructions 2
writeNat(SELECTFROMTYPEtree) 1
primitiveTypeMap 1
sb: 2
.setType(baseFunTransformed.tpe).setPos(baseFun.pos) 1
writeNat(CASEtree) 1
afterBlock.close; 1
A1() 1
EmptyTree 8
assert(nattr 1
super.transform(t 1
sym.addAnnotation(annot) 1
catching(exceptions: 3
iterNextValueField.get(iter).asInstanceOf[B] 1
'p' 2
ThreadFactory} 1
opcode(Leave, 1
pred(key).nonTxn.get 1
typed(Apply(gen.mkAttributedRef(definitions.Predef_error), 1
classes.clear 1
setterToGetter(name.subName(p 1
f(sb) 1
caze.head.copyToArray(tagArray(i), 1
List(ObjectClass.tpe, 1
!global.typer.infer.isWeaklyCompatible(tp2, 1
jScrollPane.addComponentListener 1
invalidate(file, 12
startBlock 2
print(); 16
System.exit(0) 1
opcode(Ldc_I4, 1
(default 1
scala.collection.immutable.List 1
TypeTree().setType(tpe) 1
setSingleOutput(checkDir(dst, 1
done 6
localChildDummy 1
log(+ 1
log() 5
!(tpe.isVolatile 1
enterInScope(vsym) 1
pathCache 1
treeCopy.Bind(tree, 1
List(Bind(nme.WILDCARD.toTypeName, 1
println(+undetparams) 1
tempLogFilePrinter.close() 1
part 2
ifLabellable(vdefs, 2
e.printStackTrace(writer) 1
}, 5
writeClassfileAnnotArg(asc._2) 1
setName() 6
b 40
opcode(Stelem_Ref, 1
bind(, 1
writeByte(0) 1
partMap.get(tsym) 1
jcode.emitPUSH(jclass.getType.asInstanceOf[JReferenceType]) 1
isOverriddenAccessor(other.getter(other.owner), 1
Bind(sym.name, 1
putTree(annot) 1
this.tag 1
isFullyDefined(tvar.constr.inst) 1
stack.push(BOXED(kind)) 1
currentRun.picklerPhase 1
.isEquals() 1
target.nonTxn(key) 1
sym.owner.owner.info 1
jcode.emitGETSTATIC(owner, 1
assert(deq 1
jcode.emitPUSH(fieldList.length) 1
require(fn.isType 1
opcode(Unaligned, 1
'8' 1
Thread.sleep(1000000) 1
@equivalentTo("drop(n).take(n 1
this.method.returnType 1
rtp1 2
blockWithQualifier(qual, 1
doTypeTraversal 1
println(a_f().print) 1
assertEquals(clienteRecuperado.pets.size, 1
println(x) 1
traverse(block); 1
Stands 1
queue.enqueue(12) 1
println(a.mkString()) 1
printer.printMethod(this) 1
STORE_LOCAL(inlinedThis) 1
WildcardType 1
putTree(rhs) 5
newClass(pos, 3
override 737
(UnApply(fun: 1
scalaFiles, 1
checkBoundsWithPos(pre, 2
printer.printClass(cls) 1
this.block 1
assert(out.contains(b)) 1
unescapedArgClasses(i) 2
contents.get(q) 1
posAssigner.pos 1
println(t9.f()) 1
(moduleFlags 1
gen(impl, 1
sym.isAliasType 1
(unescapedArgs, 1
executions. 1
mailbox.append(msg, 1
txt.implicitsEnabled 1
Template(parents, 1
implicitsCache 5
writeNat(EMPTYtree) 1
super.value_=(str) 1
(this.rawInfo 1
nextexid 1
context.error( 1
logReader.close() 2
clazz.newValue(member.pos, 1
varianceMismatch(hkarg, 1
isPlausiblySubType(tp.resultApprox, 1
tempLogFile.delete() 1
out.print() 6
state.stack 1
opcode(Stloc_S, 1
Apply(itree, 1
translate(padding 1
action(line) 1
polyType( 1
treeCopy.Import(tree, 1
self.symbol 4
search(context.implicitss, 1
rest.rows.head.insert2(List(NoPattern), 1
t.start 1
pred.creationInfo.removeOnCommit 6
jclass.getType()) 1
out.print(i 1
jcode.emitLAND() 1
locals.get(idx) 1
Entry(index, 1
traverse(elemtpt); 1
assert(target 2
rebindToType(mkEqualsRef(sType), 1
shutdown 2
context.nextEnclosing(_.tree.isInstanceOf[CaseDef]).pushTypeBounds(tparam) 2
abbrvTag(UnitClass) 1
printResults 1
Constant(shortValue) 1
commonParents 1
defaultGetter 1
typeSymbol, 1
gap 1
Assign(a.lhs, 1
println(t4.f(109)) 1
hasBooted 1
(true, 1
ctx.bb.emit(STORE_LOCAL(exception), 1
drawLine(0,a,b,0) 2
fun 2
key: 6
super.setInfo(tp) 1
trueCtx.bb.emit(CONSTANT(Constant(true)), 1
localTyper 7
setPrivateWithin(clazz, 1
addForwarder(jclass, 1
ChoiceSetting 1
NestUI.verbose(+errors) 1
assert(!one.isWideType, 1
ctx1.bb.emit(STORE_LOCAL(tmp)) 2
metaParser.parse(meta, 1
.setSymbol(NoSymbol.newImport(NoPosition).setFlag(SYNTHETIC).setInfo(ImportType(qual))) 1
ranges(e).sort({ 1
b.test1(b 1
putType(lo); 1
writeRef(value) 1
putEntry(to) 1
ctx1.bb.emit(CREATE_ARRAY(elemKind, 1
contCtx 1
this.target 1
global.Template(List(), 1
m(cell.x)(cell.y) 2
block.open 1
gen(b) 1
flags 6
y 1
entry 1
validateBaseTypes(currentOwner) 1
List(transform(cdef)) 1
initValueClasses() 1
p.lastInstruction 1
ExistentialType(until(end, 1
ArrayAnnotArg(until(end, 1
innerClasses.get(name) 1
vOpt 4
this.addActiveHandler(exh) 1
out.close(); 1
genComparisonOp(lhs, 1
ClassDef(sym, 1
threadFac, 1
(qualSym 1
queue.enqueue(60) 1
source 2
(cdef, 1
Log.info() 2
SeqLike.lastIndexOf(thisCollection, 1
that.CEE_opcode 1
Debug.info(this++maxSize) 2
code.emit(LOAD_LOCAL(code.getLocal(0, 1
log(.format(c.symbol, 1
assert(b.isCornerToSelf(new 1
caseClassCopyMeth(cdef) 1
clazz.newConstructor(NoPosition) 1
jcode.emitGETSTATIC(javaName(sym.owner), 1
pushLevel() 1
jmpTargets 3
internalFrame.size=(200,100) 1
s.bindings 1
back 4
cleanRecord(v.asInstanceOf[Record]) 1
executor.execute(iter.next().asInstanceOf[Runnable]) 1
if(arg 1
Literal(Constant(value)) 1
ctx1.bb.emit(THROW()); 1
isDefinedAtMethod.setInfo(MethodType(isDefinedAtMethod.newSyntheticValueParams(formals), 1
assert(b1.isLegalMove(m1)) 1
writeRef(tree.tpe) 42
jerseySelectorThread.setAlgorithmClassName(classOf[StaticStreamAlgorithm].getName) 1
n.m(x 1
writeAnnotation(annot) 2
assert(mlist(5) 3
constrs 1
loadCompiledFilesIntoClassLoader 1
mods) 1
assert(!blocks.contains(b)) 1
NullValue.decodeOption[B](underlying.get(key)) 2
LongClass 1
inlinedMethods.clear 1
isUniversalEqualityOp, 1
jcode.addExceptionHandler(p._1, 1
clazz.primaryConstructor.tpe.asSeenFrom(seltpe, 1
List(tree1) 1
New(tpt).setType(tpe) 1
println(a1.print) 1
(l, 1
assert(expectedType 1
parser(x) 1
.newValue(tree.symbol.pos, 1
writeRef(lhs) 1
subst 1
exitLinked() 2
script(logFile, 1
next.prev 1
clazz.setInfo(classInfo) 1
m.locals 3
assert(mlist.length 3
@RunWith(classOf[SpringJUnit4ClassRunner]) 3
Elem(pre,lab,sort(md),scp, 1
executor.setCorePoolSize(coreSize) 1
jclass.addNewField(ACC_PUBLIC 1
subMapIterNextValueField.get(iter).asInstanceOf[B] 1
code.emit(LSWITCH(tags, 1
})._1 1
groups.addToNewGroup(p) 1
c.variance 1
context.setContextPath() 2
kill.clear 1
opcode(Clt_Un, 1
(((buf(bp 1
Dynamic 1
files.iterator.flatMap 2
sym.name.startsWith(nme.copy 1
elseCtx.bb.emit(JUMP(contCtx.bb)) 1
elseCtx.bb.emit(JUMP(contCtx.bb), 1
validate(sym) 3
println(argName) 4
Seq.empty 1
usesNonPublics.get(callee) 1
f(el1, 2
println(u1.f.x) 1
scc.setPort(8080) 1
NOtpe 1
peep(h, 1
compiler.dependencyAnalysis.dependencies.dependentFiles(1, 1
opcode(Ldelem_Ref, 1
apply(functionType(List(), 1
rotateRight(sib) 1
SCOPE_ENTER(inlinedLocals(l)) 1
begins 1
clazz.initialize.linkedClassOfClass.info.members.toList.filter(_.hasFlag(IMPLICIT)) 1
.setPos(clazz.pos).setFlag(member.flags 1
pt.normalize 1
resultsMap(idx) 1
((tp1.isHigherKinded 1
webApplication.initiate(resourceConfig, 1
map((x:Int) 1
collectImplicits(scope.toList, 1
decodePair(tok.pred.getAndSet(IdentityPair(tok, 1
decodePair(prev) 6
gen.mkModuleAccessDef(factory, 1
assert(queue.last 8
putTree(block) 1
println(m.message) 1
processSingleFile(testFile) 1
annot.args 3
sym.referenced 1
hasMatchingSym(bc, 2
bodyCtx 2
point.predecessors 1
println(Fact2(10)().copy(y 1
ctx.bb.close 2
currentRun.advanceUnit 1
putTrees(stats) 2
assert(mlist.get(0) 1
expandAlias(mapOver(tp)) 1
checkTypeRef(t.subst(exparams, 1
setColor(sl, 2
Platform.collectGarbage 1
if((a0 1
writeNat((pflags 2
getSourceFile(f) 1
sym1.fullNameString 1
body 2
Some(rest) 1
ELSE 11
x.productElement(i) 1
drop(start) 1
optElem 1
availValue.get 1
localTyper.typed(callCode) 1
resBindings 1
33 1
32 1
31 1
30 1
35 1
34 1
treeCopy.Super(tree, 1
cls.tpe 1
jcode.emitT2T(javaType(src), 1
assert(ignore, 1
argContext.inSelfSuperCall 1
if(member.isAliasType) 1
private 842
NestUI.verbose(+t) 1
namer 1
(value 2
remoteClass 2
doRemove(k) 2
opcode(Ble_S, 1
(name 3
targ.baseType(SeqClass) 1
STORE_THIS(toTypeKind(ctx1.clazz.symbol.tpe)).setPos(arg.head.pos) 1
@SerialVersionUID(0 1
includeScrut: 1
existentials 1
isWithinBounds(NoPrefix, 1
opcode(Jmp, 1
buf.readIndex 5
rotateRight(xpp) 1
(arg 1
resTpe 1
name, 4
patchNat(startpos, 1
s.stack 1
typedPos(pos)(tree) 1
newSyntheticValueParamss(List(argtypes)).head 1
name: 2
(isModule 1
NestUI.verbose(+resFile) 1
f 14
actor._mailbox 4
Function(List(), 1
POP_size(POP_SPECIAL) 1
pending(nw.init) 1
assert(alllt75.contains(50)) 1
test() 8
TypeRef(processInner(pre.widen), 1
x.left 1
functionType(params 1
assert(sig(index) 2
resetFlag(DIRTYSUCCS) 1
native 1
validateNoThrow(res) 1
em.get.persist(new 1
sym.setInfo(MethodType(List(), 1
test2(y 1
test2(x 1
name.startsWith() 1
writeRef(hi) 1
CALL_METHOD(meth, 1
bcs 2
List(applyMethodDef(mkUnchecked(fun.body)), 1
base.member(from) 1
AnyRefClass, 1
fromLines(source.iterator) 1
pickle.putSymbol(sym) 1
addLocals(caller, 1
assert(idx 1
scheduler.onTerminate(this) 1
List.map2(tps, 1
Apply(meth, 1
println(b1.printB) 1
restpe 2
errors.toList 1
ls 1
println(a2.print) 1
sym.setInfo(arrayToRepeated(sym.info)) 1
Throw(New(TypeTree(sym.tpe), 1
context.ambiguousError(tree.pos, 2
testTraversables 1
opcode(Ldind_I, 1
polyType(typer.reenterTypeParams(tparams), 1
statics.setInfo(staticInfo) 1
existentialAbstraction(undef1, 1
privateWithin 4
typer.infer.inferMethodAlternative(fun, 1
formal.instantiateTypeParams(tparams, 1
ss.filter() 2
(cases 2
typed(lazyDef) 1
context.setWar() 2
res 51
rep 1
bb.emit(SWITCH(tags, 1
List(outURL, 1
ret 5
assert(foddgt25 1
annot.atp.typeSymbol.isNonBottomSubClass(definitions.ClassfileAnnotationClass) 1
println(f.symbol.info.toString()); 1
opcode(Rem, 1
assert(tree.symbol 2
toTypeKind(t) 2
ctx.bb.emit(CONSTANT(Constant(null))) 1
owner.isEmptyPackageClass 1
in.skip(6); 1
(ValDef(mods, 1
(res1.toList, 1
act() 4
afterCommit(callback, 1
(litMap, 1
tp.complete(this) 1
suffix 1
(tree: 1
classFile.attribute().map(_.byteCode) 1
treeCopy.Block(tree, 1
util.Statistics.enabled 1
_elems(_count) 1
totalCounts 1
User.sitemap 1
flipped.spin) 1
nattr 1
workers(0).reset 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(BOOL), 1
doArgs(args) 1
INLINE_length(INLINE_VARIABLE) 1
INLINE_length(INLINE_R) 1
Some(pair._2) 4
event.getCause.printStackTrace 1
num 2
isPlausiblyCompatible(mt.resultType, 1
contents.filter 1
getParts(pre) 1
Result(r) 1
rotateLeft(xpp) 1
setInfo(ErrorType) 1
putAnnotation(annInfo) 1
owner.info.decls 2
map(_.toInt 1
jcode.emitINVOKEVIRTUAL(dynamicOwner, 1
opcode(Calli, 1
ctx1.method.recursive 1
'|' 1
typer.typed(mkCast(tree, 1
gen.mkCached(cvar, 1
assertTrue(numeroDePetsAntesDaExclusao 1
((((to 1
ctx1.bb.emit(CALL_PRIMITIVE(Shift(LSL, 1
param.symbol 2
} 5725
vparam.symbol 1
tpe.parents.last.typeSymbol 1
printRefs(annots) 2
gc() 1
setter 1
ModuleBE 1
putEntry(privateWithin) 1
with 44
patchNat(startpos 1
infoString(member)++msg+ 1
ModuleBI 1
genConversion(l, 1
ImportSelector(from, 1
Constant(doubleValue) 1
((hasFlag(notPRIVATE 1
traceCategory(, 2
emitEntry(name, 1
filters. 1
informTime(globalPhase.description, 1
opcode(Conv_Ovf_U8, 1
definitions.getModule(name.subName(0, 1
writeRefs(params) 1
for(row 1
assert(-1 1
opcode(Conv_Ovf_U_Un, 1
!message.isInstanceOf[Double] 2
isAsSpecific(PolyType(tparams, 1
writeRef(block) 1
clazz.tpe 2
abbrvTag(clazz) 1
(res.head, 2
condOpt(other) 2
context.error(pos, 2
phasec 1
(Template(parents, 1
List(ValDef(_, 1
test7() 1
UNIT 2
phase1 1
cliente.nome 3
boxedModule(clazz) 1
attributes 2
Some(_supervisor.get.uuid) 2
otherwise 1
ctx1.bb.emit(MONITOR_EXIT()) 1
locale, 1
.setFlag(PRIVATE 3
tp.paramTypes.length 1
bytes(writeIndex) 1
fieldList 1
sym.setInfo(selftpe) 1
clazz.setFlag(sflags) 1
fun(copyStrategy(data)) 1
mot(tp) 1
start() 1
accflags 1
currentLabel 2
PatternMatch(scrut, 1
at(readNat(), 5
isCompatibleArgs(argtpes, 1
assert 10
writeByte(((x 1
f(thiz,that.asInstanceOf[Tree]) 1
!isAdjacentToSelf(move.cells, 1
dispatcher.unregisterHandler(this) 2
clearTransaction 6
tp+); 1
value 14
refClass(clazz) 1
iter.next 1
dup.in 1
yss 1
nme.UNARY_! 1
TypeRef(_, 2
atPhase(currentRun.erasurePhase) 2
classes.valuesIterator 2
ObjectClass, 3
tp.isInstanceOf[MethodType] 1
owner.newTypeParameter(NoPosition, 1
sb.append('') 2
STORE_LOCAL(eqEqTempLocal) 2
tl.len 1
(sym 13
) 117
printRef(selfsym) 1
ExistentialTypeTree(tpt, 1
infer 2
fixAfterDeletion(x) 1
this.token 1
writer.print(msg) 1
addModuleMethod(ByteClass, 2
cpool.addClass( 1
cs.toList 1
opcode(Ldc_I4_M1, 1
.asInstanceOf[CometSupport[_ 1
Any_equals 1
jcode.emitINVOKESTATIC(BoxesRunTime, 2
sourceModule.flags 1
s.rollbackCause 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(SHORT), 1
List(qual, 1
setColor(x, 1
validateVariance(tp, 1
test5 1
Throw( 1
.setFlag(OVERLOADED) 1
reportSyntaxError( 1
writeNat(TREtree) 1
normalize(restpe) 1
opcode(Ldc_R4, 1
test8(x 1
field 1
putTrees(whereClauses) 1
jcode.emitPUSH(fi) 1
println(test10()) 1
((origin1 1
module.setInfo(mclass.tpe) 1
context.error(tree.pos, 4
elapsed 1
BooleanClass 1
sym.pos, 2
classAndNamerOfModule(module) 1
success 2
writeByte((x 1
(recursionTable 1
TREE 43
assert(!(result 1
!(syms1 1
ctx1.exitScope 1
mlist(0) 2
!other.isDeferred 1
scala.util.JenkinsHash.hashSeq(x.productPrefix.toSeq 1
testMultiplePlayers 1
move(p, 1
printTypeRef(); 6
tmp 6
content(changeQuantity(product, 1
putTrees(tparams) 3
parseAnnotations(attrLen) 1
buf.append(sep); 1
List.forall2(args, 1
linearizer.linearize(method).foreach(b 3
traverse(selector); 1
v(findBit(METHOD_PKL 1
getAnnotation(cls).isDefined 1
jcode.emitDUP() 2
all.map(_.owner).mkString() 1
k.react(_3(e, 1
jclass.addAttribute(getMarkerAttr(jclass)) 1
tree.symbol.moduleClass.setInfo(namerOf(tree.symbol).moduleClassTypeCompleter((tree))) 1
| 8
callee.code.blocks.foreach 1
ctx1.scope 1
})(typeCompleter(param)) 1
bindings.retain 1
addendum 1
opcode(Endfilter, 1
event.getRequest.setAttribute(ReflectorServletProcessor.ATMOSPHERE_HANDLER, 1
ctx1.bb.emit(CALL_PRIMITIVE(Arithmetic(ADD, 1
block.clear 1
atOwner(tree.symbol) 11
NestUI.verbose(+argsFile) 2
m.code.blocks.foreach 3
terminal.reset 1
handlerCount 3
test5((argName 1
.setInfo(tpe).setFlag(Flags.MUTABLE) 1
treeCopy.Template(tree, 3
first1: 1
children: 1
FloatClass, 1
xs.slice(start, 1
buf 5
j 8
Apply(Apply(Select(gen.mkAttributedRef(ArrayModule), 1
putTrees(parents) 1
48 1
47 1
ctx1.bb.emit(SWITCH(tags.reverse 1
42 1
rhs1 1
assert(false, 7
rhs) 2
Constant(c.value 1
awaitWith(partFuns) 1
fields(0) 1
sym.setInfo(if 1
printSymbolRef() 2
move.cells.map((cell: 1
queue.enqueue(20) 1
nme.JAVA_REPEATED_PARAM_CLASS_NAME, 1
writeByte(z.toInt) 1
argPos(index) 6
addGenericSignature(jclass, 1
Delegate_scalaCallerTargets 1
sourceModule 3
System.setErr(oldStdErr) 3
TypeBounds(NothingClass.tpe, 1
withInConstructorFlag(INCONSTRUCTOR) 1
caseClassOfModuleClass 1
txt.enclMethod 1
stats1 4
VariableRule(binding, 1
.setType(NoType)) 1
symbol.owner.hasFlag(Flags.INTERFACE) 1
rotateRight(x) 1
patches 2
(for 4
ctx1.bb.emit(LOAD_ARRAY_ITEM(INT), 1
Actor.timer.schedule(onTimeout.get, 2
jcode.emitIFNULL(labels(failure)) 1
instructionList 6
ownerNamer.getOrElse 1
(missingParams, 1
(tparams 3
(LabelDef(name, 1
r.asInstanceOf[T] 1
println 3
emitJavaAnnotations(jmember.getConstantPool, 1
ctx1.bb.emit(STORE_ARRAY_ITEM(DOUBLE), 1
NestUI.verbose(+testFile) 1
cbf3: 1
POP_size(POP_I_1) 1
ImportType(expr1) 1
Cell(cell.x 1
(TypeDef(mods, 1
hasFlag(SYNTHETIC) 1
jcode.emitINVOKESPECIAL(, 1
+sourcepath 1
treeCopy.Apply(tree, 3
applyMethod.setInfo(MethodType(applyMethod.newSyntheticValueParams(formals), 1
ModuleBL, 1
decodePair(freshPred.getAndSet((freshToken, 2
treeCopy.LabelDef(tree, 1
ctx2.bb.emit(JUMP(afterCtx.bb)) 1
LITERAL 1
t.setDaemon(daemon) 1
(move.x 1
(move.y 1
digits 1
sb.append(xc.head) 1
cs.classFile 1
changed 9
this.cunit 1
println(agent 2
writeRef(thistpe); 1
changes 1
anonClass 1
enterLocalElems(e.next) 1
assert(queue.tail.isEmpty) 1
.setException(e.getCause.getClass.getName 1
jmethod 1
to 3
reorderArgsInv(formals, 1
POP_size(POP_REF_I_REF) 1
tree.pos, 4
root.info.member(selector) 1
annotations 2
writeNat(MODULEtree) 1
indexOf(local) 1
info.getBinding(l) 1
resKind.toString() 2
accessed.expandName(base) 1
assert(!three.isWideType, 1
jmember, 1
atOwner(tree.symbol.moduleClass) 4
resourceConfig.getClasses.addAll(configurators.flatMap(_.getComponentInterfaces).asJava) 1
inform( 1
descr: 2
List(CaseDef(Ident(nme.WILDCARD), 1
tparam 9
ARRAY(elem) 1
jcode.emitIAND() 2
notify() 1
getModule2(), 1
opcode(Ldarg_S, 1
testFirstMove 1
end 6
uninstantiated.toList 1
if(!concrOvers.isEmpty) 1
require(rows.size 1
jcode.emitLOAD(indexOf(local), 1
DefDef( 1
coreSize 1
opcode(Conv_I8, 1
freshToken 12
mapOver(rawTypeRef(NoPrefix, 1
name.toString.startsWith(nme.INTERPRETER_LINE_PREFIX) 1
opcode(Brfalse, 1
ctx.bb.emit(STORE_LOCAL(exception)); 1
traverse(rhs) 1
decodePairAndPin(tok, 8
widen(underlying) 1
getIdentRest 3
argtpes 1
x.right 1
writer) 4
c.diagnostic 1
dispatcher.registerHandler(this, 2
resetFlag 1
putTree(elem) 1
writeRef(annot.atp) 1
in.next; 2
writeNat(LITERALtree) 1
(hasFlag(LIFTED) 1
sym.owner.tpe.parents.exists 1
txn.afterCommit(deferredCleanup(key, 3
firstInsCount.get 1
private[TPairRef] 1
cls 2
String_+ 1
ctx1.bb.emit(STORE_ARRAY_ITEM(elmKind)) 1
txt._undetparams 1
.setFlag(PROTECTED) 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(LONG)), 1
Elem(pre, 1
anonClass.info.decls 2
underlying.size() 2
treeCopy.UnApply(tree, 2
javaNames(m.params 1
scope: 1
List.forall2(tparams1, 2
getScalaSig(clazz).map(ScalaSigAttributeParsers.parse) 1
sched 1
unit.deprecationWarning(pos, 1
+uninstantiated+ 1
async.start() 2
previousArgss: 1
))))))))) 1
v(findBit(FINAL_PKL 1
(x:Int) 1
assert(!b2.isLegalMove(new 2
BufferedInputStream, 1
assert(sum 2
s.toShort 1
List.map2(argtpes, 1
nme.ASR 1
STM.atomic(unbind.higher(key)(_)) 1
cook(sym2) 1
selftpe 1
checkKindBoundsHK(tparamsHO, 1
FileInputStream, 1
adjustTypeArgs(tparams, 1
assert(formals.last.typeSymbol 1
informProgress( 4
sym.tpe 1
REF(methodSym) 1
opcode(Box, 1
.setInfo(OverloadedType(pre, 1
intersectionIsEmpty(member.allOverriddenSymbols, 1
+analyzer.varNotice(decl)) 1
addInnerClasses(jclass) 1
top 2
backwardAnalysis(blockTransfer) 1
PieceTest.run 1
!message.isInstanceOf[scala.collection.immutable.Set[_]] 2
println(m.getAnnotations().toList) 1
staticModule.setInfo(statics.tpe) 1
decodePair(freshPred.nonTxn.getAndSet(freshToken, 2
drawLine(0,0,0,size) 2
buf.append().append(successors) 1
opcode(Ldloc_0, 1
sym.isModuleClass 3
formals.init 1
putEntry(sym.name) 1
treeCopy.TypeApply(tree, 1
expr 2
registerContext(c.asInstanceOf[analyzer.Context]) 1
classes 2
checkAllOverrides(currentOwner) 1
in.getFieldValue(r, 1
varianceValidator.traverse(result) 1
ctx1.bb.emit(CALL_METHOD(tree.symbol, 1
.setIsOneWay(false) 2
opcode(Stind_I, 1
assert(scrut.isDefined) 1
accessError(+itype+ 1
ctx1.bb.emit(STORE_ARRAY_ITEM(LONG), 1
context.reportAmbiguousErrors 2
curRunId 1
NestUI.verbose(e+) 1
enterInScope(pkg, 1
((flags 1
sigToType(sym, 1
dropSingletonType(info.bounds.hi) 1
ClassInfoType(until(end, 1
par.right 2
t.setPos(pos) 1
ctx.method.addParam(lv) 1
pkg.moduleClass.setInfo(new 1
newS.name.length==1 1
addAnnotations(mirrorMethod, 1
OverloadedType(AntiPolyType(pre, 1
validTo 7
isScalaRaw 2
pkg 2
ctx1.bb.emit(CALL_PRIMITIVE(Arithmetic(DIV, 1
occ 1
rebindToType(equalsCheck) 1
_sampler.start 1
opcode(Mul, 1
.setInfo(bounds) 1
b.toList 8
UnitClass, 1
oct 2
rotateRight(xp) 2
agent(_ 3
genLoad(expr, 1
pop: 1
incrementTransaction 2
.setFlag(flags) 1
doPut(k, 2
method 2
assert(queue.dequeueAll(_ 2
UnitClass 1
toInterface(lhs.symbol.owner.tpe).typeSymbol, 1
out.writeObject(m) 1
ctx1.cleanups 1
namer.enterSyntheticSym(applyMethod) 1
((majorVersion 1
owner.newLabel(scrut.pos, 1
+LATEST_LIB+ 1
in.skip(2); 2
inferImplicit(tree, 1
opcode(Stsfld, 1
require(nonEmpty, 3
f.file.container.name 1
currentClass.info.decls 2
parent.right 1
bb.emit(CZJUMP(otherBlock, 1
(take(n), 1
resultPt 3
ClassDef(Modifiers(sym.flags), 1
println(foo(b 1
assert(ctor.isClassConstructor, 1
l.parent 1
assert(rtpe.typeSymbol 1
ranges 3
f.getName.endsWith()) 1
Any_asInstanceOf 1
sig(index) 1
squeezedBlockPVs(squeezePVs, 1
.setFlag(mods.flags)) 1
(other 3
jcode.emitALOAD_0() 3
label.anchor(ctx1.bb) 1
opcode(Ldelem_I1, 1
inline(m, 1
writeRef(tpt) 6
logError( 1
opcode(Stelem_I8, 1
TypeApply( 2
ctx1.bb.emit(CREATE_ARRAY(elmKind, 1
!i.hasNext 1
pkgOwner 1
Worker.synchronized 2
writeRef(elsep) 1
catch 8
scope.locals 1
SingletonTypeTree(ref).setType(tpe) 1
enterNewMethod(tree, 1
outputDirs 1
collection.Map(primitiveTypeMap.toList 1
this.packg 2
tpt.tpe 2
value.charAt(i) 1
n 8
assert(b2.isAdjacentToSelf(List(Cell(0,1)), 1
POP_size(POP_I_I_I) 1
rebindTo(Typed(WILD(tpe), 1
(tps1.length 1
classAndNamerOfModule(m) 1
clinit.emitNEW(cls.getName()) 1
req.setCharacterEncoding() 1
sym.setInfo(tp) 1
Actor.reactWithin(t) 1
Log.info(stmt 1
this.inConstructorFlag 2
e.covered 1
buf.append(end) 1
millis 2
NullValue.decodeOption(pred(key).getAndSet(null)) 1
showDef(newTermName(settings.Xshowcls.value), 1
boxMethod(clazz) 1
setSymbol(symbol). 11
chkFile 2
callAsReflective(mparams 1
txt.returnsSeen 1
c.outer 1
assert(lazyDefSym 1
addStaticMethodToClass(, 3
instrs(i) 1
TestThing.buildView(mockRequest, 21
this0.original.equalsStructure0(that0.original)(f) 1
(owner.isImplClass 1
tparams 4
.getConstructor(Array(classOf[AtmosphereConfig]): 1
addLateInterfaceMembers(mc) 1
(2,2)))) 1
occupiedPositions.foreach 1
invalidImplicits: 1
code.emit(STORE_FIELD(field, 2
ctx.bb.emit(DROP(from), 1
ctx.bb.emit(DROP(from)) 2
traverseTrees(tparams); 1
pscope: 2
tok.pred.nonTxn.transform(liftF(tok, 2
assert(clazz.isInstanceOf[ModuleClassSymbol], 1
Apply(TypeTree(consType), 1
a.react(this) 1
51 1
atPos(vd.pos.focus) 1
txt.unit 1
newSyntheticValueParams(List(argtype)).head 1
opcode(Br_S, 1
checkNoAbstractDecls(parents.head.typeSymbol) 1
dependencies.dependentFiles(1, 1
this(settings, 2
newParameterlessMethod(clazz, 10
Actor.react 1
argtpes: 2
INLINE_length(INLINE_SIGNATURE) 1
cnt 1
LOAD_LOCAL(inlinedLocals(l)) 1
renamed 1
in(e.startBlock) 2
cnd 2
if(!sym.isAbstractType) 1
.setIsSuccessful(false) 3
flipped.rotateLeft, 1
if(f(el1, 2
+restpe+ 1
opcode(Ret, 1
ctx1.bb.emit(UNBOX(boxType), 1
assert(min 1
shouldExit 2
freshLocal(maxLocals 1
tpsym 1
primitive 2
global.abort( 3
assert(ctx 1
treeCopy.Match(tree, 1
NestUI.verbose(+e) 2
Set(new 1
stack.push(ConcatClass) 1
uninstantiated 1
opcode(Ldc_R8, 1
genLoad(This(ctx.clazz.symbol), 1
swriter.toString 1
PolyType( 1
head 1
enterElems(this) 1
b.sizeHint(length 1
writeNat(IMPORTtree) 1
terminated() 1
classNameToSymbol(externalName) 1
attr 1
versions 3
m.owner 1
Result(JOptionPane.showConfirmDialog(nullPeer(parent), 1
@aliasOf("filter") 1
manifestOfType(tp0.deconst, 1
assert(idxKind 1
Apply(Ident(sym), 1
stack.pop(method.info.paramTypes.length) 1
agent((x: 6
intersectionType(List(tp1, 1
warning() 3
nb 4
vparamss.exists(_.exists(_.mods 1
}).start 1
Annotated(New(TypeTree(UncheckedClass.tpe), 1
errorMissingRequirement( 1
writeRefs(whereClauses) 1
assert((tpe 1
opcode(Ldloc_2, 1
writeRefs(body) 1
withPostSetHook(() 1
addLocals(m, 1
array(idx).asInstanceOf[A] 2
println(res 1
jcode.emitPUSH(-1) 1
NullValue.decodeOption(pred(key).get) 2
initialize.owner.info.decl(modname).suchThat(_.isModule) 1
typesCompatible(argtpes0) 1
opcode(Ldind_R8, 1
opcode(Arglist, 1
row 1
ARRAY(ArrayN(elem, 1
typedPos(tree.pos)(Apply(staticRef(target), 1
assert(all.size 2
@Action(block 1
Constant(floatValue) 1
jcode.emitPUTSTATIC(jclass.getName(), 1
typeRef(sym.typeConstructor.prefix, 3
Props.get())) 1
block.emit(STORE_LOCAL(inlinedThis), 1
fileCnt 2
mixinOverrideErrors.toList 1
Console.println() 3
level 1
member.cloneSymbol(clazz) 2
addForwarders(mirrorClass, 1
java.util.Arrays.sort( 1
emitClass(jclass, 1
agent(List()) 1
toPats(_extractBindings(p.boundTree, 1
port 1
Predef.error() 1
localChildDummy.setInfo(ClassInfoType(List(sym.tpe), 1
in.skip(2 2
DeBruijnIndex(readNat(), 1
pet.nome 3
exit(key, 8
NestUI.failure() 1
groups.nonSingletons 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(INT)), 1
logFile.flush() 1
slot.add(elem) 1
decodePair(tok.pred.nonTxn.getAndSet(IdentityPair(tok, 1
returnFound 2
(phaseDescriptors.length-1) 1
printBody(entry); 1
'z' 2
Super(qual, 1
opcode(Call, 1
('a' 1
checkAnnotations(m.symbol.annotations.map(a 1
(!oldS.isSourceMethod 1
pred 1
toInterfaceMap( 1
boolBinOps 1
IntClass 1
handler 3
jcode.emitRETURN(javaType(kind)) 1
ByteClass 1
msg 2
buf.put('I'.toByte) 1
prev 7
inferMethodAlternative(tree, 1
pres 1
meth.addAnnotation(ainfo) 1
code.emit(LOAD_FIELD(field, 2
peer.setUndecorated(true) 1
assert(member.isTerm 1
REFERENCE(sym) 3
deleteNode(s) 1
jcode.emitIF_ICMP(conds(negate(cond)), 1
predicates.remove(k, 3
assert(blocks.forall(p 1
assert(isInputValid(default)) 1
assert(this0.productArity 1
vsym.setLazyAccessor(getter) 1
this(module.owner, 1
opcode(Div, 1
List.forall2( 1
newDefs 3
dropped 1
swt() 2
List(stat) 1
List(stat, 1
atPhase(currentRun.typerPhase) 1
1 2
addModuleMethod(CharClass, 2
page(start) 1
rawTypeRef(pre, 1
clone 3
List(sym1, 1
@Test 8
isStrictlyMoreSpecific(followApply(pre.memberType(sym1)), 1
succeeded 26
isIrrefutable(pat1, 1
sb.append() 2
setIn(new 1
sb.append(' 1
jcode.emitMONITOREXIT() 1
gen.clear 1
treeCopy.DocDef(tree, 1
treeCopy.TypeDef(tree, 1
phase.id 1
outerName 1
BooleanClass, 1
thissym 2
forceRollback(CallbackExceptionCause(res, 2
lvTab.putShort(idx) 1
@conversion 1
name 11
@After 2
annot.args.isEmpty) 1
isImplementedStatically(sym) 2
ptvars 3
opcode(Conv_I4, 1
loop(ys.tail) 2
TRACE(.format(bx, 1
this.bigDecimal.divideAndRemainder(that.bigDecimal, 1
assert(closed, 4
assert(closed) 5
exc.printStackTrace() 2
(ArrayValue(elemtpt, 1
block.emit(JUMP(inlinedBlock(callee.code.startBlock)), 1
structResType.typeSymbol 1
ScalaPackageClass, 3
p.set(after) 3
foundReqMsg(PolyType(undetparams, 1
jcode.emitDCONST_0(); 1
println(bn2(b 1
JClass.NO_INTERFACES, 2
mkFail(zipped.tail 1
defGetter 1
dispatcher 2
}); 2
opcode(Callvirt, 1
})) 8
method.code.blocks 1
explainName(sym2) 1
m.normalize 1
inlinedMethods(inc.symbol) 1
List(List(Ident(nonLocalReturnKey(meth)), 1
ctx1.bb.emit(CALL_PRIMITIVE(Arithmetic(MUL, 1
treeCopy.Select(tree, 1
ctx1.enterSynchronized(monitor) 1
NullValue.decodeOption(pred(key).getAndSet(NullValue.encode(value))) 1
c.imports 1
exit(k, 9
arr.array, 1
sameTypes(args1, 1
pt.typeSymbol 1
opcode(Stelem_R8, 1
prependElem(elem) 1
assert(from 1
(Function(vparams, 1
require 2
(tag 1
txn.afterCompletion(t 14
r 5
return; 3
thisTypeCache 1
this.method.exh 1
(IdentityPair(tok, 1
AnyValClass, 1
pre 1
private[TIdentityPairRef] 1
s.test1(a 1
setType(tp) 1
arr(i) 1
context.openImplicits 3
overrideAccessError() 1
instantiate(tvar.constr.inst) 2
x.toByte, 1
name.subName(name.lastPos('.') 1
((tok, 1
test7({m 1
stopTime 1
later 1
coll2: 1
(hasOverridingAccessor(bcs.head) 1
mkCheckedAccessor(clazz, 1
clazz.owner.info.decls 1
stripComments: 2
(tag: 1
printAllUnits() 1
printFile(pickle, 1
rt.atOwner 1
println(t4.f(a 1
assert(method.code 1
substParam( 1
traverseTrees(trees) 1
nme.AND 1
gen.mkAttributedIdent(self) 1
packSym 3
singleType(owner.thisType, 1
alt.name 1
stack.pop; 2
stack.pop3 1
stack.pop2 7
writeRef(mix) 1
result.asInstanceOf[b] 1
!message.isInstanceOf[Tuple5[_,_,_,_,_]] 2
returning[Tree](resetTraverser 1
opcode(Conv_Ovf_I2_Un, 1
namesOK 3
println(t7.h(new 2
atPhase 2
Cell(2, 3
opcode(Ldind_U1, 1
Modifiers(mods.flags, 1
ms(this) 1
explainTypes(self.memberInfo(member), 1
treeCopy.Block(theRhs, 1
(REF(boxMethod(IntClass)) 1
newTypeName(rawname+) 1
normalize(tp) 1
isIdentStart(c) 1
cliente.pets.add(new 3
super.complete(sym) 1
TRACE(.format(freeVars, 1
bb.replaceInstruction(i, 15
advance() 42
require(!fn.isType 1
writeRef(finalizer) 1
txt.openImplicits 1
testAddElement 1
continuation 2
logWriter.print(prompt) 1
pos 3
Block( 1
(ModuleDef(mods, 1
iterations 2
Class.forName(args(args.length 1
iface.owner.info 1
forceRollback(VetoingWriteResourceCause(res)) 1
writeRef(guard) 1
sourceFile) 1
nref 1
Full(() 2
jcode.emitPUSH(javaType(kind).asInstanceOf[JReferenceType]); 1
contents.get((column, 1
assert(lst.last 1
case 3599
unit.error(base.pos, 1
typeParamsString 4
icodes.icode(receiver).get.lookupMethod(concreteMethod) 1
cast 2
this(sep 1
messageType: 4
scalaObject.map(res.+=:(_)) 1
innerModule.moduleClass.setInfo(global.loaders.moduleClassLoader) 1
when(mockRequest.getMethod).thenReturn() 20
if(!acc 2
+(tvars 1
assert(queue.length 32
(delegateParams.map(pt 1
ArrayValue(TypeTree(elemtp), 1
sym.isValueParameter 1
foundReqMsg(argtpe.deconst.instantiateTypeParams(tparams, 1
push(methodList) 1
If(cond, 1
hasExactlyNumParams(t, 1
(fs 1
tp.instantiateTypeParams(tparams, 1
NestUI.outline(, 1
status 2
assert(piece.corners 1
!message.isInstanceOf[Tuple7[_,_,_,_,_,_,_]] 2
Static(true) 1
method.exh.foreach 1
text.foldLeft(s)((s, 1
squeezedBlock(List(handleOuter(unapplyResult.valDef)), 1
opcode(Ldc_I8, 1
assertTrue(clienteService.listarTodos().size 1
typed(ValDef(vsym, 1
infos.validFrom 1
If 2
context.unit.warning(pos, 1
if(acc 2
map.immediateCleanup(key, 3
buf.put('c'.toByte) 1
applicable(best) 1
kill 1
update(files) 1
assert(tree.symbol.isTerm, 1
verify(mockRequest).setAttribute(, 1
foundReqMsg(restpe, 1
ctx1.bb.emit(LOAD_FIELD(sym, 1
LOAD_LOCAL(v) 2
assert(b.isCornerMove(player1upperLeftMove)) 1
.setFlag(this.rawflags).setAnnotations(this.annotations) 1
\/ 1
crtPC 1
typeErrorTree(tree, 2
treeCopy.AssignOrNamedArg(tree, 1
logs.get.file.toDelete 1
localTyper.typed(treeCopy.ApplyDynamic(ad, 1
assertNonCyclic(tvar) 1
scheduler 1
clazz.isArray 1
varsInBlock.clear 1
Cell(-1, 1
context.make(tree, 1
assert(member1.alias 1
cell.x 3
cell.y 5
atPhase(localPhase)(localPhase.applyPhase(unit)) 1
occ(x) 1
qualifier.tpe.typeSymbol 1
fieldName, 1
internalFrame.pack 1
Any_toString 1
rawpos 2
assert(queue.size 7
MethodType(args1, 1
(!sym.hasFlag(LOCAL) 1
putChar(in.ch) 17
this.method.native 1
putConstant(const) 1
opcode(Ldind_I8, 1
definitions.getMember(definitions.EmptyPackageClass, 1
enterOwnInnerClasses 1
addModuleMethod(DoubleClass, 6
ctx.Try( 1
map.get(x) 1
ftpe1.isError 1
TRY 1
opcode(Rem_Un, 1
assert(!board.isSolveable) 1
opcode(Conv_Ovf_U8_Un, 1
_ 1
move.cell._1, 1
parseByteCode() 1
op 1
createdLogFiles 1
manifestOfType(arg, 2
e.getValue.get 2
mkTypeBounds(readTypeRef(), 1
c.depth 1
assert(cells 1
((CLASSPATH 1
@Lob 1
recursionTable 4
clazz.info.findMember(member.name, 1
service(event.getRequest, 1
ctx2.bb.emit(CALL_METHOD(equalsMethod, 1
.setPos(clazz.pos) 1
this.sym 1
Some(DROP(REFERENCE(definitions.ObjectClass)) 1
referenceCount 2
BooleanClass.tpe)) 1
unlock() 3
super.value_=(choice) 1
checkNoConflict(FINAL, 1
clazz.typeOfThis 2
settings.classpath.value, 1
println(new 1
row.guard.isEmpty 1
definitions.getMember(definitions.getClass().linkedModuleOfClass, 1
opcode(Conv_Ovf_U1_Un, 1
validateVariance(pre, 2
require(_labelSym 1
label.addCallingInstruction(this); 1
queue.enqueue(9) 1
jclass.addNewField(flags 1
newPolyMethodCon(owner, 1
PUSH_size(PUSH_1) 1
opcode(Bne_Un_S, 1
status.get(path) 1
@serializable 9
ctx1.bb.emit(STORE_LOCAL(l), 1
sym.flags 1
definitions(src) 1
init 5
assert(((-100).toByte: 1
.setInfo(forType) 1
STM.atomic(unbind.bind(_).toArray).elements 1
setPrivateWithin(tree, 6
classPath.findClass(name) 1
loop(action) 1
setter.name 1
atPhase(currentRun.typerPhase)(getMember(sym, 1
pt: 1
cls.tpe.parents.exists 2
ctx1.bb.enterIgnoreMode 2
ctx1.bb 1
newMethod(pos, 2
private[Symbols] 1
require(sym 1
NestUI.verbose(io.File(logFile).slurp()) 1
v(findBit(ABSTRACT_PKL 1
clazz.info.decls 2
owner.info.decl(nme.interfaceName(name)) 1
sum 18
putEntry(name) 8
+lenientPt) 1
NoType 2
newInits.clear 1
treeCopy.Function(tree, 1
java.util.Arrays.fill(_elems, 1
definitions.getClass(name) 3
tags 2
Constant(in.getDouble(start 1
assert(!(base.isTrait 1
blockWithoutQualifier(Some(qual.duplicate)) 1
Some(Nil) 3
breakable 2
handlers 4
jcode.emitNEW(className) 1
evdefs 1
ctx1.bb.emit(STORE_LOCAL(local), 1
arr(pos) 2
MainFrameTest.main(Array[String]()) 1
ctx1.scope.add(local) 1
options 1
scheduler.managedBlock(blocker) 2
JMethodType.ARGLESS_VOID_FUNCTION) 2
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(FLOAT)), 1
println(t7.f(1)) 1
.setIsOneWay(true) 2
errorTree(tree, 4
senders 13
buf.append( 2
DependencyFactory.time.session.set(() 1
line.elements.zipWithIndex.foreach 1
cook(this) 1
proceed 2
(REF(arrayUpdateMethod) 1
assert(forMSIL, 1
sometail 1
NullValue.decodeOption(prev) 4
LONG_TAG 1
(REF(arrayApplyMethod) 1
argtpes0: 2
writeRef(asc._1) 1
(in.ch 1
v 3
}).asInstanceOf[Class[Worker]] 1
(!ftpe2.isInstanceOf[OverloadedType] 1
fromReader(new 1
putTreess(vparamss) 1
getParts(tp.baseType(bc)) 1
freeMutableVars.clear 1
sampleEnd 1
(b1.result, 2
DefDef(isDefinedAtMethod, 1
newTParams 1
xl.parent 1
assert(queue.dequeueFirst(_ 2
parseScalaSignature(sig, 1
newTypeName(name.toString() 1
isCompatible(tp, 2
!message.getClass.isArray 2
super.traverse(t) 6
seenTypes(i) 1
)).toTree 1
nme.DIV 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(SHORT)), 1
sequenceToXML(x.child, 1
this(new 4
logFileReader.close() 1
writeRef(lo) 1
(fn.symbol 1
info.sym+info.sym.locationString) 1
tree.setSymbol( 1
println(fact) 1
CONSTANT(k) 1
erasedSyms 2
_callbacks.readResources.add(readResource, 1
.format(bx, 1
'f' 2
style 1
SeqLike.indexOf(thisCollection, 1
assert(ad.symbol.isPublic) 1
widen(tp.normalize) 1
tp.normalize 1
assert(mlist(9) 2
definitions.NullClass 1
Select(gen.mkAttributedRef(if 1
(this.size 1
invalidated(buf 1
return 196
assertEquals(EspecieEnum.indefinida,petRecuperado.especie) 1
jcode.emitGETSTATIC(javaName(module) 1
.setIsEscaped(false) 4
push(fieldList) 1
writeRefs(staticAnnots) 1
writeLongNat((rawFlagsToPickled(sym.flags 1
sym.setInfo(polyType(tparams1, 1
rebindTo(Typed(EmptyTree, 1
settleAndClear 1
treeCopy.PackageDef( 1
opcode(Conv_Ovf_I1_Un, 1
opcode(Stelem_I2, 1
sym.setInfo(MethodType(List(param), 1
global.definitions.RootClass, 1
classNameToSymbol(tlName) 1
classConstantMeth.update(sig, 1
assert(all.contains(30)) 2
setInfo(setter)(namerOf(setter).setterTypeCompleter(vd)) 2
addApplyUnapply(cdef, 1
buf.append(start) 1
(Bind(name, 1
(buf(pos 3
.setId(RemoteRequestIdFactory.nextId) 4
printer.flush() 1
((sym 1
POP_size(POP_I_I) 1
counts.weightedAdd(IterationOp, 1
opcode(Mul_Ovf, 1
informTime(, 1
getPrimitive(fun.symbol) 1
traverseStats(body, 1
writeNat(TYPEDEFtree) 1
passed 1
assert(curRunId 1
super.handleUpstream(ctx, 1
lastMappedPC 1
definitions.NothingClass 1
jcode.emitISHL() 2
tryTwice 1
JAVACMD+ 1
res.toList 5
!compileMgr.shouldCompile(outDir, 1
kind 9
regexp.findAllIn(s).matchData.toList 1
notifyAll() 3
traverseTrees(mods.annotations); 5
c.prefix 2
putTree(definition) 1
out(point) 2
ctx1.bb.emit(LOAD_LOCAL(monitor)) 1
getModuleOrClass(name1, 1
res.setPos(res.pos.makeTransparent) 1
annotations.partition 1
next.addMore(more) 1
erasure.NoContext.make(EmptyTree, 1
react 3
StringClass, 1
caseCtx 2
params.map(_.defString).mkString() 1
solve(tvars1, 1
stack.push(toTypeKind(method.info.resultType)) 3
unitbuf 1
tokenName(tokenId) 1
writer.close() 4
writeNat(vparamss.length) 1
_workers 1
lvTab.putShort(end) 1
assert(r.bindings.isDefinedAt(f), 2
changesOf(sym) 1
<multiplier> 1
java.lang.System.exit(status) 1
assert(mlist.toList 1
writeNat(APPLYDYNAMICtree) 1
!(negated 1
unit.deprecationWarning(tree.pos, 1
treeInfo.firstConstructor(newBody) 1
manifestFactoryCall( 2
typedPos(init.head.pos)(BLOCK(result, 1
clasz.methods 1
XML.loadFile(file) 1
genCode(m) 1
!sym.hasFlag(MIXEDIN) 1
intersect(pt, 1
arr 2
dump 4
activeObjects.put(name, 1
+argString+ 1
arg 8
this.bigDecimal.setScale(scale, 1
parseClass() 1
that.CEE_length 1
locals(idx) 1
init() 1
opcode(Stelem_R4, 1
opcode(Ldsfld, 1
conds 6
decodePair(tok.pred.getAndSet((tok, 1
addDefaultGetters(meth, 1
e.printStackTrace(new 1
localTyper.typedPos(pos) 2
setPrivateWithin(staticModule, 1
foreach(i 1
Select(gen.mkAttributedRef(FullManifestModule), 1
NestUI.failure(, 1
c 27
putType(tree.tpe) 1
false, 4
settings.inline.value 1
assert(pkg 1
clinit.emitINVOKESPECIAL(cls.getName(), 1
ft.traverse(this) 2
sb.append('(').append(_1).append(',').append(_2).append(')') 1
clazz.setFlag(ABSTRACT) 1
LogContext(null, 1
SYMANNOT 1
patternWarning(tp, 1
ps 1
pt 1
jcode.emitIDIV() 1
replace()))) 1
pc 2
dup 1
Block(List(keyDef), 1
txt.outer 1
ctx1.bb.emit(CONSTANT(new 2
q1.add(e) 1
assert(entries(i) 1
parents1 2
p1 1
jcode.emitIOR() 2
.append(this.id, 1
assert(isNamedApplyBlock(transformedFun), 1
wasEmpty 1
latestActFile.toURL, 1
bytes(pos) 2
ann.atp.typeSymbol 1
ctx1.bb.emit(STORE_ARRAY_ITEM(INT), 1
assert(!two.isWideType, 1
writeRef(Constant(comment)) 1
pre1++ 1
succPred.get 1
ft.hits.toList 1
assert(init 1
refreshProgress 3
writeRef(elem) 1
assertEquals(iterative.Of(1,2,3,4,5,6,7,8,9, 1
Debug.info(this+) 4
assert(defs.length 1
tparams: 1
this.bb 2
length) 1
assert(mlist.tail.tail.isEmpty) 1
ctx1.bb.emit(JUMP(label.block), 1
CompoundTypeTree(templ: 1
m.isGetter 1
buf.append().append(method).append('\n') 1
println(+index) 1
addClassFields(ctx, 1
_callbacks.writeResourcesPresent 1
Actor.receive 1
const.tag 2
!sym1.isClass 1
tp2 1
p.ready 1
sym.owner.info 1
putTree(lhs) 1
assert(origin2 1
assert(origin1 1
that.CEE_code 1
skipAttributes() 2
ignore 2
isEqual 2
requireActive() 4
definitions.getMember(definitions.ScalaRunTimeModule, 1
l.refpos 1
(e.covers(succ) 1
(args 1
print(p.sym.name); 1
((repr: 2
retry 2
'5' 2
agent(increment(_)) 1
JavaScannerConfiguration.token2string(token) 1
tok.pred.transformIfDefined(liftPF(tok, 1
resetFlag(DIRTYPREDS) 1
setInfo(completer) 1
addAnnotations(jmethod, 1
update(added 1
if(other.unsafeTypeParams.length 1
assert(cleanups.head 2
ModuleAL, 1
blockWithoutQualifier(defaultQual) 1
println(transform()) 1
writeNat(THROWtree) 1
MajorVersion 1
printer.print(this) 1
Thread.sleep(1000) 2
treeCopy.DefDef(tree, 3
updatePosFlags(m, 1
TypeTree(fun.tpe))) 1
lvTab.putShort(pool.addUtf8(name).toShort) 1
javaName(method) 1
Throw(Ident(ex))) 1
(mods.flags 1
Match(Ident(exname), 1
!((newS.owner.isTypeParameter 1
ShortClass 1
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(ANY_REF_CLASS)), 1
xpp 2
callsNonPublic 4
private[actors] 22
opcode(Leave_S, 1
applicable 1
test3(a 1
test3(b 2
assertEqualDiscountingOrder(expected, 2
opcode(Ldc_I4_2, 1
nextBlock(b) 1
REF(reflMethodCacheSym) 2
vparam.tpt 3
opcode(Sub_Ovf_Un, 1
thisMethodType({ 1
List( 1
worklist 9
.setException(e.getClass.getName 2
JType.EMPTY_ARRAY, 1
buf.putShort(cpool.addFloat(const.floatValue).toShort) 1
sym.isTerm 1
DefDef(Modifiers(sym.flags), 1
toCharArray. 1
opcode(Ldind_I4, 1
rotateLeft(x) 1
treeCopy.Try(tree, 2
opcode(Beq, 1
fileManager.JAVAC_CMD 1
matrix.cellsWithValue(move.player.color).length 1
.createQuery() 4
code.emit(CONSTANT(Constant(in.nextChar))) 1
nme.SUB 1
this.enclClass 2
Some(LiteralAnnotArg(pool.getConstant(index))) 1
outDir 1
opcode(Blt_S, 1
in.bp 4
writeRefs(parents) 1
assert(in(b) 1
.setFlag(STATIC 1
genCond(cond, 1
RemoteProtocolBuilder.setMessage(message, 4
isAsSpecific(ftpe1.resultType, 1
opcode(Cpblk, 1
setAnnotations(annotations 1
traverse(tree) 1
noSymbol, 1
testFewEnqueues 1
icodes.classes.valuesIterator.foreach((cls) 1
genBlocks(linearization) 1
(pflags 1
log.error(e, 1
buf.put('J'.toByte) 1
enterClassAndModule(entry, 1
writeRef(rhs) 5
label.patch(ctx.method.code) 1
meth.owner.resetFlag(INTERFACE) 1
opcode(Ckfinite, 1
containsNEW 1
addExceptionsAttribute(jmethod, 1
tfa.run 2
nonStarPatterns 1
writeNat(l); 1
name.subName(0, 2
renato.pets.add(toby) 1
if(sym1.isTerm) 1
ctx1.bb.emit(CALL_PRIMITIVE(Negation(resKind)), 1
PUSH_size(PUSH_R4) 1
newInstr.setPos(oldInstr.pos) 1
fold 1
TypeRef(ArrayClass.tpe.prefix, 1
jcode.emitIREM() 1
assert(b.possibleMoves(one_piece_player).length 1
initial: 2
predicateForRead(key).getAndSet(None) 1
Character.isUnicodeIdentifierPart(c) 1
matrix.spin, 1
rawannots 1
remoteServerThread.start 1
lazyValNullables 1
super.traverse(tree) 12
println(t5.f(new 1
f(v0) 4
treeCopy.SelectFromTypeTree(tree, 1
jcode.completeLineNumber(lastMappedPC, 1
buf.append().append(predecessors) 1
f.isPublic 1
sym.fullNameString('/') 1
reader.close() 1
ctx1.bb.emit(NEW(REFERENCE(definitions.getClass()))) 1
objectSymbol, 1
bindings 5
redo 2
from 1
(ClassDef(mods, 1
assert(hasFlag(LAZY) 1
lastStart 1
isPackageObjectClass 1
par.left 2
buf.append().append(clazz).append('\n') 1
opcode(Switch, 1
menu.contents 2
REFERENCE(AnyRefClass) 4
nw.init 1
definitions.FunctionClass 3
+pt0) 1
putTree(self) 1
private[io] 2
executor 2
TypeDef(_, 1
POP_size(POP_I_I8) 1
varsInBlock 2
0.0 1
that.CEE_inline 1
tag 13
positionalAllowed 2
assert(c.name.toString.indexOf('(') 1
l.index 1
xp.left 3
S.addAround(DB.buildLoanWrapper) 1
b.foldLeft(in)(interpret) 2
p+qualify(p,a)+)) 1
is.info.isComplete 1
addAttribute(jmember, 2
sib 4
genCond(tree, 1
javaType(method).asInstanceOf[JMethodType]) 2
inform() 1
in.getBinding(l) 1
outerContext.makeNewScope(outerContext.tree, 1
compileLate(new 1
isInitialized 1
javaName(sym), 1
Ident(name).setSymbol(dsym).copyAttrs(tree).setType(dtpe) 1
tree.symbol.resetFlag(DEFERRED) 1
.setFlag(sym.flags 1
check(tp.normalize, 1
paramTypes 1
print() 16
nullCtx.bb.emitOnly( 1
s.toDouble 1
ctx.bb.emit(getZeroOf(local.kind)) 1
ctx.bb.emit(CONSTANT(value), 2
bb.emit(JUMP(otherBlock)) 2
ctx1.bb.emit(CALL_PRIMITIVE(ArrayLength(BOOL)), 1
(!(member 1
updatePosFlags(sym.moduleClass, 1
Match(_, 1
covered 1
buf.toString() 3
pending 1
checkDeprecatedOvers() 2
extRef, 1
timerTask.cancel() 1
apply(BigInt(unscaledVal), 2
targs: 1
(baseFun, 1
implementingMethod 1
opcode(Ldvirtftn, 1
addBinops(longparam, 1
LiftRules.early.append(makeUtf8) 1
f.isDefinedAt(m) 1
this.handlerCount 1
ctx1.bb.emit(BOX(nativeKind), 1
matrix.m.map(_.map((x:Int) 1
this.code 1
bytes 1
pf(before) 2
private[ccstm] 39
negate 6
(NullValue.encode(value), 2
opcode(Ldelem_U2, 1
f(before) 2
mirrorCode.emitINVOKEVIRTUAL(moduleName, 1
out 14
contents.values.foreach 1
sym.setInfo(ErrorType) 1
exhCtx.bb.emit(THROW()) 1
xr.parent 1
putAnnotation(sym, 1
this.clazz 5
appender.runAndMap({ 1
performs 1
jcode.emitPUSH(-1l) 1
update(invalidatedByRemove(files)) 1
entry.outerName 1
sym2: 1
qualifier.tpe 1
This 2
treeCopy.TypeBoundsTree(tree, 1
ShortClass, 1
!j.hasNext 2
jcode.emitINVOKESPECIAL(StringBuilderClass, 1
matrix.pad(1).insertCells(cells.map((cell: 1
checkFile.exists 1
fixAfterDeletion(repl) 1
+unit) 1
assert(!closed 1
spawn(b 1
set 2
opcode(Refanytype, 1
setPrivateWithin(sym, 2
createVar(tpe, 1
gen.mkAttributedRef(vsym))))) 1
code.emit(CALL_METHOD(m, 4
occupiedPositions.toList.sort 1
nme.ScalaSignatureATTR.toString, 1
assert(replaced, 1
.setInfo(toInterface(currentOwner.typeOfThis)); 1
opcode(Stloc_3, 1
CharClass 1
javaTypes(paramJavaTypes), 1
out.println() 4
context.owner.newAbstractType(context.tree.pos.focus, 1
ctx1.bb.emit(LOAD_LOCAL(loc1)) 1
containsError(tpe) 1
atPos(tree1.pos) 1
bootstrap.setOption(, 4
atPos(sym.pos) 6
println(bn3()) 1
compileSources(filenames 1
b.result 16
opcode(Stind_I4, 1
jcode.emitIFNULL(labels(success)); 1
!message.isInstanceOf[Tuple3[_,_,_]] 2
= 2
in.skip(4); 2
traverse(cond); 1
Any_hashCode 1
DB.addLogFunc 1
numericWidth 1
clasz 1
assert(pieces.size 1
opcode(Ldc_I4_0, 1
inforef 1
class 249
isApplicable(List(), 2
TimeUnit.MILLISECONDS, 1
opcode(Conv_Ovf_I8_Un, 1
info.stack 1
isConstructor 2
writeNat(ARRAYVALUEtree) 1
println(t8.f(a 1
RootClass.info.decls.enter(RootPackage) 1
queue.dequeue 1
_mailbox 6
private[typechecker] 5
impl.STMImpl.awaitRetryAndDestroy(explicitRetries:_ 1
checkNoConflict(ABSTRACT, 1
d.toString 1
writeName(name) 1
unit.deprecationWarning( 1
putTree(lo) 1
lin.linearize(m) 1
opcode(Ldind_I2, 1
jcode.emitIFNULL(labels(success)) 1
true, 1
Console.println()) 2
AnnotatedType(annots, 1
Typed( 1
cache 2
atPos(tree.pos)(nonLocalReturnThrow(expr, 1
opcode(Stelem_I, 1
local 1
((methSym.name 1
hasFlag(STABLE 1
inlinedBlock(b).varsInScope 1
assert(!clazz.info.parents.isEmpty, 1
RemoteClient.clientFor(_remoteAddress.get).registerSupervisorForActor(this) 2
readTreeRef() 5
clazz.setInfo(ClassInfoType(List(), 1
s.setInfo(sig2typeBounds(tparams, 1
List(time) 1
out(b) 4
actor.restart(reason) 2
imps.toList 1
(getPrimitiveReplacementForStructuralCall 1
view 1
staticDefs 1
buffer.toList 1
assert(resKind.isIntType 1
setInfo 1
ctx.method.params 1
(List[List[ValDef]]() 1
.setSymbol(sym.moduleClass) 1
addReadResource(readResource, 2
method.addHandler(exh) 1
ClassInfoType(List(AnyRefClass.tpe, 1
closed 3
succs 3
opcode(Conv_Ovf_I, 1
stack.push(ARRAY(elem)) 1
methSym.setInfo(MethodType(methSym.newSyntheticValueParams(forArgsTypes), 1
sb.toString() 1
isArrayOp, 1
data(start 1
print(cls.symbol.toString()); 1
checkValidIndex 1
ctx2.bb.emit(CZJUMP(thenCtx.bb, 1
gen(unit.body) 1
testLDF(Short.MaxValue.toLong) 1
THEN 2
withNeedLift(true) 4
assert(!board.isAdjacentToSelf(List(Cell(1, 1
afterCommit.clear() 1
(tree 2
out.stack.pop(consumed) 1
reporter.setSource(unit.source) 2
x.parent 2
agent.start() 1
ch() 1
this(arg) 1
currentExceptionHandler 2
checkBounds(fn.pos, 1
ctx1.enterScope 1
opcode(Ldarg_2, 1
this.hasMeta 3
polyType(this.typeParams, 1
queue.enqueue(50) 1
assert(params.length 1
pending(i).init 1
lookupImpl(meth, 1
EXPRmode, 1
NestUI.verbose(+cmdArgs) 1
outputDirs: 1
c.owner 1
clone.thisSym.name 1
genLoad(tree, 1
lookahead.ch 1
parseAnnotation(index) 1
params.tail 1
jcode.emitINVOKESTATIC(owner, 1
.enterSyms(templ.body) 1
+outDir.getAbsolutePath+ 2
check(xs) 1
es.foldRight[List[B]](Nil)((e, 1
metaUpdater.compareAndSet(this, 2
mailbox.extractFirst((m: 2
unitc 2
applicableInfos(iss, 1
member 2
assert(sym 5
code.emit(CONSTANT(Constant(in.nextByte))) 1
opcode(Refanyval, 1
Class.forName() 1
alias.initialize 1
isApplicable(undetparams, 6
ft.result 1
nme.OR 1
newMethod(ObjectClass, 6
arg.head 1
(member.isDeferred 1
elseCtx 2
@ContextConfiguration{val 3
mtypes.exists(t 1
code.emit(BOX(toTypeKind(m.info.paramTypes.head))) 1
xs.foldRight[(List[A], 1
assert(sym.isType, 1
writeRef(target) 2
writeRef(tp) 1
arr(1) 1
newNamer(context.makeNewScope(tree, 4
assert(sym.alias 1
current.tl 2
cell.next 1
buf.put('D'.toByte) 1
putChar(oct.asInstanceOf[Char]) 1
DOUBLE 1
setColor(xppr, 1
instrBefore.foreach(i 1
Console.println(i); 1
(NoSymbol, 1
implicitsCache(pt) 1
tparam.tpeHK 1
.getResultList 1
internalized(index) 2
resetFlags 1
println(t7.f(a 1
(accessWithin(ab) 1
!(clazz.ancestors 1
ctx1.bb.emit(LOAD_ARRAY_ITEM(FLOAT), 1
compiler.inform( 1
inclazz.info.nonPrivateDecl(name).filter(sym 1
that.CEE_string 1
println(mn.foo()()) 1
this(true, 1
addModuleMethod(LongClass, 2
CZJUMP(succ, 1
assert(visited.contains(b), 1
wellFormed(new 1
elements.foreach(e 1
onTimeout.get.cancel() 2
!sym.isClass 1
_slotsByPrio.put(0, 1
opcode(Ldloc_S, 1
opcode(Ldelem_U4, 1
name.endsWith(nme.OUTER, 1
toUnsignedByte(in.nextByte) 1
println( 41
opcode(Conv_Ovf_I1, 1
param.tpt.setType(subst(cparam.tpe)) 1
treeCopy.Typed(tree, 1
val 3620
* 19
this.owner.ancestors 1
var 801
clinit.emitPUTSTATIC(jclass.getName(), 1
jcode.emitACONST_NULL() 1
(symtpe 1
nameref 1
Throw(expr).setType(tpe) 1
usedIn(sym) 1
putTree(thenp) 1
request.setAttribute(, 1
out.stack 32
f5(get(39))(get(), 1
atPos(body.pos)(ValDef(sym, 1
inliner.analyzeClass(c) 1
this( 1
this, 2
endPC.clear 1
push(two); 3
f.setFlag(Flags.notPRIVATE) 1
NullValue.decodeOption[B](underlying.remove(key)) 2
EmptyPackageClass.setInfo(ClassInfoType(List(), 1
atPhase(currentRun.erasurePhase.next)(tp1 1
txt.depth 1
tapp.tpe 1
scala.collection.mutable.StringBuilder 1
kind, 2
opcode(Ldind_Ref, 1
isPlausiblyCompatible(restpe, 1
checkNoConflict(PRIVATE, 2
Object_isInstanceOf 1
local.index 1
seltpe 1
other 12
readAnnotationInfo(end) 1
super.setPos(NoPosition) 1
JUMP(inlinedBlock(whereto)); 1
kinds 1
test3(12, 1
println(t7.f(b 1
strWriter.toString 1
opcode(Stloc_1, 1
rdef.run 1
scanForLabels(ctx.defdef, 1
context.unit.isJava) 1
sym.isNonBottomSubClass(definitions.ClassfileAnnotationClass)) 1
addBinops(floatparam, 1
assert((manyodds.size 1
