cert.change(list[n]); 1
Q_DECLARE_METATYPE(QList<QCA::KeyStoreEntry>) 1
if(!importing_) 1
).arg(name), 1
X11KeyTriggerManager 1
Message::Message(STATE) 1
action->setData(i); 2
list->setToolTip(f.desc()); 1
QToolButton::setIcon(p); 1
proxyPort->setValue(settings.value(QLatin1String(), 1
addStatus(XMPP::Status::DND); 1
toolbar_->setSizePolicy(QSizePolicy(QSizePolicy::Expanding, 1
lst->setVScrollBarMode(Q3ScrollView::AlwaysOff); 2
DIGIT(n,i) 7
le_nick->setFocus(); 1
updateAccount(name); 1
in.append(a); 2
PKeyContext 3
trayMenu 1
create_selected 1
expFloatControl->update(LLWaterParamManager::instance()->mCurParams); 1
updateFlashState(); 1
m_sourceRowCache.clear(); 4
updateStatusMessage(); 5
if(!stringFromFile(fileName, 4
dialog_ 2
error_ 3
tabs->addTab(themes_tab, 1
item.setMessage(ui_.ck_messages->isChecked()); 1
if(params.missingAny()) 2
statusList->remove( 1
total_num_objects 1
frame_data.mDuration[i] 1
fields_layout->addStretch(20); 1
widget 13
ui.languageCombo->setItemText( 1
ChatDlg::activated(); 1
d->le_oeChat1->setText(PsiOptions::instance()->getOption().toString()); 1
TiXmlDocument 2
moveItem(after); 1
QWebHistoryInterface::setDefaultInterface(0); 1
Q3ListViewItem::setOpen(o); 2
adminMenu->addSeparator(); 1
X11KeyTriggerManager::qt_xk_table[] 1
d->act_icon->setMenu( 1
item->setData(QVariant(ui_.password->text()), 1
Q3PopupMenu 18
QStyleOptionGraphicsItem 1
if(!a.isEmpty()) 2
mLCDPanel 2
d->sn_write->setEnabled(true); 1
G(cmethod)->setup(this, 1
jtVCard_->go(true); 1
ui_.le_street->setEdited(x); 1
QPoint 51
XmlElement::attributesAsString() 1
if(r->dir 1
le_fname->setEnabled(true); 1
hb1->addWidget(le_jid_); 1
d->show(); 2
CFRelease(context[0]); 1
if(parentElement.hasAttribute(node.nodeName()) 1
act_voice_->addTo(pm_settings_); 1
Q_UNUSED(oldWidth); 1
capsChanged(); 1
setHistoryLimit(30); 1
LEGOPTP.grabUrls 1
negotiation->session->stopQueueing(); 1
if(val->reference_p()) 2
ui_.tabwidget->addTab(ui_.tab_status,tr()); 2
setLineEditEnabled(PsiOptions::instance()->getOption().toBool()); 1
reverse->ResetAnimation(); 1
if(dist 1
connect(m_closeTabAction, 1
ptv->verticalScrollBar()->setValue(position); 1
hb2->addWidget(d->tb_pgp); 1
#else 210
TEST_CASE(if8); 1
locked 3
icon.stop(); 1
affiliations_model_->setAffiliationListEnabled(a,false); 1
d->eventId 1
frametimer->stop(); 2
quit(QuitProfile); 1
p->toolbars[base].name 1
LEGOPTP.ppStatus 1
catch( 2
lineEdit 2
search_map<std::string, 1
item_id.set( 1
foreach(Result 3
antiscrollinterval_ 1
Message::clearDetails() 1
conf_x_field_type.setAttribute(); 2
TEST_CASE(unknownSyntax1); 1
voiceCaller_->removeCall(jid); 4
p.setPen(QPen(palette().dark().color())); 1
d->putStep(stepData); 1
if(oid_elems.size() 1
m_loggerNames.append( 1
useAvatar 1
ui_.toolbar->addAction(act_voice_); 1
obj->clear_mark(); 2
PsiActionList::Private::~Private() 1
if(events->num_of_events() 1
connect(removeButton, 4
m_viewStatusbar 1
ReadyReadOutgoing 1
lastChatState_ 5
statusDnd->setWhatsThis 1
queuedIncomingEdits_.append(incoming); 1
label.replace(); 1
DockTestWidget::DockTestWidget( 1
CFRelease(context[1]); 1
obj->d->error 5
if(i->trackerId 1
d->in.kbder 1
ClearPrivateData::ClearPrivateData(QWidget 2
d->pa->modify(); 1
pthread_threads_max 2
LEGOPTP.chatLineEdit 1
xdata_->setFields(r.data().fields()); 1
TEST_CASE(mismatch2); 1
setLOD(min_pixel_area); 1
glTexCoord2f(1, 2
MessageEvent 15
PsiCon::PsiCon() 1
m_locations[i] 1
AdditionalMessage::operator 1
m_lineNumber( 1
screen_pos.mY 1
pa->privacyManager()->changeList(privacyModel.list()); 2
timeout 4
pExpression->QueryIntAttribute(,&iOptional); 1
d->gr_form->show(); 2
services_[contact->getAccountName()]->actionRemove(contact->getJid()); 1
node_.toAttr().setValue(edit->chdata()); 1
movie->start(); 1
ui_.cb_lists->setCurrentItem(ui_.cb_lists->findText(previousList)); 1
createCorner(Qt::BottomRightCorner, 1
chatView()->clear(); 1
that->unsetCursor(); 1
std::istream& 3
if(mp_cmp_d(&n, 2
estimate 1
createChatGroupchat(); 1
scene_->queueTransformationRegeneration(dynamic_cast<WbItem 1
d->infoRequested.remove(j.withResource(r.name()).full()); 1
gAgentPilot.save(gSavedSettings.getString()); 1
XmlDocument::setRootElement( 1
moveList(vl, 4
g_graphicsContext.SetCameraPosition(m_camera); 1
chatEditCreated(); 3
m_gameplay_time->hide(); 1
widthChanged(); 2
if(!lastAvailable().isNull()) 1
if(args.count() 1
mFrameData.put(frame_data); 1
service 1
needed 1
if(pre_command_close) 2
Q_ASSERT(state 1
setHeaderHidden(true); 1
reg[which] 2
tabDlgDelegate_ 1
ShortcutManager::ShortcutManager() 1
if(obj->d->results.isEmpty()) 1
newPresets[name] 1
d->secure 1
statusButton->setWhatsThis 1
LLFloaterBuildOptions 3
appendChar(c); 2
connect(d->pb_refresh, 1
low_id 1
copy3->stripFirstFrame(); 1
RACK, 1
d->tray 4
DefaultKeyStoreList(Provider 1
bandValue 4
QVERIFY(widget.webView(0)); 1
if(c->finished()) 2
LLFrameStats::stopLogging(NULL); 1
tup->put(state, 14
root_window 1
GlowEffectWidget::GlowEffectWidget(QWidget 1
downloadsLocation->setText(downloadDirectory); 1
s.pass 1
IconsetRosterUI 15
PsiIconset::~PsiIconset() 1
while(top_bits 1
TextOutputter::printStatistics() 1
QCOMPARE(spy2.count(), 1
if(bytes 8
idlessItems_.removeAll(wbitem); 1
enableJavascript->setChecked(defaultSettings->testAttribute(QWebSettings::JavascriptEnabled)); 1
tokenizer.simplifyTokenList(); 6
ObjectMemory::~ObjectMemory() 1
m_board->setMinimumSize(width, 1
variantToElement(var,valEle); 1
if(str.lower().startsWith()) 1
HGLOBAL 1
connect(tb_resolveNick, 1
account()->groupChatChangeNick(jid().host(), 1
notauthorized.setAttribute(); 1
if(!emitted_certificateRequested 1
d->readTimer->start(); 1
if(m.body().left(4) 1
searchCursor.setCharFormat( 1
menu->setRootIndex(idx); 1
packet_from_net.clear(); 1
TestSuite::getTests() 1
progressBar->setVisible(false); 1
setBookmarks(urls, 1
store(filename); 1
if(ui_.cb_type->currentText() 1
copyIcon 1
tune.setName(trackpair.second); 1
LEGOPTP.defaultAction 1
header()->setSectionHidden(ContactListModel::PictureColumn,!b); 1
stream.write(, 2
v_originLocal 3
bAssign 2
gpg.endWrite(); 1
FileAvatar(AvatarFactory 1
QCOMPARE(messageHeadline->anim(), 1
m_plugIns.erase( 1
call->Terminate(); 1
QObject::connect(dw2->d->watcher_relay, 1
iq_.appendChild(pubsub); 3
actionGroupRemove( 1
pop(); 1
data_layout->setMargin(0); 1
m_move_animation->setFrameRange(0, 1
edit(); 1
v.setDesc( 2
setWindowTitle(desiredCaption()); 2
downloadsView->setRowHeight(row, 2
animate(); 3
setIcon(QPixmap((const 2
e.setAttribute(,type); 1
d->title 1
ui_.le_country->setText( 2
parent->addItem(this); 1
k.change(kc); 2
verticalScrollBar()->setValue(scrollbarValue); 1
if(!node.isElement() 1
lbx_proxy->setCurrentItem(defIdx); 1
if(profileExists(name)) 2
ridByParent.insert(m->parent(), 1
defaultSettings->setFontFamily(QWebSettings::FixedFont, 1
if(!i->isAgent()) 1
AdvancedConnector::~AdvancedConnector() 1
Sleeper::msleep(1000); 2
SASL::Params::~Params() 1
memcpy(a.data(), 2
m_suite->addTest( 1
PFNGLMULTITEXCOORD2FARBPROC 1
::FormatMessageA( 1
if(new_timer) 1
d->listing 1
d->cv->qa_logon->setIcon(PsiIconset::instance()->status(e->u.jid(), 1
Loop::Loop(int 1
conf_x.appendChild(access_model); 1
m_session->GetPlayer()->SendMovieStart(dwId); 1
error: 1
q->directMessages( 1
loadPage(1); 1
am->insertItem(IconsetFactory::icon(), 3
r.fill 1
serverlist_querier_->getList(); 1
menu->addMenu(adminMenu); 1
PsiOptions::instance()->removeOption(baseCustomStatusPath, 1
qWarning( 3
connect(d->tb_url, 1
QStyleOptionButton 1
qWarning(qPrintable(tree2.getOption(name).toString())); 1
that->topData()->parentWinId 1
if(mask 1
if(!parent.isNull()) 1
d->le_dtPort->setText( 1
CPPUNIT_STRINGIZE( 1
switch(result) 1
sn_read->setEnabled(false); 1
--last_pos; 1
QTabWidget::addTab(w, 2
mapToStorage(request_rec 1
le_fname->setText(d->fileName); 1
PsiTrayIcon 1
connect(pb_apply, 1
s.fromString(o->getOption(rbase 1
connect(m_bookmarksToolbar, 1
Line1->setFrameShape( 2
m_maze(0), 1
gb_account->setEnabled(true); 2
if(!out.open(QIODevice::WriteOnly)) 1
m_total_pieces(0), 1
setName(el.attribute()); 3
Input() 1
stream->continueAfterWarning(); 1
emit(repaintNeeded()); 4
apr_bucket_brigade 1
++p2; 1
has 1
if(input.opt_noagent) 1
readBoolEntry(stick, 1
langs.set(); 1
action->setData(QVariant(WbWidget::Erase)); 1
pcode, 1
set_syserr(ENONET, 1
set_syserr(ENOTCONN, 1
lb_host->hide(); 1
c->setVisible(m_controlsVisible); 1
bookmarkFile 1
updateAccountsOnExit 1
Type_getOldest, 1
allDigits 1
shortcutItem->setText(0, 1
closeButtonBackLayout->setMargin(0); 2
pipeCommand.readEnd().close(); 4
CFRelease(bundleURL); 1
m_initialUrl 2
GO(channel).set(state->new_class(, 1
bottom 1
statusGroup->setWhatsThis 1
QPipe::QPipe(QObject 1
strCurOutput.Replace(); 1
if(QSysInfo::ByteOrder 2
model_.removeRow(ui_.lv_rules->currentIndex().row(),ui_.lv_rules->currentIndex().parent()); 1
CPanel 1
!PsiOptions::instance()->getOption().toBool()); 1
if(rt) 2
atEnd(); 1
d->source 3
Q_ASSERT(item 1
LLBufferStreamBuf::~LLBufferStreamBuf() 1
modelAccounts.move(j, 1
TEST_CASE(pushback3); 1
wbWidget_->setMode(WbWidget::Mode(a->data().toInt())); 1
connect(d->tb_info, 1
session->shutdownWriter(); 1
menu->addAction(tr(),this,SLOT(launch_clicked())); 1
disconnect(account()->client(),SIGNAL(xmlIncoming(const 1
m_mirrorItem->sourceMoved(); 1
settings.beginGroup(name); 2
items_.append(PrivacyListItem(e)); 1
QMessageBox::information(parentWidget, 2
stopAnimateNick(); 2
Private( 1
GAdvancedWidget::GAdvancedWidget(QWidget 1
GO(selector).set(cls); 1
xform_obj.getScale() 1
g->server_init 1
action.wID 1
(!self 1
sLog.outError(, 1
te_log()->setTextCursor(cursor); 2
mWebPanel->setDefaultBtn(default_btn); 1
set_bignum(as<Bignum>(obj)); 1
bytesRead 2
SecureMessageKey::SecureMessageKey(const 2
norminterval_ 1
object->mDrawable->clearState(LLDrawable::USE_BACKLIGHT); 1
set_syserr(EBADF, 1
pm.setItemEnabled(pm.insertItem(tr(), 1
d->in_id 1
actionsService_->setMOTD(account); 1
nickText 1
new_values->put(state, 2
MenuDialog(IDR_DONE_CANCEL_MENU), 1
tabs->addTab(mazes_tab, 1
fwi.dwFlags 2
Drawer::drawMap(QPainter 1
srl.sort(); 1
timeout(); 1
if(!v_perr.isEmpty()) 1
bringToFront(this); 2
m_rightLayout->setDirection(QBoxLayout::LeftToRight); 2
saslContext 1
lst.removeAt(i); 2
installEventFilter(this); 1
s->setPollInterval(secs); 1
u->setLastAvailable(j->time()); 2
d->cb_proxy->setCurrentItem(x); 2
jtVCard_->set(account->jid(), 1
QTOPIA_EXPORT_PLUGIN(OggPlugin); 1
Private(QObject 2
chain 2
contact->setHasManualAvatar(h); 1
checkOther.warningOldStylePointerCast(); 1
connect(composingTimer_, 1
errmap[GpgOp::ErrorDecryptNoKey] 1
GpgOp::GpgOp(const 1
m_uiChannels 1
d->cb_plugins->clear(); 1
Drawer::makeMove(const 1
default: 100
globals.current_thread.set(thread); 1
backHistory.append( 2
TicTacToe::TicTacToe( 1
default_ 1
lv_results->addColumn( 1
connectDataChanged( 1
defaults 5
MacKeyTriggerManager 1
b.gets 2
if(compareRes 1
QWhatsThis::add(d->ck_singleclick, 1
server_task_->sendReply(c->execute(command, 1
LEGOPTP.ignoreNonRoster 1
connect(t,SIGNAL(finished()),SLOT(changeActiveList_finished())); 1
Drawer::makeXchg() 1
wakeDone(); 1
PsiGrowlNotifier 2
mainMenuBytes 1
SET(meta, 3
ui_.cb_type->setCurrentIndex(ui_.cb_type->findText(tr())); 3
providerNames 1
mod->set_const(state, 1
proc->deleteLater(); 2
d->groups.remove(group); 1
test->run( 1
m_document 7
TrayIconPrivate::setPixmap(pm); 1
address 8
d->in.der 1
DownloadItem::DownloadItem(QNetworkReply 1
g_audioContext.SetupSpeakerConfig(iChannels, 1
queue 1
d->activeIds.removeAll(id); 3
statusList->setVisible( 1
board->computerStarts( 1
Account::Account(const 1
pb_find->setAutoDefault(true); 1
XmlElement 19
migrateStringEntry(base, 1
middlehbox->addWidget(middle3); 2
manager_->addContact(similar, 1
d->iss_servicesRoster->clearSelection(); 1
prvt.appendChild(storage); 1
ui.radioHide->setChecked(true); 1
rootNode->addElement( 3
kc->set(pkey, 3
c0.remove 1
if(!ipaddr.isEmpty()) 1
signal(SIGSEGV, 1
as<Executable>(msg.method)->execute(state, 3
FigureDialog 1
QOAuth::ParamMap 4
auth->setUser(proxyDialog.userNameLineEdit->text()); 1
viewMenu->addAction(toggleShowOfflineAct_); 1
account->setStatus(s, 1
font.setUnderline(true); 1
probe->start_method(this, 1
HistoryCompletionModel::HistoryCompletionModel(QObject 1
if(ed) 2
e.appendChild(doc.createTextNode(building_)); 2
SetWindowPos(winId(),HWND_TOPMOST,0,0,0,0, 1
DirWatch 6
ani->setEndValue(-30.0); 1
setCaption(QString(tr()).arg(jid.full())); 1
ui_.lb_status->setPsiIcon(PsiIconset::instance()->statusPtr(jid(), 1
QList<KeyStore 2
TabShortcut::TabShortcut(int 1
optionsButton->setWhatsThis 1
response.appendChild(documentEnd); 1
jid 12
disconnect 1
pb_apply->setEnabled(enabled); 1
menu->title 1
initActions(); 2
v->Relocate(px, 1
servermode 2
TEST_CASE(unknownFunction5); 1
form.setFields(fields); 3
list.append(u.jid()); 2
hasComma 1
XMPPRosterItem::XMPPRosterItem(const 1
resetExpandedState(); 1
requires<LLButton>(); 4
connect(reg, 4
CompilerOutputter::printFailureLocation( 1
if(length 2
BrowserApplication::networkAccessManager()->cache()->clear(); 2
sounds_field.setValue(QStringList((PsiOptions::instance()->getOption())); 1
d->crls.append(crl); 1
CPPUNIT_ASSERT_EQUAL(PrivacyListItem::GroupType, 1
value=Qt::Checked; 1
stopInProgress 2
item->resetAnim(); 1
m_firstTime 1
TEST_CASE(sprintf3); 1
d->closing 1
connect(act_next_,SIGNAL(activated()), 1
va_end(ar); 1
m_pParent=pParent; 1
CertificateRequested, 1
saveImage(); 1
GpgAction(QObject 1
byte 15
m_tabWidget->loadUrl(url, 1
bSubs 2
d->vboxLayout1->remove(d->pluginOptions); 1
btn->setText(t); 1
out.insert(i.type(), 1
i->pa->modify(); 1
if(edit->rid() 1
(p->frameGeometry().bottom() 2
task->probe 1
m_move_animation->stop(); 1
d->rosterExchangeItems 1
font.setPointSize(10); 4
AHCommandDlg::AHCommandDlg(PsiAccount 1
hb->addWidget(busy_); 1
TESTCASE(define_method_int_foo) 1
d->style 3
append(other); 1
foreach(SxeRecordEdit::Key 1
separatorAction->setSeparator(true); 1
Private::stickAt 1
eventNotifier.dock 1
PSendSysMessage(); 2
d->initGroupState(); 3
m_board->updateGL(); 1
ui_.autoJoin->setChecked(current.data(AutoJoinRole).toBool()); 1
AttachViewItem 2
MemoryRegion::set(from, 1
munmap((maddr_ptr)p, 1
sync.conditionMet(); 3
findHardwareVersion(); 1
d->c->setupEncrypt(d->to); 4
fp->cancel(); 1
sm->insertSeparator(); 3
ck_autoInfo->setChecked(PsiOptions::instance()->getOption().toBool()); 1
ApplicationType 2
srvLookup(d->server); 1
i->contactProfile()->scHistory(i); 1
QTwitterApp::instance()->activeWindow() 1
preset.setAttribute(,name()); 1
if(!size) 1
connect(manager_,SIGNAL(changeList_success()),SLOT(changeList_succeeded())); 1
publish.appendChild(item); 1
QCOMPARE(completionModel.rowCount(), 1
buffer 4
gMessageSystem->addUUIDFast(_PREHASH_AgentID, 2
m_status_steps_message->setContentsMargins(10, 1
++n2; 1
obj->d->lateTimer.start(); 6
new_icon.addPixmap(QPixmap()); 1
map[53] 2
insertItem(account->nameWithJid()); 1
d->opt_ssl 2
PrivacyListModel::PrivacyListModel(const 1
if(!lptr) 1
connect(overlay, 1
lodDispLists.resize(count); 1
doFlash(flash); 1
cricket::InitRandom(j.Str().c_str(),j.Str().size()); 2
if(d->pipe.bytesAvailable()) 2
lb_size->setText(tr().arg(fi.size())); 2
m_allowedCookies.removeAt(row); 1
QVERIFY(is->count() 2
TEST_CASE(forwhile5); 1
setMaximumSize(size, 1
pb_detach->setIcon(IconsetFactory::iconPixmap()); 1
proxy_ 1
PsiRichText::setText(doc, 1
if(d->mainwin) 2
LLViewerParcelMedia::play(parcel); 1
f.seek(f.size()); 1
sm->insertItem(PsiIconset::instance()->status(STATUS_CHAT).icon(),		status2txt(STATUS_CHAT),	STATUS_CHAT		+ 1
d->le_to->deselect(); 1
SET(node, 1
params.setUsername( 1
z.set_sign(x.sign()); 2
displayPressedKeys(getKeySequence(event)); 2
lb_desc->setText(is.description()); 1
target->SetFloatValue( 1
view->setItemDelegate( 1
TEST_CASE(stdstring); 1
TiXmlElement 19
connect(&in, 3
psi->buildToolbars(); 1
set_syserr(ENOTTY, 1
connect(ui_.pb_apply,SIGNAL(clicked()),SLOT(apply())); 1
proxyList.clear(); 1
!always_show) 1
QJDns 8
if(ui_.busy->isActive()) 1
d->lb_count->setFrameStyle(QFrame::Panel 1
sock_tout 1
grow_to(2); 2
w->hide(); 1
).arg(confirm.url()).arg(confirm.method())); 1
LLFloaterPreference::show(NULL); 1
msg->getQuat(, 1
m_blockedCookies 1
tb->updateVisibility(); 1
ui_.cb_ident->setOnlineOnly(true); 1
lAppname 1
hb4->addWidget(d->pb_reply); 1
prof.kbd 2
memset(context->count, 1
DMDialog 1
switch(m->message) 1
d->ck_showMenubar->setChecked( 1
s 133
selectedTab_ 1
painter->drawText(option.rect.topLeft() 1
e.xclient.window 1
setCursor(Qt::PointingHandCursor); 1
menu->addAction(new 1
button->update(); 2
if(sText 1
Provider::Context::Context(Provider 1
action->setObjectName( 1
QPrintPreviewDialog 1
updateMainwinStatus(); 1
bg_color.setAlpha(gSavedSettings.getF32("ChatBubbleOpacity") 1
d->server_realm 1
fromControl, 1
pm->setItemEnabled(10, 1
mazes_layout->setSpacing(6); 1
m_downloads.append(item); 1
if(!m.subject().isEmpty()) 2
m_reply 2
CGUIControlFactory 2
OptionsTabShortcuts::OptionsTabShortcuts(QObject 1
glCallList(displist); 2
if(addr.setAddress(QString::fromLocal8Bit(name))) 1
bstringThrow 116
setBookmarks(urls(), 1
GrabbedKey 1
tab->show(); 1
pb_start->setText(tr()); 2
TestSuiteBuilderContextBase::addProperty( 1
d->findDlg 2
connect(m_overview, 1
HistoryManager::~HistoryManager() 1
setResource(r); 1
statusmsg_field.setVar(); 1
HeapDebug::HeapDebug(ObjectMemory 1
m_hint(-1, 1
changing.clear(); 1
error(m_reply->error()); 1
set_syserr(ECONNREFUSED, 1
LEGOPTP.inactiveEvents 1
TestFailure::clone() 1
c0.repeat 1
!m_bPassthrough) 1
CPPUNIT_TEST(testVersionStringToInt_TooFewParts); 1
d->lateTrigger.start(); 1
TestResult::shouldStop() 1
d->twitterapi->postUpdate( 1
QWhatsThis::add(d->sb_asOffline, 1
TEST_CASE(assign_pclose); 1
d->t.start(30000, 1
file_share_session_client_.reset(new 1
if(a[n] 2
CPPUNIT_TEST(testToXml); 1
actJoin->setEnabled( 1
root->setVisible 1
resize(w, 1
target->pushNeighbors(vector); 1
action->setText(m_recentlyClosedTabs.at(i).toString()); 1
if(!e.isNull()) 1
LEGOPTP.discoItems 1
d->jt->get(d->jid); 1
RepeatedTest::countTestCases() 1
renderMaze(m_move_animation->currentFrame()); 1
setParent(0); 1
protocol->acceptGame(sock); 1
removePendingRequest(a); 2
AddBookmarkProxyModel::AddBookmarkProxyModel(QObject 1
Token 3
~MyKeyStoreEntry() 1
item->setData(QVariant(jid().full()), 1
connect(bOk, 2
connect(ui_.pb_close,SIGNAL(clicked()),SLOT(close())); 1
data->identifier 3
d->capsRegistry->registerCaps(CapsSpec(ApplicationInfo::capsNode(), 1
cookies.erase(it); 1
screen_center.mV[VX] 1
if(d->atEnd) 1
strCapacityFile 4
if(!proxy_pass.isEmpty()) 1
while(!cur->nil_p()) 1
GO(regexp).set(state->new_class(, 1
temp[pos] 1
EDBHandle 1
account->deleteQueueFile(); 1
useAuth 3
colliding.removeAt(i); 2
if(collectOutput) 3
QPipeReaderThread(Q_PIPE_ID 1
Q_INTERFACES(PsiPlugin) 8
if(need_status 6
Q_UNUSED(u); 1
hb2->addWidget(d->cb_type); 1
nonAnonymous 1
m_model->beginInsertRows(QModelIndex(), 1
Charset::digit2char(remainder.word_at(0)); 1
XData::Field::Option 8
dbusIface->unregisterService(name); 1
sec_buf.clear(); 1
SecureMessage::~SecureMessage() 2
painter.fillRect(texture.rect(), 1
QGraphicsItem 2
switch(item->GetState()) 1
suggestedIndex++; 1
with 2
NeoBattery::NeoBattery(QObject 2
statusBar()->show(); 1
if(siblingMeta 1
dirty 10
if(pi->p 6
services_.insert(acname, 1
QDesktopServices::openUrl( 2
i->updateInfo(); 1
if(should_lock) 1
G(thread)->set_const(state, 1
m_saveTimer->changeOccurred(); 13
url.insert(0, 1
if(NIL_P(val)) 2
setMovable(true); 1
setObjectName(QString().toString())); 1
++d->pending; 1
updateViewToolBarAction(); 3
if(s.isNull()) 1
ui_.le_server->showPopup(); 1
mycall(worker, 4
FileTuneController::FileTuneController(const 1
graphicsitem_.setPath(painterpath); 3
d->gr_form->hide(); 2
TEST_CASE(ret7); 1
http_->get(SERVERLIST_PATH); 1
connect(tmr, 1
requestList(defaultList); 1
if(node_.isProcessingInstruction()) 3
tune.setName(CFStringToQString((CFStringRef) 1
pause(); 1
sce 1
ProtectorChain::protect( 1
FailedTests 1
QString& 1
statusOnline->setWhatsThis 1
scp 1
i->data(0, 1
addItem(contact, 1
errmap[GpgOp::ErrorSignerExpired] 1
DefaultRandomContext(Provider 1
if(pChildElement 1
s->setAuth(d->proxy.user(), 3
d->lv->setSizePolicy(sp); 1
numberToString( 2
sysInstall(); 1
state->om->store_object(dup, 1
voiceCaller_->session_manager_->OnSignalingReady(); 1
item.dateTime 1
RichListViewItem::~RichListViewItem() 1
actSearch 1
DownloadItem 3
atEnd 2
painter.drawRoundRect(0, 1
pItem->SetLabelPreformated(true); 1
selectStatusPreset(-1); 1
buttonBox->setCenterButtons(true); 1
TLSSession::~TLSSession() 1
if(d->consoleMode) 4
d->findStr 1
m_tabWidget->currentLineEdit()->setText(url.toString()); 1
resp.result() 1
d->authzid 1
pass 7
sourceModel()->removeRows(start, 1
pItem->SetCanQueue(false); 1
ca_merge 1
busy->start(); 5
switch(r) 1
preset.appendChild(text); 1
ui.accountsComboBox->addItem( 1
setColumnWidthMode(i, 1
if(key 10
qmDir.cd( 4
gpg.doSignClearsign(signerId); 1
icon.setName(name); 1
TEST_CASE(pointer_to_pointer); 1
infoString 1
badPassphrase 3
d->lb_time->setText(str); 1
if(item) 3
tab_main->removeTab(tab_main->indexOf(tab_connection)); 1
prevId 2
setUseDetectTimer(false); 1
CertificateCollection::CertificateCollection(const 1
setStatus(status.type()); 1
ui_.pb_accept->setEnabled(false); 9
gMessageSystem->addVector3Fast(_PREHASH_Scale,			scale 1
free(title); 1
GameBoard::sendText() 1
connect(addFolderButton, 1
d->le_sp_priority->clear(); 2
mp_neg(n, 3
if(e.type 2
out_mech 1
newFrames.last().impix 1
getDefault_default_ 1
uint8 9
errorMessage() 1
appendSysMsg(tr(), 5
battery(0), 2
map[4] 2
agent->start(); 2
d->pb_reply 1
grid->addWidget(chb_kbd,5,0,Qt::AlignCenter); 1
Instance() 1
if(handlers[n].h 1
VirtualUnlock(ptr, 1
GFX_CHANGED(); 4
QPrinter 1
bookmarkActions_.insert(action, 1
m_pReader->Create(this, 1
variant 4
force.normVec(); 1
WbNewItem::~WbNewItem() 1
button->setUpdatesEnabled(FALSE); 2
msg.priv 2
xprocess->kill(); 2
lw->setVisible(scr 1
tabWidget_->showPage(chat); 1
_active 1
loadDefaultState(); 1
groups.append(tr()); 1
LLPCode	LLToolPlacer::sObjectType 1
unselectAll 1
if(fi->done) 1
proc_relay 4
ui_.gb_server->setEnabled(false); 1
parentWidget_->isMaximized() 1
d->section 4
G(staticscope)->setup(this, 1
QDrag 4
d->act_find->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
for(std::vector<LLHUDTextSegment>::iterator 1
QHeaderView 1
mUseTimer 1
JT_XSearch(Task 1
Q_EXPORT_PLUGIN2(winampplugin, 1
icon_->stop(); 2
state->global_cache->retain(state, 1
hb2->addWidget(d->pb_prev); 1
tabMenu_->addMenu(sendTo); 1
addAction(m_initialActions.at(i)); 4
d->searchText->setFocus(); 1
RosterExchangeEvent 1
LPVOID 3
if(idx 2
QMetaObject::invokeMethod(handlers[i.handler_pos].h, 1
slist 2
if(format 1
gViewerWindow->getWindow()->setCursor(cursor); 1
LLBufferArray::segment_iterator_t 7
edit.setAttribute(keyToString(key), 1
m_saveTimer->saveIfNeccessary(); 4
setMirrorEnabled(false); 2
if(jid2.mid(n, 1
QToolBar 9
d->configDlg->setRoleAffiliation(role, 1
if(!tbl) 3
Q_INTERFACES(TuneControllerPlugin) 2
Data_Get_Struct(x.value(), 2
PsiTextView::Selection 2
d->pb_customRosterDelete->setEnabled( 1
Q3PtrList<TransferMapping> 3
if(ke->bKeyDown 1
TimerInfo() 1
stdCOut().flush(); 3
process->terminate(); 2
DataParser 1
xform_obj.setRotation(x, 2
if(maxsize 1
d->data.pa->dialogUnregister(this); 1
loadAccount(acc); 1
XSendEvent(dpy, 1
if(d->anim 1
event::dispatch((Event 1
QMap<int, 5
button->setZValue(3.0); 1
bar.setShowTabBarWhenOneTab(showTabBarWhenOneTab); 1
d->trayMenu->insertItem(tr(), 4
if(entry->at(0) 3
CookieModel 2
url.append( 17
fclose(fvibro); 1
Cancel 1
autoItems 6
ChangePasswordDlg::ChangePasswordDlg(PsiAccount 1
fig[7] 1
Mutex 6
static_cast<HashContext 2
!FUN_INTERPRETED(fun) 1
m_status_remain_message->setContentsMargins(10, 1
PublicKey 4
layout->setContentsMargins(0, 1
self 6
if(children.item(i).isElement()) 4
m_mazes_algorithm->addItem(tr(), 9
also 1
QMessageBox::about(this, 3
PsiIconset::instance()->reloadRoster(); 1
lb_pwnew->setEnabled(enabled); 1
textp->setLOD(2); 1
if(mVertAlignment 1
find(QWebPage::FindBackward 1
}						\ 1
Protector 2
altInvisibleGroup_ 2
TEST_CASE(varScope6); 1
Ui::ProxyDialog 1
actionQueue 17
PSendSysMessage(LANG_SET_UINT_FIELD, 1
ck_automatic_resource->setChecked(acc.opt_automatic_resource); 1
layout->addWidget(buttons, 1
xml.writeEndElement(); 2
d->pb_form_cancel->setEnabled(true); 1
this->config 1
Random::Random(const 2
callbacks[1].proc 2
keybind.fromXml(r); 1
d->le_pass->setText(s.pass); 1
iconSharedObject->unpackPath 1
d->opt_ascii 1
Base 6
contact->setStatusMessage(r->getStatusMessage()); 1
_next->_prev 1
if(d->f.isOpen()) 1
runner.addTest( 1
(int) 1
d->pipeCommand.writeEnd().write(a); 2
name.sprintf(, 1
LLVector3d 3
pending_requests_.removeAll(a); 1
bitmap 5
socket.connectToServer(serverName); 1
numIconsets 6
pb_complete 4
JDnsSharedRequest::Error 4
bytes 8
connect(d->pb_emoUp, 2
AccountAddDlg::AccountAddDlg(PsiCon 1
widget.restoreState(state); 1
isComposing_ 4
Mutex_Holder 3
m_downloadHistory 2
if(typestr 1
bg_color->insert(d->pb_cAnimFront); 1
connect(m_reply, 5
SystemWatch::SystemWatch() 1
QDBusInterface(d->dbusName(profile), 1
if(opath->nil_p()) 1
ui_.lb_valid->setText(tr()); 1
shutting_down 1
OpenGameDialog 1
FigureDialog::paintEvent(QPaintEvent 1
TestRunner::WrappingSuite::doGetChildTestAt( 1
tr() 4
tr(, 1
d->list.insert(d->list.find(ei), 1
connect(cleanupButton, 1
if(d->reqtype 2
last 7
generateRemoves(attributes.item(i)); 1
i.name 2
pb_transGet->setEnabled(false); 2
if(d->section 2
foreach(XMPP::XData::Field 2
sasl_dispose(&con); 1
services[); 6
d->le_from->setText(expandAddresses(e->from().full(), 1
ProxyManager::~ProxyManager() 1
Registries 1
set_timer(modules.timer()); 1
QMessageBox::information(this,tr(), 1
if(instances.isEmpty()) 3
Q_ASSERT(walls 2
ui_.cb_ident->setController(controller_); 1
qLog(Hardware)<<<< 1
pm->insertItem(tr(),11); 1
d->treeShortcuts->addTopLevelItem(topLevelItem); 1
~AdvancedWidgetShared(); 1
setGeometry(geometry); 1
setKeyID(true, 1
sFlags[1] 1
stream.setCodec(); 1
newWbItem_ 8
if(!useAux) 1
m_viewBookmarkBar 1
top_set--; 1
talk_base::PhysicalSocketServer 1
ReadyRead, 2
if(s[0] 1
migrateColorEntry(tag, 12
am->setItemEnabled(18, 1
message.append(applicationPoolServerExe); 1
o.backgroundColor 1
if(pub.isNull()) 3
sig_done 2
GameBoard::GameType	mytype; 1
view->setWindowTitle(tr().arg(currentTab()->title())); 1
server_realm 1
connect(allowForSessionButton, 1
if(!d->cvi) 2
LLViewerParcelMgr::getInstance()->selectCollisionParcel(); 1
if(config_) 1
ConsoleThread(QObject 1
lock->dying(); 1
TEST_CASE(ifelse6); 1
DynamicLibraryManagerException::Cause 1
item.setValue(value); 1
frames.append(frame); 1
ui_.listView->setCurrentIndex(item->index()); 1
d->iss_servicesRoster->clear(); 1
DDX_Control(pDX, 1
parent_ 6
if(packet_out_pending 1
instances.removeAll(instance); 1
negotiation.appendChild(doc.createElementNS(SXDENS, 1
pms->count[1]++; 1
data.setFields(data_->fields()); 1
if(haveAlready) 2
mp_div(MP(this), 1
d->pre_command 2
while(length 2
UnZip 1
Ok 1
if(element.parentNode() 1
if(d->pending 1
item->repaint(); 2
if(ai.sec 1
pi.id 2
mNetworkPanel->setDefaultBtn(default_btn); 1
d->cb_tabGrouping->setCurrentIndex(1); 2
if(check_signs) 1
type.eventClass 1
while(!recentlyRelocatedNodes_.isEmpty()) 1
d->lw_selectedActions->clear(); 1
TextTestRunner::~TextTestRunner() 1
m_transform.Reset(); 1
m_cache->setEnabled(false); 2
::bringToFront(tabSet, 1
defaultUser 2
resize(settings.value(, 1
gAgentPilot.stopRecord(); 1
out.append(hex); 3
effectp->setColor(LLColor4U(gAgent.getEffectColor())); 3
state->return_value(Qfalse); 1
MoodCatalog 2
actionAdd(u->jid()); 1
Features(features)); 1
cvlist->setFilter(text); 1
instanceForQJDns.insert(i->jdns, 1
Private(QWidget 1
jsdtrace_fun_classname(JSFunction 1
if(this->transcoder) 1
accepted(); 1
form.fromXml( 2
QXmlStreamWriter 1
TEST_CASE(switch3); 1
if(!emails.contains(i.value())) 1
d->pa->setNick(d->pa->jid().node()); 1
CornerItem 1
expected_ancestors.push(Module(rb_mKernel)); 1
~Server() 1
if(!packet_from_net.isEmpty()) 2
m_bEncodeAC3 2
LLVector3d		mouse_direction; 1
frame_data.mNumTriangles 1
pm.setItemEnabled(17, 1
IconSelect 1
m.setBody(tr().arg(m.subject())); 1
resize(640, 2
tmp->field[i] 1
CapsManagerTest(); 1
TestFailure::sourceLine() 1
mp_digit 1
TextObjectIterator 3
sock 3
switch(e->type()) 2
readShortcuts(PsiOptions::defaults()); 1
(y_pixel_vec 1
~PythonPlugin(); 1
qa_ren->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
tb[i].index 1
list_.create(WS_VISIBLE 1
TEST_CASE(func9); 1
hex.sprintf(, 5
buffer.append(, 1
setIcon( 2
m_ofn.Flags 1
connect(busy, 1
d->srv.resolveSrvOnly(d->server, 1
if(!sectmp.open()) 1
QTextDecoder 1
chan 2
d->usesDropDown 1
char 243
setCursorPosition(0); 1
isSmartBattery 7
items_.clear(); 1
tabs->addTab(gameplay_tab, 1
d->lb_top->show(); 1
painter.translate(m_unit, 1
tr().arg(name)); 4
if(!jdns->init(QJDns::Unicast, 1
if(groupChat 1
Add(panel->m_largePanel); 1
LEGOPTP.onevent[eSystem] 1
n.binary_encode(binary); 1
if(d->dns.isBusy()) 1
connect(d->pb_customRosterAdd, 1
m_historyBack->setShortcuts(QKeySequence::Back); 1
lang 5
PsiPopup::Private::Private(PsiPopup 1
connect(d->pb_soundReset, 1
this->showWithoutActivation(); 1
dialog.tree->removeSelected(); 1
GameBoard::initMap() 1
d->mucManager->ban(contact->s.mucItem().jid()); 1
for(Q3ListViewItem 8
if(last 2
GameProtocol::setGameType(Q3Socket 1
Jid 98
srand( 1
if(jtVCard->success()) 2
connect(manager_,SIGNAL(changeList_error()),SLOT(changeList_failed())); 1
model_->setViewActionsService(actionsService_); 1
gb_prop->setEnabled(false); 2
ck_automatic_resource->hide(); 1
d->contactList 1
XMPPRosterItem::~XMPPRosterItem() 1
0x61, 1
if(!credit.isEmpty()) 1
myprint 2
qa_chat 1
AHCommand::Action 1
offline_option.value 1
(const_cast<SearchLineEdit 1
act_pgp_->setEnabled(false); 1
style_option.init(this); 1
action->setChecked 2
p[len] 1
pm_settings_->addAction(act_pgp_); 1
d->pb_form_cancel->show(); 1
battery->setCharge(capacity); 2
set_syserr(EPERM, 1
if(obj->loop) 1
AskerPrivate(TokenAsker 1
bookmarks->insertItem(QString(tr()).arg(c.name()), 1
Deinitialize(); 1
d->setNextAnim(nextAnim); 1
mDropShadow 2
QLineEdit::clear(); 1
ui.statusEdit->setEnabled( 3
SET(cur_last, 1
_suiteFailedTests 1
while(!entry->nil_p()) 4
d->searchWidget 1
FREE(stra); 1
Token::eraseTokens(tok, 4
piece->attachNeighbors(); 1
connect(event, 1
if(op->type 2
customPal.setDisabled(customPal.inactive()); 3
if(ui_.le_fullname->isModified()) 1
vb4->addWidget(pb_close); 1
m_bookmarksToolbarFrame->setMidLineWidth(0); 1
if(str1.at(n+at).toLower() 1
GO(regexpdata).set(state->new_class(, 1
ui.hostEdit->setText( 1
m_label->setText(tr().arg(value 1
bigint_shr1(get_reg(), 1
actual, 1
setText(); 3
QVERIFY(widget.nextTabAction()); 1
d->ask(e); 3
d->self 7
updateTabBar(); 2
option.emoticons 2
m_stopReload->setToolTip(tr()); 2
next 9
ui_.toolbar->setIconSize(QSize(16,16)); 1
QTimer::singleShot(5000,this,SLOT(unsetConnecting())); 1
GO(bytearray).set(new_class(object, 1
CertificateOptions::CertificateOptions(CertificateRequestFormat 1
pubsub.appendChild(items); 1
rich 12
client_ 1
list_.setStyleEx(LVS_EX_FULLROWSELECT 1
toolBar->setSizePolicy(QSizePolicy::Expanding, 1
KeyDerivationFunction::KeyDerivationFunction(const 2
m_scrolling 3
parentNode.appendChild(node); 1
board->newGame(); 1
TEST_CASE(func10); 1
m_suite.addTest( 1
gc->object_memory->write_barrier(target, 2
iDest 1
m_lastSavedUrl 7
process 8
lock 2
locs 6
doc->setUndoRedoEnabled(false); 1
BigInt::Base 1
qtTranslator.load(QString() 1
qLog(Hardware)<< 2
result_haveClientInit 3
t.scale(sy, 1
NeoPhoneBook::NeoPhoneBook( 1
d->attachView->hide(); 2
if(e.hasAttribute()) 3
XSetWindowBackgroundPixmap( 1
Q3PtrList<QLineEdit> 2
ui.verticalLayout_2->addLayout(hlayout); 1
if(item->isAlerting()) 1
d->jt->get(Jid(d->services[x])); 1
connect(pb_next,SIGNAL(clicked()),SLOT(next())); 1
profileDir.rmdir( 1
AddUrlDlg::~AddUrlDlg() 1
Q_ASSERT(model->parent(childIndex) 1
disconnect(m_timeLine, 1
foreach(UserAccount 4
if(!QFile::exists( 1
kc->set(skey, 2
psi->processEvent(event, 1
type.eventKind 1
setItemsExpandable(false); 1
Works 2
qPrintable(tempFileName()), 2
connect(act, 7
Selector::init(state); 1
if(needed 1
TEST_CASE(if9); 1
it.next(); 4
QApplication::setQuitOnLastWindowClosed(true); 1
this->r 1
have.user 2
s[2] 1
p.resize(at 2
R2(b,c,d,e,a,24); 1
d->issuerLocations 1
connect(ui_.pb_accept,SIGNAL(clicked()),SLOT(accept_call())); 1
setSelfDestruct(60 3
connect(options, 1
d->local.addr 1
PlugInManager::load( 1
LEGOPTP.singleclick 1
matrix 1
WebView::WebView(QWidget 1
set_string(as<String>(obj)); 1
BOOST_REQUIRE(i->is_int()); 1
pb_complete->setFocus(); 1
d->ck_showMenubar->hide(); 1
tb[2].keys 1
-1, 2
CombinedTuneController::~CombinedTuneController() 1
m_message 5
m_timer.stop(); 1
could 1
Q_ASSERT(!m_active_tiles.contains(tile->parent())); 1
trySendEncryptedNext(); 2
BrowserApplication::BrowserApplication(int 1
if(!any_busy) 1
d->sb_asOffline->setMinValue(0); 1
LLColor4 7
signGood 2
data_container_->setWidgetResizable(true); 1
StatusWidget::setCurrentLogin( 1
scene 1
++iconsets; 2
cm->iseq->opcodes->put(state, 1
le_name->setText(acc.name); 1
Q_UNUSED(index) 1
setHeight( 1
gameplay_layout->addWidget(m_gameplay_path, 1
d->recentNodeList.remove(it); 1
le_transPrompt->setFocus(); 1
QProcess::startDetached(prog, 1
connect(trayicon_,SIGNAL(activated(QSystemTrayIcon::ActivationReason)),SLOT(trayicon_activated(QSystemTrayIcon::ActivationReason))); 2
QAtResultParser 2
QWhatsThis::add(d->ck_rosterAnim, 1
d->attachView->show(); 1
for(EDBItem 2
ASSERT_EQUALS(2, 6
o.take(w, 1
QWhatsThis::add(d->pb_fRoster, 1
if(!scanned_static) 1
JDnsShared 2
PsiOptions::instance()->setOption(,d->ck_keepSizes->isChecked()); 1
PsiIconset 5
errmap[QProcess::Timedout] 2
SET(b, 16
scale(); 4
line->setFrameStyle( 1
vsoUsbCable.sync(); 1
delegate_->create(this); 1
setStatus(Rejected); 1
cursor.setCharFormat(charFormat); 1
++m_segment; 1
hb2->addWidget(d->tb_info); 1
view->header()->hide(); 1
fseek 2
Q_UNUSED(i); 4
act_browser 1
clipboard->setText(url); 1
timer(0) 1
foreach(QWidget 5
quitAction 1
d->connect_certificateRequested 2
Mode 1
addLine(wtext, 1
PsiOptions::instance()->setOption(,d->ck_spell->isChecked()); 1
le_priority->hide(); 1
v.setTitle( 2
d->gr_form->setEnabled(false); 2
copy->zone 1
QLinearGradient 2
fetchingMore 6
showOffline(v_showOffline); 1
layout_->addLayout(stacked_); 2
pos=pos+strlen(&buf[pos])+1; 1
connect(le_jid, 1
Charset_Transcoder 1
event->setDropAction(Qt::MoveAction); 1
act_mailto 1
ProxyChooser::~ProxyChooser() 1
tune.setName(stream.readLine()); 1
if(d->le_to->text().isEmpty()) 1
mp_add_d(MP(this), 2
main_module_ 1
d.remove(info.fileName()); 2
closeButtonBackLayout->addStretch(); 4
f.writeBlock(data); 1
ev.xfocus.detail 1
m_page->m_keyboardModifiers 1
reg2.RegComp((. 1
connect(m_viewBookmarkBar, 1
defaultSettings->setAttribute(QWebSettings::PluginsEnabled, 1
errout.str()); 1
va_start(ar, 1
act_scrollup_ 1
if(d->offset 3
bottom2->setPalette(backgroundPalette); 2
Pooling_Allocator::~Pooling_Allocator() 1
powerHandler 2
rb_->registerAccount(, 2
Private(PsiCon 2
d->cv->qa_rem->setEnabled(true); 2
SxeRecordEdit 2
roster.setAutoDelete(false); 1
frame 9
tmp->klass 1
statusChanged(id); 1
foreach(PubSubRetraction 1
Certificate::Certificate() 1
imagePainter.drawTiledPixmap(rect(), 1
buttonBox->addButton(acceptButton, 2
info_el.setAttribute(,avatar_image.numBytes()); 1
sl.splitstr 4
RosterExchangeItem 1
sp.setMessage(PsiOptions::instance()->getOption(base+).toString()); 1
reset(ResetSessionAndData); 4
if(subType 1
resetNeed(); 1
ap_hook_map_to_storage(map_to_storage, 1
m_searchHistory 2
Qt::ToolButtonIconOnly); 1
addr.locality 2
FancyLabel::setSmallFontSize( 1
ushort 8
PsiContactList::PsiContactList(PsiCon 1
TESTCASE(define_singleton_method_simple) 1
v_status 2
m_controls_down 1
prevPopups.append(prev); 2
ConsolePrivate(Console 1
foreach(JDnsSharedRequest 3
Q_UNUSED(d); 2
frame->setFrameShadow(QFrame::Raised); 1
setCurrentIndex(newIndex); 1
TestRunner::TestRunner() 1
if(_pass) 1
migrateBoolEntry(p_groupchat, 2
proc.writeCommand(b); 1
m_bPassthrough 2
ui_.mle->chatEdit()->setDialog(this); 1
splitter_ 1
anchorOnMousePress 1
TEST_CASE(func11); 1
d->mechlist 1
account()->groupChatLeave(jid().host(), 1
> 1
rb_ 2
addBookmark(menu(), 1
m_scale_level_max(0), 1
if(e->u.groups().isEmpty()) 1
QGraphicsTextItem::focusOutEvent(event); 1
if(d->contactList) 2
GroupItem::~GroupItem() 1
qDebug(QString().arg(from).arg(n).arg(data->data.length())); 1
if(!rname.isEmpty()) 2
voiceCaller_->reject(jid_); 1
setSeparatorRole(BookmarksModel::SeparatorRole); 1
kFirstTableOffset 1
if(selectedItems().size() 2
doAlertIcon 4
target->installEventFilter(this); 1
cvi 1
ui_.le_pcode->setEdited(x); 1
out[2] 1
QMetaObject::invokeMethod(loop, 1
msg.recv 3
deactivated(); 1
QStandardItem 4
if(out.at(x2).isSpace() 2
lv_results->removeColumn( 1
if(writeResult 2
app.processEvents(); 1
resize(PsiOptions::instance()->getOption().toSize()); 3
connect(t,SIGNAL(finished()),SLOT(listReceived())); 1
migrateBoolEntry(p_roster, 3
symbol, 1
identity 1
XmlConsole::XmlConsole(PsiAccount 1
ContactListContact 3
XmlDocument::encoding() 1
ofs 1
LLWaterParamManager::instance()->setDensitySliderValue(val); 1
addr.country 2
ensureItemVisible(i); 1
XFREE(arg_types); 1
CornerType 1
opttab->restoreOptions(); 2
OptionsTabAdvanced::~OptionsTabAdvanced() 1
cricket::NetworkManager 1
qWarning(QString().arg(edit->rid()).arg(version_).arg(edit->version() 1
d_ptr( 4
affiliations_model_ 1
d->start(true); 1
domElement.appendChild(yElement); 1
game_menu->addSeparator(); 3
count++; 2
setTrayOwnerWindow(dsp); 1
call->RejectSession(call->sessions()[0]); 2
if(!d->handles.isEmpty()) 1
if(owner) 1
y.set_sign(BigInt::Positive); 1
if(!PsiOptions::instance()->getOption().toString().isEmpty()) 1
chb_wm->setText(tr()); 1
_l->enterWorld( 1
Agents 1
pControl->DoRender(currentTime); 1
while(response.hasChildNodes()) 2
d->proc->setReadChannel(QProcess::StandardOutput); 2
loadPage(0); 1
ui.settingsButton->setShortcut( 2
QtopiaServerApplication::taskValueSpaceSetAttribute(, 2
ui_.tb_emoticons->setMenu(pa->psi()->iconSelectPopup()); 1
StatusType 3
LLFloaterEnvSettings::~LLFloaterEnvSettings() 1
jt->get(di.jid()); 2
XmlPrompt::~XmlPrompt() 1
if(found 3
if(state->om->collect_mature_now) 1
connect(d->pb_edit, 1
acceptCombo->setCurrentIndex(0); 1
fig[9] 1
expanded_ 1
group->setIcon(((IconAction 1
md5_process(pms, 2
setPaletteBackgroundColor(Qt::white); 1
qRegisterMetaType<gpgQCAPlugin::GPGProc::Error>(); 2
Q3PtrList<EDBHandle> 1
p.drawLine 1
union 5
if(!gPieSelf) 1
actStop->setEnabled(false); 2
gm->insertItem(ContactView::tr(),n+base_group); 1
QCA_logTextMessage(QString().arg(c->provider()->name(), 1
c.trunc 1
setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff); 1
Details::const_iterator 2
if(!r.status().songTitle().isEmpty()) 1
terminate(); 2
d->proc_relay 2
d->pb_chat->hide(); 3
addFailedTest( 1
initMenu(); 1
if(!iqVerify(x, 13
data.tasks 1
newEdit->setCheckSpelling(ChatEdit::checkSpellingGloballyEnabled()); 1
d->qdns->disconnect(this); 2
Event::Event(const 1
obj->moveToThread(orig_thread); 1
LEGOPTP.autoCopy 1
m_board->setFocus(); 1
actionGroupRemove(u->jid(), 3
ui_.cb_recent->addItem(s); 1
CertCloseStore(hSystemStore, 2
private: 130
d->ck_auth->setChecked(false); 1
pm.insertSeparator(); 14
rec.ttl 3
d->tabWidget3->unsetPalette(); 1
block_waiting_ 3
NULL 3
XModifierKeymap 1
ui.searchInfo->setText(infoString); 1
d->saveName 1
d->index.clear(); 1
PSendSysMessage(LANG_TOO_BIG_INDEX, 3
quit(); 1
quint64 2
details 3
newFrames.last().period 1
suites().activateAll(); 1
account->setEnabled(enabled); 1
connect(t,SIGNAL(finished()),SLOT(setBookmarks_finished())); 1
webView->loadUrl(args.last()); 1
RemoveBookmarksCommand 1
m_transformRefreshTimer->start(ms); 1
connect(d->tasks, 2
BrowserApplication::downloadManager()->show(); 1
if(arguments) 1
edit.show(); 2
icon.setText(text); 1
UNKNOWNLINENUMBER; 1
chat_option.value 1
StaticSuiteDescription::StaticSuiteDescription( 1
DockTestWidget( 1
ck_log->setChecked(acc.opt_log); 1
HttpAuthEvent::HttpAuthEvent(const 1
GrowlTestWidget 1
layout->addWidget(m_bookmarksToolbar); 1
first_scan 3
need_cardOkay 3
Loop::~Loop() 1
keyPressEvent(static_cast<QKeyEvent 1
CPPUNIT_ASSERT( 1
e->accept(e->mimeData()->hasText()); 2
CFArrayRef 2
actionsService_->modifyAccount(account); 1
AdvancedWidget<QWidget>::paintEvent(event); 1
m_historyForward->setMenu(m_historyForwardMenu); 1
OptAppearanceUI 3
QModelIndex 125
requestLastActivity(); 2
act_send_message 1
mDisplayPanel->cancel(); 1
setCursor(QCursor(Qt::WaitCursor)); 3
cmd 1
m_styleSheet 1
m_localServer 1
set_syserr(EBADFD, 1
DummySuiteDescription::DummySuiteDescription() 1
TextTestRunner::wait( 1
fields_container_->updateGeometry(); 1
setPixmap(BrowserApplication::instance()->icon(url).pixmap(16, 1
headerView->setResizeMode(ContactListModel::NameColumn,QHeaderView::Stretch); 1
RichListViewStyleSheet 2
QList<char 1
c.append(other); 1
session_->insertNodeBefore(selectedwbitem->node(), 2
Q_ASSERT(m_children.size() 1
actBack->setEnabled 1
QGraphicsView::mouseMoveEvent(event); 1
if(rname.isEmpty()) 2
m_animations.clear(); 1
fixed->setToolTip(f.desc()); 1
m_plugIns.push_back( 1
bind(&Server::statusReportThreadMain, 1
bootstrap_exceptions(); 1
if(d->pipeWriter) 1
JT_XRegister 1
ui_.cb_ssl->addItem(tr(),UserAccount::SSL_Yes); 1
TestResultCollector::freeFailures() 1
~Impl() 3
item->setText(0, 4
rb_enable_super(klass, 1
TEST_CASE(class3); 1
tabWidget_->setTabTextColor(chat, 3
appendArray(buf, 2
UserAccountList 4
foreach(QGraphicsItem 13
PGPUtil& 1
brd 2
dlg->queuedSendTabTo(chat, 1
hb2->addWidget(d->tb_url); 1
list.append(icon); 1
flat_(false), 1
DynamicLibraryManagerException::DynamicLibraryManagerException( 1
#pragma 8
bSuccess=pNode->GetContent(items); 1
std::size_t 4
d->le_pass 1
if(!isHidden()) 3
lseek(fd, 1
d->transferList.append(i); 1
Q_ASSERT(global); 1
gUser, 1
result->startTest(this); 1
err 31
snl.nl_groups 2
status.setType(PsiOptions::instance()->getOption(base+).toString()); 2
Header 2
if(GetAngle() 1
state[4] 1
ui.moreButton->setToolTip( 1
xElement.appendChild(doc.createTextNode(valueStr)); 1
m_sourceRowCache.removeAt(row); 1
pb_transGet->setEnabled(true); 1
TwitterAPI::TwitterAPI( 3
d->pathLimit 2
m_slider->setSizePolicy(QSizePolicy::Minimum, 1
e->account()->eventQueue()->dequeue(e); 3
setTrackStats(FALSE); 1
pair<set<ClientPtr>::iterator, 1
ui_.cb_recent->setEnabled(enabled 1
timeToEmptyFile 4
MockPrivacyManager::MockPrivacyManager() 1
switch(ev->type) 1
cb_ssl->addItem(tr(),UserAccount::SSL_Auto); 1
memset(output 1
dropPath.closeSubpath(); 1
showScreen(QX::ScreenMain); 10
downButton_->show(); 1
if(sig_read) 2
iconsets_ 2
num_entries 1
errmap[QProcess::Crashed] 2
trackerIdForKeyStore.insert(ks, 1
info.appendChild(identity); 1
contacts_.insert(ContactSpec(contact), 1
trayIcon->setToolTip( 1
SAFELY(Pa_WriteStream(m_pStream, 2
Q_UNUSED(role); 3
delegate_.growlNotificationTimedOut 1
connect(d->proc_relay, 12
m_active_tiles.constBegin().key()->attachNeighbors(); 1
connect(m_historyHome, 1
QPrintDialog 1
m_widget->resize(event->size().width(), 1
vbox->setSpacing(0); 1
session_->insertNodeAfter(newWbItem_->serializeToSvg(), 2
data[active].state 1
AHCommand::Status 1
ci.name 1
if(!d->cv->isShowAway() 1
m_stopIcon 1
i.plain 1
bandNames 2
i.key()->moveBy(delta); 1
p.drawPie(rect(), 2
obj->d->published.removeAt(n); 1
m_locations.append(QCoreApplication::applicationDirPath() 1
m_width 1
TemporaryFile 1
identities, 1
fp->close(false); 1
button->key 2
l 46
connect(m_recentlyClosedTabsMenu, 2
glColor3f(0, 1
CUtil::WipeDir(strCachePath); 1
slen 33
setCaption(QString().arg(r.data().title()).arg(receiver.full())); 1
Q_UNUSED(previous); 1
m_windowMenu->clear(); 1
Type 5
depth++; 1
bConf->setToolTip(tr()); 1
parent->insertChild( 1
TestSuiteBuilderContextBase::makeTestFixture() 1
d->panel[i].Spin(SPINRATE); 1
m_scale(0), 1
tc.movePosition(QTextCursor::StartOfWord, 3
pParent=pParent->GetParent(); 2
addFailure( 2
reply->ignoreSslErrors(); 2
SetColor(_r, 1
w.wait(&m); 7
connect(&qcaKeyStoreManager_, 1
cb_profile->clear(); 1
d->le_to->setCursorPosition(x); 1
gAgent.getID(), 1
action->setChecked(PsiOptions::instance()->getOption().toBool()); 3
resourceCFStringRef, 1
if(metatype 2
TabWidget::Tab 1
Symbol 2
manager_->getItemsByAffiliation(MUCItem::Admin); 1
setTabOrder(d->le_to, 1
src_force.mV[VY] 2
v_late 3
theActualMessage 2
actionsService_->rename(contact, 1
KeyStoreInfo::~KeyStoreInfo() 1
connect(manager_,SIGNAL(changeActiveList_error()),SLOT(change_failed())); 1
connect(d->agent, 2
qLog(PowerManagement)<<<< 2
list.appendChild(( 1
c2eBrainTractGene 1
i.item 1
rosterServices_.insert(acname, 1
set_syserr(EDQUOT, 1
VMMethod::VMMethod(STATE, 1
f(element, 1
updateChildLayout(child); 1
actAdd->addTo(&p); 1
move(QSettings().value(, 1
optionsButton 1
ctx->ip 2
WebViewWithSearch::WebViewWithSearch(WebView 1
metacontact->setStatus(c->getStatus()); 1
ui_.cb_lists->clear(); 1
m_windowMenu->addAction(m_tabWidget->nextTabAction()); 1
setCaption(QString().arg(receiver.full())); 2
TEST_CASE(sprintf2); 1
mucInfoDialog(tr(), 4
if(i.type().known() 2
viewerText_->setObjectName(QString::fromUtf8()); 1
conv.setup(LineConverter::Write); 2
mSkinsPanel->setDefaultBtn(default_btn); 1
QFile::remove(backupFileName()); 2
memmove(output, 1
d->prevPopups.append( 2
ck_custom_auth->setChecked(acc.customAuth); 1
if(!isValid()) 3
le_nick->setText(); 2
avatarUpdated(); 3
TestResult::runTest( 1
newItem->setSizeHint( 1
switch(arg_types[i]) 1
connect(toggleShowOfflineAct_, 1
LineEdit::resizeEvent(event); 1
root->setOpen(true); 1
grid->addWidget(list, 1
QMetaMethod 1
proxy.setHostName(settings.value(QLatin1String()).toString()); 1
currentEntryId_ 2
hb4->addWidget(d->pb_http_confirm); 1
StatusListPrivate::StatusListPrivate() 1
m_uiChannels, 1
CUtil::Tokenize(szTrim,vecBufs,); 1
delta.rotate((-difference.x() 2
act_copy 1
textBox 1
painter.drawPixmap((column 2
FALSE, 1
edit.removeWidget((QWidget 1
toolbar_->addAction(act_end_); 1
xa_option.value 1
pm_settings_->addAction(act_modes_); 1
if(max_density_p(num_entries, 1
AppProfile 5
if(in.type 2
a.proxy_index 1
m_exceptions_allow 2
manager_->removeResource(resource); 1
++col; 1
d->reg(); 1
CPPUNIT_TEST(testFromXml_GroupType); 1
mp_init_set_int(&high, 1
webViewIconChanged(); 1
setWindowIcon(PsiIconset::instance()->status(STATUS_OFFLINE).impix()); 2
aFormCancel(data, 1
mSoftScreenRect.setCenterAndSize(screen_center.mV[VX], 1
tv_psi->setText( 1
setupMenu(); 1
if(!data.isNull()) 1
jsdtrace_function_rval(JSContext 1
ap_scan_script_header_err_brigade(r, 1
watchedWidgets_.remove(widget); 1
if(unreg) 1
d->text 1
if(RegOpenKeyExA(HKEY_CURRENT_USER, 1
m_mainWindows.prepend(mw); 1
do_quit 7
ui_.gb_server->setEnabled(true); 1
actionsService_->rename(group, 1
joinButton_->setEnabled(!jid().domain().isEmpty() 1
v_sentToChatWindow 3
BriefTestProgressListener::addFailure( 1
d->tw_isServices->resizeColumnToContents(0); 1
titleText->setPalette(titlePalette); 2
PRStatus 5
loadingColor 1
msecs 1
d->setPixmap(pix); 1
connect(&d->checkTimer, 1
if(beg 1
appendSysMsg(err, 1
AdvancedWidget<QWidget>::mousePressEvent(event); 1
if(i->className 2
animMainThread 1
LLFrameStats 1
setOption()); 1
if(button 3
jsdtrace_object_create_done(JSStackFrame 1
GetPrivacyListsTask(Task 1
_head 1
gn_ 1
locationBar->setWebView(webView); 1
ui_.le_role->setEnabled(x); 2
gMessageSystem->addVector3Fast(_PREHASH_RayStart,		ray_start_region 1
filterString_=QString(); 1
if((in.type 1
hasToolTip 2
GCUserViewGroupItem 1
q.get_reg().create(n 1
TabbableWidget::deactivated(); 2
disco->go(true); 1
PEPPublishTask 2
m.setEventId(eventId_); 1
QList<BrowserMainWindow 7
m_paused 2
tophbox->addWidget(top1); 2
callbacks[4].id 1
ringWatch(this) 1
++totalOnline; 1
closeButton->setFocusPolicy( 2
conn 3
i->deleteLater(); 1
while(1) 29
hb3->addWidget(d->lb_pgp); 1
e->ignore(); 32
MEMORY_BASIC_INFORMATION 1
BufferedComputation::~BufferedComputation() 1
MAction::MAction(const 1
view_->setViewActionsService(actionsService_); 1
MLabel 5
q.insert 1
dialog->resize(600, 1
cb_profile->insertItem( 1
tokenizer::iterator 2
gpg.cardOkay(); 2
d->certs.append(cert); 1
Q_ASSERT(at 3
client 2
settings.autoDealloc(istr); 1
if(from 7
MyPGPKeyContext 6
currentTab()->resetZoom(); 1
END_MESSAGE_MAP() 1
proxyType->setCurrentIndex(settings.value(QLatin1String(), 1
thanks 12
if(!sessions_.contains(sxesession)) 1
macSystemWatch->emitSleep(); 1
Mood::Mood() 1
qkey 4
sendCommandList(e.attribute()); 1
if(waiting 1
TabbableWidget::invalidateTab(); 1
themes_preview_layout->addWidget(m_themes_preview); 1
tmp.setWidth(rt->width()); 1
accountAdded(acc); 1
l->setWordWrap(true); 1
d->update(static_cast<CRLContext 1
dlg->cb_node->clear(); 1
lcm 3
if(!loader->load()) 1
AccountsComboBox::AccountsComboBox(QWidget 1
.$;>,' 1
::LocalFree( 1
PGPUtil::PGPUtil() 1
tree_.setComment(name,comment); 2
statusList 2
connect(pb_find, 1
d->tb_up->setEnabled(up); 1
data.hexlike(); 1
childSetAction(,&LLPreviewSound::auditionSound,this); 1
QTwitterApp::core()->decrementRequestCount(); 6
tb[0].keys 1
xdata_ 1
p.setBrush(palette().background()); 1
auto_auth_field.setRequired(false); 1
_failedTests 1
d->cvi->setProfileState(state); 1
session->sendHeaders(buffer); 1
.define_method(, 3
reject_call(); 1
connect(m, 9
QueueAnimation(ANIM_TYPE_WINDOW_CLOSE); 1
Provider::Context::Context(const 1
TestSetUp::tearDown() 1
cs.resize(1024); 3
peer 3
d->server 3
QPipeWriter(QObject 1
readBoolAttribute(j, 2
t.setEncoding(QTextStream::UnicodeUTF8); 2
connect(ui_.pb_add,SIGNAL(clicked()),SLOT(add())); 1
set_syserr(ENODEV, 1
HTML::CHTMLUtil::RemoveTags(strConverted); 1
connect(bookmarksMenu, 1
layout->addWidget( 2
TextTestProgressListener::~TextTestProgressListener() 1
TestCase::TestCase( 1
restoreColor(d->pb_cGroupBack, 1
GO(hash).set(new_class(object, 1
scan_object( 1
GO(blokctx).set(new_class(, 1
gPrivate, 1
Figure::str2map(coo, 1
d->lastIcon 1
connect(d->ck_toolbarLocked, 1
m_factories.insert( 1
initToolButtons(); 1
if(u.isPrivate()) 1
connect(pa->client(), 2
services_[contact->getAccountName()]->actionGroupRemove(contact->getJid(), 2
le_jid->setText(jt->prompt()); 1
if(!_ok) 2
p.fillRect(0, 2
m_sourceRow.removeAt(realRow); 1
if(jid.at(n) 2
setUndoRedoEnabled(false); 1
closeTrigger.stop(); 1
if(removeSmaller(meta, 1
top5->setFixedWidth(3); 2
d->ck_useEmoticons->setChecked( 3
CGUIWindow::~CGUIWindow(void) 1
HandlerBase(QObject 1
connect(alert_, 1
d->disconnectInstance(this); 1
initialized(false), 1
childp->mDrawable->clearState(LLDrawable::USE_BACKLIGHT); 1
text.end(), 2
stream.read(data, 2
translation.translate(-itemPivot.x(), 1
BigInteger::~BigInteger() 1
fieldsEnable(false); 4
locationNode->addElement( 2
QIODevice 2
if(strncmp(name, 1
PsiChatDlg::PsiChatDlg(const 1
interval 4
moveToMainThread(this); 4
if(scr 4
Displays 1
getDefaultList(); 1
actionsService_->userInfo(getActionItem<Contact 1
connect(toggleAvatarsAct_, 1
CPPUNIT_TEST(testCapsEnabled); 1
connect(acc_, 4
GO(symbols).set(SymbolTable::create(this)); 1
m_phoneBookIsReady( 1
set_syserr(ENOTEMPTY, 1
if(!d->sending 1
Qt::WFlags 2
if(client_init 1
handleTimerEvent(((QTimerEvent 1
connect(&m_expiredTimer, 1
feature.appendChild(doc.createTextNode(f)); 1
d->le_to->setText(expandAddresses(to, 1
e.setAttribute(,value_); 2
ac3_framebuffer 3
foreach(SxeEdit 3
closeTab(index); 1
mAudioPanel->cancel(); 1
if(prebytes 1
if(!d->packet_to_net.isEmpty()) 1
m.unlock(); 20
button->setText(QKeySequence(button->key).toString()); 1
FileTransDlg 4
dirWatchers_.append(dw); 1
ui_.lb_general_message->setText(text); 2
convertToUtf8(); 1
hw->move(2, 1
closeButton->setFixedSize(BUTTON_WIDTH, 2
game->insertItem(QPixmap((const 2
decstate 3
d->iss_defRoster->setItemSelected(d->iss_defRoster->lastItem(), 1
sp.toOptions(o); 2
mazes_layout->addWidget(m_mazes_preview, 1
if(value.isNull()) 1
gpg.doExport(_props.keyId); 2
clientinlen 1
button->setIcon(icon 2
set_msg(name 1
Form 6
g_graphicsContext.SetRenderingResolution(m_coordsRes, 1
check->setChecked(checked); 1
if(!arrayFromFile(fileName, 2
bg_font 2
m_dirtyTransforming 2
registerCaps(ApplicationInfo::capsVersion(), 1
results.clear(); 1
m.setTo(this->jid()); 1
FileAvatar::FileAvatar(AvatarFactory 1
Q_ASSERT(ret); 1
m_findPrevious->setShortcuts(QKeySequence::FindPrevious); 1
foreach(Url 1
sending 1
setParent(newParent); 2
for(x2 2
:QWidget(parent) 1
psiPopupList 2
qWarning(qPrintable(QString().arg(fromDisplay))); 1
if(start 2
jid_ 11
QWaitCondition 7
late_shutdown(); 1
oldparent->checkChildrenDnd(); 1
QObject::connect(wg, 1
extra 8
mazes_layout->setRowStretch(5, 1
le_dtProxy->setText(acc.dtProxy.full()); 1
m_outputter->write(); 1
QWhatsThis::add(d->pb_cGroupBack, 1
d->data[ 3
expandWithManager(index, 2
d->pipeWriter 3
connect(qcaEventHandler_,SIGNAL(eventReady(int,const 1
connect(page(), 3
m_navigationSplitter->restoreState(splitterState); 1
std::swap(signedness, 1
tcgetattr(fd, 1
status_field.setRequired(true); 1
while(lenstr.size() 1
trans 7
QVERIFY(is->optionsChanged(&oldOptions)); 2
it.setValue(jid); 1
object->mDrawable->mXform.setRotation(cur_rotation); 1
g->client_init 1
Shows 1
if(!ok) 16
VoiceCallDlg::VoiceCallDlg(const 1
d->cb_tabGrouping->setCurrentIndex(-1); 2
sUrl 1
GoogleFileTransfer::GoogleFileTransfer(cricket::FileShareSession 1
MetaClass 4
tab_main->removeTab(tab_main->indexOf(tab_misc)); 1
lbx_proxy->insertItem(( 1
d->actions.clear(); 1
Model 1
migrateBoolEntry(p_popup, 8
tmp->field_count 1
TrayIconWharf 1
d->hideTimer->start( 2
dtextTimer.stop(); 1
opts 2
lb_port->setEnabled(false); 1
decryptGood 2
setPreviewPhoto(str); 2
IconsetDetailsDlg 1
c->serverFirstStep(mech, 1
list.append(m_mainWindows.at(i)); 1
tabBar_->removeTab(i); 1
d->iss_emoticons->clear(); 1
_blank16.setImage(blankImg); 1
WebViewWithSearch 1
bounceRec.nmSound 1
SystemParametersInfo(SPI_SETFOREGROUNDLOCKTIMEOUT, 2
Private(SearchDlg 1
dtext.clear(); 1
newState(); 3
gameplay_layout->setColumnStretch(2, 1
ui.statusEdit->setText( 2
d->twitterapi->postDM( 1
if(list[n]->id() 1
doAgents(parentAutoItems); 1
d->late_close 2
if(sig_done) 2
pipeReader 5
TEST_CASE(erase); 1
switch(itemKind) 2
QCOMPARE(action->statusTip(), 1
lbx_profiles->removeItem(x); 1
connect(model_, 5
viewGroups->setWhatsThis(tr()); 1
account->actionDefault( 1
SafeDelete 1
(osvi.dwMinorVersion 1
d->mle->setFont(f); 1
CPPUNIT_TEST(testFromXml_JidType); 1
connect(account()->client(),SIGNAL(xmlIncoming(const 1
setFields(d.fields()); 1
ProxyEdit::~ProxyEdit() 1
neuron_var 1
readyReadTrigger.setSingleShot(true); 2
connect(act_clear_, 2
~IconsetSelectItem() 1
m.setBody(chatEdit()->text()); 1
TestResultCollector::testErrors() 1
d->setInformation( 1
bQuit 1
d->ck_alwaysOnTop->hide(); 1
StretchLogoLabel(QPixmap 1
d->le_player->hide(); 2
d->pgp_pub 2
BigInt 44
lbx_profiles->changeItem(name, 1
connect(d->c, 7
QVERIFY(action->shortcut().isEmpty()); 1
QList<CertContext 5
showHidden->setWhatsThis(tr()); 1
QPipeDevice 2
QTwitterApp 2
trayIcon->setIcon( 1
foreach(CapsSpec 6
if(obj->symbol_p()) 1
if(lo->inherits()) 1
d->remote.port 1
NONE, 1
mp_mul_d(MP(this), 2
hst->resize(w 1
updateHistory(GAMEOVER_TXT, 2
d->pb_auth->setText(tr()); 1
painter.fillRect(x1 1
m_corners[2][1] 1
if(retval.isValid() 1
if(r.isEmpty()) 2
MemoryMapping_Failed(const 1
d->le_port->setFixedWidth(64); 1
p->setFont(f_info); 1
m_theme->draw(painter, 14
QGenericReturnArgument 1
toggleStatusAct_->setChecked(true); 1
menu->addAction(pageAction(QWebPage::InspectElement)); 1
if(!d->proc) 6
map[62] 2
setCachingEnabled(false); 1
reply=QString().arg(playingWith_).arg(stanzaId).arg(data); 1
m_viewStatusbar->setShortcut(tr()); 1
pm.setItemEnabled(23, 1
changeLabel(); 3
HttpAuthEvent::~HttpAuthEvent() 1
connect(m_find, 1
barLayout_->add(closeButton_); 1
Module 19
g_event->askers 1
d->cb_proxy->setSizePolicy( 1
CFRelease(cf_description); 1
ext_ssf 3
m_bookmarksToolbar->setMaximumHeight(19); 1
while( 5
runApp(lineEdit->text(), 2
d->font 1
TEST_CASE(exit2); 1
d->pb_reply->setMinimumWidth(96); 1
d->ck_asXa->hide(); 1
BookmarkManageDlg::BookmarkManageDlg(PsiAccount 1
m_corners[0][2] 1
if(ui_.ck_enable->isChecked()) 1
Q_ASSERT(!d->console); 1
CFNotificationCenterRemoveObserver(center, 1
if((j 1
proxyModel->setSourceModel(model); 1
if((n 4
if((c 1
d->openTab(id); 1
if((a 1
obj->moveToThread(this); 1
known(-1) 2
group->setGroupInfo(QString().arg(inGroup)); 1
g.moveTo(r.right() 1
combo->setToolTip(f.desc()); 1
ASSERT_EQUALS(CheckMemoryLeak::New, 1
statusBar()->addPermanentWidget(status_message); 1
entries_ 61
mle()->setTextCursor(cursor); 1
qDeleteAll(m_pieces); 1
setDirName(dir); 1
GameBoard::sockClosed() 1
d->mle->setEnabled(false); 1
edunlink(); 2
eventReady(GpgOp::Event::NeedPassphrase, 1
LEGOPTP.messageEvents 1
setDragMode(ScrollHandDrag); 1
disconnect(voiceCaller_,SIGNAL(accepted(const 1
setFlags((GraphicsItemFlags)0x00); 1
~MyKeyStoreList() 1
d->tasks->append(jt); 4
QApplication 6
wbWidget_->setFillColor(newColor); 1
fflush(NULL); 2
d->cur_custom_status.clear(); 1
OptStatusUI 8
ui_.lb_port->setEnabled(false); 1
static_cast<CookieJar::KeepPolicy>(keepPolicyEnum.keyToValue(value)); 1
takeArray(buf, 2
imagePainter.drawImage(qMax(0, 3
setDragEnabled(true); 4
RealTestDescription::RealTestDescription() 1
channel->call(Qnil); 3
connect(d->watcher_relay, 2
timeState.close(); 4
bring(1, 2
if(u.inList()) 2
attach( 2
numBytes 1
colors.push_back(m_label.textColor); 1
if(queueing_) 1
addAttribute( 1
stream.get(); 5
w2tab[w] 1
_created 1
ECursorType 4
set_syserr(ESRMNT, 1
VarListItem 1
GO(false_class).set(new_class(, 1
if(ui_.le_pcode->edited()) 1
requestIdentity(); 1
modify_buttons_[b]->setText(str); 1
if(negotiation->state 4
m_player_total_time 3
ReplaceBuffers(strResult); 1
ui.statusEdit->setCursorPosition( 1
tb->initialize(); 1
CGContextAddArc(context, 2
updateTimerList(); 3
Q_IMPORT_PLUGIN(psifileplugin); 1
bounds_scaled.scale(size(), 1
setAutoDefault(false); 1
interface->dmScheduled 1
be->vmm 1
acc.name 3
connect(d->act_scrollup,SIGNAL(activated()), 1
QMessageBox::aboutQt(this); 1
TEST_CASE(failedAllocation); 1
highestWeight_ 1
loadScript(file); 1
action->setProperty(, 1
proxy_host 1
if(sig_words() 1
if(((x_size 1
connect(le, 1
while(bp 1
QList<SxeRecordEdit::Key> 2
m_board->setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff); 1
m_gettingFileName 2
psi 15
TESTCASE(define_iterator) 1
d->multi 2
TEST_CASE(varScope2); 1
TestComposite::doRunChildTests( 1
using 77
chargeState.close(); 3
set_password 2
CPPUNIT_TEST_SUITE_REGISTRATION(CapsManagerTest); 1
sec_buf.append(a); 1
settings.setValue(key 3
if((bitmap 1
for(size_t 36
act_next_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
GO(cmethod_vis).set(new_class(, 1
moveMapValues(&in, 12
if(RegQueryValueExA(hkey, 1
output 4
file.get_fd(), 1
decimal 1
helpMenu->addAction(tr(), 2
back.fill(backgroundColor); 2
updateTab(tab); 2
ui_.log->verticalScrollBar()->setValue(ui_.log->verticalScrollBar()->value() 2
QMessageBox::No)); 2
if(meta->primaryWeight() 1
d->write(&d->buf, 1
d->sync.waitForCondition(msecs); 1
target->moveTo(x, 1
pending_ 5
PrivacyListItem::PrivacyListItem(const 1
switch(mClickAction) 1
IconButton::IconButton(QWidget 1
keybind.fromOptions(o, 1
m_row_delta(0), 1
TextTestRunner::printResult( 1
d->padL 1
d->jt->go(true); 6
d->padB 1
d->le_location->setText(tr()); 1
SLOT(quit()), 1
d->padT 1
d->padR 1
p.setTransform(tItemToPixmap); 1
LEGOPTP.eventPriorityMessage 1
TextTestRunner::run( 2
msg.addDetail( 1
QMessageBox::No) 1
Q_ASSERT(index.row() 1
grid->setMargin(style()->pixelMetric(QStyle::PM_MenuPanelWidth, 1
nextIdx(0) 1
Destroys 1
z[14] 2
connect(pa_->client(), 1
GameBoard::showHostFound() 1
sig_written 2
QString		s(lst[0].lower()); 1
start 3
TESTCASE(subclassing) 1
ContactViewItem::ContactViewItem(const 3
Q_ASSERT(tabs_.contains(tab)); 1
OptionsDlg::Private::Private(OptionsDlg 1
connect(t,SIGNAL(finished()),SLOT(setItems_finished())); 1
ri.setJid(Jid(o->getOption(rbase 1
from_net.clear(); 5
appendArray(&partial, 1
QList<AHCommandItem> 1
if(inList 3
d->cb_tabGrouping->setCurrentIndex(0); 2
TEST_CASE(fdopendir_function); 1
OptionsTabGroupchat::OptionsTabGroupchat(QObject 1
Logger::~Logger() 1
TEST_CASE(testgetcode); 1
vbox->addLayout( 1
if(!entry) 1
ui_.lv_users->clear(); 1
actionRemove( 1
mMouseOutsideSlop( 1
m.setChatState(XMPP::StateActive); 1
drw->move(0, 1
core( 1
active_control->setChecked(false); 1
QTEST_MAIN(tst_LineEdit) 1
lodCount 1
&apm_install_flags); 2
terminating 4
_cert 1
if(top_word 1
chatView()->appendText(QString().arg(u.desc())); 1
SLOT(slotAuthenticationRequired(QNetworkReply 1
account_->bookmarkManager()->setBookmarks(conferences); 1
if(items[n].trackerId 1
Entry 13
TEST_CASE(switch2); 1
r.rtrim 3
beginRemoveRows(index.parent(), 1
EndCGContextForApplicationDockTile(context); 1
connect(tv_->selectionModel(), 1
connect(tp, 1
connect(d->tb_history, 1
n->used 2
if(need_cardOkay) 1
statusFont.setPointSize(8); 1
if(n_bits 1
while(!node->nil_p()) 1
if(d->proc) 4
sVisibleHUDTextObjects.clear(); 1
chb_gps 1
Q3PtrList<Entry> 1
gObjectList.addDebugBeacon(spawn_pos, 1
i->setText(0, 2
TestPath::isValid() 1
XmlOutputter::write() 1
owner_(ownArray 1
sInstance->open();		/ 1
doWarn( 1
history.updateHistoryItem(QUrl(), 1
m_exceptionsModel->m_sessionCookies.append(domainLineEdit->text()); 1
i->len 1
d->ck_useTransportIconsForContacts->setChecked( 1
Disco, 1
QString	e; 1
QList<Handle> 2
qWarning(QString().arg(store.filePath( 3
PsiOptions::~PsiOptions() 1
hb1->addWidget(sep); 2
if(v_rt) 1
setupArguments(); 2
street_ 4
d->attachView->gcAdd(m.from().full(),i.from().bare(),i.reason(),m.mucPassword()); 1
g_event->handlers[n].ids.removeAll(g_event->askers[at].id); 1
secmem 3
zoomOut(); 2
Private(FileWatch 1
if(angle) 1
if(a.proxy_type 1
langSel 3
TestSuiteBuilderContextBase::TestSuiteBuilderContextBase( 1
free(ptr); 3
QGraphicsTextItem::focusInEvent(event); 1
layout->setMargin(10); 1
m_lineEdits->addWidget(currentLocationBar); 1
Browse, 1
d->te->setFocus(); 2
m_historyBack->setIcon(style()->standardIcon(QStyle::SP_ArrowBack, 1
if(isBouncing) 1
e.setAttribute(); 2
v_parentId 1
connect(customizeAction_, 1
foreach(X11KeyTrigger 1
OnigRegion 1
have.realm 2
m_displayMode( 1
removeVOInventoryListener(); 1
apr_pool_cleanup_null); 1
qlv_contextPopup(i, 2
layout_->addWidget(textEdit_); 1
if(!processNegotiationAsJoiner(n.childNodes().at(j), 1
obj->klass 1
if(blockReadNotify) 2
d->o->removeOption( 1
el.appendChild(doc->createTextNode(Base64().arrayToString(avatar_data))); 1
TestSuccessListener::TestSuccessListener( 1
QVERIFY(bar.call_tabSizeHint(index).width() 1
d->le_host 1
maxoutbuf 2
LLNameValue 1
unsetCursor(); 3
action->setData(QVariant(WbWidget::DrawImage)); 1
d->pb_auth->setFocus(); 1
#	include 10
StatusFilter 1
KeyStoreOperation 4
privacyModel.setList(l); 1
bookmarkMenu->setEnabled(dataService->isAvailable()); 1
mTabContainer->addTabPanel(mPrefsIM->getPanel(), 1
QTextFormat::setProperty(IconName, 1
d->animatingNick 3
edt->resize(box->width() 1
tabsPosition_ 2
XClassHint 3
TODO_ASSERT_EQUALS()); 2
KeyStoreEntryWatcher 1
querier_->addInfo(jid, 2
if(haveAlready(p->name())) 1
le_fname->setEnabled(false); 1
isGood 1
hints->initial_state 1
Handle(QJDns 1
DynamicLibraryManagerException::getCause() 1
if(b) 4
LLURI 2
connect(hideTimer, 2
FREE(buf); 2
popup.setItemEnabled(2, 1
m_stopReload->setIcon(m_reloadIcon); 2
le_jid_->setText(tr().arg(peer.full()).arg(session()->session())); 1
childFound 1
connect(pb1, 1
IconSelect(IconSelectPopup 1
GO(object).set(object); 1
strCurOutput.replace(strCurOutput.begin()+i3,strCurOutput.begin()+i3+iRemove+2,); 1
QThread 4
if(moreData) 1
if(s.at(n1) 1
if(bi 11
d->pb_http_confirm->setText(tr()); 1
d->pb_auth->hide(); 4
q->requestDestroy( 1
value=chr->GetUInt32Value(updateIndex); 1
m_cache 2
d->iss_servicesRoster->setEnabled( 1
busy_->start(); 7
URLObject::URLObject() 1
restoreColor(d->pb_cStatus, 1
gAgent.stopAutoPilot(); 1
if(ui_.le_state->edited()) 1
proxy_pass 2
static_cast<QPipeReaderPoll 1
QCA::Synchronizer 1
obj->disconnect(owner); 2
scroll(QPoint(2 1
QQueue<QTextCharFormat> 1
FileItem 2
downButton_->setSizePolicy(QSizePolicy::Fixed, 1
IconsetLoadThread 2
map[key] 1
d->progress->setValue( 6
statusParser.data()->deleteLater(); 1
m_dwNumPackets 1
node_.toProcessingInstruction().setData(processingInstructionData()); 1
eventItem 1
z[5] 6
XmlOutputterHook::beginDocument( 1
QCOMPARE(action->objectName(), 1
QDesktopServices::setUrlHandler(QLatin1String(); 1
i->_loader 3
if(i->id 1
closeButtonBack->setBackground(back); 2
ev_timer_init(&ev, 1
StatusList 7
left.vendor 1
hb->addWidget(d->le_port); 1
p->drawLine(0, 1
isRichText 2
PsiPopup::PsiPopup(const 1
ImageDownload::instance()->imageGet( 1
ASSERT(c.is_a(rb_cClass)); 3
tfy 1
tfx 6
_props.keyId 1
connect(ui.searchLineEdit, 1
SynchronizedObject::setSynchronizationObject( 1
readEntry(e, 2
target_pos 4
setMinimumSize(width, 1
model_->setShowAvatars(showAvatars); 1
hb2->addItem(new 1
metacontact->setStatus(STATUS_OFFLINE); 1
strSetting 1
Window 8
null 5
G(selectors)->store(state, 1
d->profiles.setAutoDelete(false); 1
PsiOptions::instance()->setOption(, 159
m_overlayState 3
if(!e) 11
asker->set_rejected(); 1
secname 1
delayOn.close(); 1
defaultSettings->setAttribute(QWebSettings::JavascriptEnabled, 1
session_manager_->SignalOutgoingMessage.connect(listener_, 1
d->async_writeEntry(KeyStoreWriteEntry(key)); 1
IdlePlatform 1
MAKELANGID(LANG_NEUTRAL, 1
if(curError 6
buffer.reserve(1024 1
QDialog( 1
setText(url.toString()); 1
m_tests.push_back( 3
m_rightWidget->resize(0, 1
TestNamer::getFixtureName() 1
ui_.pb_open->hide(); 2
setShortcut( 1
if(PGPUtil::instance().pgpAvailable()) 1
action->setData(item->getId()); 4
std 1
setCurrentIndex(index); 1
StringArrayModel::~StringArrayModel() 1
LEGOPTP.onevent[eMessage] 1
if(!config_obj) 1
newstatusAction 1
PsiTextView::appendText(text); 1
tb.keys 2
lvi->setText(0, 2
CPPUNIT_TEST(testEqualsNotEquals_Equal); 1
services_[resource->getAccountName()]->actionSendMessage(jid); 1
allocType 1
apr_status_t 1
switch(b) 1
tabBar_->addTab(name); 1
QList<HistoryItem> 6
:TextFilter(dir) 2
protocol->sendFigure(sock, 1
actionsService_->addAuthorize(nil); 1
set_syserr(ELIBEXEC, 1
failIf( 1
Console::ChannelMode 2
TextTestResult::print( 1
xprocess->waitForFinished(); 2
CFileItemPtr 2
KeyStoreManager 5
d->pb_deny->hide(); 4
if(!spinning) 1
GameProtocol::sendGameover(Q3Socket 1
_TS_TRY 7
aboutDialog->show(); 1
e->account()->queueChanged(); 3
load(url); 1
if(!r.versionString().isEmpty() 1
pTempDoc->m_bFilePreview 1
this->modified 1
isint32 2
QCA::unloadAllPlugins(); 1
tracker().failedAssertThrows( 1
Q3PointArray	vl; 1
removeSelected(); 1
updateGeometries(); 3
header()->setResizeEnabled(false); 1
d->lv->setVScrollBarMode(Q3ScrollView::AlwaysOn); 1
if(y0 2
listChanged(); 2
if(y2 2
b.resize(a.size()); 1
i->sent 2
ffi_type 2
doRunChildTests( 1
itemCancel(i->id); 1
setWindowIcon(QIcon()); 3
d->vb_main->setSpacing(layoutMargin); 1
m_navigationBar->addAction(m_historyForward); 1
m_col_delta(0), 1
sxe.setAttribute(, 9
GLint 1
d->thread->writeSecure(a); 1
buffer[i] 2
SymmetricKey::SymmetricKey() 1
migrateEntry<QColor>(element, 1
TEST_CASE(forwhile10); 1
if(i->pa->isActive()) 1
d->le_url->setText(s.url); 1
connect(ui_.cb_recent, 1
while(!t.atEnd()) 2
Q_UNUSED(uriToOpen); 1
Thread 6
opt_pubfile 1
SyncThread::~SyncThread() 1
tb.locked 5
d->mucManager->setAffiliation(contact->s.mucItem().jid(), 4
md5_state_t() 1
d->IdleUIGetLastInputTime 1
if(d->n.get_bit((size 1
that->extra->topextra->caption 1
set_syserr(ESTALE, 1
if(fixerParent) 2
d->idle.start(); 1
SLOT(saveImage()), 1
m_flickr 2
CapsSpec 20
qWarning(QString().arg(gcDlg_->nick())); 1
shortcut 2
if(gr->groupType() 3
reg->getForm(server_); 1
Q3PtrList<QLabel> 2
buffer.open(QIODevice::ReadWrite); 1
strlcat(sys_name, 2
if(fin_process_success) 2
AboutDlg::AboutDlg(QWidget 1
Q_DISABLE_COPY(DirWatch2) 1
ui_.mle->chatEdit()->setEnabled(false); 1
Event::PasswordStyle 1
if(!cert.isNull()) 2
sendHeaders(r, 1
set_syserr(ENETRESET, 1
negotiation->sessionId 2
ModelTest 4
glInit(); 1
memset(buf, 1
floater->open();	/ 1
QWhatsThis::add(d->cb_incomingAs, 1
goodTags 2
d->optionsMenu->insertItem(IconsetFactory::icon(), 1
macSystemWatch->emitIdleSleep(); 1
qLineEdit->setText(qLineEdit->text()); 1
disconnect(ic, 1
setSelected(item, 1
d->ck_autoVCardOnLogin->setChecked( 1
list_.insertItem(0,d.rule()); 1
v_showSelf 2
toolBar->addAction(autoProtocol); 1
TestTracker 1
amd->setPassword(acc.pass); 1
!ui_.le_city->text().isEmpty() 2
if(i.updateCount 1
deleteSingle(list[n]); 1
iq.appendChild(query); 5
INTEGER 41
mClickActionObject 4
childSetTextArg(, 1
XDataField 1
SASL::SASL(QObject 1
std::memcpy(dup->bytes, 1
connect(clearAction, 1
conf.appendChild(conf_x); 1
out_pending 6
getChild<LLTabContainer>(), 1
d->set_password 1
ui_.ck_history->hide(); 1
if(d->te_edited) 2
unloadAll(); 1
QUrl::decode(prolog); 1
connect(autoSaveTimer_, 1
set_syserr(ERESTART, 1
deleteTexture(m_image); 1
QPipe 2
removeNode(node); 2
ok=false; 1
TEST_CASE(iterator3); 1
endInsertRows(); 6
d->xdata_form->hide(); 2
elems.push_back(substring); 2
menu.exec(QCursor::pos()); 3
alert_->stop(); 1
LLFloaterLand::showInstance(); 1
defaultSettings->setFontSize(QWebSettings::MinimumFontSize, 1
!object->isAvatar() 1
if(i->h->account() 1
if(last_in_list) 1
QIcon 28
noneAction->setData(item->getId()); 1
FileAvatar(this, 2
m_bookmarksToolbarFrame->setPalette(fp); 1
m_piece 2
if(!proc.isActive()) 2
d->pd->show(); 1
grid->addWidget(lineEdit,0,0); 1
preferedTabsetForKind_.insert(k, 1
ui_.tabs->setTabEnabled(ui_.tabs->indexOf(ui_.tab_general),affiliation 1
if(i.storeId 1
acceptCombo->setCurrentIndex(1); 1
updateIndex 1
qint32 9
changing.append(QPersistentModelIndex(model->index(i, 1
if(sum) 1
setWindowTitle(form.title()); 1
OptionsTabIconsetSystem::OptionsTabIconsetSystem(QObject 1
manager_->getItemsByAffiliation(MUCItem::Member); 1
LLUI::setLineWidth(2.0); 1
data_container_->setWidget(data_); 1
if(versions_.isEmpty()) 6
e 27
(LPSTR) 1
le_name->hide(); 2
connect(joinButton_, 1
TabbableWidget::State 3
Private(PsiActionList 1
proc.start(input.bin, 1
if(mem) 3
Qt::WDestructiveClose) 1
d->last 3
statusBar()->setVisible(showStatusbar); 1
migrateIntEntry(p_lnf, 2
m_test->setUp(); 1
painter.drawRect(lobex, 1
services_[account->getAccountName()]->actionSetMood(); 1
Not 1
CKey::CKey(DWORD 1
d->lb_asXa->hide(); 1
hints->icon_x 1
hints->icon_y 1
topParent->height() 1
TranslationManager::TranslationManager() 1
GetEventParameter(theEvent, 1
frames.last().period 1
setUpdatesEnabled(false); 10
Model::Model(Roster 1
showFullScreen(); 2
if(!show.isEmpty()) 1
startTimer(60 2
certs 2
lb_home->setUrl(is.homeUrl()); 1
QJDns::PublishMode 1
toolBar->addAction(agentsProtocol); 1
ui_.le_street->setModified(x); 1
IconsetSelectItem 1
foreach(QPointer<WbItem> 2
if(arg_types[i] 1
target_file.write(data); 1
qa_ren->setEnabled(false); 1
Q_UNUSED(GUIenabled); 1
while(versions_.size() 1
Q3Grid 3
dexc(LongReturnException, 1
disconnect(controller_, 2
Q_ASSERT(m_bookmarkRootNode->children().count() 1
Q_UNUSED(uri); 1
newProtectFlags 4
r->findStr 1
ev.xclient.data.l[1] 1
ithKeyTable 1
ui_.le_phone->setModified(x); 1
packet_out_pending 1
ruby_init(); 1
init(s, 2
tabBar_->setTabText(index, 1
core->setModelTheme( 1
connect(d->tw_isServices, 1
mTabContainer->addTabPanel(mMsgPanel, 1
d->lastWhois 1
PsiRichText::install(ui_.te_status->document()); 2
EventGlobal::HandlerItem 1
CPPUNIT_TEST_SUITE(CapsManagerTest); 1
NeoSimToolkit::~NeoSimToolkit() 1
rootWin 1
qa_recv 1
MyHeaderViewWidget 1
botan_deinit(); 1
JT_Session 2
if(lst->nil_p()) 3
vbox->setMargin(0); 1
LEGOPTP.outlineHeadings 1
setString(utf8str_to_wstring(wtext)); 1
m_mazes_targets->setValue(settings.value(, 1
signaler->emitNotificationTimeout(qcontext); 1
layout->addWidget(bScummvm); 1
ui_.tb_actions->hide(); 3
mycg.setColor(QColorGroup::Text, 3
sBattleGroundMgr.ToggleTesting(); 1
actSearch->setEnabled( 1
ui_.cb_type->setCurrentIndex(ui_.cb_type->findText(tr( 1
sei.nShow 1
gPipeline.markMoved(object->mDrawable, 1
tb[1].on 1
events->poll(); 1
Account::networkName( 1
map[13] 2
d->size 2
d->rlist.setAutoDelete(true); 1
iconsetsLoaded 3
m_settings 5
gradient.setColorAt(0.15, 1
layout->addWidget(buttonBox); 3
xform_obj.setPosition(1.2f, 1
globals.special_classes[i 5
favourites 2
action->setCheckable(true); 10
reply=QString().arg(fromJid).arg(playingWith); 1
di.setName 2
mHeight 1
invalidateTab(); 8
set_syserr(EUNATCH, 1
if(!loop) 1
session->closeStream(); 1
XmlOutputterHook::endDocument( 1
glDeleteTextures(1, 2
d->groupType 2
showHideAttachView(); 1
a[i] 4
strcpy(snarlStruct.icon, 2
out_buf.resize(0); 1
ConstraintType::ConstraintType(const 2
MacKeyTriggerManager::instance()->addTrigger(this); 1
autoInfo 5
bTango 1
| 2
buildTrayMenu(); 2
global->secmem 1
m.setBody(body); 1
passwordAsker 2
m_image(0), 1
ringWatch.add(secring); 1
d->dirty 3
~TrayIconPrivate() 2
Constructs 3
MyListWidget(QWidget 1
setPsiIcon(&i); 1
button->setPos((left 1
if(db) 2
ui.accountsComboBox->setVisible( 2
x 39
unit->ModifyAuraState(AuraState(abs(state)),state 1
connect(pb_remove, 3
textEdit_->setCheckSpelling(false); 1
timer 5
context->state[1] 1
check_interrupts: 2
InsertBookmarksCommand 1
bigint_comba_mul6(z, 2
foreach(item_dialog 2
d->restoreGeometry(); 1
d->blockReadNotify 1
xmllang.replace('_',); 1
R4(e,a,b,c,d,76); 1
emitOpenBrowser( 2
task->ip 1
if(d->nextAmount 7
metaData 2
twitterapi->setPassword( 5
d->qdns->setLabel(d->host); 1
packet_mtu 1
if(!v_showHidden) 1
c0.join 2
wrapped 6
action.mTime 1
dendrite_var 1
m_player.rx()++; 1
set_syserr(ENOTNAM, 1
sz 3
sy 2
form.push_back(f); 1
response.appendChild(e->xml(doc)); 1
setImpix( 1
LEGOPTP.popupFiles 1
list_ 3
Q_UNUSED(index); 3
QPipeEnd::QPipeEnd(QObject 1
setSelfDestruct(0); 3
d->cp->dragDropFiles(l, 1
d->waitForResponse(); 2
g_SkinInfo.ResolveConstant(originElement->Attribute(), 2
TLS::IdentityResult 1
if(r->count() 2
MetaAlertIcon::~MetaAlertIcon() 1
DWORD 38
m_mazes_targets->setRange(1, 1
migrateColorEntry(p_popup, 1
LEGOPTP.systemIconset 1
tmp.draw(p, 1
statusBar()->message(txt); 1
d->capsRegistry 1
MainWindow::about() 1
so 1
ContactView::~ContactView() 1
strDest.replace(strDest.begin()+iIndex,strDest.begin()+iIndex+temp.GetLength(),m_param[i]); 1
JT_Browse 2
ringWatch.clear(); 1
pb->setFocus(); 1
KNotificationInterface::KNotificationInterface(const 1
messagesRead(jid()); 2
pause_icon.addPixmap(QPixmap()); 1
removeRecord(node); 1
if(f.isEmpty()) 1
url 9
d->tb_right->setEnabled(right); 1
sf 5
CPPUNIT_ASSERT(opener.isOpen()); 3
list.append(v); 1
SnarlInterface::SnarlInterface() 1
Q_ASSERT(isOpened); 1
if(!pipe_set_inheritable(p[0], 1
in.clear(); 4
defaultSettings->fontSize(QWebSettings::MinimumFontSize)).toInt(); 1
SubLineEdit 5
id.type 3
QSplitter 1
tune_ 1
d->cv->setShowHidden(true); 1
ui_.lb_ident->setAccount(account()); 2
session->deleteLater(); 1
ConferenceBookmark::ConferenceBookmark(const 2
domElement.setAttribute(, 4
QDialog::show(); 2
bReverse 1
DiscoItem::Identities 4
forwardHistory.setAutoDelete(true); 1
connect(t,SIGNAL(finished()),SLOT(subscribeFinished())); 1
LLFloaterTelehub 1
JT_AHCGetList 2
s->setPollInterval(d->proxy.pollInterval()); 1
mw.loadXml(filePath); 1
TEST_CASE(pushback4); 1
pm.insertItem(PsiIconset::instance()->status(e->u.jid(), 1
QPipeEnd::~QPipeEnd() 1
Named_Mutex_Holder::Named_Mutex_Holder(const 1
plugins_[plugin]->disconnect(); 1
FontLabel::FontLabel(QWidget 1
CFRelease(anchors); 1
::unload_add_on( 1
connect(lbx_proxy, 1
lateMigrationData.customRosterIconset[i.attribute(); 1
separator->setSeparator(true); 2
setData(4, 1
if(j.isEmpty()) 3
Subscription 1
info[i.attribute()] 1
m_gameplay_smooth->setChecked(settings.value(, 1
currentLocationBar->setWebView(currentWebView()); 1
key 26
if(mIsHUDAttachment) 2
ui_.cb_value->clear(); 1
gpg.doSecretKeyringFile(); 1
setHScrollBarMode(AlwaysOff); 1
statusLists[ 3
int		x, 1
PGPUtil::~PGPUtil() 1
z.set_sign(y.reverse_sign()); 2
sm->insertItem(PsiIconset::instance()->status(STATUS_INVISIBLE).icon(),	status2txt(STATUS_INVISIBLE),	STATUS_INVISIBLE	+ 1
autoRosterResizeInProgress 3
CPPUNIT_TEST(testConstructor_OpenInSubsetMode); 1
tree_.setValue(name, 2
m_active_tiles.clear(); 3
XErrorHandler 1
offset.setX( 2
it.key()->stop(); 1
in.detach(); 2
trayShow(); 3
mV[0] 4
global->scan(); 6
QDomNode 26
StringTools::split( 2
queueing_ 3
XmlOutputter::removeHook( 1
setWidgetsEnabled(false); 7
QPluginLoader 4
d->groups.append(item); 2
addColumn(tr()); 5
nickSeparator 1
result_plain.clear(); 4
XmlOutputter::addSuccessfulTests( 1
removeList 1
le_name->setText(); 2
SET(method, 3
top1->setFixedWidth(3); 2
pre_stdin.clear(); 4
if(!validVersion(ver)) 3
op->trackerId 3
setupSyscallInterruptionSupport(); 1
task->state 1
if(pipeCommand.readEnd().isValid()) 2
setCompleter(completer); 1
QList<JDnsShared 1
l.setPaletteForegroundColor(ok 1
QList<TimerFixer 2
LLFloaterEnvSettings::LLFloaterEnvSettings() 1
ui_.pb_clear->setEnabled(x); 2
OptionsTree::~OptionsTree() 2
GetPrivacyListTask 2
d->groupBox9->setEnabled(false); 1
bg_defAct->setExclusive( 2
m_completed(0), 1
q->setParent(0); 1
that->reparentFocusWidgets( 1
TEST_CASE(if7); 1
d->lb_top->hide(); 1
m_maze->generate(size, 1
SProcess::~SProcess() 1
update(); 40
if(!sup) 1
channel.writeFileDescriptor(session->getStream()); 1
setContextMenuPolicy(Qt::NoContextMenu); 1
d->c->update(in); 2
disconnect(d->te_sp, 1
QTimer::singleShot(msecs, 1
actionsService_->sendServerMessage(account); 1
setValue(&needp[n], 4
if(null 1
top3->setFixedHeight(1); 2
QVERIFY(bar.viewTabBarAction() 1
d->sendLeft.remove(it); 1
w.exec(); 1
intersection 1
expireHistory->setCurrentIndex(idx); 1
pi.name 1
QApplication::sendEvent(iconObject, 4
providerMutex.unlock(); 6
QWhatsThis::add(d->pb_cAway, 1
memcpy(xbuf, 1
addAction(action); 2
pb_stop->setEnabled(false); 3
U8 13
vbox->addSpacing( 1
label->show(); 2
ELineEdit::ELineEdit(EventDlg 1
XDataField_TextSingle(XData::Field 1
callbacks[2].proc 1
TestFactoryRegistry::registerFactory( 2
addButton( 14
doInitialize( 4
ProtocolAction(QString 1
if(ask_passphrase(fileName, 1
if(_serialized.isEmpty()) 1
PREF_FLOATER_MIN_HEIGHT; 1
ck_host->setWhatsThis( 1
setShowIcons(true); 1
LLColorSwatchCtrl 2
list.setAutoDelete(true); 1
std::vector<Engine 3
beginInsertRows(treeParent, 1
addButton_ 1
NeoVibrateAccessory::~NeoVibrateAccessory() 1
m_image_path 2
UI 1
d->te->setReadOnly(true); 1
command.appendChild(data().toXml(doc, 1
layout_->addWidget(fields); 1
session_manager_->AddClient(NS_GOOGLE_SHARE, 1
++offset; 3
painter.setBrush(backgroundColor); 1
d->optionsButton->setMenu( 1
node_.setNodeValue(chdata()); 1
N0:; 1
set_syserr(EBADRQC, 1
tiles[c][r] 1
pthread_threads_max.c_str()); 1
in.setContent(element); 1
privacyModel.list().insertItem(0,PrivacyListItem::blockItem(jid.full())); 1
stacked_->addWidget(widget); 1
connect(d->pb_removeNickColor,	 1
highest 2
selfDestruct_->start(minutes 2
d->lb_ident 4
setIcon(IconsetFactory::iconPtr()); 3
painter.begin(&generator); 1
Private(ContactViewItem 1
XFree(XGetKeyboardMapping 1
groupState.insert(i.attribute(), 1
init_ffi(); 1
errno); 1
cb_service->insertItem(PsiIconset::instance()->status( 1
display 1
setCheckable(true); 2
m_bookmarksToolbar 1
setVisible(!text.isEmpty()); 1
f.setPointSize(10); 2
Never 1
rotatePiece(); 3
tracker().warning( 1
foreach(Private::NickAndJid 2
addAction(act_prev_); 1
d->tryCompress 1
m_viewBookmarkBar->setShortcut(tr()); 1
if(d->peerValidity 1
in.setSecurityEnabled(enabled); 1
msg->addUUID(, 3
vcardList_.push_front(jid); 1
MyFancyFrame 2
d->layout->addLayout(layout, 2
BookmarkManageDlg::~BookmarkManageDlg() 1
if(!d->t) 1
SLOT(groupRemoved(const 1
#ifndef 135
statusWidget->setState( 1
exceptionTable->verticalHeader()->setDefaultSectionSize(height); 1
statusList->setActive( 1
if(recordByNodeId_.contains(iterator)) 1
ASSERT_EQUAL(foo, 1
if(serverMode) 1
largestWidth 1
RichListViewItem::paintCell(p, 1
authDialogOpen 5
swap 1
options.sort(); 2
t.setDevice(&out); 1
hb3->addWidget(l); 1
qApp->x11ProcessEvent( 1
set_syserr(EBADE, 1
d->mainwin->setTrayToolTip(Status()); 1
:QObject(0) 2
void 5378
actionsService_->unregisterAccount(acname); 2
if(name 3
Q_ASSERT(isValidNodeName(key)); 2
proxy.setType( 2
#ifdef 574
AddQueuingFolder(items); 1
if(!group_item) 2
packet_to_net_encoded.clear(); 1
_l->enterTest(td); 1
set_syserr(ETXTBSY, 1
ctx->block 1
nonDocElementEdits 1
SET(lst, 1
ba->bytes[bytes] 1
--x[j]; 1
changeActive_ 3
textEdit->setReadOnly(true); 1
Q3PtrListIterator<MLabel> 3
RingWatch(QObject 1
if(i->e->type() 1
closekey 2
CGContextRef 1
LLPanelLogin::refreshLocation( 2
le_transPrompt->setEnabled(false); 1
groupchats 1
label->init(text); 1
karatsuba_mul(z1, 1
app.replace('\\', 1
Q_EXPORT_PLUGIN(PythonPlugin); 1
bytesWrittenTrigger.setSingleShot(true); 2
if(!qt_buggy_fsw()) 2
cds.cbData 1
menu->addMenu(pictureMenu); 1
d->le_http_id->setFocus(); 3
m.addAddress(Address(XMPP::Address::To, 1
list.append(item->u()->jid()); 1
set_syserr(EXFULL, 1
optionsButton->setIcon 1
GO(executable).set(new_class(object, 1
if(namex.find('(') 1
ChatDlg::setLooks(); 1
theKCHRRsrc 1
strDirty.erase(i,i2-i+10); 1
p.number 2
v_selected 1
board->theirMove(space); 1
d->tw_availActions->setEnabled(enable 1
TESTCASE(define_method_simple) 1
QDomText 11
ContactView::ContactView(QWidget 1
iface.Notify( 1
xml.readNext(); 2
bottom1->setFixedSize( 2
play_buttons_[d->tb_seHeadlinePlay] 1
if(!vcard) 1
if(!processNegotiationAsParticipant(n.childNodes().at(j), 1
Q_UNUSED(cursor); 1
doSetMenu(p); 1
segment_iter->mColor 1
QWebSettings::globalSettings()->setFontSize(QWebSettings::DefaultFixedFontSize, 1
d->ck_popupOnMessage->setChecked( 1
root 1
connect(m_themes_selector, 1
TrayIconFreeDesktop::TrayIconFreeDesktop(TrayIcon 1
QPalette 19
pix->setSizePolicy( 1
bookmarkMenu->addAction(action); 1
pa->playSound(PsiOptions::instance()->getOption().toString()); 1
mp_add(MP(this), 1
LARGE_INTEGER 7
prvt.appendChild(bookmarks); 1
items_[index-1].setOrder(order); 1
QTEST_MAIN(TestPsiPopup) 1
timer->start(300000); 2
mPieMouseButtonDown( 1
d->pa->contactProfile()->updateEntry( 4
init(m, 1
pi.settings.fromOptions( 1
map[f] 1
MEM_COMMIT 1
if(!checkSupport(target, 1
m_historyModel 1
scrollToBottom(); 1
size.setHeight(QInputDialog::getInteger(this, 1
auto_offline_field.setRequired(false); 1
connect(ui_.pb_submit, 2
mp_mul_2d(&high, 1
d->proc->setReadChannel(QProcess::StandardError); 2
changes_[PrimaryWeight] 1
TEST_CASE(ret); 1
presets[name] 1
cancel(); 4
disconnect(oldWebView, 2
connect(serverlist_querier_,SIGNAL(error(const 1
setLastUsedOpenPath(fi.dirPath()); 1
QSignalMapper 5
actDisco 1
before 1
am->setItemChecked(18, 1
blockFormat.setProperty(QTextFormat::BlockTrailingHorizontalRulerWidth, 1
if(!i.exists 1
Q_DECLARE_METATYPE(TabDlg 1
d->cp 1
lvi->setText(3, 1
GCUserViewItem::GCUserViewItem(GCUserViewGroupItem 1
e.xclient.data.l[2] 1
if(i->u()->isAvailable() 1
loop->add_signal(signal, 1
lAppname->setAlignment(Qt::AlignCenter); 1
if(quit) 1
QTabBar::dropEvent(event); 1
one 1
QCoreApplication::setApplicationName(); 1
msg.name 3
session_manager_->OnIncomingMessage(e); 1
sxe.appendChild(response); 2
toolbar->setMovable(false); 1
AccountRemoveDlg 1
previousList_ 1
UserList::UserList() 1
j.set(defaultDomain(), 1
widget.closeTab(); 5
setUnifiedTitleAndToolBarOnMac(true); 1
QSound::play(str); 1
JingleVoiceCaller::JingleVoiceCaller(PsiAccount 1
fp.setColor(QPalette::Inactive, 2
LLRect 5
m_historyFilterModel 1
::bringToFront(d->configDlg); 1
ui_.le_city->setReadOnly(x); 2
showPage(widgets_[index]); 1
mux->unlock(); 1
d->ck_autocopy->hide(); 1
if(tmp->reference_p()) 2
context->count[1]++; 1
OptionsTabShortcuts::~OptionsTabShortcuts() 1
d->usingOAuth 3
items.at(i)->updateParents(); 1
connect(d->pb_emoDetails, 1
e.setAttribute(,name_); 2
repaint(); 10
last[n] 1
chb_kbd->setChecked(prof.kbd); 1
i->setPixmap(0, 1
rb_add_method(klass, 2
PopupActionButton::~PopupActionButton() 1
EventItem::EventItem(PsiEvent 1
connect(d->ft, 13
p.begin 1
floor_ 4
mazes_layout->addWidget(new 3
item.appendChild(doc.createElement()); 4
lbx_profiles->insertItem(name); 1
painter.setPen(Qt::transparent); 1
d->act_whiteboard 1
c1.insert 1
this->split 2
if(FIXNUM_P(obj)) 8
++level; 1
LineEdit::~LineEdit() 1
QLayoutIterator 1
IconActionGroup::IconActionGroup(QObject 1
vb1->addLayout(hb1); 1
d->dns.resolve(d->host); 1
GlobalShortcutManager 2
d->jt->getForm(d->jid); 1
set_msg( 5
BookmarksDialog::BookmarksDialog(QWidget 1
QStringList 348
d->c->setupVerify(sig); 2
query.appendChild(identity); 1
deferredUpdateGroups(); 4
newEdit->setCheckSpelling(false); 1
MessageAuthenticationCode::MessageAuthenticationCode(const 2
ffi_arg 7
t->set(config); 1
connect(qa_assignAvatar, 1
pb_delete->setEnabled(FALSE); 1
list->setSelectionMode(QAbstractItemView::MultiSelection); 1
make_ui_sound(); 4
FileTransItem(Q3ListView 1
d->pm_settings->insertSeparator(); 1
DownloadManager::~DownloadManager() 1
connect(act_browser, 1
pMemDC, 1
setMirrorEnabled(RenderOpts::LastMirrorEnabled); 1
tabWidget_->setTabBarShown(true); 2
port_ 2
if(slo) 1
multicastService_ 2
gMessageSystem->nextBlockFast(_PREHASH_AgentData); 2
textEdit->setStyleSheet(QLatin1String()); 1
tnd.hWnd		= 2
if(isCRL) 2
ITunesController 1
CFTypeRef 2
FileRequestDlg::FileRequestDlg(const 3
QTabWidget 1
foreach(QString 64
v_prevId 1
s.setPriority(127); 1
items_[index] 1
st=tr(); 1
if(!mutex_factory) 1
m_WindowAllocated 3
TestRunner::WrappingSuite::getUniqueChildTest() 1
OptApplicationUI() 1
if(filePath 1
reg.create(2); 1
addChild(btn); 1
ui_.toolbar->hide(); 3
:type(TypePGPKey), 1
sm->insertItem(PsiIconset::instance()->status(STATUS_DND).icon(),		status2txt(STATUS_DND),		STATUS_DND		+ 1
allocators[j]->destroy(); 1
result.clear(); 3
nt->put(state, 1
event->ignore(); 3
XChangeProperty(dsp, 2
beginInsertRows(QModelIndex(), 3
lateMigrationData.serviceRosterIconset.clear(); 1
map[54] 2
NULL, 4
groupItem->setExpanded(expanded); 1
d->ft 17
connect(l,SIGNAL(linkActivated(const 1
G(klass)->setup(this, 1
m_controlStates.clear(); 1
c->info 1
d->length 2
if(!resolver->resolve(state, 2
QueryPerformanceCounter(&slend); 1
graphicsitem->setTransform(QTransform(translation 1
actionsService_->sendMessage(metacontact); 3
memcpy(out.data() 4
statusAway->setWhatsThis 1
form.setTitle(QObject::tr()); 4
playingWith=jid; 2
set_syserr(ENODATA, 1
ui_.le_port->setEnabled(on); 1
object->mDrawable->mXform.setPosition(cur_position); 1
IconButton 4
chb_rotate->setChecked(prof.rotate); 1
d->service->primaryAtChat()->chat 1
PubSubSubscription::PubSubSubscription(const 1
mInputPanel(NULL), 1
CertificateInfo 11
setCurrentPage(idx-1); 1
std::list<const 1
KeyStoreEntry::~KeyStoreEntry() 1
vb->addWidget(te); 1
alpha_factor 2
Provider::Context::~Context() 1
eventReady(GpgOp::Event::Finished); 1
if(have.pass) 1
real_index 4
p.setRenderHint(QPainter::SmoothPixmapTransform, 1
ui.proxyBox->setChecked( 1
d->ensureType(SecureMessageKey::PGP); 4
streampos 1
if(s[n] 2
LLToolPie::getInstance()->pickAndShowMenu(TRUE); 1
if(push_value) 1
ASSERT(define_method_simple_ok); 2
grid->setAutoAdd(true); 1
have.authzid 2
err.pop_front(); 1
pb_rename->setEnabled(TRUE); 1
setTreeStepSize(4); 1
statusList->requestFriendsTimeline(); 2
TypeInfo::init(state); 1
if(this 1
if(!account()->loggedIn()) 1
browseProtocol 1
applyFormatToIcons(doc, 1
m_overview 1
l.insertItem(0,PrivacyListItem::blockItem(block_targets_.takeFirst())); 1
m_ui->listWidget->setFlickrInterface(m_flickr); 1
Q_ASSERT(qVariantCanConvert<QSize>(variant)); 1
QtopiaIpcAdaptor::connect 4
connect(le_transPrompt, 1
IconsetLoadThread(QObject 1
account()->groupChatSetStatus(jid().host(), 1
m_ui->lineEdit->setFocus(); 1
d->updated(); 2
LEGOPTP.customRosterIconset.clear(); 1
BusyWidget 7
if(i.name 1
uint16 4
if(!d->setupPipes(args.contains())) 2
TextIconFormat 2
connect(pb_complete,SIGNAL(clicked()),SLOT(doExecute())); 2
save 3
glVertex3f(box.x() 4
if(!u->isAvailable()) 1
d->ft->accept(savename, 1
session()->endSession(); 1
pm_settings_->addAction(act_file_); 1
trayMenu->addAction(quitaction); 1
TiXmlNode 1
m_tests.insert( 1
kcode 1
m_player.rx()--; 1
src_textp->mTargetPositionOffset 2
tb[2].on 1
tabSet->selectTab(this); 1
if(pre_stdin_close) 2
EventQueue 1
piece->rotateAround(child); 1
cbases 2
manager_->getConfiguration(); 1
if((n+1) 1
printf 412
getChild<LLButton>() 1
CertificateAuthority::CertificateAuthority(const 2
m_difficulty 2
G(iseq)->instance_type 1
sp.setName(name); 1
CookieJar::AcceptOnlyFromSitesNavigatedTo 1
le_resource->setText(acc.resource); 1
pluginSelected(0); 1
if(out.contains(next)) 1
if(!account()->groupChatJoin(host, 1
if(waiting) 10
Qt::WindowFlags 1
OptionsTabIconsetSystem::~OptionsTabIconsetSystem() 1
QTextCodec 3
KeyStoreEntryWatcher::~KeyStoreEntryWatcher() 1
RealSuiteDescription::initialize( 2
StatusShowDlg::StatusShowDlg(const 1
x.data(), 2
emo.append( 1
v_keyID 2
d->pb_deny->setText(tr()); 1
subscription_ 1
gpg.write(in); 1
painterpath.lineTo( 1
gViewerWindow->getWindow()->setCursor(UI_CURSOR_TOOLCREATE); 1
ui_.toolbar->addAction(act_file_); 1
resetAffiliationList(MUCItem::Member); 1
down 1
pb_next->setDefault(true); 1
WbWidget::WbWidget(SxeSession 1
munlock(ptr, 1
if(d->watcher) 2
if(RegOpenKeyExA(HKEY_LOCAL_MACHINE, 1
if(dirs.isEmpty()) 1
IconAction::childEvent(e); 1
Figure::moveListWhitePawn(Q3PointArray 1
manager_ 6
_cls->set_const(state, 1
KeyStoreTracker() 1
query.appendChild(feature); 2
d->qdns->setRecordType(Q3Dns::Aaaa); 1
while(edits_.size() 1
BookmarksDialog::~BookmarksDialog() 1
renderDone(); 1
size.setWidth(rect.x() 1
cos_size 2
some 1
group_widths_ 1
output.wasSigned 3
Library_State 3
:Q3GroupBox(1, 1
gpg.doSignDetached(signerId); 1
d->pipeCommand.writeEnd().close(); 2
m.setTo(j); 1
if(d->last 1
m_success_size 1
TEST_CASE(malloc_constant_1); 1
Q_UNUSED(dropAction); 1
if(!d->cv->isShowOffline() 1
BOOST_CHECK_EQUAL(a.size(), 1
info.fixInterval 2
actionsService_->openChat(resource); 1
dlg.exec(); 3
xform_obj.clearChanged(LLXform::TRANSLATED 1
QList<QSslCertificate> 5
InstructionSequence 4
foundLen 1
m_viewBookmarkBar->setText(!visible 1
c->_storeName 3
d->setSecure(secure); 1
p->setPen(cg.text()); 3
if(i->storeId 1
list.append(acc_->userList()->at(i)); 1
if(!photo_image.isNull()) 2
ui_.cb_lists->setCurrentItem(previousList_); 1
act_close_ 2
QDBusAbstractAdaptor( 1
d->ck_grabUrls->setChecked( 1
audioMgr->send(, 2
PsiToolBar::structToOptions(this, 1
bExecute 2
~TransferMapping() 1
dlg->exec(); 4
doc->adjustSize(); 1
state->om->find_type_info(this)->cleanup(this); 1
if(EOF 1
jt->get(client_->jid().domain()); 1
CPPUNIT_ASSERT(item1 1
invisible_option.label 1
EDB::~EDB() 1
tut::base64_test 1
le_pwcur->setFocus(); 1
for(ContactViewItem 13
params.setPassword( 1
phone_client_->SetFocus(c); 1
Q_UNUSED(url); 1
m_showMenuBarAction 1
proxy_manager_ 1
removeObject(mAttachedObject); 1
actionVoice(u->jid()); 1
toString(lastSessionID 1
strings->assign(state, 1
d->configDlg->show(); 1
setOption(mapPut(basename, 2
account.setLogin( 3
LARGE_TYPE 1
d->le_pass->setText(); 1
if(!gPipeline.canUseWindLightShaders()) 1
le_realm->hide(); 1
Q3ListViewItem::cancelRename(i); 1
result_authCondition 2
super_mask 1
target_ 1
values_[name] 1
base.appendChild(tag); 1
DIRECTORY::CDirectory::Create(strCachePath); 1
_storeId 2
textVisible 1
young.collect(roots); 1
FlickrInterface 2
GetSystemTime(&now); 1
if(pix) 2
qWarning(QString().arg(aspell_error_message(ret)).toAscii()); 1
box 5
ui_.ck_enable->setChecked(true); 2
StatusModel::instance()->setDisplayMode( 3
ui_.pb_close->setDefault(true); 2
line_length 2
QLineEdit::focusOutEvent(event); 1
if(n.is_negative() 2
doneTrigger.stop(); 2
d->cv->qa_logon->setEnabled(true); 1
SendSite::init(state); 1
hud_render_text(segment_iter->getText(), 2
CBString::operator 4
PasswordAsker 2
Q_ASSERT(m_player.x() 4
addFailureLocation( 1
connect_handshaken 1
TestResult::TestResult( 1
quitAction->setShortcut( 1
if(m.from().resource() 1
combo->insertItem(lbl); 1
updateItems(); 3
WebViewSearch::WebViewSearch(QWidget 1
o.reset(); 1
gAgentPilot.startPlayback(); 1
X11KeyTriggerManager::Qt_XK_Keygroup 1
if(!supported.contains(f)) 1
dir_from_camera.normVec(); 1
lg.setColorAt(0.0, 1
bigint_linmul3(get_reg(), 1
foreach 105
c.call(), 1
d->getAction()->setChecked(d->prefilterShowOffline); 1
r->event 2
runApp(, 2
SendSysMessage(); 1
resize(520,320); 1
stateFlag( 2
QHash<QJDns 1
restoreColor(d->pb_cGroupFore, 1
BrowserApplication::~BrowserApplication() 1
TestPath 6
neededheight 1
d->lb_count->setFixedWidth(40); 1
gb_pgp->hide(); 1
SourceLine::lineNumber() 1
.append( 1
setMirrorEnabled(domElement.attribute().toInt()); 1
lst 14
painter.setClipRect(lr.translated(-lr.x() 1
PGPTransaction::PGPTransaction(QCA::SecureMessageSystem 1
DownloadManager::RemovePolicy 1
group 6
LEGOPTP.ppIsOn 1
actForward 1
map[7] 2
d->doReadActual(false); 2
QTimer::singleShot( 16
actionsService_->manageBookmarks(account); 1
{}, 45
setData(idx, 1
d->reqtype 3
CommonTest(); 1
list.append(a); 1
d->searchText->setText(d->searchText->text() 1
TabBar::TabBar(QWidget 1
tempFile.close(); 1
info_el.setAttribute(,image2type(selfAvatarData_)); 1
lastInsertedItem 1
if(ivars->nil_p()) 1
m_closeButtonMode 1
z[3] 6
m.setUrlList(d->attachView->urlList()); 1
out[at++] 3
data[2] 1
option.ppHideTime 1
pipeWriter 2
G 1
set_syserr(ELNRNG, 1
isActive 1
active(-1) 1
global_cache 1
XmlDocument::standalone() 1
first 8
messageBox 5
set_syserr(EMLINK, 1
ChangePasswordDlg::~ChangePasswordDlg() 1
tryReadConsole(); 1
if(drawablep->isActive()) 1
Anim::Anim() 1
CurrentValue 1
d->act_send 1
scene_->setSceneRect(box); 1
imagePainter.save(); 2
AccountManageDlg::~AccountManageDlg() 1
SASL::Params::Params(bool 1
setSizePolicy(QSizePolicy(QSizePolicy::MinimumExpanding, 1
TestDecorator::getChildTestCount() 1
ui_.tb_actions->setMenu(d->pm_settings); 1
ui_.le_homepage->setText( 2
chatEdit()->insert(text 1
messageLabel->setWordWrap(true); 1
proxyError 3
CFRelease(context[4]); 1
wg->width(), 1
if(points.count() 3
SettingsDialog::~SettingsDialog() 1
d->iss_defRoster->clear(); 1
if(!d->ss_info) 1
if(last_pos) 1
VariantTree::VariantTree(QObject 1
Container 4
jsdtrace_function_entry(JSContext 1
haveAlready 1
LLVolumeMessage::packVolumeParams(&volume_params, 13
LLFloaterWater::show(); 1
--d->histAt; 1
cm->execute(state, 1
painter.setPen(painter.brush().color()); 1
tray_selection_atom 1
trees_[node]->toXml(doc, 1
Q_EXPORT_PLUGIN(NoughtsAndCrossesPlugin); 1
alarm(0); 1
buffer.open(QIODevice::ReadOnly); 6
ui_.cb_active->insertStringList(names); 1
glDisable(GL_BLEND); 2
\fn 9
PlasmaFrame::PlasmaFrame(quint32 1
Private(const 7
active->vmm->blocks[index] 1
vcard_avatars_[jid.bare()]->updateHash(hash); 1
proxies 1
!QString(widget->metaObject()->className()).startsWith()) 1
TestLeaf::getChildTestCount() 2
active_file_remove(d->activeFile); 1
obj->all_flags 1
if(majmin 1
vb4->addStretch(1); 1
cb_lang->insertItem(( 1
showAllBookmarksAction->setShortcut(QKeySequence(Qt::CTRL 1
Anim::setMainThread(QThread::currentThread()); 1
lateMigrationData.toolbars[].append(tb); 1
qWarning(qPrintable(QString().arg(fileName))); 1
if(rec[n].EventType 1
DiscoDlg 3
if(r.is_nonzero()) 1
IO::init(state); 1
connect(d->pb_servicesDetails, 1
menuActions_[]->setEnabled(dataService->isAvailable()); 1
threshold 1
ffi_call(&stub->cif, 17
QCOMPARE(checkableAction->isChecked(), 3
qSort(m_history.begin(), 1
std::istringstream 18
m_solver 1
m_webViewSearch 1
middle3->setAutoFillBackground(true); 2
d->lb_field.setAutoDelete(true); 1
bearing_ 2
((QWidget 2
QPushButton::setText(oldtext); 1
NeoPinManager::~NeoPinManager() 1
UserResourceList::UserResourceList() 1
if(filename.empty()) 1
CAP(tr()), 4
glActiveTexture(GL_TEXTURE0); 5
++t; 4
fig[11] 1
IconAction::setText 1
numlock_mask 1
_finished 3
xform_obj.addPosition(vec); 1
if(!primitive->nil_p()) 1
QTabBar::mouseMoveEvent(event); 1
grid->addWidget(chb_wm,4,0,Qt::AlignCenter); 1
d->transid 3
LEGOPTP.toolbars[].append( 1
BookmarksDialog 1
setg(start, 2
m_ui->searchButton->setText(tr()); 2
label 4
logo->setPixmap(qApp->windowIcon().pixmap(128, 1
gpg.doExport(key.keyItems.first().id); 2
actionsService_->sendMessage(group); 1
XMPP::DiscoItem 3
apr_table_t 1
SubHistory 12
alpha+=2; 1
actionOpenWhiteboardSpecific(j); 1
d->lb_url->setEnabled(true); 1
mp_clear(&t); 1
browserPath 1
tabBar_->show(); 1
if(bps 2
mp_init(&n); 6
btn->setIcon( 1
replaceWidget(label, 1
m.setWasEncrypted(true); 2
itemCollisions 1
init(Practical, 1
d->cv->ensureItemVisible(i); 1
r->canonical_filename 1
view->setUpdatesEnabled( 2
sLog.outString( 1
file.write(device->readAll()); 1
fm->insertItem(Features::name( 1
fig[2] 1
Private(KeyLoader 1
pb_browse->setAutoDefault(false); 1
sound 1
cleanUrl.setPassword(QString()); 1
iobj 1
:MemoryRegion(size, 1
di.setNode 1
cancelled 1
AlertIcon::Private::~Private() 1
md5_finish(md5_state_t 1
QList<PrivacyListItem> 1
displayResult(r, 2
d->pb_next->hide(); 1
out[n] 1
hb3->addWidget(d->tb_history); 1
m_scale_level--; 1
QDesktopServices::setUrlHandler( 3
TestRunner::run( 2
identifier_ 10
ui_.toolbar->setIconSize(QSize(16, 1
temp.Format(,i+1); 1
resourcePath 2
icon_->activated(); 2
if(!lastChild) 1
favConf 1
d->le_oeSend->setText(); 1
arg_count 1
connect(button, 1
if(direction 4
account()->actionJoin(s.mucDestroy().jid().full()); 1
left_margin 2
ui_.lb_status->setToolTip(text); 1
sc_authzid 1
ActiveProfiles::ActiveProfiles() 3
processSetMax(args); 1
services_[contact->getAccountName()]->actionAssignKey(contact->getJid()); 1
quoted.replace(rx, 3
d->make_act(PublicKeys); 1
splitter_->setSizes(list); 1
SrvResolver 1
bg_color 2
if(m.parameterTypes() 1
e->setAccepted(maybeTip(pos)); 2
tc.clearSelection(); 2
makeExpected( 1
fill(ch, 1
d->pb_refresh->setEnabled(false); 1
--fill; 1
ConsoleThread 2
proxy.setHostName( 1
LLFloaterEnvSettings 4
connect(webView->page(), 7
p->toolbars[base].keys 1
connect(account()->capsManager(), 1
list->m_spinControl 1
setEnabled(accounts().count() 1
label_color.mV[VALPHA] 1
images 1
label->move(calc->calculateTipPosition(label)); 1
QCOMPARE(edit.textMargin(position), 3
grow_to(reg_size); 2
QModemSimToolkit::initialize(); 1
doFlash(false); 5
p.setPen(Qt::NoPen); 1
if(!s.isNull()) 1
m_content 3
if(msecs 1
while(buffer[skip] 1
glTexCoord2f(0, 2
game=NULL; 1
if((edit->type() 1
layout->addWidget(m_bookmarksToolbarFrame); 1
m_dwPacketSize); 1
QList<Account 1
setButtons(); 2
Functors 1
stream.read((char 1
if(buf.isEmpty()) 6
Private(int 1
m_fd(-1), 1
TestPath::operator 1
r->eventId 2
d->update(); 5
uintptr_t 1
toolbars.insert(0, 1
m_gameplay_steps 1
while(!(child 1
le_nick->selectAll(); 1
that->setUpdatesEnabled(false); 1
setText(1, 4
group_modes_ 1
VCard::Phone 2
lb_comment->setTextFormat(Qt::PlainText); 1
widthaction->setData(QVariant(6)); 1
if(chr->GetTypeId() 1
keyList.last().isTrusted 1
edlink(); 2
tune.setTime(SendMessage(h,WM_WA_IPC,1,IPC_GETOUTPUTTIME)); 1
d->jsp 1
An 1
QObject::connect(signaler,SIGNAL(notificationClicked(void 1
++lit; 2
setPGPEnabled(true); 2
connect(action, 8
setElideMode(Qt::ElideRight); 2
if(group_item) 1
XmlElement::elementCount() 1
if(avail 1
action->setStatusTip(statusTip); 1
online_option.label 1
x[j-1] 1
TestResult::popProtector() 1
Q_UNUSED(path); 4
popup->addAction(action); 2
m_board 5
optionsButton->setSizePolicy 1
u 5
DockTestWidget 1
statusMessage(QString()); 1
DynamicLibraryManager::DynamicLibraryManager( 1
te->setText(text); 2
exit(3); 1
icon.setImpix(pm); 1
if(text.isEmpty() 1
avatarMenu->setEnabled(dataService->hasPep()); 1
QPipeWriterPoll(Q_PIPE_ID 1
MemoryRegion::operator=(from); 1
TEST_CASE(iterator2); 1
urlAdd(u.url(), 1
lb_host->setEnabled(on); 1
Self 2
QWhatsThis::add(d->ck_rc, 1
layout->addWidget(m_slider); 1
qSort(m_paths.begin(), 2
LEGOPTP.noAwaySound 1
pm.setItemEnabled(14, 2
migrateEntry<QString>(element, 1
tr().arg(QCoreApplication::applicationName()), 1
connect(ui_.pb_next, 1
le_transPrompt->setEnabled(true); 1
Figure::validPoint(GameBoard::GameType 1
if((context->count[0] 1
R0(a,b,c,d,e, 1
if(event->buttons() 1
addStatus(XMPP::Status::FFC); 1
hist->setFocusPolicy(Qt::NoFocus); 2
backgroundColor 1
ck_close->setChecked(true); 1
pick_list.insert(( 1
QTextEdit::mouseMoveEvent(e); 1
if((_serial 1
psi->contactList()->createAccount(acc); 1
d->pb_find 1
QCOMPARE(is->count(), 1
Q_ASSERT(actionList_); 1
TextTestResult::TextTestResult() 1
sxe.appendChild(negotiationElement.cloneNode()); 1
m_cells(maze->columns(), 1
mTelehubPos(), 1
resourcePath.setLatin1( 1
thread_ 2
item.mask 1
ProtectorGuard::ProtectorGuard( 1
dexc(RuntimeError, 1
g_mouseHook 2
actionsService_->sendFile(contact); 1
List::init(state); 1
e.appendChild(doc.createTextNode(street_)); 2
if((choose.isEmpty() 1
jsdtrace_function_args(JSContext 1
v_rt 4
Q_EXPORT_PLUGIN2(qca_cyrus_sasl, 1
ui.accountsComboBox->setCurrentIndex( 5
jt->go(true); 5
ui_.log->setFocus(); 1
m_viewTabBarAction->setEnabled(count() 1
conn->setOptProbe(legacy_ssl_probe); 1
if(d->readAhead 2
encode(output, 1
.$%& 1
CompilerOutputter::CompilerOutputter( 1
complete(); 2
translator->load(name, 1
cacheExportAscii 1
s->connectToUrl(d->proxy.url()); 1
connect(m_status_timer, 1
Q_UNUSED(reason) 2
item->tryAgainButton->setEnabled(!done); 1
pb_next->setEnabled(true); 1
q.repeat 2
ui.trayIconAlwaysVisible->setChecked( 1
Cause 1
d->self->setAnimateNick(); 1
d->putServerFirstStep(mech, 2
m_frameTextItem->setTextInteractionFlags(Qt::TextEditorInteraction); 1
mPlaying(FALSE), 1
_l->failedAssertEquals( 1
mp_neg(MP(this), 2
PrivacyList::PrivacyList(const 2
LLPointer<LLHUDText> 1
sounds_field.setVar(); 1
d->ck_popupOnFile->setChecked( 1
d->interface->authorized 2
connect(pa->psi(), 2
joinButton_->setEnabled(account_); 1
instructions_ 1
setItemDelegate(new 2
map_to_storage(request_rec 1
m_historyBack->setMenu(m_historyBackMenu); 1
if(entries[i].type() 1
packet_to_net.clear(); 1
d->le_priority->clear(); 1
if(queuedIncomingEdits_.at(i).sender.full() 1
out.writeBlock(dat, 1
QList<IconToolButton 3
tracker().failedAssertSameData( 1
Pooling_Allocator::Pooling_Allocator(u32bit 1
d->localCert 1
pNode=CDirectoryNode::CreateNode(NodeType, 1
doDisco(); 1
m_wrapColumn 2
BrowserApplication::instance()->loadSettings(); 1
setTextAlignment(4, 1
if(!DuplicateHandle(GetCurrentProcess(), 1
d->cb_preset 1
btn->setLabel 1
type_field.setVar(); 2
viewer_ 1
TestRunner::WrappingSuite::getName() 1
Q3DictIterator<Iconset> 1
if(!d->pa->loggedIn()) 4
hst->insertStringList(h); 1
action->setData(QVariant(WbWidget::Select)); 1
pChild 1
d->cv->qa_logon->addTo(&pm); 1
if(r) 3
registerCaps()); 1
e.xclient.type 1
PGPKeyDlg 1
hideTip(); 3
ApplicationPoolPtr 1
if(_keylist) 1
resolveLibs(); 1
GlobalShortcutManager::KeyTrigger::Impl::qt_vk_table[] 1
m_corners[3][1] 1
connect(d->pb_find, 1
GO(errno_mapping).set(LookupTable::create(state)); 1
st.replace(); 8
ActionList::ActionList( 2
connect(d->pb_emoDown, 2
while(string[j].isSpace() 1
sha1_update(context, 3
roster.insert(PsiOptions::instance()->getOption().toString(), 1
restore_context(target); 1
QCOMPARE(is->system().description(), 2
mGrabMouseButtonDown( 1
p->setPen( 1
QCOMPARE(iconset->authors()[0], 1
qa_clearAvatar 1
LLFloaterPreference::LLFloaterPreference() 1
m_mazes_preview->setPixmap( 1
LLToolMgr::getInstance()->setTransientTool(LLToolCamera::getInstance()); 1
m_frame->layoutText(m_frameTextItem, 1
o.showDecorationSelected 1
:Q3ListViewItem(par) 2
Screen 1
data[size++] 1
XFree(result_array); 1
connect(ks, 3
QCoreApplication::instance()->installTranslator(qt_translator_); 1
error_disconnect 2
if(in.isValid()) 2
PsiToolTip::showText(mapToGlobal(pos), 2
map[n2] 2
m.setChatState(XMPP::StatePaused); 1
if(obj->activated()) 1
NetworkAccessManager 2
QWhatsThis::add(d->cb_preset, 1
list_.setTextBkColor(CLR_NONE); 1
LEGOPTP.jidComplete 1
rotation.setQuat(90.f 4
if(ui_.le_title->edited()) 1
m_exceptions_allowForSession 2
XmlDocument::setStandalone( 1
pb_close->setFocus(); 3
d->connectInstance(this); 3
mp_or(&low, 1
if(!setsecprops()) 2
items.removeAt(n); 1
ck_auto->setWhatsThis( 2
model->removeRow( 1
BookmarksManager::BookmarksManager(QObject 1
history.addHistoryItem(foo); 1
QList<QLabel 3
set_sendsite(as<SendSite>(obj)); 1
connect(act_end_, 1
connect(controller_, 4
MainWindow::activated(QWidget 1
if(node.isAttr() 1
d->pb_cStatus->hide(); 1
memset(context->buffer, 1
blurinner<aprec,zprec>((unsigned 4
U8				material 1
m_cells[pos.x()][pos.y()] 2
passwd 1
m_output.close(); 1
s_networkAccessManager 1
AccountManageDlg 1
static_cast<MacKeyTriggerManager 1
map[n] 1
u.userListItem 1
closeConfirmation.setIcon(QMessageBox::Question); 1
viewMenu->insertSeparator(); 2
setTransform(QTransform().rotate(m_yRotationAngle, 1
if(!ca_skip) 2
mw.showIntroduction(); 1
d->pe_settings->reset(); 1
mFadeDistance 1
XDataWidget 3
if(signing 1
st_data_t 1
gAgentPilot.startRecord(); 1
pop->setActiveWindow(); 2
if(!d->success 2
option.systemIconset 2
pc->setCurrentItem(acc.proxyID); 1
d->pb_close->setMinimumWidth(80); 1
PsiActionList::~PsiActionList() 1
default_allocator_type 1
f.replace('@',); 1
yElement.appendChild(doc.createTextNode(QString::number(rect.top()))); 1
ui_.lv_users->Q3ListView::setFont(f); 1
&,^[}|1 1
reg[length 1
accountTree.saveOptions(accountsFile.fileName(), 1
sources.push_back(new 8
NotificationContext 3
:MemoryRegion(a, 1
item->setData(QVariant(c.jid().full()), 1
:MemoryRegion(a) 1
connect(ui.nextButton, 1
qa_assignAvatar 1
that->topData()->dnd 1
EventNotifierAction 3
rt->setWidth(w); 1
enabled_[(AffiliationListIndex) 4
while(console.bytesAvailable() 1
d->ck_popupOn->setChecked( 1
ui_.lb_ident->setVisible(false); 1
d->make_act(SignAndEncrypt); 1
g_tty_console 2
setQuoteOperatorNumber( 1
hb1->addWidget(d->lb_ident); 1
stopButton->hide(); 2
tr().arg(str), 1
d->le_from->setCursorPosition(0); 2
le_jid_->setText(QString().arg(session->target().full()).arg(session->session())); 1
setExpanded(index,m->data(index,ContactListModel::ExpandedRole).toBool()); 1
PGPUtil::showDiagnosticText(static_cast<QCA::SecureMessage::Error>(e), 2
that->ca_flag 1
view_->setItemDelegate(new 2
e.appendChild(command_.toXml(doc(),true)); 1
defaultSettings->setFontFamily(QWebSettings::StandardFont, 1
d->le_url->setEnabled(false); 1
capacityState.close(); 2
setContactStatus(contact, 2
if(!g_event) 6
VMPrimitiveMethod::VMPrimitiveMethod(STATE, 1
d->le_oeMessage->setText(); 1
gGL.vertex3fv(v[1].mV); 1
QRectF 9
obj->loop->remove_event(obj); 1
kg.sym[0] 2
for(it 6
grid->addWidget(btn_save,9,0,Qt::AlignCenter); 1
arg[n] 1
layout->addWidget(m_searchHistory); 2
SET(obj, 1
s.setPriority(-128); 1
theText_ 1
msg->nextBlock(); 4
appendTextHelper(doc, 1
translator.load(fileNames[i], 1
jsdtrace_fun_name(JSContext 1
Builtin_Modules::Builtin_Modules() 1
QPushButton::paintEvent(p); 1
di.changeTimer->setSingleShot(true); 1
args.clear(); 1
TEST_CASE(pushback5); 1
d->deref(); 1
LEGOPTP.dtPort 1
shortcutItem->addChild(keyItem); 1
if(!dirs[at].changeTimer->isActive()) 1
if(!providerItemList.isEmpty()) 1
QList<PsiAccount 4
RealIconWidgetItem(QListWidget 1
Item() 1
if(instance_of<Class>(mod)) 1
barLayout_->setMargin(0); 1
inspectNodes(); 2
QHash<Handle,JDnsSharedRequest 1
actionInvite(u->jid(), 1
alloc->deallocate(p, 1
GameSocket::newConnection(int 1
item->priority 3
PsiEvent 30
ctx->vmm 2
brush.setPixmap( 1
setWindowTitle(pa->name() 1
le_pass->setFocus(); 2
connect(ui_.pb_up,SIGNAL(clicked()),SLOT(moveCurrentRuleUp())); 1
connect(m_viewStatusbar, 1
connect(d->mainMenu, 1
OptionsTab::OptionsTab(QObject 2
d->pb_http_deny->show(); 1
QVERIFY(history.history().isEmpty()); 1
memset(&finalcount, 1
access_model.setAttribute(); 1
d->interface->connection.data()->post( 8
std::vector<Allocator 3
out.close(); 2
cur 10
ret.append('\n'); 1
source 5
connect(lv_accs, 2
apr_off_t 2
set_syserr(EOPNOTSUPP, 1
setPosition(position); 1
m_pReader->AddTag(vecSplitTags[i]); 1
XFree( 1
DefaultProtector::protect( 1
if(!v_keyID.isEmpty()) 1
JT_Search::set( 1
bg_sePlay->insert(d->tb_seSendPlay); 1
get_pkcs12_der(der, 1
prebytes 5
_l->warning( 1
if((tagName 1
negotiations_.clear(); 1
webView->webPage()->mainWindow()->close(); 1
QFileInfo 46
LocationBar::LocationBar(QWidget 1
d->groupInfo 1
info.interval 1
StringTools::toString( 4
m->addAction(d->act_add_to_roster); 1
EventTypeSpec 1
g.pathProfiles 2
setBackgroundMode(Qt::X11ParentRelative); 1
connect_certificateRequested 1
obj->d->queryCache 1
endModal(item); 1
statisticsElement->addElement( 4
statusMsg.replace('\n',); 1
c->setTrustedCertificates(trusted); 1
Default_Mutex() 1
statusRect 1
account_->dialogRegister(this, 1
TextOutputter::printFailureListMark( 1
settingsaction->setShortcut( 1
strFake.Format(, 2
QStyleOptionViewItem 2
mature.free_objects(); 1
ba.append( 1
acc.legacy_ssl_probe 2
HistoryMenu 2
HistoryFilterModel 1
DiscoListItem::~DiscoListItem() 1
p->drawText(center 2
load(); 17
QMap<CapsSpec,CapsInfo>::ConstIterator 1
v_clientName 1
item->setData(QVariant(c.nick()), 1
tc.setPosition(current_position); 1
cricket::ThreadManager::SetCurrent(t); 1
d->loop 2
ap_rputs(, 9
if(stringToKeyList(outstr, 1
if(!urls.isEmpty()) 1
AdvancedConnector::Proxy::Proxy() 1
session_->SignalNextFile.connect(listener_, 1
stype 2
GameBoard::FigureType 8
SxeRecord::~SxeRecord() 1
CPPUNIT_ASSERT(cs[2] 1
QTEST_MAIN(TestPsiIconset) 2
ui_.cb_value->setEditable(true); 1
setWindowTitle(caption().arg(d->jid.full())); 1
PlugInManager::removeListener( 1
mp_clamp(MP(b)); 1
manager_->addContact(lastContact, 1
LLViewerParcelMedia::pause(); 1
st.wYear 1
it2.data() 1
Handle() 1
QFrame::show(); 2
setMenu( 1
mergeList(&out, 1
tv_ 2
m_contentsRect.setHeight(hfw); 1
d->ensureType(SecureMessageKey::X509); 4
JT_ClientVersion 4
if(!v.exists()) 2
stopHuman 2
setChatState(XMPP::StateActive); 2
G(module)->set_object_type(ModuleType); 1
trees_[name]->fromXml(child); 1
d->update(static_cast<CSRContext 1
d->interface->statusParser->setServiceUrl( 1
init_module(apr_pool_t 1
m_session->GetPlayer()->SendUpdateWorldState(world, 1
muc.appendChild(d.toXml( 1
actionSendMessage(u->jid()); 1
lb_port->hide(); 1
d->pa->openAddUserDlg(); 1
stopScrolling(); 2
d->xdata_instruction 1
act->setCheckable(true); 2
if(!requests.contains(obj)) 3
tabWidget_->setTabButtonsShown(enabled); 1
Drawer::~Drawer() 1
mapper->setMapping( 4
form.setFields( 2
o.call(, 3
mod->set_const(this, 20
m_sessionCookies 1
disconnect(voiceCaller_,SIGNAL(rejected(const 1
homeLineEdit->setText(webView->url().toString()); 1
lb_authors->hide(); 1
quint16 3
CPPUNIT_TEST(testSmallerThan_SameNode); 1
p->setClipRect(xoff, 1
FSRef 1
Type_find, 1
d->pb_deny 1
newIndex 5
hours++; 1
d->iss_servicesRoster->scrollToItem(item); 1
PsiGrowlNotifier::PsiGrowlNotifier() 1
m_bookmarksToolbar->hide(); 1
QTOPIA_TASK(NeoHardware, 1
addVertex_ 1
QWhatsThis::add(d->ck_notifyAuth, 1
History(Q3ListViewItem 1
ui_.le_pcode->setModified(x); 1
if(doc.documentElement().nodeName() 1
chatView()->setFont(f); 1
DiscoListView(QWidget 1
to.append( 2
m_historyHash.insert(url, 1
SecureMessageSignature::~SecureMessageSignature() 2
lb_keyicon->setEnabled(false); 1
d->attachView->urlAdd(url, 1
error.setAttribute(); 1
m_vecUrls 1
if(i) 8
mMass(1.f), 1
TestResultCollector::failures() 1
pItem->GetMusicInfoTag()->SetGenre(strFake); 1
d->ck_allowAwayPopup->setChecked( 1
QColorGroup 5
jsdtrace_filename(fp), 5
XDataField_TextMulti(XData::Field 1
G(hash)->setup(this, 1
changeResource(name); 1
d->flist.clear(); 1
UserAccount::GroupData 4
ChatDlg::~ChatDlg() 1
ui_.tb_pgp->setDefaultAction(act_pgp_); 1
StatusPreset::StatusPreset(const 1
d->tray->show(); 1
ui_.cb_lists->insertStringList(names); 1
if(it 12
VCardFactory::~VCardFactory() 1
BrowserMainWindow::~BrowserMainWindow() 1
sender=nicks[nick]; 1
if(id 11
lbx_profiles->setCurrentItem(x); 1
attribFlags 1
painter->setFont(statusFont); 1
closing 1
m_checkForUnread 1
setValid(TRUE, 1
OptionsTreeModel::OptionsTreeModel(OptionsTree 1
GetPrivacyListsTask 2
restoreColor(d->pb_cAnimFront, 1
if(d->rlist.isEmpty()) 1
QSignalSpy 17
ui_.tb_actions->show(); 2
foreach(ProxyItem 3
dialog.exec(); 4
batteryVoltage 4
NeoKbdHandler::~NeoKbdHandler() 1
m_windowMenu->addAction(tr())); 1
setUseSSL(false); 2
qApp->removeEventFilter(this); 1
if(!retTypeName.isEmpty()) 1
WbDlg 3
if(_ownInstance) 2
errmap[GpgOp::ErrorEncryptInvalid] 1
lv_accs->setAllColumnsShowFocus(true); 1
qRegisterMetaType<QProcess::ProcessError>(); 2
m_addBookmark->setShortcut(QKeySequence(Qt::CTRL 1
vl.putPoints(vl.size(), 40
while(!edits_.isEmpty()) 1
data->setText(text); 1
Private(ConsolePrompt 1
contact->setName(newName); 1
if(MP(this)->sign 4
d->timer.start(); 1
state[1] 1
ai_new(&ai, 2
account()->dialogUnregister(this); 3
ASSERT_EQUALS(false, 1
pGroup->AddControl(list->m_spinControl); 1
viewGroups->setUsesDropDown(true); 1
m_toolbarSearch 1
do_update(); 1
d->le_priority 1
yElement.appendChild(doc.createTextNode(valueStr)); 1
services_[contact->getAccountName()]->actionInfo(contact->getJid()); 1
if(!d->eventList.isEmpty()) 1
pb_find->setDefault(true); 1
Exception( 1
BookmarkToolButton 1
Exception, 4
psicon->doOpenUri(uri); 1
Q_UNUSED(addMovie); 1
OutputDebugString(g_localizeStrings.Get(GetID()).c_str()); 2
pb_info->setEnabled(false); 3
m_ui->listWidget->setPalette(pal); 1
chat->init(); 1
if(!r) 1
X11KeyTriggerManager::instance()->removeTrigger(this); 1
wait_events 1
if(list[0] 1
d->le_url->setEnabled(true); 1
SProcess 2
LLMediaBase::EStatus 2
d->pa->changeStatus(status); 1
oid_elems.push_back(to_u32bit(substring)); 2
widthaction->setData(QVariant(1)); 1
TEST_CASE(vcl1); 1
d->sb_asXa->setMinValue(0); 1
if(par->groupType() 1
session_manager_->OnSignalingReady(); 1
:Q3ListView(parent, 4
m_move_animation->setCurrentTime(m_move_animation->duration()); 1
TestResultCollector::startTest( 1
mResizeTimer.stop(); 1
NarrowStringArrayModel::~NarrowStringArrayModel() 1
ELineEdit 1
useSound 1
m_id++; 1
m_historyHash.remove(url); 1
TYPE_UNDEFINED, 1
searchTextEntered(d->searchText->text()); 1
Server::start() 1
set_syserr(ECHRNG, 1
saveGeometryTimer_->start(); 1
unblock(); 6
trayIcon->setContextMenu( 1
currentLanguage_ 3
Q_UNUSED(iconName); 1
d->ck_inactiveevents->setEnabled(d->ck_messageevents->isChecked()); 1
d->cb_bounce->hide(); 1
d->lastSearch 1
memmove(p 2
d->cv->setShowAway(true); 1
TEST_CASE(realloc6); 1
pipeAux.writeEnd().close(); 2
ui_.log->appendText(QString(); 2
if(pipe 1
cleanupButton->setEnabled(m_downloads.count() 2
OSStatus 2
secprops.max_ssf 1
connect(d->proxy, 1
++dst_it; 1
std::for_each(entropy_sources.begin(), 1
d->statusButton->setEnabled(d->psi->contactList()->haveEnabledAccounts()); 1
QList<URLEvent> 1
so->num_bytes 1
di.setAction 1
QMainWindow::setWindowIcon(p); 1
list.append(newCookies.at(j)); 1
UserListItem 28
pm.setItemEnabled(24,!psiAccount()->capsManager()->isEnabled() 1
buttonMenu->addSeparator(); 2
MUCAffiliationsModel::MUCAffiliationsModel() 1
QList<TimerInfo> 1
functors.push_back( 1
connect(d->iss_servicesRoster, 2
ResetAll 7
OnigOptionType 2
task->connect(task, 2
setCaption(str 1
sxeId_--; 1
chb_rotate->setText(tr()); 1
if(active->cm->scope->nil_p()) 2
RosterBuilder 2
ASSERT_EQUALS(int 5
auxHandler 2
if(!asker.accepted()) 2
:QWidget(parent, 5
connect(d->act_close,SIGNAL(activated()), 1
connect(icon_, 2
QCOMPARE(spy.count(), 3
frametimer 1
LEGOPTP.smallChats 1
topLevelItem->setExpanded(true); 1
ui_.le_server->addItems(list); 1
appendSysMsg(msg); 1
connect(tab, 7
item.setReason(reason); 2
tb_browse->hide(); 1
recentList.remove(it); 2
setStatusTip(name); 1
DetectedSessions_.removeAt(i); 2
if(s.at(n) 2
d->setWindowText(d->windowName(profile)); 1
top2->setAutoFillBackground(true); 2
connect(d->ck_toolbarOn, 1
fixer 1
d->pa->actionHistory(d->jid.withResource()); 1
fixed 1
if(ui_.le_email->isModified()) 1
ChatDlg::Spooled_OfflineStorage 1
assert(next->current 1
cb->clear(QClipboard::Clipboard); 1
d->lb_pgp->setPsiIcon( 1
QPair<bool, 2
d->v 2
d->c->end(); 2
d->u 2
ChatEdit::ChatEdit(QWidget 1
setFileName(file); 1
messageBox->setButtonText( 3
actionsService_->invite(contact, 1
lb_type->setTextFormat(Qt::RichText); 1
d->lb_pgp->setPsiIcon(IconsetFactory::iconPtr(d->enc 1
ui_.le_state->setEnabled(x); 2
TEST_CASE(tmpfile_function); 1
gd.rank 3
LEGOPTP.onevent[eChat1] 1
setupDrawable(drawablep); 1
c3.format 1
equal 5
global_lib_state 1
edit->setWordWrapMode(QTextOption::WordWrap); 1
IconActionGroup::doSetMenu(findChildren<QAction 1
ssfmin 1
mWebPanel 2
pm_settings_->addAction(act_save_); 1
PrivacyDlgTest(); 1
++size; 1
generateRemoves(children.at(i)); 1
TypeInfo::TypeInfo(object_type 1
jid2.append(a); 1
cursor.movePosition(QTextCursor::EndOfBlock, 1
doc.setContent(sstanza); 1
packet_in 1
addToIdLess(node.toElement()); 1
om->collect_mature(globals.roots); 1
spawnMethod 2
v_avatarFactory 2
continue; 165
Pooling_Allocator::Memory_Block::Memory_Block(void 1
ringing( 1
np.realm 1
isd_iconset->setIconset(is); 1
foreach(MacKeyTrigger 1
doApply(); 1
drw->repaint(TRUE); 1
CookieJar::~CookieJar() 1
if(linkify_pmatch(out, 2
QList<QLineEdit 1
MyKeyStoreList 3
LEGOPTP.color[cGroupFore] 1
hb->insertItem(s); 2
updateTipLabel(PsiTipLabel::instance(), 1
:QDialog(0) 2
:QDialog(0, 1
QFrame::resizeEvent 1
g_event->reject(asker_at); 2
sprintf(proc, 1
P_ERROR(e.what()); 1
nonDestructiveBasicTest(); 1
tree3.loadOptions(http: 1
if(allowEdits_) 1
QWhatsThis::add(d->rb_defActChat, 2
if(offset) 2
) 31
RosterDataService 9
connect(m_windowMenu, 1
QWhatsThis::add(d->pb_spDelete, 1
CGUIPanelContainer 1
PGPKey::~PGPKey() 1
XmlElement::setContent( 2
BusyWidget::BusyWidget(QWidget 1
if(findKeyringFilename(outstr, 1
mimeData->setText(m_webView->url().toString()); 1
KeyStoreEntryWatcher::KeyStoreEntryWatcher(const 1
ck_req_mutual->hide(); 2
map<int, 1
snarlStruct.id 5
DiscoListItem::DiscoListItem(DiscoItem 2
if(pipeStatus.writeEnd().isValid()) 2
Message::setShortDescription( 1
q->requestDirectMessages(); 1
foreach(QLabel 2
activeFiles->append(s); 1
priority_field.setRequired(false); 1
d->mainwin->updateReadNext(nextAnim, 1
spellmgr.CheckUsedSpells(); 1
slimContacts->setWhatsThis(tr()); 1
QList<IconText> 1
battery->setCharging(charging); 2
Private() 36
painter.setPen(palette().brush(QPalette::Disabled, 1
_l->failedAssertRelation( 1
m_children 2
foundStatus 1
connect(ui_.nickname, 1
lbx_proxy->removeItem(x); 1
QCOMPARE(iconNames.count(), 1
m_status_remain_message->setText(tr() 1
exceptionTable->verticalHeader()->hide(); 1
d->pb_reply->setText(tr()); 1
if(cur.isEmpty()) 1
item->setHidden(!action->isVisible()); 1
resolver 1
w->setActiveWindow(); 1
modify_buttons_[d->tb_seIncomingFT] 1
like 1
success 6
children.setAutoDelete( 1
CapsInfo 2
connect(d->findDlg, 1
~ConsoleThread() 1
resize(560,400); 1
QList<QNetworkCookie> 10
foreach(QLineEdit 1
s_historyManager 1
std::swap(reg, 1
widget->setStatusData( 2
createChat(); 1
wg->setGeometry(2, 1
QDBusReply<QDBusConnectionInterface::RegisterServiceReply> 1
jsdtrace_fun_linenumber(cx, 2
WbItem::WbItem(SxeSession 1
tb.on 4
context[3] 1
view_->unregisterAccount(acname); 2
tokenizer.setVarId(); 10
c->update(arg_from_net, 1
m_mousePressed 2
QList<FancyPopup 4
ur.setStatus(s); 2
_time 3
orig_thread 1
X509_ASN_ENCODING 1
pb_profiles->setFocus(); 1
Exception::clone() 1
d->pa->dj_sendMessage(m, 1
actionsService_->executeCommand(resource); 1
if(!f.open(QFile::WriteOnly)) 1
QTreeWidgetItem 28
template<typename 2
tune.setTime(xmms_remote_get_playlist_time(0,pos) 1
EXCEPTION_EXPECTED 23
if(d->ocountdown) 1
ServerInfoManager::ServerInfoManager(Client 1
setError(e); 3
setScene(scene); 1
vb1->addWidget(wbWidget_); 1
QtopiaIpcEnvelope 2
pipeAux.reset(); 2
setToolTip(tip); 2
Frame::~Frame() 1
d->shutting_down 2
_crl 1
gpg.doEncrypt(recipIds); 1
if(PsiOptions::instance()->getOption() 4
if(arg_from_net.isEmpty() 1
identities 1
layout_->removeItem(stacked_); 1
if(ui_.le_country->edited()) 1
secondsIdle(idleTime); 1
frametimer->start( 1
connect(vcard_avatars_[jid.bare()],SIGNAL(avatarChanged(const 1
signerId 1
dst_force.mV[VX] 1
d->getAction()->setEnabled(have_pep); 1
if(!type->fixnum_p()) 1
viewMenu->addAction(m_viewBookmarkBar); 1
grow_to(size() 1
append( 1
connect(m_timeLine, 2
menu->addAction(tr()); 2
if(j.compare(j2, 4
view->setAttribute(Qt::WA_DeleteOnClose); 1
requestForHandle.insert(h, 4
set_syserr(EALREADY, 1
connect(exceptionsButton, 1
Q_UNUSED(unpackPath); 1
lateMigrationData.customRosterIconset.clear(); 1
m_historyForward->setIconVisibleInMenu(false); 1
mFadeRange 1
btn_save->setText(tr()); 1
updateLastMsgTime(time); 3
if((size_t)total->n2i() 1
chain_list 1
WebView 19
if(itemKind 1
global->app_name 1
@ 5
d->c->setConstraints(d->con_minSSF, 2
toolBar->addAction(actStop); 1
Add(panel->m_spinControl); 1
statusList->setImage( 1
PSendSysMessage(LANG_SOUND_NOT_EXIST, 1
io_pending 6
if(msg.priv 1
forwardToApplication 4
factory()->account()->pepManager()->get(jid_,http: 1
migrateEntry<QRect>(element, 1
qRegisterMetaTypeStreamOperators<QList<QNetworkCookie> 1
loadUrl(url, 2
d->mucManager->setDefaultConfiguration(); 1
QList<QAction 5
ui_.le_city->setEdited(x); 1
LLStringUtil::null, 1
changes_[ProcessingInstructionData] 1
src_force.normVec(); 1
URLObject::getInstance()->popupAction(anchor); 1
CPerformanceSample 1
tb[0].name 1
blue 2
lst->append(this, 1
PsiPlugin 3
TestSuite::TestSuite( 1
am->setItemEnabled(15, 1
obj->set_forward(copy); 1
pm_settings_->addAction(act_clear_); 2
if(session.isEmpty() 1
m_scale_factor(0), 1
QNetworkCacheMetaData 2
recordByNodeId_.clear(); 1
cache(, 9
printFailureType( 2
csm->put(state, 2
ASSERT_EQUAL(&c, 5
m_overview->setVisible(QSettings().value(, 1
if(append) 1
additions++; 1
have_pep 1
if(con) 1
assert(ulong_t(h.iItem) 1
Group 10
if((dsk 1
buttons->insert( 1
d->kse 3
addContact(, 3
protocolActions->setExclusive(true); 1
d->ksi 3
d->ksm 1
to 7
c1.replace 2
d->cb_animation->setCurrentItem(d->cb_animation->findData(PsiOptions::instance()->getOption().toString())); 1
LEGOPTP.autoVCardOnLogin 1
pb_keyclear->setEnabled(false); 1
actionRecvEvent(u->jid()); 1
d->connect_hostNameReceived 2
QMediaEncoder 1
UnregisterHotKey(winId(), 1
RTParse::RTParse(const 1
finishGame(); 3
gotKey 1
is->addToFactory(); 3
updateHistory(id, 2
++first; 3
bResume->setText(tr()); 1
_in_id 1
r.binary_decode(binary, 1
ActiveProfiles 3
d->cb_toolbars->setCurrentIndex(0); 1
streamSplitCb, 1
ChatDlg::ChatDlg(const 1
z.flip_sign(); 2
d->animTimer 1
buf_stderr.append(proc.readStderr()); 1
PGPUtil 1
setExpandable(false); 1
mask.clear(); 1
ui.languageCombo->insertItem(0, 1
d->serviceUrl 3
description 7
w->setMaximumHeight(0); 1
connect(t,SIGNAL(finished()),SLOT(commandExecuted())); 6
Q_DECLARE_METATYPE(QCA::PGPKey) 1
Matrix, 1
d->item 1
layout->addWidget(m_browsingHistory); 2
if(items[n].owner 2
SynchronizerAgent 1
twitpicUpload->postContent( 1
change(c); 3
m_previousWindow 3
if(!d->act) 1
am->insertItem(tr(),18); 1
NeoSimInfo::~NeoSimInfo() 1
actionRecvEvent(i->u()->jid()); 1
isBusy 1
d->le_oeOnline->setText(PsiOptions::instance()->getOption().toString()); 1
d->format 4
memset(context->state, 1
Handshaking, 1
options->load(optionsFile()); 1
ui_.pb_add->setEnabled(i 1
connect(d->pb_close, 2
if(tmp->reference_p() 1
TEST_CASE(oldStylePointerCast); 1
connect(pb_create, 1
QMap<QWidget 1
CertificateCollection::CertificateCollection() 1
updateContact(d->jid); 1
QTimer::singleShot(1, 1
OptAppearanceMiscUI 2
if(kind_of<Fixnum>(b)) 3
bg_color->insert(d->pb_cOnline); 1
g_TextureManager.StartPreLoad(); 1
QWidget 95
if(newPipe) 1
topLevelItem->setData(0, 2
qWarning()<<; 3
if(relative_size 6
m_slider 2
serverHello 1
cableConnected(getCableStatus()); 3
Bignum::init(this); 1
connect(ui_.pb_hangup,SIGNAL(clicked()),SLOT(terminate_call())); 1
sock->flush(); 1
d->tray->setToolTip(s); 1
trap_errors(); 1
idStream 1
m_amp.SetVolume(nVolume); 1
primary 2
abortNegotiation(negotiation->sessionId, 3
if(timers[n].id 1
inStr 1
timer.setInterval(PIPEREADER_POLL); 2
list.append(prebytes 1
Iconset::Iconset() 1
Root::Root(STATE) 1
Root::Root(STATE, 1
if(d->cb_ident) 2
QVERIFY(spy4.count() 1
FileWatch::~FileWatch() 1
test_names 2
setLastSxe(incoming.sender.full(), 1
if(paddingType 2
Q3SimpleRichText 1
if(pool[n].isIssuerOf(out.last())) 1
cvi.setAutoDelete(true); 1
account()->actionSendFiles(jid(), 1
BusyWidget::~BusyWidget() 1
showAvatars->setWhatsThis(tr()); 1
doc->setParent(newTextEdit); 1
call->state() 5
pageAction(QWebPage::DownloadImageToDisk)->trigger(); 1
LEGOPTP.toolbars.clear(); 1
what.truncate(what.length()-1); 1
setCurrentIndex(currentIndex() 2
IconsetFactoryPrivate::instance()->registerIconset(this); 1
d->lw_nickColors->addItem(new 1
connect(account()->avatarFactory(), 1
if(((IncludedModule 1
if(unescape_config_stringlist(skip_plugins_str, 1
JingleIQResponder(XMPP::Task 2
FileTransfer 4
d->c->start(d->format, 10
d->watcher->addPath(d->fileName); 1
saveToCache(vcard->photo()); 1
m_flickr->disconnect(0, 1
TypeInfoHelper::getClassName( 1
Float 27
blocks.push_back(Memory_Block(byte_ptr 1
readBoolEntry(tb_position, 1
valueStr.setNum(frameClass()); 1
v_physicalLocation 2
d->pb_find->setEnabled(true); 1
statusChanged 1
contact->setAccountName(acname); 1
colors 1
board_zoom 2
version_++; 1
childp->mDrawable->setState(LLDrawable::USE_BACKLIGHT); 1
TEST_CASE(all1); 1
newtwitpicAction->setText( 1
if(!data.isValid()) 1
storage.setAttribute(); 1
le_port->setEnabled(false); 1
d->lb_top->setFrameStyle( 1
autoSave(false); 1
ButtonItem 4
LEGOPTP.color[cProfileFore] 1
collectOutput 8
e.appendChild(y_element); 1
memset(p, 1
webView->setFocus(); 3
command.setAttribute(,from); 1
WaterColorControl 1
GeoLocation::GeoLocation(const 1
PsiActionList::PsiActionList( 1
RegistrationDlg::~RegistrationDlg() 1
lb_resource->hide(); 1
GO(external_ivars).set(LookupTable::create(state)); 1
m_scale 5
_tests 1
m_flickr->searchPics(searchName); 1
readNumEntry(a, 8
CRLEntry 1
d->buf.clear(); 2
negotiation->session->setImporting(true, 1
trigger.close(); 2
d->tb_history->setPsiIcon(IconsetFactory::iconPtr()); 1
grabbedKey.code 1
addAction(act_scrolldown_); 1
d->ft->writeFileData(a); 1
xcg.setColor(QColorGroup::Base, 3
QVERIFY(is->load()); 3
Q_UNUSED(layoutDirection); 1
newy 1
d->pb_http_confirm->show(); 1
TEST_CASE(nullpointer4); 1
gotoidenticaAction->setText( 1
QPointer<JT_XSearch> 1
::bringToFront(this); 1
--q[j-t-1]; 2
doWhois(true); 2
if(ShortcutManager::instance()->shortcuts().contains(key)) 1
PsiPopup::Private::~Private() 1
popup->clear(); 1
ContactListModel::ContactListModel(ContactList 1
IconsetEmoUI 5
WRITE(double, 1
showOffline->setWhatsThis(tr()); 1
connect(cb_service, 1
Environment::Environment() 1
mp_div_2d(s, 1
d->le_dtExternal->setText( 1
while(y_top 1
readConv.setup(LineConverter::Read); 1
x_size--; 1
capsChanged(jid()); 1
m_page->m_openInNewTab 3
connect(ic, 1
PsiToolTipHandler::getInstance()->install(w); 1
TEST_CASE(freefree1); 1
addToolBar(m_bookmarksToolbar); 1
d->iss_system->setPalette(customPal); 1
Drawer::map2win(int 1
statusBar()->showMessage(string, 1
if(rotate) 4
{2, 2
tree3.saveOptions(http: 1
muc.appendChild(item.toXml( 1
n 67
test11 1
test10 1
LLFloaterAbout::show(NULL); 1
LEGOPTP.askOffline 1
contact->setAvatar(avatar); 1
if(spinning) 1
tcf.setUnderlineStyle(QTextCharFormat::DotLine); 1
mwgeom.setRect(64, 1
if(!d->busy->isActive()) 1
TEST_CASE(ifelse); 1
hIcon 1
le_font[1] 1
ui_.lb_ident->setShowJid(false); 2
m_zoom--; 1
gl.remove(ContactView::tr()); 1
TestFactoryRegistry::getRegistry( 1
show[0] 1
CDrawObj 1
type_field.setType(XData::Field::Field_Hidden); 2
affiliations_model_->addItems(items); 1
Loop::Loop() 1
m_searchButton->resize(menuWidth, 1
_tests->activateAll(); 1
ui_.cb_value->insertItem(tr()); 4
reg->go(true); 4
LineConverter 3
control_channel 1
ClientStarted, 1
Manager 1
if(global) 1
m_corners[0][1] 1
root->setText(0, 1
checkForViewBoxChange(session_->document().documentElement().attributeNode()); 1
break; 919
i->ensureInit(); 2
qDeleteAll(findChildren<QAction 1
painter->fillRect(option.rect, 4
m_rightLayout->removeWidget(widget); 1
KeyStoreTracker::Item 13
metacontact->setExpanded(expanded); 1
m_bookmarkRootNode 1
(m_target-> 1
d->ck_docklet->setChecked( 1
unsetThisProfile(); 3
saslProvider::~saslProvider() 1
options->autoSave(true, 1
ProtectorChain::pop() 1
set_syserr(EACCES, 1
switch(modeType) 1
label->setText(d->message); 2
if(x.attribute() 10
modify_buttons_[d->tb_seMessage] 1
TabbableWidget::StateNone; 1
Ok->resize(bl, 1
Impl(GlobalShortcutManager::KeyTrigger 3
if(negotiationElement.nodeName() 2
help_menu->addAction(tr(), 2
noDirty 7
PasswordAsker::PasswordAsker(QObject 1
actionsService_ 3
mngr->SaveAppProfile(app, 1
yElement 1
QTest::addColumn<QString>(); 5
bookmarksMenu->setTitle(tr()); 1
m_scale_factor 2
bg_delChats 4
sigsegv_libc_dump(myprint); 1
CookieModel::CookieModel(CookieJar 1
--platform_ref; 1
manager_->addNil(nil, 1
func->bind(state, 1
updateBackForward(); 3
if(x_j0 1
icon->activated(); 1
tophbox2->addWidget(titleIcon); 2
o->setOption(rbase 5
GarbageCollector::GarbageCollector(ObjectMemory 1
ObjectMark 1
while(!(node.isElement() 1
CPPUNIT_ASSERT(c1 5
hst 4
arg_types 2
le_jid_->setCursorPosition(0); 1
setTransform(QTransform(translation 1
ItemUpdateState 1
if(ck_reg->isChecked()) 1
Q_ASSERT(d->geometryOptionPath_.isEmpty()); 1
secring 1
R3(c,d,e,a,b,48); 1
Environment 1
pos.rx()--; 1
QModemServiceNumbers::setServiceNumberInFile( 1
showPageDirectly(widget); 1
Figure::moveListBishop(Q3PointArray 1
connect(bScummvm, 1
ASSERT(!object.const_defined()); 2
QMessageBox::information(0,)); 1
chatView()->setFocusPolicy(Qt::NoFocus); 1
sInstance->unpackTelehubInfo(msg); 1
s.setValue(, 2
message.append( 4
model->currentStatus()->slotDelete(); 1
saveGame(); 1
doResize(); 2
++a; 1
QList<Instance 1
mNumRuns(-1), 1
Q3PtrList<item_file_req> 1
m_copy->setShortcuts(QKeySequence::Copy); 1
d->make_act(Import); 1
widget->setAttribute(Qt::WA_NoSystemBackground, 1
memcpy(pms->buf 1
.arg(m_output.errorString())); 2
logDebug(QString().arg(str)); 1
PsiPopup 2
if(d->le_url->isEnabled()) 1
qLog(Modem)<<<<first<<last; 1
gpsPower(); 2
VCardAvatar::VCardAvatar(AvatarFactory 1
QGraphicsLinearLayout 1
dlg->lb_pageTitle->setPsiIcon( 1
optionsUpdate(); 3
HandleMouse(pControl, 1
Impix::Impix() 1
pi->fname 1
d->thread 5
rect.bottom 1
ui_.te_desc->setTextFormat(Qt::PlainText); 1
list.append(static_cast<const 1
ui_.toolbar->addWidget(new 2
WaterExpFloatControl 1
Private(DirWatch 1
e.setAttribute(,ApplicationInfo::optionsNS()); 1
game_menu->addAction(tr(), 5
if(connect_certificateRequested) 1
ContactListGroupItem::~ContactListGroupItem() 1
MUCDestroyTask(const 1
JAVASCRIPT_FUNCTION_INFO( 1
OptAdvancedUI 3
Qt::KeyboardModifiers 1
qtwitter.show(); 1
history.addHistoryItem(item); 1
rot 1
row 14
result->protect( 2
if(entry_deserialize(in, 1
connect(bResume, 1
m_viewToolbar 1
OptionsTabTree::OptionsTabTree(QObject 1
m_historyForward->setIcon(style()->standardIcon(QStyle::SP_ArrowForward, 1
QMessageBox::warning(0, 5
dockWidget 1
ContactListContact::~ContactListContact() 1
if(!p.exists()) 1
c0.insert 2
connect(menuActions_[actionlist[i].name], 1
type_field.setValue(QStringList(http: 2
___TSM_CATCH( 1
disconnect(oldWebView->page(), 1
m_action_key 2
gPipeline.markTextured(childp->mDrawable); 2
hb->move(hw->x() 1
list_.clear(); 1
move(p); 1
readNumEntry(p_roster, 1
tryAgainButton->setVisible(false); 1
HistoryDialog 3
if(m.body().isEmpty()) 2
if(async) 1
port 9
v_widthUsed 1
SxeRecord 18
CompilerOutputter::printFailuresList() 1
opcodes[index] 2
hsh 7
GpgOp::Event 6
d->mle 1
d->frame 1
t->set(items,action); 2
triggers_ 2
actionsService_->onlineUsers(account); 1
d->thread->write(a); 1
GO(matchdata).set(state->new_class(, 1
locationBar->setCompleter(m_lineEditCompleter); 1
u.status 3
map->Add((Creature 1
setExpandable 2
am->setItemChecked(15, 1
It's 1
plugins_.insert( 1
lAppname->setVisible(false); 1
i=0; 1
ui_.lv_users->removeEntry(nick); 1
if(mlock(d, 1
grid->addWidget(b); 1
prev 4
TEST_CASE(ifelse7); 1
rng->add_entropy(source, 1
tv_->setColumnHidden(1, 1
arg_types[i] 1
d->urlOnShow 4
translation.translate(-c.x(), 1
d->make_act(Check); 1
top5->setPalette(backgroundPalette); 2
JingleVoiceCaller::~JingleVoiceCaller() 1
connect(d->add, 1
drop_root 2
updateInProgress( 1
d->iss_emoticons->insert( 2
setPeerAddress(h, 1
pipeCommand.writeEnd().close(); 2
NMRemove(&bounceRec); 1
connect(openButton, 1
JDnsSharedRequest::Type 2
if(entryId.isEmpty()) 1
connect(act_info_, 1
ChatDlg::optionsUpdate(); 1
if(FIXNUM 1
Emitted 16
info.m_fileName 1
d->idleSince 2
painter->setPen(Qt::NoPen); 1
QStandardItemModel( 1
unload( 2
p->drawRect(x, 4
box_center_offset 1
layout->addWidget(tv_); 2
v.setKey(key); 1
tb[2].index 1
d->sb_asAway->setMinValue(0); 1
statusList->requestNewStatus( 1
q->requestNewDM( 1
pReg 1
FILE 22
restartHideTimer(); 2
act_fill_->setIcon(QIcon(pixmap)); 1
dmAccount.setDM( 1
TEST_CASE(getc_function); 1
platform 2
layout_->addWidget(l); 1
hb1->addWidget(d->cb_type,3); 1
widget->retranslateUi(); 1
qLog(Modem)<<; 4
LLColor4(0.0f, 7
ui_.le_bday->setText( 2
Q_D(StatusList); 19
tabWidget_ 1
label->setObjectName(QString::fromUtf8()); 1
bigint_sub2(z 2
selfAvatarData_ 1
m_checkForUnread(CheckForUnread), 1
auto_offline_field.setValue(QStringList((PsiOptions::instance()->getOption())); 1
actBrowse->addTo 1
m_completed 2
mActions.put(action); 1
eventId 1
deleteLater(); 16
SpellChecker::instance()->add(tc.selectedText()); 1
if(secure) 8
session->sendBodyBlock(buf, 2
lst->put(state, 3
setFlag(QGraphicsItem::ItemIsSelectable); 1
if(d->f.open(m)) 1
aInfo(jid()); 1
iconSharedObject 3
action->setShortcut(shortcut); 1
CompilerOutputter::printFailureDetail( 1
button->setVisible(visible); 1
p->setPen(QPen(QColor(0xE0, 1
proxy_user 1
our_rect.setLeftTopAndSize(tools_rect.mLeft, 1
antiscrollcounter_ 3
NeoServiceNumbers::~NeoServiceNumbers() 1
IODeviceOpener 10
it->setOpen( 2
fullargs 16
m_session->GetPlayer()->SendCanTakeQuestResponse(msg); 1
resort(contact); 2
Private(SASL 1
Q_Q(TwitterAPI); 3
QCA_logTextMessage(QString().arg(items[n].storeContextId), 1
Asserter::failIf( 2
d->m->openDialog(x); 1
ui_.le_orgUnit->setModified(x); 1
d->cb_incomingAs->setItemData(0, 1
TEST_CASE(findleak); 1
aReadNext(d->realJid); 1
obj->d->handles 4
if(at 25
m_pos.setX(attributes.value().toString().toInt()); 1
classhint.res_name 3
d->tb_pgp 2
SASL 1
removeRows(0,rowCount(index),index); 1
QList<GpgOp::Event> 1
list->clear(); 1
LLHUDObject::markDead(); 1
bReplaceAll 11
JT_Register::onGo(); 1
i->contactProfile()->doContextMenu(i, 1
if(PsiOptions::instance()->getOption().toBool()) 15
connect(tree_, 5
if(inList) 1
SetSentErrorMessage(true); 12
if(next 1
closeTrigger.start(0); 1
register 4
wharf->setPixmap(pm); 1
m_bookmarksManager->changeExpanded(); 1
if(isint32) 2
effectp->setSourceObject((LLViewerObject 1
z[8] 4
if(total 2
str.append( 1
parentWidget_->resize(geom.size()); 1
QPainter 46
printable 2
ui_.le_nick->setText(jid.resource()); 1
mGeneralPanel->cancel(); 1
crl.change(cc); 1
conf_x_field_type_value.appendChild(doc()->createTextNode(http: 1
set_syserr(ENOTUNIQ, 1
icon 36
endModal(-1); 1
BrowserApplication::historyManager()->clear(); 2
m_end(end), 1
QMessageBox::information(parent, 1
child->setParent(this); 1
twitpicUpload(0), 1
ui_.tv_affiliations->setModel(affiliations_proxy_model_); 1
ByteArray 3
d->stretchBorders 1
BigInteger::BigInteger(int 1
std::list<Entry 3
HistoryDlg::~HistoryDlg() 1
b->data[n] 2
QTest::qWait(wait_seconds 1
setCursor(Qt::OpenHandCursor); 1
childSetText(, 1
ai->data 9
if(lcto_active) 1
!xform_obj.getScaleChildOffset()); 1
presets.sort(); 1
pubtmp.setAutoRemove(false); 1
m_requestCount(0), 1
twitterapi->deleteLater(); 1
lb_priority->hide(); 1
gGL.color4ubv(coloru.mV); 1
mlock(ptr, 1
setPixmap 2
c1.trunc 1
output.success 6
d->te->setText(ft->description()); 1
pControl->AllocResources(); 1
shortcuts.clear(); 1
that->destroyInputContext(); 1
tabWidget_->addTab(tab, 1
publish.setAttribute(, 1
ui.previousButton->setText(QChar(9664)); 1
m_param[i].clear(); 1
QtopiaApplication::setPowerConstraint(powerConstraint); 2
m_historyHash[url] 1
timer.start(0); 2
EDBFlatFile::File 2
!parentWidget_->updatesEnabled() 1
CPPUNIT_TEST_SUITE(PrivacyListItemTest); 1
callbacks[0].id 2
d->link 1
cls->set_object_type(SelectorType); 1
&LLWaterParamManager::instance()->mFogColor); 1
state->symbol())); 1
if(buf.isSecure() 1
mDisplayPanel->setDefaultBtn(default_btn); 1
if((hashval)th->n2i() 2
d->vcard 6
if(str.contains(':')) 1
TaskList 2
wrk 1
connect(widget, 2
buttons.clear(); 1
JDnsSharedDebug::~JDnsSharedDebug() 1
actionsService_->removeAll(group); 1
client->connectToServer(j, 1
QCA::SecureArray 2
d->sync.waitForCondition(); 1
dispNick_ 1
m_iconProvider 2
direction 3
d->challenge 1
actionOpenChatSpecific(j); 2
m_ctrlPreview.GetClientRect(rect); 1
CookiesDialog::CookiesDialog(CookieJar 1
actualFailure.release() 1
case 1019
Private(BusyWidget 1
a->setCheckable(true); 1
setMinimumSize(96,32); 1
TestRunner 1
e.appendChild(doc.createTextNode(QString::number(lon_.value()))); 1
setValue(, 2
pipeCommand.writeEnd().writeSecure(pre_command); 2
d->cvi->setProfileSSL(on); 1
cookiesTable->setShowGrid(false); 1
vibFile 2
d->console 3
v_isTransport 2
iq_.appendChild(prvt); 4
LLBufferStreamBuf::pos_type 1
time_t 4
BigInteger::BigInteger(const 4
tabs_.append(tab); 2
NarrowStringArrayModel::NarrowStringArrayModel(const 1
item_dialog 3
resize(size); 4
status 23
switch(scr) 2
checkOther.strPlusChar(); 1
insertRows(real_row, 1
while(item) 1
connect(pb_info, 1
CPPUNIT_TEST_SUITE_REGISTRATION(PrivacyListItemTest); 1
LEGOPTP.useDock 1
ck_legacy_ssl_probe->setChecked(acc.legacy_ssl_probe); 1
proxyMigration.append(p); 2
mainMenu 2
setTabOrder(d->te, 2
cur_focus->onCommit(); 3
Private(IconSelectPopup 1
resetAnim(); 1
r.binary_decode(buf, 1
SNARLSTRUCT 7
layout->setMargin(6); 1
if(cert_match_domain(s, 2
GO(exc_loe).set(loe); 1
locale.remove(0, 1
layer.reset(); 2
m_zoom_size(14), 1
~PluginInstance() 1
affiliations_proxy_model_ 1
CGUIControl::Render(); 1
XEvent 3
pending_requests_ 4
sessions.erase(atoi(args[1])); 1
d->data[i].state 1
searchString 2
\a 3
Q_ASSERT(parentRow 1
resize(i, 1
d->le_location->setText(PluginManager::instance()->pathToPlugin( 1
ui.urlShortenerCombo->setCurrentIndex( 1
segment_iter 5
pb_remove->setEnabled(true); 3
app.installTranslator(&qtTranslator); 1
ULONG 5
diskCache->setCacheDirectory(location); 1
QList<DiscoInfo> 1
painter.drawImage(0, 1
GCMainDlg::~GCMainDlg() 1
BriefTestProgressListener::BriefTestProgressListener() 1
bumpedItems 1
d->f.close(); 5
GET- 1
i.key()->moveBy(new_pos 1
hb4->addWidget(d->pb_chat); 1
proxyDialog.iconLabel->setText(QString()); 1
ssfmax 1
gPieHUD->show(x, 1
themes_preview_layout->setMargin(0); 1
op_err 2
connect(bPersp, 2
bg_font->insert(d->pb_fMessage); 1
if(d->con) 1
tb[2].name 1
m_recentlyClosedTabsAction 1
d->filterActive 1
formMatrix_obj.getMinMax(llmin_vec3, 1
free( 1
connect(d->pb_quote, 1
QCOMPARE(chat->name(), 2
connect(ui.previousButton, 1
connect(&ringWatch, 1
baseURIKnown 8
d->cb_preset->insertStringList(presetNames); 1
sec.change(kc); 2
mngr 1
TEST_CASE(postIncrementDecrementStl); 1
if(do_lock) 2
gMenuHolder->setObjectSelection(LLSelectMgr::getInstance()->getSelection()); 1
TextTestRunner::result() 1
e->accept(); 22
QSet<QString> 6
TEST_CASE(dereference); 1
connect(ui_.tabs,SIGNAL(currentChanged(int)),SLOT(currentTabChanged(int))); 1
flat_ 1
aname 2
layout->addWidget(bOk); 1
TEST_CASE(strndup_function); 1
finalcount[i] 1
open(TabWidget::CurrentTab); 1
d->tb_icon->show(); 1
m_defaultBaseColor 1
IconWidgetItem 3
doStart(); 2
moreData 2
reply=QString().arg(playingWith).arg(space); 1
vboxLayout->setObjectName(QString::fromUtf8()); 1
LEGOPTP.color[cGroupBack] 1
savePasswords 1
PlugInParameters::PlugInParameters( 1
UpdateStates(anim.GetType(), 1
m_bookmarksToolbarFrame->setLineWidth(1); 1
for(TransferMapping 4
printFailures(); 1
setContent( 1
send(e); 3
cur_custom_status.insert(regexp, 1
ui_.pb_down->setEnabled(b); 1
if(!lock) 1
addSuccessfulTests( 1
e.appendChild(doc.createTextNode(region_)); 2
ui_.le_topic->setToolTip(QString().arg(m.subject())); 1
m_historyLimit 2
avatarMenu->addAction(menuActions_[]); 2
for(QStringList::Iterator 10
m_max_zoom--; 1
exceptionTable->setSortingEnabled(true); 1
directory 3
++row; 3
XmlOutputter::setRootNode() 1
controller->startSuite( 1
CompilerOutputter::setWrapColumn( 1
qcaEventHandler_->start(); 1
pe.appendChild(domElement); 8
if(ui_.le_orgName->isModified()) 1
discoProtocol 1
mMsgPanel 2
if(str) 2
if(!x509_state_obj) 1
uint8_t 1
QTwitterApp::QTwitterApp( 1
m_leftLayout->setDirection(QBoxLayout::RightToLeft); 2
::free(p); 1
createHildonMenu(); 1
SecureArray::SecureArray() 1
tree->setTextElideMode(Qt::ElideMiddle); 2
DiscoDlg::~DiscoDlg() 1
foreach(VarListItem 1
removeBookmarkAction->setShortcuts(QKeySequence::Delete); 1
ui.updateButton->setShortcut( 1
connect(view_, 1
list 58
ui_.gb_connection->setEnabled(false); 1
Signal::Signal(STATE, 1
if(negotiationElement.toElement().hasAttribute()) 1
if(!w.wait(&m, 1
Task::init(state); 1
fileMenu->addAction(m_tabWidget->closeTabAction()); 1
textBox->setValue(timeStr); 1
ui_.te->setColor(Qt::red); 1
dlg->cb_address->clear(); 1
mainbox->setSpacing(0); 1
sub 2
version 5
setWindowIcon(IconsetFactory::icon().icon()); 15
layout_->setSpacing(0); 2
d->reset(); 9
showAgents(v_showAgents); 1
TOOL_SIZE 1
d->ck_spell->setChecked(false); 1
static_cast<SMSContext 6
hb3->addWidget(d->pb_find); 1
act_pgp_->setPsiIcon(0); 1
S5BConnection 1
statusBuf.clear(); 2
setTextMargins(left, 1
services_[account->getAccountName()]->actionUnsetAvatar(); 1
map[nt] 2
BasicContext::BasicContext(const 1
qRegisterMetaType<QVariantList>(); 1
if(!QLibrary::isLibrary(fname)) 1
sxemanager_->addInvitationCallback(WbManager::checkInvitation); 1
CPPUNIT_ASSERT_EQUAL(13U, 1
QueryPerformanceCounter(&lend); 1
closeLater 2
QList<CRL> 4
updateItemsFinished(to); 2
set_syserr(ENOCSI, 1
if(ti) 3
foreach(GUITest 4
flag 3
changes_[Parent] 1
newWindow->restoreState(windows.at(i)); 1
std::vector<LLHUDTextSegment>::iterator 2
SET(nf, 6
CGUIWindow::CGUIWindow(DWORD 1
d->lb_pgp 2
connect(dw, 1
clear_mem(z, 1
ui.verticalLayout_2->addWidget(useCustomBrowserCheckBox); 1
IconsetSelectItem(QListWidget 1
set_syserr(ENXIO, 1
stub->arg_count 1
selectCurrent(); 3
dc.SetMapMode(MM_ISOTROPIC); 1
RingWatch 1
md5_init(md5_state_t 1
CertificateInfoType::CertificateInfoType(const 2
loadGame(); 1
dlg->pb_apply->setEnabled(false); 2
MoodCatalog::Entry::Entry() 1
short 5
buffer.close(); 1
new_action.mType 1
def->deinit(); 1
:	QGraphicsView(parent), 1
QCOMPARE(chat->anim()->numFrames(), 2
d->te_sp->setEnabled(enabled); 1
setInteractive(Console::Default); 1
d->searchPb->setText(); 1
piece->rotateAround(0); 1
modemService 1
CRegExp 2
d->tb_pgp->setToggleButton(true); 1
_line 2
quit(QuitProgram); 1
QLineEdit 18
QT_END_NAMESPACE 1
protocol->sendText(sock, 1
m_bookmarksToolbarFrame->hide(); 1
vb3->addWidget(pb_save); 1
m_total_targets 1
history.setHistory(bigHistory); 2
TextIconHandler(QObject 1
saveSession(); 1
d->cb_type->setStatus(status.type()); 1
sessions_.append(sxesession); 1
BOOST_CHECK(a.get_element(i).is_int()); 1
dexc(fatal, 1
PhysicalLocation::PhysicalLocation(const 2
Reads 1
m_selecting 2
d->event 1
removeContact(contact); 2
get_pkcs12_der(a, 1
boost::mutex::scoped_lock 3
mood.appendChild(el); 2
if(node_.hasAttribute()) 1
strCurOutput.erase(i3,2); 1
\sa 24
m_children.at(0)->save(xml, 1
CertificateRequestFormat 3
defIdx 1
d->cv->qa_ren->setEnabled(true); 3
RCCondition::~RCCondition() 1
QObject::connect(d, 1
painter.setPen(color); 4
RAILS, 1
viewerText_ 1
AddUrlDlg::AddUrlDlg(QWidget 1
TrayIconWharf(TrayIcon 1
P_TRACE(3, 10
freeFailures(); 2
connect(ui_.cb_ident, 1
textLabel->setWordWrap(false); 1
m_widget->setContentsMargins(0, 1
painter.drawEllipse(offset, 1
Q_ASSERT(!d->active); 5
WCHAR 1
QWebView::contextMenuEvent(event); 1
rewind(uploadData->handle); 1
customAuth 2
connect(m_nextTabAction, 1
m.setBody(str); 1
session_->setAttribute(child, 2
if(ownJids_.contains(message.from().full())) 1
as<LookupTable>(ivars)->store(state, 1
d->statusGroup->setPsiIcon(PsiIconset::instance()->statusPtr(status)); 1
changes_[Chdata] 1
m_rootElement 1
g_SkinInfo.ResolveIncludes(pChild); 2
trusted_list 1
c1.fill 1
menu->exec(e->globalPos()); 1
KeyBundle::KeyBundle(const 2
m_bookmarksManager->removeBookmark(node); 1
Settings::Settings() 1
invisibleGroup_ 2
fileMenu->addSeparator(); 6
pc); 1
query.appendChild(command); 1
le_port->setText(QString::number(acc.port)); 1
make_active(active->sender); 1
currentTab()->zoomOut(); 1
DirWatch::~DirWatch() 1
connect(lbx_profiles, 1
setTabOrder(d->le_port, 1
if(reg->success()) 1
CapsRegistry::CapsRegistry() 1
Q_DECLARE_METATYPE(TabbableWidget 1
XMPP::Form 1
dialog->setWindowTitle(tr()); 1
if(!config.contains()) 1
Initializing, 1
context->state[2] 1
QWhatsThis::add(d->ck_awaySound, 1
d->le_player->setText( 1
free(d); 1
WRITE(float, 1
printFailureDetail( 2
HostNameReceived 1
lb_name->setText(is.name()); 1
tag.appendChild(text); 3
QTextFrameFormat 4
CPPUNIT_ASSERT_EQUAL(3U, 1
d->writeSecure(&d->sec_buf, 1
TEST_CASE(allocfunc1); 1
foreach(SxeNegotiation 3
drawablep->getFace(face_num)->setState(LLFace::HUD_RENDER); 1
shortcutItemsCount 1
QCoreApplication::sendEvent(tabWidget_->currentPage(), 1
LLFloater::onClose(app_quitting); 1
d->enable(); 1
if(account) 1
if(i->widget 1
xform_obj.getPositionW() 1
d->pixmap->convertFromImage(d->image); 1
pre_aux_close 2
metacontact->setAvatar(self->getAvatar()); 1
hook(list[n]); 1
if(!ensureAvailable()) 1
unknowns_[name] 1
connect(d->ck_tabChats, 2
ProfileManageDlg 1
m_session->SendPacket(&data); 3
i.id 2
ProxyManager 4
gotoidenticaAction 1
IconAction::IconAction(QObject 1
if(pa) 2
Alertable::~Alertable() 1
wrote 4
next_op: 2
if(!pc) 1
services_[account->getAccountName()]->actionSendMessage(jid); 5
IconsetSelect::IconsetSelect(QWidget 1
GO(nil_class).set(new_class(, 1
downloadsView->horizontalHeader()->setStretchLastSection(true); 1
session_->setAttribute(session_->document().documentElement(), 1
Q3GridLayout 1
d->ck_singleclick->setChecked( 1
item->setPixmap(0, 1
resource->setAccountName(groupItem->getAccountName()); 1
CMS::~CMS() 2
nickcolor 2
tv_->resizeColumnToContents(0); 2
errmap[GpgOp::ErrorPassphrase] 1
currentDate 1
m_action_button(Qt::NoButton) 1
searchAgain 2
qDeleteAll(toolbars_); 1
gpg.doImport(buf); 1
connect(pa,SIGNAL(updatedActivity()),SLOT(updatePrivacyTab())); 1
m_removePolicy 2
c0.alloc 3
QWhatsThis::add(d->ck_ignoreHeadline, 1
LEGOPTP.noUnlistedPopup 1
d->rb_delChatsNever->setChecked(true); 2
l->setTextInteractionFlags(Qt::TextSelectableByMouse|Qt::LinksAccessibleByMouse); 1
foreach(QPointer<SxeSession> 2
qWarning(qPrintable(message)); 1
GetPiecePosIter(&mat); 3
connect(tabWidget_, 5
if(pi.type 1
ui.statusListView->clearSelection(); 1
ttb->setPalette( 1
LLHUDEffectSpiral 3
unhook(((QChildEvent 1
d->layer.addPlain(a.size()); 2
GameBoard::updateHistory(const 1
setVisible(false); 3
QGraphicsProxyWidget 1
if(localStatus 1
SafeDelete::SafeDelete() 1
e.appendChild( 10
ui_.le_orgUnit->setEdited(x); 1
.arg(PGPUtil::instance().messageErrorString(error)), 1
this->IsBlockContext 1
type_info[i] 1
acc.authid 1
e.appendChild(width_element); 2
e.keyId 1
pb->setDefault(TRUE); 1
p.drawPoint(i 1
z[11] 4
if(n_bytes 1
TEST_CASE(func6); 1
if(NIL_P(cur)) 1
d->n.set_sign(Botan::BigInt::Positive); 2
Q_UNUSED(start); 1
tune.setName(QString(c_title)); 1
items_ 5
readCount 1
if(def) 2
if(i->done) 1
expandNodes(m_bookmarksManager->bookmarks()); 1
BOOST_AUTO_TEST_SUITE_END() 1
isRoot 2
QDesktopWidget 2
~Interface() 1
Item 37
KeyLoaderThread 1
m_time.start(); 1
d->getAction()->addTo(d->trayMenu); 1
callbacks[4].context 1
v_from 10
d->hIcon 3
showText 2
hb->resize(hw->size()); 1
if(children.at(i).isElement() 1
in.finalizeAndRelease(); 1
account.setDM( 2
if(!parts[n 2
g_graphicsContext.SetScalingResolution(m_coordsRes, 3
if(f.open(QIODevice::ReadOnly)) 1
CertificateOptions::CertificateOptions(const 1
0x04, 1
t->setCurrentIndex(0); 1
string[pos--] 1
proxy_type 1
if(!type.isEmpty()) 1
lastSeen_ 2
ForceForegroundWindow(d->parentWidget_->winId()); 1
bHandled 2
updateNil(xitem, 2
connect(m_pause_action, 1
sFlags 3
rectParent.appendChild(hElement); 1
iconsets_->append((Iconset 1
mSkinsPanel 2
d->watcher_relay 2
m_autoSaver->changeOccurred(); 7
JDnsSharedDebug::JDnsSharedDebug(QObject 1
QFETCH(bool, 1
so->encoding 1
U32 4
QNetworkDiskCache 1
dialog.setWindowFlags(Qt::Sheet); 2
title.remove 5
connect(posTbDlg, 1
connect(ui_.cb_active,SIGNAL(activated(int)),SLOT(active_selected(int))); 1
~PsiConObject() 1
g_event->ask(asker_at); 1
m_historyHome->setShortcut(QKeySequence(Qt::CTRL 1
m_extAccessManager 1
QThread::start(); 4
index.data(AvatarRole).value<QIcon>().paint(painter, 1
checkForExpired(); 3
TrayIconFreeDesktop(TrayIcon 1
if(ul.isEmpty()) 1
if(x.sign() 7
range 1
d->pb_http_confirm->setEnabled(false); 2
m->addAction(text)->setData(text); 1
n.binary_encode(output); 1
lbl->setText( 1
model->mimeTypes(); 1
updateBookmarksToolbarActionText(true); 2
s.length() 2
lon_ 2
generatePreview(); 1
GO(io).set(new_class(object, 1
tr().arg(name), 2
rows 1
xpm 13
d->le_find 1
QWhatsThis::add(d->pb_cStatus, 1
long 40
TEST_CASE(exit4); 1
ray_end_region, 1
messageLabel->setText( 1
settings.beginGroup(QLatin1String()); 42
psi->dialogRegister(this); 3
Handshaken, 1
setWindowTitle(title); 1
d->pb_next->setText(tr()); 2
r->dir 2
CPPUNIT_TEST(testDestructor); 1
d->pause(); 1
bookmark->url 2
set_msg(); 1
TEST_CASE(postIncrementDecrementClass); 1
data.protocol 2
d->iss_servicesRoster->setItemSelected(item, 1
SASL::AuthCondition 3
nick 5
textRect.adjust(left, 1
if(d->pipeStatus.writeEnd().isValid()) 2
highlightersInstalled_ 1
vbox->addStretch(); 2
m_acceptCookies 2
InitializationVector 1
it.setAction(Deny); 1
ASSERT(pBmp); 1
WinSystemWatch::~WinSystemWatch() 1
p.save(&buffer, 1
if(free_entries) 1
if(_keyring) 1
Q_UNUSED(configNS); 2
SpellChecker::SpellChecker() 1
qcaEventHandler_->submitPassword(eventItem.id,QCA::SecureArray(passphrases_[entry.id()].utf8())); 1
ueventSocket->setSocketDescriptor(hotplug_sock); 1
phone_client_ 1
if(!filename.isEmpty()) 1
saveToSettings(); 1
if(ck_close->isChecked()) 1
formMatrix_obj.update(); 1
~TrayIconWindowMaker(); 1
d->cb_ident 4
d->cv->qa_logon->setEnabled( 1
SecureMessageKey::~SecureMessageKey() 2
w2tab[currentPage()].tab->restoreOptions(); 1
d->ck_asXa->setChecked( 1
sm->insertItem(PsiIconset::instance()->status(STATUS_ONLINE).icon(),	status2txt(STATUS_ONLINE),	STATUS_ONLINE		+ 1
meta_el.setAttribute(http: 2
setContactChatState(m.chatState()); 1
d->svg 2
vb->addWidget(cb_commands); 1
if(((i 1
Q_ASSERT(m_sourceRowCache.count() 1
_dir 1
soundPlay(file); 1
~IconSelect(); 1
CFArrayAppendValue(allNotifications, 1
CFURLRef 3
metatype 1
statusMapper 1
fromXml(e); 4
c.define_module_function(, 1
while(d->exp->busy()) 1
if(Opcode 3
QWhatsThis::add(d->ck_ignoreNonRoster, 1
actRegister->addTo(&p); 1
scriptObjects_.append(name); 1
translator.load(QString( 1
if(!ownJids_.contains(ownJid.full())) 2
TEST_CASE(cast1); 1
account.setEnabled( 2
Selection 2
buildGeneralMenu( 1
isSmartBattery(0), 2
setTextSizeMultiplier(textSizeMultiplier() 1
attachmentPos 1
app 1
e.appendChild(doc.createTextNode(locality_)); 2
i->p->deinit(); 1
statusList->requestDestroy( 1
item.setPresenceOut(ui_.ck_presenceOut->isChecked()); 1
pxh 1
mimeData->setData(PSITABDRAGMIMETYPE, 1
mPieMouseButtonDown 2
Q_ASSERT(model); 1
from 1
PREF_PAD; 1
accountsModel->account( 2
if(useAux) 3
((PsiTabBar 1
header()->setMovingEnabled(false); 1
ui_.pb_topic->setEnabled(true); 1
tr()); 95
twitterapi->setUsingOAuth( 2
length 1
CPPUNIT_TEST(testFlatten); 1
d->te->setText(d->te->text().trimmed()); 1
drawablep->makeStatic(FALSE) 1
this->push_back 3
p->drawPixmap(4, 1
lb->setWordWrap(true); 1
d->cv->recalculateSize(); 2
R4(b,c,d,e,a,64); 1
connect(timer, 4
d->pb_customRosterDetails->setEnabled( 1
d->act->endWrite(); 1
QWhatsThis::add(d->ck_tabChats, 2
do_repaint 1
hashName 4
m_pixmapEnabled 1
if(out) 9
ui_.tb_find->setDefaultAction(d->act_find); 1
global->config_mutex.unlock(); 3
directMsgParser.data()->deleteLater(); 1
setup(Encode); 1
setCentralWidget(m_board); 2
security_level 2
BYTE 2
setMaximumHeight(height); 1
updateArrows(); 7
lineEditEnabled_ 1
setMinimumSize(448, 1
tnd.uID 2
QMap<PsiIcon 4
m_rightLayout 1
std::cin.get 1
bQuit->setVisible(scr 1
dest=; 1
this->copy(); 1
if(file.get_fd() 1
DownloadManager 3
mature.collect(roots); 1
if(pipe(p) 1
resize(oldsize 1
twitterapi( 1
if(!Q3TextDrag::decode(m, 1
NeoPreferredNetworkOperators::NeoPreferredNetworkOperators( 1
ui_.lb_ident->setVisible(account()->psi()->contactList()->enabledAccounts().count() 1
hex.append(buf[j]); 1
gpg.doVerifyDetached(sig); 1
RemoveBookmarksCommand::RemoveBookmarksCommand(BookmarksManager 1
CDirectoryNode 7
if(!d->handles.isEmpty() 1
setData(ind,font_variant,Qt::FontRole); 1
printHeader(); 1
edit 2
AHCError::ErrorType 1
GCMainDlg::GCMainDlg(PsiAccount 1
trimmed 2
QWhatsThis::add(d->ck_chatSoftReturn, 2
p.mkdir(); 4
if(!XScreenSaverQueryInfo(QApplication::desktop()->screen()->x11Display(), 1
session->setLastSxe(session->ownJid().full(), 1
MacKeyTriggerManager() 1
lateMigrationData.toolbars[tbGroup].append(tb); 2
XMPPResource 3
rm->setItemChecked(12, 1
auto_open_field.setVar(); 1
out 112
capsJids_[s].removeAll(jid.full()); 2
items_[index].setOrder(items_[index-1].order()); 1
QPushButton 30
d->te_sp->setFocus(); 1
acname_ 1
bookmarkMenu->addAction(menuActions_[]); 1
command.remove(0,5); 1
delegate_.registrationDictionary 1
setNodeValue(node.attributes().namedItem(attribute), 1
data.removeAt( 1
qApp->installEventFilter(this); 3
fig[8] 1
m_test->tearDown(); 1
m_bumpmap_ts(0), 1
OptApplicationUI 3
g 3
--zoneIndex; 1
if(remainder 3
psiPopup 1
p->drawText(px 1
window->tabWidget()->clear(); 1
perror(); 3
Q_ASSERT(!queue->isEmpty()); 1
privacyModel.removeRow(idx.row(),idx.parent()); 1
br.setColor(PsiOptions::instance()->getOption().value<QColor>()); 6
if(m.spooled()) 1
drawablep->mXform.setPosition(current_pos); 1
Algorithm_Not_Found::Algorithm_Not_Found(const 1
addr.street 2
authzid 2
priority 2
toolBar->addAction(actRefresh); 1
x[x_size] 1
u.setJid(jid().withResource(nick)); 1
actionAuthRequest(u->jid()); 1
PsiActionList::ActionsType 3
trackerId 1
DiscoDlg::DiscoDlg(PsiAccount 1
if(QApplication::clipboard()->supportsSelection()) 3
d->bg->addButton(rb_removeAndUnreg, 1
oldGroup 1
if(lvi->text(0) 1
m_rect(0, 1
CGContextSetShadow(context, 1
clip 1
d->f.setFileName(fname); 1
if(isRunning()) 2
hb->setPaletteBackgroundColor(cb); 2
selfAvatarHash_ 1
linked 4
button->click(); 3
tab->setUserManagementEnabled(userManagement_); 1
target.append(group->getName()); 1
ui.settingsButton->setToolTip( 1
setCurrentIndex(toIndex); 1
QDesktopServices::openUrl(url); 1
strDirty.Insert(i,szTrimmed); 2
ShellExecuteW(0, 1
connect(&pipeStatus.readEnd(), 4
if(obj->age++ 1
who 1
p_username 1
set_syserr(EWOULDBLOCK, 1
strokeColor_ 2
pipe 4
Q_ASSERT(model->index(0, 3
if(line.contains()) 1
hst->setValidator(new 1
metaAlertIcon->updateAlertStyle(); 1
Type_get, 1
painter.drawLine(1, 3
saveIntoItem(x); 1
CGContextSelectFont(context,DOCK_FONT_NAME, 1
QList<Item> 3
gNotInList, 1
result->append(ei); 2
row_count 1
local 1
set_syserr(ECONNRESET, 1
setCursor(Qt::CrossCursor); 1
connect(ui_.listView->itemDelegate(), 1
priority_field.setValue(QStringList(QString::number(manager()->account()->status().priority()))); 1
if(!child.isNull()) 2
G(metaclass)->instance_type 1
mLeftClickSelection 4
self->setExpanded(expanded); 1
rect.setHeight(16); 1
.arg(QLatin1String(GITCHANGENUMBER)) 1
removeTab(index); 1
if(!packet_out.isEmpty()) 2
restart(); 2
connect(setHomeToCurrentPageButton, 1
available 2
act_widths_->setMenu(menu_widths_); 1
iHeight 1
GO(iobuffer).set(state->new_class(, 1
mDisplayPanel(NULL), 1
if(d->srv.isBusy()) 1
foreach(bool 1
OptionsTabWidget 2
ksl->ext_keyStoreLog(str); 1
f.close(); 9
quitAction->setText( 1
fwi.uCount 2
HistoryManager::HistoryManager(QObject 1
clearAlert(); 1
if(i.exists) 2
m.setMUCPassword(d->password); 1
m_theme->drawWall(painter, 11
connect(d->cb_sp_status, 1
setup(dir); 1
otherTabs->addTab(tab); 1
in.enable(); 1
if(!self 1
restoreColor(d->pb_cListBack, 1
Event(state, 3
QSizePolicy::ExpandData 1
d->lb_count->setAlignment(Qt::AlignRight 1
trayIcon->hide(); 1
if(norm) 3
connect(t,SIGNAL(finished()),SLOT(getItemsByAffiliation_finished())); 1
setDropEnabled(true); 3
connect(ui_.pb_close, 4
text->setText(); 2
that->setUpdatesEnabled(true); 1
d->start(); 9
if(!authed) 1
ChatSplitter::ChatSplitter(QWidget 1
scan_object(obj); 2
remoteApp.asyncCall( 1
pems 1
connect(m_addBookmark, 1
iq.appendChild(command); 1
menu->addMenu(inviteMenu); 1
topvbox->addWidget(top2); 2
cursor.setPosition(cursorPos); 1
silentCheckForUpdates(); 1
initialize(); 1
Test::resolveTestPath( 1
G(cmethod)->instance_type 1
setIndentation(5); 2
buffer(state), 1
m_fixtureName 1
painter.setPen(QColor(160,160,160)); 1
emitted_certificateRequested 2
view->setIndexWidget( 1
Q_UNUSED(position); 2
m_firstChange 1
SearchDlg::SearchDlg(const 1
connect(ui_.pb_cancel,SIGNAL(clicked()),SLOT(reject())); 1
TEST_CASE(class4); 1
TextOutputter::printFailureTestName( 1
niceUnit(bps, 1
le_to->setText(d->jid.full()); 2
TestResultCollector::reset() 1
TestDecorator::countTestCases() 1
CompilerOutputter::defaultOutputter( 1
ev_io_stop(loop->base, 1
mainMenu.type() 1
WINDOWPOS 1
Synchronizer::~Synchronizer() 1
rm->setItemEnabled(14, 1
peerCert 2
CapsSpec::CapsSpec(const 1
migrateEntry<int>(element, 1
proxy_chooser_->setCurrentItem(0); 1
QCOMPARE(messageHeadline->pixmap().width(), 1
mLOD 1
qVariantSetValue<PGPKey>(arg, 2
that->show(); 1
jsdtrace_jsvaltovoid(JSContext 1
serverlist_querier_ 1
if(scene_) 2
template<> 11
TestSuite::doGetChildTestAt( 1
clientHello 1
y_sw 3
callbacks[3].context 1
d->startTrigger.start(); 2
qoauth 1
beforeNick 1
z[0] 6
host_ 1
TestSuccessListener::wasSuccessful() 1
QMainWindow::closeEvent(event); 2
gb_trans->setEnabled(true); 1
d->system 2
m_historyBack 1
auxHandler->openByPhysicalBus(); 1
hosts 1
ui_.le_country->setModified(x); 1
lb_proxy->hide(); 1
while(!idlessItems_.isEmpty()) 1
), 3
painter.translate((width() 3
hb->setSelectionMode(Q3ListBox::NoSelection); 2
m_dragStartPos 2
d->le_newHighlightWord->setText(); 2
tr().arg( 1
connect(pep_avatars_[jid.bare()],SIGNAL(avatarChanged(const 1
items_.swap(index,index-1); 1
mSpawnPointPos[i].mV[VY], 1
Q_IMPORT_PLUGIN(itunesplugin) 1
items.Add(pItem); 2
G(tuple)->has_ivars 1
int		w 2
TS_ABORT(); 5
Q_ARG(QCA::Event, 1
m_gameplay_time 1
Q3PtrListIterator<Entry> 10
PlasmaFrame::~PlasmaFrame() 1
QString(), 1
m_gameplay_path 1
cb_security_level->addItem(tr(),QCA::SL_High); 1
if(!b) 4
painter.setPen(Qt::NoPen); 1
HttpConnect 1
setPsiIcon(0); 1
btn->setFollowsLeft(); 1
m_uiBitsPerSample 1
d->known 4
childp->mText->setOnHUDAttachment(FALSE); 1
voiceCaller_->registerCall(jid,call); 2
PsiOptions::instance()->save(optionsFile()); 1
if(d.session 1
ui_.le_orgName->setText( 2
d->tb_pgp->setToolTip(tr()); 1
setWindowModality(Qt::NonModal); 2
addPsiConAdapter(this); 1
if(d->su.jid().compare(j)) 3
d->le_port 1
LEGOPTP.dockDCstyle 1
button->setIcon(pix); 1
setCurrentIndex(1); 1
m_saveLastControl 3
m_protectors.pop_back(); 1
edt_init->setText(prof.init); 1
b.resize(b.size() 1
FancyLabel::FancyLabel 1
G(list_node)->set_object_type(ListNodeType); 1
d->activated(playSound); 1
m_model->removeRow(row); 1
TEST_CASE(eraseAssign); 1
if(!plugins_.contains(tcplugin->name())) 1
this->transcoder 2
connect(d->le_customRoster, 1
mAttachedObject->setPosition(attachmentPos); 1
valueStr.setNum(frameTextEnabled()); 1
_world 2
#endif 899
m_mainWindow(0), 1
d->histAt 3
cds.lpData 1
d->pb_sysDetails->setEnabled(true); 1
statusList->markAllAsRead(); 1
i->resetGroupName(); 3
mimeData->setData(, 3
loadDefaults(); 1
mLastRecordTime 1
d->pluginOptions 3
gGL.vertex3fv(v[0].mV); 2
prefix 3
p->setFont(f); 2
z_j[x_size] 1
cls->setup(this, 1
QTabBar::dragEnterEvent(event); 1
TestRunner::~TestRunner() 1
menuBar(), 1
le_dtProxy->hide(); 1
qWarning(qPrintable(QString().arg(message).arg(fromDisplay))); 5
goURL(i->url); 2
DynamicLibraryManager::findSymbol( 1
trackBar 2
lb_path->setToolTip(tr()); 1
:_secure(false), 3
replaceWidget(te_desc, 2
QWhatsThis::add(d->ck_jidComplete, 1
doFailTest( 2
QWhatsThis::add(d->le_sp_priority, 1
menu_->addAction(tabBar_->tabText(i))->setData(i+1); 1
timer->setInterval( 1
VirtualLock(ptr, 1
addAction(act_next_); 1
this->statusList->disconnect(); 1
set_syserr(ENOBUFS, 1
LEGOPTP.recentStatus.clear(); 1
setOn(pa->enabled()); 1
removeButton_->setEnabled(current.isValid()); 1
trees_[key]->setValue(subnode,value); 1
total_objects 1
sessionId_ 2
TEST_CASE(func7); 1
app->core()->forceGet(); 1
cookie.path() 1
ui_.mle->chatEdit()->setFocus(); 3
ui_.lv_keys->ensureItemVisible(isel); 1
QVERIFY(chat 2
substr 3
txt 32
le_pwnew->setText(); 1
group->SetID(id); 1
cookies.removeAt(i); 2
if(qType 3
mazes_layout->addWidget(m_mazes_targets, 1
reg.clear(); 3
m_settingsDialog->loadConfig(); 1
backHistory.removeLast(); 1
layout->addWidget(label); 1
QFETCH(QString, 1
SetWindowTextW(winId(), 1
that->sc_username 1
d->restoreOptions(); 1
GO(staticscope).set(new_class(object, 1
d->tabManager->deleteAll(); 1
d->add->setEnabled(false); 3
d->le_find->setFocus(); 1
BookmarksModel::BookmarksModel(BookmarksManager 1
foreach(Key 1
model->account( 2
m_reload->setShortcuts(QKeySequence::Refresh); 1
if(proc) 2
lcto_active 5
if(strncmp(&buf[pos],token,strlen(token))==0) 1
pb_complete->setEnabled(true); 1
transferList.setAutoDelete(true); 1
set_ivar(state, 1
sei.fMask 1
_l->leaveSuite( 1
ui.moreButton->setIcon( 1
Atom 6
services_[contact->getAccountName()]->actionSendFile(contact->getJid()); 1
binary[0] 1
if(!s.at(n1).isSpace()) 1
forceGet(); 1
SxeEdit::EditType 4
if(own_con) 1
pa_->pepManager()->retract(http: 1
ui_.le_jid->setText(name); 1
MessageEvent::~MessageEvent() 1
editMenu->addSeparator(); 3
VariantTree::~VariantTree() 1
d->buttons.removeRef( 1
m_instance 2
eventReady(GpgOp::Event::BytesWritten, 1
setAccountEnabled( 1
EDBFlatFile::EDBFlatFile() 1
sp.setStatus(status.type()); 1
sasl_callback_t 1
v_t 1
hub_rot 1
std::vector<u32bit> 2
keyId 4
TEST_CASE(exit5); 1
v_m 1
downloadReadyRead(); 1
LLFloater::draw(); 1
if(recordByNodeId_.contains(id)) 1
mainWindows.at(i)->toolbarSearch()->clear(); 2
parent->setProgress(i->id, 1
_l 1
(x_pixel_vec 1
StringListDialog 1
TestDescription 4
actOnlineHelp->setWhatsThis 1
shortcutItem->setData(0, 2
previous_position_ 1
LEGOPTP.asAway 1
m_transformRefreshTimer->setSingleShot(true); 1
if(!QCA::isSupported()) 2
i->free(ptr, 1
GO(methctx).set(new_class(, 1
height_element.appendChild(e.ownerDocument().createTextNode(QString::number(rect.height()))); 1
agentsProtocol 1
m_previousTabAction->setShortcuts(shortcuts); 1
statusList->requestDirectMessages(); 2
pubname 1
sms 1
incoming.sender 1
if(newWbItem_) 3
ptr+=col; 1
providerItemList.insert(n, 1
if(result_ssf 1
connect(d->jt, 6
CAnimation 8
mStopTime 2
switch(t) 1
setMouseTracking(true); 1
gradient.setColorAt(0.5, 1
EDBItem::~EDBItem() 1
this->service 4
real_row++; 1
selectStatusPreset(d->cb_preset->count()-1); 1
appendItem(item); 2
QTemporaryFile 3
SkewX, 1
GetConsoleMode(in_id, 1
c->startClient(mechlist, 1
db->d->addDebug(dbname 2
setTitle(title); 1
setImage(ba); 1
:Connector(parent) 1
QTextDocument 2
bg_defAct->insert( 4
d->args 2
g_ksm->thread->call_mutex.unlock(); 1
CompiledMethod 8
rect, 1
items_.removeAll(item); 2
connect(d->toolsMenu, 1
memset(&noaction, 1
MessageAuthenticationCode::~MessageAuthenticationCode() 1
registry_->registerCaps(cs,item.identities(),item.features().list()); 1
foreach(Entry 3
verticalScrollBar()->setValue((int) 1
activateWindow(); 1
if(parentMeta) 2
instance()->m_core->storeSession(); 1
combo->setInsertionPolicy(QComboBox::NoInsertion); 1
StaticScope 4
m_smooth_movement(true), 1
ipv6[--at] 12
that->setWindowTitle( 1
Elements::const_iterator 2
m_cursor_pos 1
ev.xclient.data.l[4] 1
m_corners[1][3] 1
v.setPhoneList( 2
if(signedMakesItGood 1
remove(); 1
OnigEncoding 3
ConstraintType::Section 2
closeButton->setObjectName(); 2
Q_UNUSED(label); 1
d->pb_next 2
if(!tmp) 1
DirWatch::DirWatch(const 1
QWhatsThis::add(d->le_player, 1
QCOMPARE(d, 1
RosterInstance::~RosterInstance() 1
Client 1
pubsub.appendChild(retract); 1
if(int 2
GAdvancedWidget::Private::Private(QWidget 1
d->reset(ResetSessionAndData); 16
:MemoryRegion(true) 1
services_[contact->getAccountName()]->actionRename(contact->getJid(), 1
twitterapi->setConsumerKey( 1
ownJid_ 1
gMessageSystem->nextBlockFast(_PREHASH_ObjectData); 1
UChar 1
menu 10
parentname 1
shortcutItem->addChild(newKeyItem); 1
theme 3
PsiOptionsEditor 1
glEnd(); 4
SET(tbl, 2
data[1] 4
setStatusTip( 1
:	QWidget(parent), 1
MacSystemWatch 1
connect(act_send_, 1
Piece 11
auto_auth_field.setValue(QStringList((PsiOptions::instance()->getOption())); 1
_l->failedAssertLessThan( 1
bigint_sub3(z, 2
qSort(m_exceptions_allow.begin(), 2
clients_[account]=client; 1
.arg(dataString(bytesTotal)); 1
QWhatsThis::add(le_font[2], 1
++a[n]; 1
map[14] 2
btn->show(); 1
qDebug(QString().arg(from).arg(n).arg(node.nodeValue().length())); 1
StatusModel 9
lpszFilter, 1
~TestFactoryRegistryList() 1
setText(2, 3
ui_.toolbar->addAction(d->act_clear); 1
Q_UNUSED(userIdsOverride); 1
set_syserr(ENOPKG, 1
d->gr_auth->setEnabled(b); 1
waitpid(0, 1
if(!xprocess->waitForStarted()) 2
if(old_handler) 1
Settings 13
info.setFile(location 1
connect(removeBookmarkAction, 1
session_->insertNodeAfter(wbitem->node(), 2
if(info.fixInterval) 1
Roster::Roster() 1
v_perr 1
Event::Event() 1
h.jdns->queryCancel(h.id); 2
d->ck_showCounter->setChecked( 1
d->ck_popupMsgs->setChecked( 1
m_lineEdits->addWidget(locationBar); 1
delete_aspell_string_enumeration(elements); 1
TestTracker::TestTracker() 1
a[n] 2
if(!lib) 3
active 10
ui_.ck_enable->setChecked(enablesave); 1
PSendSysMessage(, 23
it->jid 2
p.drawPixmap(0, 2
d->jt->set(submitForm); 1
mw.show(); 1
_l->failedTest( 1
pObj->Draw(pMemDC); 1
disconnect(this,SIGNAL(listsReceived(const 2
ProviderList 7
child 3
DetectedSessions_.append(detected); 1
Q_ASSERT(model->parent(topIndex) 1
connect(stopButton, 1
commands_ 1
d->remove(name); 2
ci.jid 1
disconnect(metaAlertIcon, 1
LEGOPTP.color[cOffline] 1
On 1
ContactViewItem::~ContactViewItem() 1
Provider::Context 14
do_resolve(); 4
grid->addWidget(check, 1
downButton_->setArrowType(Qt::DownArrow); 1
QCOMPARE(button->isCheckable(), 2
trusted 1
++y; 2
addInterface( 9
QList<UserAccount> 1
d->ck_spell->setChecked(PsiOptions::instance()->getOption().toBool()); 1
setCurrentIndex(next); 2
QObject::connect(iconSharedObject, 1
worldPos 2
m_lineEdits->insertWidget(toIndex, 2
ui_.tb_actions->setMenu(pm_settings_); 1
selected->activated(); 1
m_url 2
TEST_CASE(creat_function); 1
tophbox2->addWidget(titleText); 2
vb1->addWidget(line); 1
gpg.doSecretKeys(); 3
TextTestProgressListener::endTestRun( 1
AskerBase 3
hasFocus 1
poe->show(); 1
d->pb_refresh->setEnabled(true); 1
PsiTextView 2
CPPUNIT_TEST_SUITE_REGISTRATION(CommonTest); 1
dup->keys 1
stopButton->setVisible(true); 1
disconnect( 2
keyStoreForTrackerId.remove(trackerId); 1
layout->addWidget(m_board); 1
le_name->setText( 2
_test 2
setWindowOpacity(double(qMax(MINIMUM_OPACITY,PsiOptions::instance()->getOption().toInt()))/100); 3
if(d->using_srv 1
if(!d.rename(oldname, 1
setAttribute(Qt::WA_MacMetalStyle); 10
(pText->mSourceObject) 1
unit->ModifyAuraState(AuraState(i),false); 1
sp.clearPriority(); 1
o_.loadOptions(); 1
d->anim->pause(); 1
parent_option 1
lb_ident_ 1
pixmap.fill(Qt::white); 1
QModemServiceNumbers::setServiceNumber( 1
fixerParent->fixerChildren.removeAll(this); 1
for 625
rowCount(QModelIndex()); 2
makeMove(et, 5
hb2->addWidget(l); 4
if(ks.type() 2
w->resize(560, 4
auto_auth_field.setLabel(QObject::tr()); 1
restoreLastSession(); 2
r.setWidth(r.width() 2
mRecording 2
ur.setName(nick); 2
le_nick->setCursorPosition(0); 1
if(s.contains('T')) 1
decorateButton(STATUS_OFFLINE); 1
keepUntilCombo->setCurrentIndex(1); 1
notCreated, 1
ensureModifiers(); 1
TEST_CASE(insert1); 1
SnarlPlugin::~SnarlPlugin() 1
WbItemMenu::WbItemMenu(QWidget 1
d->iss_customRoster->clear(); 1
connect(s, 10
LLToolMgr::getInstance()->getCurrentToolset()->selectTool( 3
TuneControllerManager::TuneControllerManager() 1
lb_authid->hide(); 1
avail 4
width 6
boldFont.setBold(true); 1
setMaximumHeight(0); 1
dtextTimer.setSingleShot(true); 1
if(QDir::homeDirPath() 1
bPersp->setToolTip(tr(Drag 1
CPPUNIT_TEST(testVersionStringToInt_NonNumericPart); 1
HandlerBase 1
connect(ui_.pb_edit,SIGNAL(clicked()),SLOT(editCurrentRule())); 1
GpgAction::Output 1
Loads 2
if(ns 1
v_nick 2
LEGOPTP.discoInfo 1
d->pb_reply->hide(); 5
c.define_singleton_method(, 1
d->ck_newHeadings->setChecked(PsiOptions::instance()->getOption().toBool()); 1
error(ErrTransfer, 4
std::random_shuffle(locations.begin(), 1
val++; 1
bottom3->setAutoFillBackground(true); 2
debug_channel->send(state, 1
d->lb_top->setText(tr().arg(d->jid.full())); 1
hideTimer.start(10000, 1
XMPP::XData 2
HistoryCompletionModel 2
ASSERT_EQUALS(, 239
QList<Frame> 2
if(d->composing) 8
TestResult::startTest( 1
file_option.label 1
xmlReader->parse( 1
StatusPreset 6
pa_->pepManager()->publish(http: 1
nxt 1
for(std::size_t 3
mInputPanel 2
VMMethod 4
con_cipherSuites 1
setWordWrapMode(QTextOption::WrapAtWordBoundaryOrAnywhere); 2
ActionList::~ActionList() 1
parentElement.setAttributeNode(node.toAttr()); 1
source->setData( 1
actions.setAutoDelete( 3
d->init(name, 2
ver 2
event->accept(account()->loggedIn() 1
menuBar()->setVisible(!menuBar()->isVisible()); 1
vec 1
data.removeAt(i); 1
parent.setScaleChildOffset(TRUE); 1
grid->addWidget(chb_rotate,7,0,Qt::AlignCenter); 1
static_cast<KeepPolicy>(keepPolicyEnum.keyToValue(value)); 1
growlNotifier->notify(, 2
te->setReadOnly(TRUE); 2
topvbox->addWidget(top3); 2
G(metaclass)->setup(this, 1
d->act_clear 1
parent_->removeItem(this); 1
m_toggle_overview_action->setText(tr()); 2
chb_antidim->setText(tr()); 1
setCaption(str); 1
saslProvider::saslProvider() 1
font.setPointSize( 1
d->pb_edit 1
setText(4, 1
setText(tr()); 2
l.append(CapsSpec(node(),version(),version())); 1
text.replace( 1
ui_.lb_general_message->setText(tr()); 2
QCA::Certificate 1
setSharedRenderer(renderer); 1
cricket::Call 4
OptAdvancedUI() 1
pixPainter.end(); 1
current 5
ui_.gb_settings->setEnabled(b); 1
tog_offline 1
HttpAuthManager::~HttpAuthManager() 1
0x4E, 1
setWindowTitle( 1
UserResourceList::Iterator 7
start_finished(); 1
data.setType(XData::Data_Submit); 1
d->canWrite 3
origSrq 4
obj->d->success 10
switch(mp_cmp_d(a, 1
setAllCookies(qvariant_cast<QList<QNetworkCookie> 1
if(n) 1
selectBrowserEdit 1
ViewStateManager::MetacontactSpec::MetacontactSpec(Metacontact 1
item.iItem 1
client_->addExtension(, 1
meta->set_ivar(state, 1
QFrame::paintEvent(event); 1
~ProviderItem() 1
BrowserApplication::downloadManager()->download(request); 1
e.appendChild(textTag(doc, 1
context->count[0] 1
e->pos().y() 1
ui_.te->document()->rootFrame()->setFrameFormat(f); 2
pb_search->setEnabled(TRUE); 1
s_bookmarksManager 1
action.mType 1
value_ 3
setAccount(pa); 2
actionsService_->setAvatar(account); 1
CPicCtrl::CPicCtrl(BOOL 1
connect(m_history, 5
values 3
v->GetGUIDLow(), 1
p.drawPixmap((width() 1
values_.remove(node); 1
Out 1
if(!profileDelete(path)) 1
QHBoxLayout 41
isActivated 3
GpgOp::VerifyResult 3
element->setData(Qt::UserRole, 1
d->stopInProgress 2
d->packet_out.append(a); 1
line;					\ 1
lb_type->setText(tr()); 1
tc.movePosition(QTextCursor::EndOfWord, 3
pm.setItemEnabled(19, 1
Q_IMPORT_PLUGIN(qgif) 1
pageAction(QWebPage::CopyLinkToClipboard)->trigger(); 1
m_bumpmap(0), 1
button->setToolButtonStyle(Qt::ToolButtonTextOnly); 1
MetaAlertIcon(); 1
do_accept(); 1
i.owner 1
proxyModel, 1
DiscoInfoQuerier::DiscoInfoQuerier(XMPP::Client 1
R0(b,c,d,e,a, 1
date 1
data 47
if(ui_.le_role->isModified()) 1
proxyDialog.introLabel->setWordWrap(true); 1
if(getProperty().toBool()) 1
w->raise(); 1
muc.setAttribute(http: 5
updateResources(xitem->userResourceList(), 1
p->drawText(20, 1
SPDIF_CHANNELS, 1
IconSelectButton(QWidget 1
toolbar_->addAction(act_widths_); 1
isPM 1
while(!in.atEnd()) 1
d->tb_left->setEnabled(left); 1
connect(d->mle, 1
delayOff.close(); 1
pb_add->setEnabled(true); 2
Direction 4
ConsoleReference::SecurityMode 2
foreach(char 2
mainbox->addWidget( 1
connect(m_flickr, 4
TypeInfo::~TypeInfo() 1
foreach(ToolbarPrefs 4
if(negotiation) 2
tabsetToKinds_[static_cast<TabDlg 1
if(!target) 2
files_field.setType(XData::Field::Field_ListSingle); 1
i.type 1
LLUI::translate(bg_pos.mV[VX], 1
QSizeF 1
PMOUSEHOOKSTRUCT 1
adding_ 1
LLUI::popMatrix(); 4
connect(&proc, 9
ChatDlg::capsChanged(); 1
if(dirs[n].dirWatch 1
cur_service_status.insert(service.toString(), 1
interface->statusParser 1
toggleAvatarsAct_ 1
TestSuccessListener::~TestSuccessListener() 1
if(edit->nodeType() 1
d->unprocessed.clear(); 1
ui_.te_desc->setAcceptRichText(false); 1
qPrintable(fileName_), 2
qa_rem->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
m_restoreLastSession 1
tryReadPipe(); 1
viewMenu->addAction(toggleJoinByNameAct_); 1
IconAction::setEnabled 1
out.setEncoding 1
if(!platform) 2
bottomhbox->addWidget(bottom1); 2
Q_UNUSED(doc); 2
SymmetricKey::SymmetricKey(int 1
~Private(); 7
jids.append(static_cast<Contact 1
thr->boot_task(this); 1
mSkinsPanel(NULL), 1
cs_error(-1); 2
removeTab(fromIndex); 1
passenger_register_hooks(apr_pool_t 1
u.setJid(dlg->jid().withResource(nick)); 1
OptionEditor::OptionEditor(bool 1
if(features_have(global->manager->allFeatures(), 2
opt_alwaystrust 1
WebContentSelectorItem::WebContentSelectorItem(QNetworkAccessManager 1
readTrigger.setSingleShot(true); 1
setControlsVisible(false); 1
if(!from_app.isEmpty()) 1
connect(ui_.pb_refresh, 4
nested 1
downloadInfoLabel->setText(tr().arg(m_reply->errorString())); 1
Roots::iterator 3
ui_.le_ext->setText( 2
2 3
d->whois->start(250); 1
children.remove( 1
d->frame->setFrameShape( 1
ui_.le_role->setReadOnly(x); 2
QPointer<QNetworkAccessManager> 1
SHA1_CONTEXT 2
changes.insert(SxeRecordEdit::ReplaceFrom, 1
m_localServer->listen(serverName); 1
incoming.sxeid 1
d->bin 3
loadSettings(); 7
edits.append(e); 1
if(address) 3
&kCFTypeDictionaryKeyCallBacks, 1
MUCDestroy 1
skip_plugins 1
m_maze->save(); 1
setTextAlignment(1, 1
e.setToken(keyStoreInfo, 1
ask(asker_at); 1
d->iss_customRoster->clearSelection(); 1
logDebug(QString().arg(p->name())); 2
act_pgp_->setChecked(enabled); 1
ResourceMenu::ResourceMenu(QWidget 1
GO(sym_s_method_added).set(symbol()); 1
t->go(true); 26
item->setData(Qt::UserRole, 1
effectp->setPositionGlobal(mPick.mPosGlobal); 2
if(!PsiOptions::instance()->getOption().toBool() 1
d->cv->qa_rem->setEnabled(false); 2
ObjectArray::iterator 1
Q_ASSERT(angle 2
AccountManageDlg::AccountManageDlg(PsiCon 1
QWhatsThis::add(d->rb_delChatsHour, 2
CFRelease(cf_name); 1
i->setup(); 1
VCardFactory::instance()->setVCard(d->pa, 2
recentList.prepend(str); 2
connect(manager_, 15
graphicsitem_(QPixmap(filename)) 1
i->clearAlert(); 1
TwitterAPI::SocialNetwork 1
mUpdateXform 3
OptSoundUI() 1
m_player_steps++; 1
menuActions_[actionlist[i].name]->setIcon(IconsetFactory::iconPixmap(actionlist[i].icon)); 1
system(QString().arg(process->pid()).toAscii()); 4
xml 2
secAttr.nLength 1
chmod(QFile::encodeName(proghome.path()), 2
_props.fingerprint 1
!smallChat_ 1
psicon->raiseMainwin(); 1
startScrolling(); 1
obj->stop(); 1
gGL.color4f(1.f, 1
~PsiConAdapter(); 1
priority_field.setVar(); 1
jdns 2
points.append(::toDouble(str)); 1
Q3HBox 3
~PopupActionButton(); 1
if(!trimmed.isNull()) 1
mAboutBtn->setClickedCallback(onClickAbout, 1
if(edtimers[i].first 1
statusLines 2
glOrtho(0, 1
stopX(); 6
buffer.append(1, 2
p->drawEllipse( 1
value++; 1
hb->addWidget(pb_close); 2
downloadsView->setModel(m_model); 1
newParent 7
p->drawText(x1 1
int		w, 2
p->drawText(x, 2
ui 3
LEGOPTP.dtExternal 1
grid->addWidget(label, 5
if(!object_memory->young.current->contains_p(obj)) 1
if(!c_to_net.isEmpty()) 10
setUseSSL(true); 2
CPoint 3
model_(model), 1
d->pa->dialogRegister(this); 4
connect(cb_,SIGNAL(toggled(bool)),tm_,SLOT(setFlat(bool))); 2
md5_byte_t 2
m_bookmarksToolbarFrame 1
StringPrepCache 4
G(cmethod_vis)->set_object_type(CMVisibilityType); 1
envSettings->open(); 1
if(r.status().mucItem().role() 1
LLVector2 12
LLVector3 49
connect(d->pb_addToolbar, 2
(uintptr_t)obj, 1
mOKBtn 1
stream->setPassword(pass); 1
asHex[1] 1
Flush(); 2
manager_->setHasManualAvatar(contact, 1
toolBar->addAction(browseProtocol); 1
KeyViewItem 3
m_lastSession 1
updateTextMargins(); 4
addColumn(); 2
if((ver 1
tabWidget()->webViewSearch(m_tabWidget->currentIndex())->findPrevious(); 1
root_floater->addDependentFloater(dialogp); 1
addResource(r.status().type(), 1
ControlButton(const 1
Q_UNUSED(deselected); 1
checkForExpired.setDate(checkForExpired.date().addDays(m_historyLimit)); 1
v.push_back( 1
form.setType( 2
toplbl->setHelp( 1
history.addHistoryItem(HistoryItem()); 1
TestResult::removeListener 1
List::create(state), 2
connect(removeButton_, 1
completer->setCompletionMode(QCompleter::InlineCompletion); 1
ui_.tabs->setCurrentWidget(ui_.tab_affiliations); 1
service()->primaryAtChat()->chat 2
gameplay_layout->addWidget(m_gameplay_smooth, 1
i->addr 1
messageBox->setInformativeText( 4
TestSuiteBuilderContextBase::getTestNameFor( 1
d->edit->setEnabled(true); 1
FrameFactory::setDefaultPictureClass(m_frame->frameClass()); 1
CDirectoryNodeTop100::CDirectoryNodeTop100(const 1
Alert(parent, 1
if(isValid()) 2
OpenPGP::OpenPGP(QObject 2
percentCharge(0) 2
d->reset(ResetAll); 8
lst->append(state, 1
destroy_hooks(void 1
pThis->run( 1
if(!ts.isNull()) 1
resize(320,240); 1
if(ui_.le_orgUnit->edited()) 1
ua.fromXml(a); 1
groups_ 1
HistoryFilterModel::HistoryFilterModel(QAbstractItemModel 1
if(last_r 2
if(children.item(i).nodeName() 1
set_syserr(ENETDOWN, 1
painter->setPen(QPen(RenderOpts::hiColor, 1
switch(item.action()) 1
FancyLabel::Shape 1
ui->retranslateUi( 1
cm->addResource(status, 1
pb_stop->setEnabled(FALSE); 1
historyActions.append(m_historyForward); 1
l._tail->_next 1
young.clear_marks(); 1
GpgOp::~GpgOp() 1
historyRow 1
m_uiBitsPerSample, 1
services_[contact->getAccountName()]->actionAuthRequest(contact->getJid()); 1
btn->resize(w, 1
opt_reconn 2
NeoModemService::NeoModemService 1
d->async 1
if(blocks.size()) 1
col.addCRL(entries[i].crl()); 1
dirs[at].changeTimer->start(100); 1
secstr 1
connect(manager_,SIGNAL(changeActiveList_success()),SLOT(change_succeeded())); 1
endSession(); 1
if(fcntl(pipe, 2
QMessageBox::information(this, 53
Group::~Group() 1
c0.trunc 1
value=QVariant(QVariant::Invalid); 2
gPieSelf->show(x, 1
Figure::moveListCastle(Q3PointArray 1
GetSystemTime(&st); 1
setPixmap(pix); 1
setCaption(formTitleId_); 1
reg.create(4 1
acc 4
event->type() 3
act 7
check(FILE 1
dlg->lv_tabs->setSorting( 1
x[j] 6
wbWidget_->setStrokeWidth(a->data().toInt()); 1
parent->connect(act, 1
info.appendChild(feature); 1
d->buttons.append(btn); 2
action->setData(m_recentlyClosedTabs.at(i)); 1
initLabel->setText(tr()); 1
_secure 3
AdvancedWidget<QWidget>::resizeEvent(e); 1
ZeroMemory(&sei, 1
switch(op) 1
qt_translator_ 2
m->setImage(icon->name(), 1
connect(act_geometry_, 1
m_protectorChain->push( 2
createCorner(Qt::TopRightCorner, 1
affiliations_proxy_model_->setFilterFixedString(s); 1
if(!list.isEmpty() 1
Private(QPipeEnd 1
InterruptableCalls::close(serverSocket); 1
grid->addWidget(lw,1,0,1,2); 1
IconsetSelect::~IconsetSelect() 1
allocated_bytes 3
Drawer::drawBoard(QPainter 1
newopt.maxIconWidth 2
dup->store(state, 1
handle_click_action_play(); 2
lateTrigger.setSingleShot(true); 1
PrivacyListItemTest(); 1
p.insertItem(tr(), 2
issuerList.clear(); 2
qLog(PowerManagement) 34
d->entryId 1
mCancelBtn->setClickedCallback(onBtnCancel, 1
loadEmoticons(); 2
ac 2
jsdtrace_object_finalize(JSObject 1
m_bookmarkModel 1
m_timeLine->setDirection(QTimeLine::Backward); 1
as 1
at 17
removeItem(contact); 1
Q_ASSERT(doc); 3
opt_compress 2
buildTestRoster(); 1
m_cut->setShortcuts(QKeySequence::Cut); 1
layout->addWidget(lb); 1
ui_.listView->reset(); 1
QTextStream 39
AboutDialog 2
Q_OBJECT 148
info.m_interface 1
d->attachView->gcAdd(m.invite()); 1
parm.sin 1
QTextEdit::mousePressEvent(e); 1
gMessageSystem->addU8Fast(_PREHASH_RayEndIsIntersection, 1
if(!validNode(s, 1
memcpy(p, 1
prealloc 1
lastCommand 3
hsh->set(state, 2
msg->getVector3(, 2
appendSysMsg(message, 5
addTab(webViewWithSearch, 1
d->act->input.sig 1
ui_.le_bday->setModified(x); 1
out[4] 1
NeoCallProvider::NeoCallProvider( 1
bg_color->insert(d->pb_cAnimBack); 1
keepUntilCombo->setCurrentIndex(2); 1
blocks.clear(); 1
map[51] 2
TestSetUp::setUp() 1
discoInfoQuerier_->getDiscoInfo(jid,node 1
p->drawText(tm, 2
d->pb_auth->setEnabled(true); 2
cursor.clearSelection(); 8
d->pad 1
env.load_argv(argc, 1
d->mle->setEnabled(true); 3
object->registerInventoryListener(this,user_data); 1
QMutexLocker 69
JAVASCRIPT_FUNCTION_ENTRY( 1
PR_ASSERT(NULL 2
controllers_ 1
QTEST_MAIN(tst_History) 1
cookiesTable->setModel(m_proxyModel); 1
pgp_pub 2
BOOST_REQUIRE_EQUAL(end 1
stack->put(state, 1
d->at 1
if(blockSize 1
HistoryTreeModel::HistoryTreeModel(QAbstractItemModel 1
url.clear(); 1
next_collection_bytes 3
LLScrollListCtrl 5
aboutAction 1
bOk 2
QWhatsThis::add(d->ck_scrollTo, 1
if(GlobalCacheResolver::resolve(state, 1
CWnd 1
d->to_net.clear(); 2
services_[account->getAccountName()]->actionSetAvatar(); 1
jsdtrace_execute_done(JSScript 1
p.drawPixmap(-offX, 1
d->doFlash( 1
battery->setTimeRemaining(getTimeRemaining()); 2
hours 4
d->s5bServer 2
TEST_CASE(zeroDiv3); 1
le_jid_->setFocusPolicy(Qt::NoFocus); 1
Cipher::Cipher(const 2
sender 1
d->le_fRoster->setFont(PsiOptions::instance()->getOption().toString()); 1
strExt.MakeLower(); 1
QStringList(), 1
action 26
md5_state_t(const 1
set_syserr(EPROTO, 1
mPrefsIM->apply(); 1
useCustomBrowserCheckBox 1
LineEdit::LineEdit(const 1
BlockEnvironment 2
d->panel[i].SetHeight(17); 1
if(oldstate 1
onig_foreach_name( 1
executable 2
d->groupBox9->setPalette(customPal); 1
if(recv) 3
d->tb_pgp->setEnabled(true); 1
TEST_CASE(stlBoundries1); 1
GCUserView::~GCUserView() 1
d->le_to->setSelection(x, 1
QPushButton::setIconSize(pix.size()); 1
WRITE(OBJECT, 1
chatView()->appendText(QString().arg(Qt::escape(m.subject()))); 1
if(!s.at(n2).isSpace()) 1
memcpy(&data[0], 1
uint64 3
d.setRule(list_.item(index.row())); 1
QMessageBox::Cancel, 1
LEGOPTP.brushedMetal 1
if(in[n] 5
GO(task).set(new_class(, 1
it->setData(0, 2
QWebPage 1
client->addExtension(, 1
secprops.security_flags 1
saw_object(tmp); 2
refresh(); 2
add_sym(send); 1
m_history 2
gTerseObjectUpdates 1
d->edb->reg(this); 1
0x44, 1
argv[2], 1
fflush(fvibro); 3
d->ck_popupOnStatus->setChecked( 1
saveGeometryTimer_->setSingleShot(true); 1
chatView()->appendText(QString(); 1
toolbar->addWidget(label); 1
qa_rem 1
StringUtils::SplitString(strDirectory, 1
PlasmaFramePrivate() 1
d->anim 6
enableButtons 2
aVoice(jid()); 1
state_ 4
foreach(QJDns::NameServer 1
recordDetectedSession(message); 1
setMinimumHeight(height); 1
m_reply->setParent(this); 1
Q_ASSERT(obj->isWidgetType()); 1
historyActions.append(m_restoreLastSession); 1
.arg(dataString((int)speed)) 1
changeList_ 3
d->n.set_sign(sign); 1
Impix::Impix(const 2
if(terminating 2
ProtectorGuard::~ProtectorGuard() 1
setFrameText(text); 1
features_.addFeature(i.attribute()); 1
expected_ancestors.push(c); 1
CPPUNIT_TEST(testFromXml_DenyAction); 1
KeySym 1
GO(main).set(om->new_object(G(object), 1
KeyStoreEntry::KeyStoreEntry() 1
if(frameTextEnabled()) 1
tree->setExpanded(proxyModel->index(0, 1
resetName(); 4
TESTCASE(define_method_int) 1
if(d->opt.asOffline 1
Q_ASSERT(dest); 1
ani->start(QPropertyAnimation::DeleteWhenStopped); 1
mFontp 1
JT_AHCGetList(Task 1
if(args 1
d->interface->directMsgParser->setLogin( 1
if(argc 1
QMessageBox::critical(this, 36
d->statusButton->setText(tr()); 1
SearchDlg 1
release(); 1
edit.setWidgetSpacing(spacing); 2
d->le_oeSystem->setText(PsiOptions::instance()->getOption().toString()); 1
ui_.pb_next->setEnabled(false); 1
DefaultSHA1Context(Provider 1
cm->post_marshal(state); 1
psi->dialogUnregister(this); 3
d->getAction()->addTo(d->statusMenu); 8
if(d->cvi) 7
le_pass->setEnabled(true); 2
strings[i] 1
w 54
messageBox.exec(); 1
yesterday.setTime(yesterday.time().addSecs(2)); 1
d->ck_toolbarOn->setChecked(tb.on); 1
mazes_layout->addWidget(m_mazes_size, 1
mbox->setIconPixmap( 1
!mirror); 1
CppUnit::TextUi::TestRunner 1
QRegion 1
args(0), 2
painter.setPen(QPen(Qt::darkGray, 1
updateAccount(acname); 1
receiveData(command); 1
m_select_pos 1
newstatusAction->setText( 1
providerList.append(item->p); 1
vsoUsbCable.setAttribute(, 1
resetAffiliationList(MUCItem::Admin); 1
data.setNum(dragTab_); 1
Q_UNUSED(remote); 2
--n; 4
QNetworkProxy::setApplicationProxy( 1
items.Clear(); 1
FALSE); 1
e.what(), 1
d->te->setEnabled(true); 1
m_bookmarksToolbar->setBackgroundRole(QPalette::Window); 1
if(!groups.contains(str)) 1
QApplication::installTranslator(translator); 1
qcaEventHandler_->submitPassword(currentEventId_,passphrase.toUtf8()); 1
TESTCASE(define_class) 1
ServerConfig 4
isd->setIconset(is); 1
setResizeMode(Q3ListView::AllColumns); 2
Protector::~Protector() 1
m_board->setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff); 1
LEGOPTP.asMessage 1
MessageChannel 1
if(!w) 1
state[2] 1
updateStatusbarActionText(false); 1
QFileSystemWatcherRelay(QFileSystemWatcher 1
exc 1
closeButton_->hide(); 1
exp 2
d->le_subj 1
if(!instance) 1
PsiOptions::instance()->setOption(,state); 1
ProtectorChain::~ProtectorChain() 1
sxeId_ 1
session 4
LLVector3d	surface_pos_global; 1
tile->setParent(this); 2
setRenderHint(QPainter::SmoothPixmapTransform, 1
alpha-=2; 1
failed 7
Score(int 1
Rect 1
use_engines(args.use_engines()) 1
QObject::connect(wrk, 1
d->roster.setAutoDelete(true); 1
UnhookWindowsHookEx(g_mouseHook); 1
action->setCheckable(checkable); 1
doOpenEvent(); 3
errorGeneral 1
ZeroMemory( 2
vboxLayout->addWidget(label); 1
sentToChatWindow 1
if(!allowInput) 2
serverTryAgain(); 2
connect(ui_.lv_users, 1
d->con_cipherSuites 1
For 1
sep 2
manager_->requestListNames(); 3
d->ck_popupOnHeadline->setChecked( 1
sec 5
sel 3
mSourceObject->updateText(); 1
if(getDumbCapacity() 2
EventLoopIdleTimerUPP 2
msg.args 2
Ar::~Ar() 1
wizard->exec(); 1
modify_buttons_[d->tb_seFTComplete] 1
segment_iter->clearFontWidthMap(); 2
mutex 1
QList<Certificate> 7
m_dwWindowId 3
m_clearButton->hide(); 2
d->nextAnim 2
Server 2
pPlayer->PlayerTalkClass->SendPointOfInterest(target->GetPositionX(), 1
visible( 1
e.appendChild(doc.createTextNode(room_)); 2
painter.translate(lr.x() 1
toolbarSelectionChanged(0); 1
query.setAttribute(http: 3
negotiation->state 10
pb_edit 1
Py_Finalize(); 1
pParent=pNode; 1
m_origins.clear(); 1
CLog::Log(LOGERROR, 6
statusChat->setWhatsThis 1
ui_.le_jid->setCursorPosition(0); 1
map1[pk] 2
SetColor((_r 1
SecureMessageSignature::IdentityResult 5
comments_[name]=comment; 1
ui_.mle->optionsChanged(); 2
tabWidget_->setCurrentPage( 3
URLWatcherPlugin::URLWatcherPlugin() 1
isChat 1
Event::Event(STATE, 1
newGameClicked(); 1
vals.removeAt(k); 1
d->pb_reg->hide(); 1
if(promptInitialDoc) 1
in_left.clear(); 2
ap_hook_handler(handle_request, 1
QAbstractItemView 1
Q_ASSERT(unit 1
VCard 11
twos_complement(&a); 1
G(tuple)->setup(this, 1
if(avail) 1
XmlElement::addAttribute( 2
d->crlLocations 1
pb_execute->setEnabled(false); 1
Botan::set_global_state(libstate); 1
++z[(x_size 1
TabData() 1
FileTransferHandler::FileTransferHandler(PsiAccount 1
obj->d->handles.removeAt(n); 3
if(s.hasError()) 1
d->le_oeChat2->setText(PsiOptions::instance()->getOption().toString()); 1
authenticator->setPassword( 1
xform_obj.setChanged(LLXform::TRANSLATED 1
dup->all_flags 1
gMessageSystem->addQuatFast(_PREHASH_Rotation,			rotation 1
ConstraintType::ConstraintType(ConstraintTypeKnown 1
blk2tbstr 2
map[2] 2
PluginInstance 6
DummyTestDescription::DummyTestDescription() 1
f.setBackground(QBrush(Qt::black)); 2
_file 1
downloadsView->setAlternatingRowColors(true); 1
hist->move(drw->x() 1
ev.xfocus.type 1
if(!d->v_enabled) 1
if(!active) 1
pTempDoc->DeleteContents(); 1
forwardHistory.clear(); 1
cr.adjust(margin, 1
versionInt 2
connect(d->pb_defRosterDetails, 1
fmt.setMargin(0); 2
MethodTable 2
tabs.append(tab->url().toString()); 1
themes_layout->addLayout(themes_preview_layout); 1
result->endTest( 1
tb[1].name 1
setStyle(new 2
TESTCASE(define_class_under) 1
updateItemCount(); 2
group->getGroupPath() 4
QObject::connect(t, 1
gototwitpicAction 1
addDebug(instanceForQJDns.value(jdns)->index, 1
d->icon->stop(); 2
ConstraintType 2
window()->setCursor(Qt::WaitCursor); 2
unread.append( 1
showContacts.name 1
RosterExchangeItems 2
model_->setRosterBuilder(rb_); 1
VCardFactory::instance()->setVCard(d->jid, 2
be 1
bg 1
ba 2
CBStream::CBStream 1
setTime(e->timeStamp(), 1
bl 1
AdditionalMessage::AdditionalMessage() 1
bi 1
QVariantList 15
bp 1
br 4
Functor::~Functor() 1
by 5
connect(domainLineEdit, 1
o->removeOption(base, 2
d->rosterExchangeItems.clear(); 2
sourceReset(); 1
autoFile_ 1
if(j->success()) 4
if(reg[j]) 1
::FreeLibrary( 1
Q_UNUSED(type); 1
if(write_conv) 2
left.product 1
Q_UNUSED(xitem); 1
CPPUNIT_ASSERT(item.presenceOut()); 3
act_icon_->setMenu(account()->psi()->iconSelectPopup()); 1
d->h->find(str, 1
task->sp 1
assert(!( 1
link 4
line 8
Private(IconToolButton 1
pb_delete 1
map[49] 2
if(str 6
svg->render(painter, 9
out.address 2
painter.setBrush(generateGradient(m_defaultBaseColor, 1
set_syserr(ENAVAIL, 1
sxp 1
d->cv->qa_ren->setEnabled(online); 1
TextTestResult 1
queryCache.clear(); 1
newMainWindow->activateWindow(); 1
QObject 17
codec 6
bigint_sub2(get_reg(), 2
Library_State::~Library_State() 1
m_favIcons->setChecked(true); 2
d->sb_asAway->setValue( 1
app.setApplicationVersion(); 1
&L_symaddr 1
global->ensure_first_scan(); 5
proxy.setPort(settings.value(QLatin1String(), 1
pieces[0]->SetLODCount(count); 1
d->le_subj->hide(); 1
it.current()->setSelected( 1
if(le_pwcur->text() 1
--it; 3
context[0] 1
if(m.type() 2
if(e->originLocal()) 3
((y_size 1
toolBar->addAction(actVCard); 1
_sd->unlock(); 1
statusActions[action] 1
foreach(EventItem 9
saveIfNeccessary(); 2
socket->waitForReadyRead(1000); 1
PGPKey::PGPKey(const 2
if(vis->private_p(state)) 1
disconnect(d->thread, 1
pixmap.fill(QColor(Qt::lightGray)); 1
TextTestProgressListener 1
connect(thread, 1
thread->excludeIconsets(loaded); 1
processGet(args); 1
wait(); 4
getline 2
sent 2
controls_layout->addWidget(controls[1], 1
set_syserr(EAGAIN, 1
d->old_trayicon 2
R3(b,c,d,e,a,44); 1
setCurrentIndex(0); 1
wasSigned 3
timer.setInterval(PIPEWRITER_POLL); 1
connect(d->pb_deny, 1
QMessageBox::No); 3
ueventSocket->read(&buffer[0],readCount); 1
p->save(); 5
obj->d->results.removeAt(n); 1
!(children.at(i).nodeName() 1
urlStr 1
LLViewerRegion 3
mAttachedObject 2
saslContext(saslProvider 1
set_syserr(ENOTDIR, 1
XMPP::Status 6
titleText->setAutoFillBackground(true); 2
m_active_tiles.insert(tile->parent(), 1
index 14
geom.moveBottom(r.bottom() 1
d->image 2
CPPUNIT_TEST(testCapsEnabled_NoCaps); 1
setAllColumnsShowFocus(true); 2
hb_http_id->setMargin(0); 1
le_to->setEnabled(true); 1
SecureMessageKey::SecureMessageKey() 2
width_element.appendChild(e.ownerDocument().createTextNode(QString::number(rect.width()))); 1
drw->setEnabled(FALSE); 3
setAlert(0); 1
retract.setAttribute(, 1
len 12
others.append(node); 1
FileRequestDlg 1
lim.rlim_cur 2
matrix.scale(sx, 1
while(x_size 1
~DirWatch2() 1
sm->setMapping(actVCard, 1
alt_mask 2
if(!lo) 1
ui_.le_server->setFocus(); 1
if(!busy 1
TabShortcut 1
CLog::Log(LOGDEBUG,); 4
c.oldSize 2
account_->groupChatLeave(jid_.host(), 1
allowClientSendFirst 1
QEventLoop 3
flusspferd::array 2
c->cancel(command); 1
qlv_contextPopup(lvi, 1
d->iss_system->clear(); 1
Q_ASSERT(index.model() 1
SendSysMessage(state_str.c_str()); 1
glTexImage2D(GL_TEXTURE_2D, 1
QTimer 26
mp_init(n); 1
moveHistory.push_back(nextControl); 1
PrivacyListItem 39
WRITE(char 1
glVertex3f(box.x(), 5
sLog.outDebug(GetMangosString(LANG_SET_FLOAT), 1
if(d->infoMap.value(Country).length() 1
e.what() 1
BakerGC::Heap::Heap(size_t 1
ConsoleReference::~ConsoleReference() 1
if(proc->state() 2
CMatrix44f 5
if(d->type 19
if(needp[n].id 8
NetworkAccessManager::NetworkAccessManager(QObject 1
g->go(true); 1
i.node 1
ck_authreq->setChecked(true); 1
m_session->GetPlayer( 1
mod->setup(this, 1
fileMenu->addAction(m_tabWidget->newTabAction()); 1
doEndSuite( 1
QKeySequence 5
frame_data.mNumObjects 1
if(!node_.isNull()) 1
alloc 9
QRgb 8
icon->setName(icon->name() 1
am->setItemEnabled(16, 1
setWindowFlags(Qt::Tool); 1
set_syserr(ENOSYS, 1
msg->newMessage(); 2
d->le_user->setWhatsThis( 1
bTrim[atoi(vecBufs[nToken].c_str())-1] 1
if(d->transid 3
bg_sePlay->insert(d->tb_seFTCompletePlay); 1
OptChatUI() 2
timer_.start(norminterval_); 2
delay 3
affiliations_model_->resetAffiliationLists(); 1
connect(pb_open, 1
SASL::~SASL() 1
define_constructor(Constructor<BaseClass>()); 1
if(!roots.isEmpty()) 1
m_height 1
LEGOPTP.lockdown.services 1
p->frameSize() 1
settings.sync(); 8
sendTo->setTitle(tr()); 2
if(!groupTransform.isIdentity()) 2
old_trayicon_->setIcon( 2
mCurrentAction(0) 1
state->om->collect_young_now 1
ResetControlStates(); 1
disconnect(this,SIGNAL(listsError()),this,SLOT(getDefault_listsError())); 2
if(isHidden()) 2
if(e->oldSize().width() 2
ui_.lv_users->setMainDlg(this); 1
le_priority->setText(QString::number(acc.priority)); 1
d->tw_customRoster->setCurrentItem(item); 1
acb->setOnlineOnly(online_only); 1
TestFailure::failedTestName() 1
handles.clear(); 1
glCallList(lodDispLists[lod]); 1
IconSelectPopup::~IconSelectPopup() 1
PsiOptions::instance()->removeOption(base 1
node->nd_entry 2
cb_address->setFocus(); 1
renderer_.load(xmldump.toAscii()); 1
Dice::Dice() 1
newLang 1
expand(index); 1
m_board->zoomOut(); 1
TEST_CASE(nullpointer3); 1
trayIcon->show(); 3
obj->d->results.clear(); 2
if(rem 1
m_scrollInfo.SetSpeed(-60); 1
setText(text); 4
glLoadIdentity(); 3
panel->m_largePanel->SetParentControl(pGroup); 1
if(modeType 1
emitUnauthorized( 1
if(callback(negotiation->peer, 1
strResultNoCase.ToLower(); 1
reference 1
messageBox->setDetailedText( 3
updateInfo(); 4
buttonLine->addWidget(pb_delete); 1
XDataWidget::XDataWidget(QWidget 1
params.SetQueryParam(pParent->GetType(), 1
Attributes::const_iterator 1
libstate->prealloc_size 1
d->pb_reg->setEnabled(true); 1
fields_container_->setWidgetResizable(true); 1
tree.setOption(,l); 1
KeyBundle::KeyBundle() 1
QStringRef 1
controls_layout->setColumnStretch(0, 1
defaultSettings->setFontSize(QWebSettings::DefaultFontSize, 1
p->setPen(xcg.text()); 1
pm.setItemEnabled(11, 1
Q_ASSERT(0); 1
PsiIcon::PsiIcon() 1
EDBItem 3
QLineEdit::resizeEvent(event); 1
that->closeTab(0); 1
setLabelStatus( 4
qDeleteAll(m_mainWindows); 1
cd.cbData 1
in.close(); 1
UnZip::~UnZip() 1
lb_desc2->hide(); 1
connect(ui_.host, 1
:Context(parent, 1
foreach(MUCItem 4
macSystemWatch->emitWakeup(); 1
ksm->connect(this, 1
SET(be, 4
adminMenu->setEnabled(dataService->isAvailable()); 1
rec.owner 3
progressBar->setVisible(true); 1
pms->abcd[1] 2
qLog(Modem)<<<<value; 2
newGame->setEnabled(false); 1
d->cv->unlink(this); 1
drawFrame(&painter); 1
m_SearchStringEncoding 2
m_webView->setParent(this); 1
loadingAnimation->setMovie(movie); 1
setShowToolTips(false); 3
this->screen 2
i->SetUInt32Value(index, 1
MiniClient 1
TEST_CASE(unknownFunction3); 1
ContactProfile::ContactProfile(PsiAccount 1
hotKeyID.signature 1
free(buffer); 1
addItem(resource, 1
painter.setPen(Qt::darkGray); 1
themes_preview_layout->addWidget(m_themes_selector); 1
OptionsStorageTask(Task 1
connect(m_viewTabBarAction, 1
updateIcon(); 1
AdvancedWidgetShared::~AdvancedWidgetShared() 1
d->pipe 2
checkUnreadStatuses(); 1
UnMarshaller 1
strcpy(snarlStruct.text, 4
if(Q3TextDrag::canDecode(i)) 1
QVERIFY(widget.recentlyClosedTabsAction()); 1
email 2
findSubTag(tag, 1
StatusWidget 16
sp.setPriority(d->le_priority->text().toInt()); 1
d->lb_status->setPsiIcon(IconsetFactory::iconPtr()); 3
bFill 2
dc.SetViewportExt(rect.Width(), 1
m_nextTabAction 1
f.setValue(le->text()); 2
foreach(QKeySequence 3
hb->addWidget(pb); 1
d->interface->friendsInProgress 2
DVDPlayerCodec 1
apr_bucket 1
QCA::botan_secure_free(c, 1
pyName 1
QCA_logTextMessage(QString().arg(objectName(), 1
QWhatsThis::add(d->pb_cOffline, 1
drawablep->mXform.setRotation(current_rot); 1
statusBar()->addPermanentWidget(m_slider); 1
d->pb_quote->setMinimumWidth(96); 1
if(primaryWeight() 1
pipeCommand.readEnd().setInheritable(true); 2
Q3PtrListIterator<File> 1
CLog::Log(LOGERROR,); 1
ch 1
cb 2
sin_size 2
manager_->addContact(contact, 3
qLog(AtChat)<<; 1
a[0] 2
cx 2
TEST_CASE(linux_list_1); 1
cs 2
cp 1
Q_IMPORT_PLUGIN(qsvg) 1
cv 2
Hash::Hash(const 2
setVerticalScrollMode(QAbstractItemView::ScrollPerPixel); 1
if(v_showAway 1
updateBookmarksToolbarActionText(showBookmarksBar); 1
d->buttons.clear(); 1
size--; 1
SET(dup, 3
c, 1
MUCJoinDlg::MUCJoinDlg(PsiCon 1
c3 1
c2 9
c1 7
c0 31
mMsgPanel->cancel(); 1
d->mle->scrollToTop(); 1
obj->d->qType 1
GameBoard::focusInEvent(QFocusEvent 1
QWidget::showEvent(e); 1
ui_.label_photo->setPixmap(QPixmap::fromImage(img_scaled)); 1
registerBusname(dbusIface, 2
InterruptableCalls::close(fds[1]); 1
XmlDocument::toString() 1
mimeData->setData().toLatin1()); 1
bg_defAct->buttons()[PsiOptions::instance()->getOption( 2
fwi.hwnd 1
DiscoListItem(DiscoItem 2
ChatView 5
JAVASCRIPT_FUNCTION_ARGS( 1
setCurrentWidget(webViewWithSearch); 1
setShortcuts(); 11
Message::detailCount() 1
cursor.setPosition(oldTrackBarPosition, 1
statusMenu->addSeparator(); 3
u32bit 49
while(fgets(buff, 1
lb_size->setText(tr().arg(d->fileSize)); 1
setCertificate(kb.certificateChain(), 1
newtwitpicAction 1
data[len] 1
showContacts.keys 1
lvi->setPixmap(0, 1
if(!pre_command.isEmpty()) 2
if(vals.isEmpty()) 1
section(CertificateInfoType::DN), 1
items_.insert(index,item); 1
GameProtocol::acceptGame(Q3Socket 1
d->activatedCount++; 1
m_endMacro 2
DefaultShared() 1
alreadyInfo 3
d->tb_icon->setEnabled(false); 1
settings.deleteAccount( 3
EventNotifierAction::~EventNotifierAction() 1
p->setFont(boldFont); 2
tlsHandler->setXMPPCertCheck(true); 1
if(ksl->provider() 1
TestPath::insert( 2
mMsgPanel->setDefaultBtn(default_btn); 1
recvNextEvent(); 2
PyObject 3
d->cb_preset->removeItem(id); 1
saveCapabilities(); 1
pm.setItemEnabled(25, 1
edt 2
if(!d->secure) 1
emptyPixmap_ 2
if(ca_flag 2
UserResource 2
data.pa 1
actionGroupAdd(u.jid(), 1
if(!d->le_subj->text().isEmpty()) 1
if(a.jdns 1
GO(true_class).set(new_class(, 1
gMessageSystem->addU8Fast(_PREHASH_Material,	material); 1
bottom1->setAutoFillBackground(true); 2
applicationPoolServer->detach(); 1
if(!global_check()) 25
addButtonItem(bConf); 1
qLog(Hardware) 4
transport 1
connect(tab_main,SIGNAL(currentChanged(int)),SLOT(tabChanged(int))); 1
m_gameplay_time->setChecked(settings.value(, 1
{1, 4
set_syserr(EINVAL, 1
PassphraseDlg::PassphraseDlg(QWidget 1
TEST_CASE(iterator4); 1
model->hasChildren(QModelIndex()); 1
endTestRun( 1
ui.statusEdit->setToolTip( 2
memmove(map1, 2
qa_rem->setEnabled(false); 1
ui_.toolbar->addAction(d->act_icon); 1
Qt::Dock 1
d->le_newNickColor->setFocus(); 1
LLViewerObject 19
game_=NULL; 1
CScraperParser::~CScraperParser() 1
saveToCache(ba); 1
ui.lastChecked->setText( 3
m_board->header()->setStretchLastSection(false); 1
defaultSettings->setUserStyleSheetUrl(url); 1
message.m_details.begin(), 1
QCA_logTextMessage(QString().arg(q->objectName()), 25
model->span(QModelIndex()); 1
std::sort(blocks.begin(), 1
doc->setDefaultFont(font()); 1
actionInfo(i->u()->jid()); 1
PEPManager::PEPManager(Client 1
icon->d 1
scores_icon.addPixmap(QPixmap()); 1
updateText(); 2
ui_.pb_close->setEnabled(true); 2
lbx_proxy->setSelected(x, 1
count 16
bigint_shl1(get_reg(), 2
G(blokenv)->instance_type 1
setTabOrder(d->pb_edit, 1
disconnect(this,SIGNAL(listReceived(const 1
channel->call(Qfalse); 1
m_attributes.push_back( 1
anim.RenderAnimation(m_transform, 1
m_frame->layoutButtons(m_controlItems, 1
mLCDPanel(NULL) 1
if(self->bytes 1
if(set_authzid) 1
connect(pb_privacy, 1
cb_service->setEnabled(false); 1
button->setText(); 1
request.setAttribute( 24
if(selectedItems().contains(colliding[i])) 2
mHidden(FALSE) 1
d->cur_system 1
~saslProvider(); 1
item.setPresenceIn(ui_.ck_presenceIn->isChecked()); 1
QFile::remove(m_localServer->serverName()); 1
++x[x_size]; 1
if(!new_p) 1
extinguishFlashingTabs(); 1
volume_params.setRatio	( 13
connect(label, 3
if(first) 2
e.appendChild(doc.createTextNode(QString::number(alt_.value()))); 1
for(VarList::ConstIterator 1
helpMenu->insertItem(tr(), 1
xform_obj.setScale(x, 1
mNetworkPanel(NULL), 1
removePage(currentPage()); 1
processSetMaxPerApp(atoi(args[1])); 1
if(u->isAvailable()) 1
keepUntilCombo->setCurrentIndex(0); 1
sweep_objects(); 1
TestPath::getTestAt( 1
SET(d, 16
cb_security_level->addItem(tr(),QCA::SL_Baseline); 1
d->icon 11
GCUserViewGroupItem::GCUserViewGroupItem(GCUserView 1
delayOff.open(QIODevice::WriteOnly 1
proxyUserName->setText(settings.value(QLatin1String()).toString()); 1
Changing 4
item.setIQ(iq); 1
m_encoding 1
cp->addSelf(); 1
c->setParent(this); 2
isunknown 1
pa->setUserAccount(acc); 2
TestResult::protect( 1
matrix.translate(points[1], 1
d->iss_defRoster->insert( 1
mp_toradix(MP(this), 1
negotiation->session->processIncomingSxeElement(sxe, 2
list->deleteAllItems(); 1
+ 13
FileEvent::FileEvent(const 2
session_manager_->SignalRequestSignaling.connect(slots_, 1
closeButton->setToolTip(tr()); 2
setHeight(y); 2
tb[0].stretchable 1
if(!allowEdits_) 1
connected(); 2
OptionsTab 7
act->setShortcut(sequence); 1
om->add_type_info(ti); 1
TEST_CASE(simple11); 1
for(ContactProfile 6
toolBar->show(); 1
d->lateTimer.stop(); 1
if(node.toElement().hasAttribute(attribute)) 2
secure 5
TestOther() 1
d->lw_highlightWords->clear(); 1
CompilerOutputter::~CompilerOutputter() 1
TestSuiteBuilderContextBase::getStringProperty( 1
showPage(currentPage()); 1
LLFloaterHardwareSettings::instance()->refreshEnabledState(); 1
connect(pa, 7
GO(bignum).set(new_class(, 1
if(ptr 5
pItem->m_strPath 3
setPage(m_page); 1
painter.drawRect(lobex 2
R3(a,b,c,d,e,40); 1
doc.documentElement().insertBefore(removedNode, 1
if(ui_.le_email->edited()) 1
pb_open->setEnabled(TRUE); 1
addTip( 16
wbWidget_->setStrokeColor(newColor); 1
readEntry(tb_position, 1
settings.beginGroup( 15
m_model 1
grid->addWidget(edt_init,1,0); 1
d->groupState()->insert(d->getGroupName(), 1
ui_.password->setText(current.data(PasswordRole).toString()); 1
PsiConObject(QObject 1
p[needed 1
statusList->requestCreateFavorite( 1
handle_small_mul(z, 1
cb_commands 1
mSkinsPanel->cancel(); 1
close(fd); 4
drag->setPixmap(icon); 1
d->tb_history->setEnabled(false); 1
statusBar()->setSizeGripEnabled(true); 1
list_.setItemState(0, 1
ui_.lv_users->updateEntry(nick, 1
printFailureLocation( 2
get(); 3
z[12] 2
map[t] 1
TEST_CASE(eraseErase); 1
PsiIconset::instance()->stripFirstAnimFrame(i); 2
connect(URLObject::getInstance(), 1
size.scale(400, 1
LLMessageSystem 1
stream.setVersion(QDataStream::Qt_4_0); 1
(HINSTANCE)m_libraryHandle, 1
connect(ActiveProfiles::instance(), 1
ToolbarSearch::~ToolbarSearch() 1
BOOST_REQUIRE_NE(i, 1
accountTree.removeOption(, 1
map[59] 2
bOpenFileDialog, 1
mTabContainer->addTabPanel(mWebPanel, 1
getFileName(); 2
LLColor3 3
if(value->nil_p()) 1
MemoryRegion::MemoryRegion(const 4
MP(ret)->sign 1
d->helpStr 1
Botan::Builtin_Modules 1
connect(pm_settings_, 2
m_rightLayout->setDirection(QBoxLayout::RightToLeft); 2
am->setItemChecked(16, 1
IconsetDetailsDlg(PsiCon 1
connect(d->tb_right, 2
contact->setStatusMessage(); 1
AdvancedConnector::AdvancedConnector(QObject 1
TestMemleak() 1
doBrowse(); 1
d->iv 1
valueStr.setNum(zValue()); 1
CPPUNIT_ASSERT(manager->capsEnabled()); 1
AtomicXmlFile 7
QApplication::setGraphicsSystem(); 1
CRLEntry::CRLEntry() 1
disconnect(account_, 1
d->id 11
qApp->setWindowIcon( 1
resize(200, 2
centralWidget->setLayout(layout); 1
theme.remove(theme.length() 1
if(!u.isAvailable()) 1
PsiOptions::instance()->setOption(geometryOptionPath_, 1
tbDef.name 1
getUniqueChildTest()->run( 1
AllPsiWidgetsPlugin(QObject 1
_l->failedAssertDelta( 1
d->disableServerSendLast 1
act->input.opt_noagent 1
foreach(RosterActionsService 4
ui_.cb_default->insertItem(tr()); 1
selectBrowserButton 1
env.run_file(str); 1
v_showStatusMsg 2
mTelehubObjectName(), 1
gMenuHolder->setParcelSelection(selection); 1
d->tasks->append( 3
globals.object->set_const(this, 1
ele.appendChild(valEle); 1
++firstNotDigitIndex; 1
saslProvider(); 1
RenderOpts::HQRendering 2
lastSize 1
if(!doc.doctype().isNull()) 1
_next 1
QCursor::setPos(cursor().pos() 1
vals->put(state, 1
ui_.le_orgUnit->setEnabled(x); 2
cls->obj_type 1
layout->setRowMinimumHeight(7, 1
that->nodeprep_table.insert(in, 2
providerItemList.removeAt(n); 2
glPushMatrix(); 4
mgr.remapPressedAction(0, 6
B 1
Q_ASSERT(model->index(-2, 2
themes_button_layout->addWidget(m_themes_remove_button); 1
setTextCursor(cursor); 2
process->kill(); 2
p->drawText(px, 1
gpg.setAlwaysTrust(true); 1
Board::~Board() 2
if(parent() 1
e.setAttribute(,jid_.full()); 1
glTexEnvi(GL_TEXTURE_ENV, 2
d->popupType 1
mLastDistance 2
fromXml(el); 6
pb_close->setDefault(false); 1
:	QPushButton(parent), 1
Properties::const_iterator 1
m_locations 3
value=node.toText().data(); 1
combo->setCurrentText( 1
tabManager_->setPreferredTabsForKind('M', 1
if(fi.exists() 1
ui_.te_thanks->setText( 1
fname 6
doc.doctype().save(stream, 1
StatusWidget::setCurrentWidth( 1
shortNames_.insert(plugin->name(), 1
m_twitPic->setupAccounts( 1
doc.documentElement().insertBefore(children.item(newIndex), 1
QList<CRLEntry> 1
d->icon->activated(true); 1
cert_list 1
m_bookmarkRootNode->add(menu); 1
dict[n] 1
d, 1
m_transform.InverseTransformPosition(mousePoint.x, 1
dst_textp->mTargetPositionOffset 2
d->le_toolbarName->setText(); 1
favConf->endGroup(); 2
m_favIcons 2
d2 2
d1 2
icon.setSound 2
LEGOPTP.useCaps 1
KeyStore::KeyStore(const 1
m_board->setRootIsDecorated(false); 1
do 30
connect(act_suggestion,SIGNAL(triggered()),SLOT(applySuggestion())); 1
m_historyHash.clear(); 1
di 1
hyper_mask 1
QMacStyle::drawControl(ce, 2
TestResult::endSuite( 1
mainWindow()->loadPage(static_cast<QFileOpenEvent 1
Q3ListView 6
setCheckSpelling(checkSpellingGloballyEnabled()); 2
if(kind_of_p(state, 1
m_tabWidget->addWebAction(m_reload, 1
XMPPRosterItem::XMPPRosterItem() 1
d->username 1
busy_ 2
QAbstractButton::mousePressEvent(event); 1
CSingleLock 5
Q_DECLARE_METATYPE(QWebPage::WebAction) 1
ui.confirmDeletionBox->setChecked( 1
gradient.setColorAt(1, 1
m_gfxChangeTimer 1
cb_type->insertStringList(methods); 1
switchToVt4(); 1
bookmarksActions.append(m_addBookmark); 1
history.setHistoryLimit(-1); 3
XSetWindowBackground( 1
CacheFilename.clear(); 1
NeoCallProvider::~NeoCallProvider() 1
ui_.le_port->setEnabled(false); 1
CKey::CKey(void) 1
to->append(CertificateInfoPair(type, 1
m_newTabAction->setShortcuts(QKeySequence::AddTab); 1
gislan->setResource(work); 1
m_proxyModel->setSourceModel(m_bookmarksModel); 1
if(!fin_process) 2
updateBookmarksToolbarActionText(false); 1
requests 2
TEST_CASE(func16); 1
col 5
KeyStoreThread(QObject 1
con 6
negotiation 1
battery->setCharge( 2
if(!arguments) 1
updateCaption(); 9
d->ptr 3
keepOpen_ 6
doc.setContent(QString(EMPTYSVG)); 1
checkOldStylePointerCast( 7
if(!avatar_image.isNull()) 1
QTest::qWait(100); 1
if(reference_p()) 4
m_bRelativeCoords 3
BottomToTop 2
f.write(); 3
SetAngle(i); 2
ui_.le_bday->setEnabled(x); 2
d->parentWidget_->setAttribute(Qt::WA_ShowWithoutActivating, 2
d->ck_toolbarLocked->setChecked(tb.locked 1
phoneBooksReady(); 1
layout_->setMargin(0); 3
if((sx-sy)/sx 1
d->te 3
LEGOPTP.defaultRosterIconset 1
if(!d->start(true)) 1
p.setPen(Qt::gray); 1
d->ts 2
tw->resizeColumnToContents(0); 1
LLFrameStats::startLogging(NULL); 1
connect(&gpg, 7
QAction::setEnabled(e); 1
action->setData(QVariant(WbWidget::DrawPath)); 1
newList_ 2
toolTipText 1
view->resize( 2
conferences_ 3
SafeTimer::~SafeTimer() 2
d->mle->setAcceptRichText(false); 1
account()->dj_sendMessage(m); 1
d->trayMenu->clear(); 1
connect(t,SIGNAL(finished()),SLOT(action_finished())); 2
d->pix->setPsiIcon(i); 1
connect(popup, 4
controls_layout->addWidget(new 5
stream->continueAfterParams(); 1
addButtonItem(bDelete); 1
the 4
makeActual( 1
newMainWindow->raise(); 1
in_mech 1
LEGOPTP.color[cAway] 1
Jid::~Jid() 1
d->ck_autoAuth->setChecked( 1
if(!isValid) 1
d->cv->qa_send->addTo(&pm); 1
Message( 1
cursor.movePosition(QTextCursor::End, 3
m_pReader 3
iconsets_->removeAll((Iconset 1
d->thread->stop(); 1
memset(sys_name, 2
c0.findreplacecaseless 2
SASLContext::Result 1
cb_group->insertItem(str); 2
MainWindow::~MainWindow() 2
e->updateContact(j); 1
addToolBarBreak(); 1
Q_ASSERT(node 1
CreatureInfo 1
output.timestamp 2
xdata 2
lb_type 1
connect(PsiIconset::instance(), 1
if(list.isEmpty()) 16
pm_settings_->exec(QCursor::pos()); 2
bps 2
y_offset 2
hst->move(l1->x() 1
set_syserr(ENOMEM, 1
ui_.le_fullname->setReadOnly(x); 2
i.setSecurityEnabled(secure); 1
isOpen_ 3
connect(ui_.pb_apply,SIGNAL(clicked()),SLOT(applyList())); 1
qDeleteAll(sources); 1
while(!queuedMessages_.isEmpty()) 1
if(error.isEmpty()) 1
TestResultCollector 1
send( 2
negotiation->initialDoc 1
connect(c,SIGNAL(playing(const 1
d->ck_popupFiles->setChecked( 1
LEGOPTP.bounceDock 1
mTabContainer->addTabPanel(mPrefsVoice, 1
setStatusPresetWidgetsEnabled(false); 2
script->filename 2
d->c->setConstraints(d->con_cipherSuites); 1
create(); 1
cs.resize(d->n.encoded_size(Botan::BigInt::Decimal)); 1
d->popup->addLayout( 2
c2eBrain 2
PrivacyDlgTest::PrivacyDlgTest() 1
releaseAndDeleteLater(this, 5
if(groupchats.isEmpty()) 1
metacontacts_.insert(MetacontactSpec(metacontact), 1
passwordDialog.introLabel->setWordWrap(true); 1
m_tabWidget->newTab(); 1
in_sendFirst 1
setReadOnly(true); 5
connect(newSourceModel, 1
.arg(filename_.mid(filename_.lastIndexOf() 1
setMaxRows(-1); 1
connect(chatEdit(), 3
negotiation->session 4
if(!d->composing) 3
encoded 1
if(!sig.isEmpty()) 3
reset 2
PsiOptions::instance()->setOption(lastUsedOpenPathOptionPath, 1
URLBookmark 1
connect(act_compact_, 1
params.applyInteract(need); 2
sLog.outDebug(GetMangosString(LANG_CHANGE_32BIT), 1
QWhatsThis::add(d->ck_asOffline, 1
TestPlugInDefaultImpl::uninitialize( 1
if(ks) 2
d->sound 1
FancyPopup::Private::hideTimeout 2
d->ck_inactiveevents->setChecked( 1
setListener( 1
SafeDeleteLock::SafeDeleteLock(SafeDelete 1
to_net.clear(); 2
script->lineno 2
m_bookmarksToolbar, 1
tabsetToKinds_.remove(static_cast<TabDlg 1
g_graphicsContext.InvertFinalCoords(mousePoint.x, 1
VALUE 4
connect(d->pb_nickColor,	 1
setWindowTitle(tr().arg(name_)); 1
paddingType 2
QMessageBox::information(0, 4
PsiOptions::instance()->setOption(option, 5
Q_ASSERT(algorithm 2
ap_pass_brigade(r->output_filters, 1
removeFromSequence( 1
if(d->ft) 3
gFrameStats.mTimer.reset(); 3
for(QList<Item>::Iterator 1
global 2
info.time.start(); 2
m_viewTabBarAction 1
Exception::sourceLine() 1
if(own) 1
connect(ui_.pb_dtext, 1
flash 2
++count; 1
ck_ignoreSSLWarnings->setChecked(acc.opt_ignoreSSLWarnings); 1
strBuffer 2
XmlOutputter::addFailedTest( 1
XmlOutputter::addSuccessfulTest( 1
QTwitterApp::mainWindow()->move( 1
ui_.te_authors->setText( 1
if(plain 1
d->contactList->removeAccount(pa); 1
fixedLabel->setText(QString(QLatin1String()).arg(fixedFont.family()).arg(fixedFont.pointSize())); 2
tabWidget_->setDragsEnabled(enabled); 1
m_status_timer 1
IconSelect::~IconSelect() 1
p 40
timer_.start(3000); 1
LLFirstUse::useLeftClickNoHit(); 1
proc->closeWriteChannel(); 2
processSetMaxIdleTime(args); 1
model->currentStatus()->slotRetweet(); 1
tr().arg(peer.full()), 1
ConvertResult 19
pGroup->AddControl(panel->m_largePanel); 1
if(proxy 1
if(trim) 4
m_solver->removeTarget(target); 2
ui_.tw_tabs->removePage 1
UserAccount::UserAccount() 1
v 5
battery->setCharging( 2
tokenizer.fillFunctionList(); 2
tabGrouping 8
useCustomBrowserCheckBox->setText( 1
statusString_ 1
m_reply->abort(); 1
change 2
ui_.splitter->optionsChanged(); 1
Mood::Mood(const 1
a->append(s); 1
goDisc(); 1
chatView()->scrollToBottom(); 1
id.name 2
hb_http_id->addWidget(l); 1
xml.writeStartDocument(); 1
ConsolePrompt::ConsolePrompt(QObject 1
!ui_.le_country->text().isEmpty() 2
Properties::iterator 1
btn->setDefaultAction(this); 2
d->pm_settings->clear(); 1
status1 2
actionsService_->mood(account); 1
own_decoder 2
setData(ind,QVariant(affiliationlistindexToString((AffiliationListIndex) 1
lb_ident_->setAccount(pa); 1
NeoSimInfo::NeoSimInfo( 1
grabbedKeys_ 1
ui_.hsplitter->setSizes(tmp); 1
m_requestCount--; 1
if(node.nodeName() 1
this->appName 2
d->lb_ident->setSizePolicy(QSizePolicy( 2
substring 2
if(object.const_defined()) 3
m_bytesReceived 1
LEGOPTP.rosterBgImage 1
d->pb_form_cancel->setMinimumWidth(96); 1
SET(cls, 7
bounds.setSize(QSize(unit, 1
ui_.le_phone->setEdited(x); 1
setToolTip(toolTipText); 1
m_bookmarksManager->setTitle(item, 1
++it 8
setPeerAddressNone(); 2
QFETCH(LineEdit::WidgetPosition, 2
chatView()->appendText(QString().arg(TextUtil::linkify(Qt::escape(u.url())))); 1
addListener( 1
painter.fillRect(0, 3
if(alpha 1
data[i].image 1
d->trackerId 2
uint 18
MessageAuthenticationCode 1
accounts_.insert(AccountSpec(account), 1
while(cur) 2
explicit 2
yes(tr()), 1
++i; 10
TEST_CASE(delete1); 1
d->ck_popupHeadlines->setChecked( 1
p->setFont(font); 4
setLate 1
mle()->insert( 1
files_.insert(plugin->name(), 1
webView->loadUrl(request); 1
check(void 13
OptionsTabChat::OptionsTabChat(QObject 2
d->tb_right->setEnabled(enable 1
finishedTrigger.stop(); 2
file.close(); 13
Once 1
ListNode 7
if(newName 1
if(m.body().contains(d->self)) 1
MUCConfigDlg::MUCConfigDlg(MUCManager 1
menu.addAction(tr(), 7
SearchDlg::~SearchDlg() 1
SynchronizedObject::SynchronizedObject( 1
assert(iobj->zone 1
R0(d,e,a,b,c,12); 1
if(!apm) 1
loadPlugin(file); 1
ed 3
d->opt_port 1
if((d->proxy.type() 1
QDialog::paintEvent(e); 1
bAppend 2
ASSERT_EQUALS(CheckMemoryLeak::No, 1
mPrefsIM->cancel(); 1
et 6
ui_.le_homepage->setModified(x); 1
ep 3
d->ck_useEmoticons->setWhatsThis( 1
if(!append) 1
DynamicLibraryManager::releaseLibrary() 1
doAgents(); 1
bResume->setVisible(false); 1
snl.nl_pid 1
assert(neuroncoords.find(dend->dest) 1
QStringList::ConstIterator 7
QDesktopServices::openUrl(request.url()); 1
layout_->addLayout(barLayout_); 2
QWhatsThis::add(d->ck_allowAwayPopup, 1
,stretchBorders(false) 1
set_syserr(EFBIG, 1
connect(addButton_, 1
d->mle->appendText(s); 1
d->ck_outlineHeadings->setChecked(PsiOptions::instance()->getOption().toBool()); 1
expected_ancestors.push(Module(rb_cBasicObject)); 1
append=false; 1
d->findDlg->error(str); 1
res++; 4
d->lists.append( 1
StretchWidget 1
handler_reject(d, 2
m_children.append(tile); 1
size 19
history->goToItem(history->forwardItems(history->count() 1
connect(m_transformRefreshTimer, 1
mp_init_set_int(&low, 1
findNextCell(pos); 2
ui_.le_orgUnit->setReadOnly(x); 2
migrateEntry<QStringList>(element, 1
psi->createAccount(le_name->text()); 1
friend 7
ca_new.append(error.at(i).certificate()); 1
defaultSettings->setAttribute(QWebSettings::AutoLoadImages, 1
FORMAT_MESSAGE_FROM_SYSTEM 1
_props.isSecret 2
Str255 1
m_animations.push_back(anim); 1
connect(c, 10
if(PeekNamedPipe(pipe, 1
:Q3ListViewItem(parent) 2
~KeyStorePrivate() 1
TESTCASE(const_set_get_by_id) 1
foreach(btn, 1
d->jsp->queryStart(this, 1
last_success 1
GameBoard::GameType	et; 2
d->needPassword 1
items.push_back(item); 2
actOnlineWiki->setWhatsThis 1
btn->move(l1->x(), 1
:MemoryRegion(QByteArray::fromRawData(str, 1
br.setColor(Qt::gray); 1
windows.at(offset)->currentTab()->setFocus(); 1
if(x.bits() 2
CertCollectionContext 2
parent->removeItem(item); 1
parentWidget_->restoreGeometry(array); 1
task->import_arguments(ctx, 1
if(sInstance 1
d->statusMenu 1
loop++; 1
d->trusted 3
onig_error_code_to_str(onig_err_buf, 1
services_[contact->getAccountName()]->actionUnsetManualAvatar(contact->getJid()); 1
MUCConfigurationTask 4
loadBookmarks(); 1
p.translate(0, 1
l->clear(); 1
psiAccount()->actionJoin(c, 1
gMessageSystem->addUUIDFast(_PREHASH_RayTargetID,			ray_target_id 1
fileNames.append( 1
d->frameClass 1
piece->pushNeighbors(); 3
tabs.append(QString::null); 1
pa->doDisco(); 1
if(children.at(i).nodeName() 1
manager_->changeList(model_.list()); 2
ui_.mle->chatEdit()->installEventFilter(d); 1
opt.startsWith()) 1
GO(sym_equal).set(symbol()); 1
connect(item, 1
if(ePos 2
d->getAction()->addTo(viewMenu); 9
ui.urlShortenerCombo->addItem( 10
if(!waiting->empty_p()) 1
combined->setIcon(icon->name(), 1
tbDef.keys.clear(); 1
manager_->setSubscription(contact, 1
SLOT(inputEvent(struct 3
m_segment 1
:QWidget() 1
remote_ 1
SnarlPlugin(); 1
d->ck_raise->setChecked( 1
:Context(from) 1
setData(jt); 1
m_overview->setVisible(visible); 1
nickJid 2
d->pipeAux.writeEnd().enable(); 2
host.port 1
addWidget(m_siteIcon, 1
rubinius::VM 1
G(array)->has_ivars 1
painter->setFont(QFont(, 1
QCOMPARE(spy4.count(), 1
typedef 24
ai->qbuf->resize(new_size); 1
Console::Console(Type 1
frame->setFrameShape( 1
if(busy 1
nb_getdiscoinfo_called_++; 1
pGroup->AddControl(pGUIControl); 1
setMinimumWidth(48); 1
if(dirs[n].changeTimer 1
if(!iqVerify(e, 2
d->in.clear(); 4
gameover(3); 1
hw->insertItem(s); 2
i->jdns->shutdown(); 1
if(callbacks) 1
obj->d->published.clear(); 2
getBookmarks(); 1
xmlReader 2
set_syserr(ENFILE, 1
gMessageSystem->addVector3Fast(_PREHASH_RayEnd,			ray_end_region 1
m_param[iCompare-1].ToLower(); 1
lw->addItem(element); 1
ac3encoder_free(&m_ac3encoder); 1
pipe.take(id, 1
QAbstractTextDocumentLayout 1
manager_->setStatus(resource, 1
act_clear_ 2
parent(); 1
PGPUtil::instance().clearPGPAvailableCache(); 1
if(do_repaint) 1
TestPlugInDefaultImpl::~TestPlugInDefaultImpl() 1
resizeContents(m_contentsRect); 1
if(state 8
model->itemData(QModelIndex()); 1
BrowserApplication::networkAccessManager()->loadSettings(); 1
m_loaded 6
if(r.is_negative()) 1
Dice 1
Anim::Anim(const 2
ui_.tv_affiliations->setExpanded(affiliations_proxy_model_->index(i, 1
ops->put(state, 1
generateNewNode(attributes.item(i), 1
d->le_http_id 1
mBoldFontp(LLFontGL::sSansSerifBold), 1
hb4->addWidget(d->pb_form_submit); 1
shortcuts.append(Qt::Key_Escape); 1
PsiOptions::instance()->setOption()); 1
lastSessionID 1
menu->addMenu(authMenu); 1
a.set_element(0, 1
m_widget->setGeometry(0, 1
bg_sePlay->insert(d->tb_seOfflinePlay); 1
GetLastError(), 1
Q_D(TwitterAPI); 21
TextOutputter::printFailureLocation( 1
ChangeBookmarkCommand 2
clientOS_ 1
llinfos 18
size.setWidth(QInputDialog::getInteger(this, 1
setIsAvailable(true); 1
QString	str; 1
d->lv->clear(); 2
speed 2
tnd.cbSize		= 2
struct 104
dir.mkpath(directory); 2
acc.port 2
m_bookmarksManager->undoRedoStack()->endMacro(); 1
MUCJoinDlg::~MUCJoinDlg() 1
w->setEnabled(current.isValid()); 1
children.sort(); 3
real 1
m_contentsRect.setTop(-hfw 1
dict.clear(); 1
ck_legacy_ssl_probe->setChecked(on 1
addActions(g->actions()); 1
setStatus(Incoming); 1
if(ui_.le_state->isModified()) 1
joinButton_->setDefault(true); 1
chargeState.open(QIODevice::ReadOnly 3
SetPrivacyListsTask 6
g_TextureManager.FlushPreLoad(); 1
dialog->setLayout(layout); 1
mFilename 1
list_.updateItem(index.row(),d.rule()); 1
+%>]^/( 1
Operation 1
QList<MacKeyTrigger 1
connect(dlg->lv_tabs, 1
standardLabel->setText(QString(QLatin1String()).arg(font.family()).arg(font.pointSize())); 1
WbWidget::Mode 1
if(dec) 1
actionGroupRename(oldName, 1
PrivacyListItemTest::~PrivacyListItemTest() 1
if(d->attachView->isHidden()) 1
m_session->GetPlayer()->SendSellError(msg, 1
buildComboBox(); 3
MessageEvent::MessageEvent(PsiAccount 1
fclose(file); 1
Q_ASSERT(model->hasChildren(secondLevelIndex) 1
BrowserMainWindow 17
::close(pipe); 1
newTextEdit->setDocument(doc); 1
foreach(Item 19
Ui::AuthDialog 1
vector<int> 1
h.jdns->publishUpdate(h.id, 1
m.setBody(logdecode(sText)); 1
connect(m_settings, 1
(xform_obj.getRotation()).isIdentity() 1
d->defaultMenuBar 1
sp.setMessage(d->te_sp->text()); 1
CBString::CBString 13
itemClear(i->id); 1
timer_.start(interval); 2
setShowTabBarWhenOneTab(!showTabBarWhenOneTab()); 1
chatEdit()->setFont(f); 1
g->appname 1
p->fillRect( 1
m_vecControls.erase(i); 1
setTime(QDateTime::currentDateTime(), 1
model->markAllAsRead(); 1
operator 1
if(sel->nil_p()) 1
label->movie()->start(); 1
generateRemoves(node); 1
gpg.setAsciiFormat(true); 3
widthaction->setCheckable(true); 3
setSizePolicy(QSizePolicy::Preferred, 1
TestRunner::WrappingSuite::hasOnlyOneTest() 1
qPRCreate( 1
KeyStoreManager::~KeyStoreManager() 1
services_[group->getAccountName()]->actionGroupDeleteAll(group->getGroupPath()); 1
AvatarFactory::AvatarFactory(PsiAccount 1
view->setModel(m_proxyModel); 1
bOk->setText(tr( 1
modelOwner_(modelOwner), 1
if(ui_.le_street->edited()) 1
((EDBFlatFile::File 1
if(shift) 2
m_exceptionsModel->m_blockedCookies.append(domainLineEdit->text()); 1
if(!rl.isEmpty()) 1
d->le_priority->setMinimumWidth(30); 1
opttab2 1
d->tray->setContextMenu(d->trayMenu); 1
if(d->urlOnShow) 1
CRLEntry::Reason 1
d->make_act(Decrypt); 1
wbWidget_ 1
while(d->recentNodeList.count() 1
m_frameTextItem->setFont(f); 1
pb_stop->setText(tr()); 5
GO(vm).set(new_module(, 1
a[stopHuman] 1
sendRequestBody(r, 2
move( 1
QGLWidget::mouseReleaseEvent(event); 1
rightSizePixmap.fill(Qt::transparent); 1
!getManagingTabDlg()->isMinimized(); 1
i->_ownInstance 3
p.setColor(QPalette::Text, 1
items_.insert(i, 1
if(ok1 1
finish(); 2
pm.setItemEnabled(3, 1
grid->addWidget(bResume,3,0,1,2); 1
splitter_->setVisible(splitterEnabled()); 1
if(ok) 11
x509_state_obj 3
LLFILE 1
priority_ 4
if(fname.isEmpty()) 1
layout->setMargin(0); 3
d->lb_status->setPsiIcon(PsiIconset::instance()->statusPtr(jid, 1
d->qoauth->setConsumerKey( 1
node_ 11
d->itemToOptions(pi); 2
map[60] 2
qLog(Modem)<< 2
setCurrentItem(i); 3
xcg.setColor(QColorGroup::Text, 7
!parentWidget_->isTopLevel() 1
vert 9
Q_UNUSED(iconset); 2
account_->actionJoin(bookmarkFor(currentIndex()), 1
out.clear(); 5
selectBrowserButton->setText( 1
:QObject() 2
((NormalObject 1
md 1
setUpdatesEnabled(true); 10
childSetVisible(, 8
REGISTER_TEST(TestStl) 1
GO(tuple).set(new_basic_class(object, 1
if(!(--d->pcountdown 1
foreach(long 1
painter->drawRoundRect(x1, 1
QImageReader 1
QNetworkCookie 1
Theme::~Theme() 1
pb_prev->setFocus(); 1
setupNextWrite(); 2
cvlist->setFrameShape(QFrame::NoFrame); 1
toolBar->addAction(actAdd); 1
geoloc.setAttribute(http: 1
resetStatus(); 4
IconsetFinishEvent() 1
childs[i]->SetLODCount(count); 1
if(!userResourceList().isEmpty()) 1
xform_obj.setRotation(quat); 1
TestComposite::run( 1
acc.opt_log 1
ulong_t 10
gGrabTransientTool 1
SxeRecordEdit::SxeRecordEdit(const 2
qLog(Modem) 5
actAHCommand->setEnabled( 1
if((addy.length()-1) 2
href 23
app->mainWindow()->show(); 1
cursor.setCharFormat(format); 1
if(pem.isNull()) 1
CPPUNIT_NS_BEGIN 51
global->manager->appendDiagnosticText(text); 1
bzero(data_size, 1
services_[contact->getAccountName()]->actionAuthRemove(contact->getJid()); 1
le_to->setEnabled(false); 1
Hex_Encoder::encode(binary[j], 1
jsdtrace_fun_name(cx, 5
files_field.setLabel(QObject::tr()); 1
if(d->configDlg) 1
vm 1
old[i] 1
d->pb_refresh->setMinimumWidth(80); 1
setEditTriggers(QAbstractItemView::EditKeyPressed|QAbstractItemView::AnyKeyPressed); 1
BuildMenu(); 1
set_syserr(ETIME, 1
capsInfo_[spec] 2
f1 1
f2 1
loadSuccess 2
TEST_CASE(testFunctionReturnType); 1
vboxLayout->addWidget(viewerText_); 1
viewMenu->addAction(m_viewToolbar); 1
fields_.append(f); 1
item->contactProfile()->scActionDefault(item); 4
trees_[name] 1
Named_Mutex_Holder 12
string 11
find(QWebPage::FindWrapsAroundDocument); 1
maskPainter.drawPixmap((width() 1
allocated_objects 1
INPUT_RECORD 1
glColor4f(1, 1
this->config_obj 1
buildJoinedAccounts(); 1
vb1->addWidget(te); 3
fp 4
QTabBar::mousePressEvent(event); 1
fr 10
ft 16
sSubj 1
m_toolbarSearch->setFocus(); 1
JT_GetServices 2
fd 5
fh 4
set_syserr(ESPIPE, 1
clean(); 6
fn 2
fo 2
GPGProc::~GPGProc() 2
accountMigration 1
it->setText(1, 2
d->lv->header()->hide(); 1
File 4
passenger_config_merge_all_servers(pconf, 1
inline 14
ui.titleLabel->setText( 1
d->mainwin->buildToolbars(); 1
if(bigint_add2_nc(x, 1
setInteractive(false); 1
m_hooks.erase( 1
fp->close(); 1
connect(d->pb_removeHighlightWord, 1
grid->addWidget(req, 5
services_[resource->getAccountName()]->actionOpenWhiteboard(jid); 1
TextOutputter::printFailures() 1
channel(connection) 1
menu.addAction(customizeAction_); 1
VCard::Email 2
updater->checkForUpdate(); 3
top1->setPalette(backgroundPalette); 2
keyTrans 1
Figure::moveListKnight(Q3PointArray 1
if(!u->name().isEmpty()) 3
Q_DECLARE_METATYPE(QCA::KeyBundle) 1
d->statusMenu->clear(); 1
p->drawRoundRect(10, 1
m_allowedCookies 1
authm->insertItem(tr(), 2
wbWidget_->setSize(size); 1
invisible_option.value 1
set(Random::randomArray(size)); 2
connect(cb_lang, 1
registerNode(node); 1
Engine 2
gradient.setColorAt(0.85, 1
connect(le_name, 3
flush(); 8
since 1
globals.current_task->push(val); 1
setDragMode(QGraphicsView::ScrollHandDrag); 1
button->QToolButton::setIcon(QIcon()); 1
if(!msg.send_site->locate(state, 1
dirs 12
if(QSvgRenderer::load(filename)) 1
soundact->setOn(false); 1
pub 1
base 10
if(string.isEmpty()) 1
delete_aspell_config(config_); 1
tab->setTabBarShownForSingles(enabled); 1
i->className 1
data.setType(XData::Data_Cancel); 1
QMouseEvent 2
paintEvent(&pe); 1
d->unsetCursor(); 3
translate(rect.mLeft 1
m_timerId 2
mbox->exec(); 1
PsiIconset::removeAnimation(is); 2
:QProcess(parent) 1
X509_GlobalState& 1
mTextAlignment(ALIGN_TEXT_CENTER), 1
TODO_ASSERT_EQUALS(1, 2
connect(closeButton, 3
toolBar->addAction(actRegister); 1
.arg(PluginManager::loadOptionPrefix) 2
layout->addWidget(w); 1
assert(g_mouseHook); 1
connect(&startTrigger, 2
CertificateInfoType::~CertificateInfoType() 1
PGPUtil::instance(); 1
TestComposite::countTestCases() 1
migrateStringList(p_groupchat, 2
e.appendChild(req.toXml( 1
if(instance) 1
if(d->atError) 1
imagePainter.restore(); 2
setCursor(Qt::SizeBDiagCursor); 1
QWhatsThis::add(d->pb_spNew, 1
a->append( 1
label->setPixmap(icon.pixmap(16, 1
if(!parentMeta 1
connect(ui_.password, 1
xml_ 1
cb_group->setAutoCompletion(true); 1
httpSyncStarted(); 1
m_openInNewTab 2
titleIcon 3
addTestToSuite( 1
instance()->m_mainWindow 2
cricket::SocketAddress 1
m_initialActions 2
vcard->fromXml( 1
auto_auth_field.setType(XData::Field::Field_Boolean); 1
checkOther.checkVariableScope(); 1
updateWidth(); 1
if(shared->use_system()) 2
XMPPResource::~XMPPResource() 1
buttonLine->addWidget(pb_detach); 1
fvibro 3
The 1
TEST_CASE(nullpointer2); 1
ui_.cb_ssl->addItem(tr(),UserAccount::SSL_Auto); 1
send_sound_trigger(item->getAssetUUID(), 1
d->mucManager->kick(nick); 1
e.appendChild(textTag(&doc,,password_)); 1
MMP; 1
~FileWatch2() 1
GroupItem::GroupItem() 1
client_->sendMessage(queuedMessages_.takeFirst()); 1
m_leftWidget->resize(0, 1
del_fun<EntropySource>()); 1
d->pipeReader->resume(); 2
d->lb_identity 3
asString 6
restoreColor(d->pb_cProfileBack, 1
bounds.setSize(QSize(unit 2
foreach(PubSubItem 1
Add(list->m_spinControl); 1
tbDef.on 1
CFNotificationCenterAddObserver(center, 1
args.append(); 8
actions_ 1
if(sigs) 2
opt_log 2
d->iss_servicesRoster->insert( 1
d->optionsMigration.lateMigration(); 1
StringListDialogModel::~StringListDialogModel() 1
connect(tv_,SIGNAL(collapsed(const 1
if(entry) 8
r.trim 3
QMetaObject::invokeMethod(d->loop, 1
this->scope 1
message->setText( 1
if(!m->parent().isEmpty()) 1
selectPieces(); 1
bg_sePlay->insert(d->tb_seChat2Play); 1
reply->setSslConfiguration(sslCfg); 1
ui_.cb_default->clear(); 1
importing_ 3
Library_State& 1
defaults_ 1
NeoCallVolume::NeoCallVolume(NeoModemService 1
won 4
description_ 2
loadMeta 1
painter.setClipRect((width() 1
setSizePolicy(QSizePolicy::Expanding, 2
downloadInfoLabel->setPalette(p); 1
HAXEP: 2
TestComposite::getName() 1
file.open 3
drag->exec(); 2
QCOMPARE(messageHeadline->pixmap().height(), 1
functors.empty() 1
tophbox->addWidget(top4); 2
status.state 6
battery 2
ui_.avatar->setPixmap(p.scaled(QSize(size, 1
newtext 2
m_navigationSplitter->setSizes(sizes); 1
if(bits_to_get 1
if(w->isMaximized()) 1
groupList 4
pb_close->setEnabled(enabled); 1
done(0); 1
services_[contact->getAccountName()]->actionGroupAdd(contact->getJid(), 2
else{ 2
sxe.appendChild(negotiation); 1
UserStatus 3
else 2138
btn->setObjectName(bname); 1
--x1; 2
GameBoard::gameover(int 1
tempFile.setAutoRemove(false); 1
printFailureReport(); 1
TEST_CASE(unknownFunction2); 1
d->mainwin->setWindowOpts(PsiOptions::instance()->getOption().toBool())); 1
G(regexp)->set_object_type(RegexpType); 1
prolog 1
actionDefault(i->u()->jid()); 1
~KeyStoreManagerGlobal() 1
QPipeReaderPoll(Q_PIPE_ID 1
d->act->input.export_key_id 1
if(d->opt_probe) 1
if(is_negative()) 1
statusBar(), 3
gGL.color4fv(bg_color.mV); 3
chat(); 15
state->om->type_info[obj_type]->set_field(state, 1
console.stop(); 1
--id; 2
dir.remove(fname); 1
iconset->clear(); 1
connect(cb_node, 1
lists_.append(e.attribute()); 1
if(servermode) 1
d->iss_customRoster->scrollToItem(item); 1
user 7
if(!linkify_isOneOf(out.at(x2), 2
map[nf] 1
audioMgr 1
TLS::~TLS() 1
response.removeChild(response.firstChild()); 2
if(url.at(url.length()-1) 2
NEW_STRUCT(m_obj, 1
textp->mTargetPositionOffset 1
Q_ASSERT(model->parent(index) 1
scroll(QPoint(0, 2
cursor.movePosition(QTextCursor::StartOfBlock); 1
DownloadManager::DownloadManager(QWidget 1
connect(webView, 11
nameAtom 1
session_->SignalResampleImage.connect(listener_, 1
active_ 1
~TemporaryFile() 1
realRemove.push(true); 1
d->pb_http_deny->setMinimumWidth(96); 1
bg->setGeometry(wg->x(), 1
if(!GetNumberOfConsoleInputEvents(pipe, 1
m_autosaver->changeOccurred(); 2
PyRun_SimpleString(qPrintable(command)); 2
setSize(QSize(400, 1
signal 1
pixmap_ 3
that->setCursor(oldcurs); 1
CPPUNIT_TEST(testFromXml_MessageChild); 1
argc, 1
opt.font 1
boot_threads(); 1
qa_hist->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
ASSERT_EQUAL(rb_cObject, 1
Private(KeyStoreEntryWatcher 1
creation 2
if((id+1) 1
h.jdns->publishCancel(h.id); 2
d->showText 2
PubSubSubscription::State 1
MarkSweepGC::Entry::Entry(Header 1
FigureDialog::FigureDialog(const 1
QAction::setText(t); 1
model_->setStatusIconProvider(statusIconProvider_); 2
setElementId(id); 1
currentTab()->setFocus(); 1
le_authid->hide(); 1
XData::Field::OptionList 6
SubHistory() 1
contact->setExpanded(expanded); 1
if(!d->self) 1
additionalMessage, 1
free(szParam); 1
QWebFrame 1
header()->setStretchLastSection(false); 1
Private(IconButton 1
d->status_single 4
pe.setTagName(); 1
a.set_element(i, 2
IconText 1
QWhatsThis::add(d->rb_aBlink, 1
if(type 35
setStatus(string2status(status)); 1
Tuple 63
cur->put(state, 1
rm->setItemEnabled(13, 1
PsiOptions::instance()->removeOption( 1
foreach(AHCommandServer 1
bDrewOK 1
OptionsTree::OptionsTree(QObject 2
z.readFile(n, 1
d->ft->close(); 1
if(error 1
connect(tmr2, 1
view_->setViewStateManager(vsm_); 2
fields.push_back(field); 1
assertDoubleEquals( 1
item.fromXml(e); 1
cls->set_const(state, 1
fragment.insertBefore(children.at(i), 1
AccountsController::~AccountsController() 1
r->id 6
d->recentNodeList.prepend(str); 1
setTabOrder(d->le_user, 1
valueStr.setNum(pos().y()); 1
proc->setReadChannel(QProcess::StandardOutput); 2
chb_qvga->setChecked(prof.qvga); 1
_tests->leaveOnly( 1
noaction.sa_handler 1
ck_req_mutual->setChecked(acc.req_mutual_auth); 1
xmllang 1
exceptionTable->verticalHeader()->setMinimumSectionSize(-1); 1
fValue 2
qSort(gl.begin(), 1
buffer.open(QIODevice::WriteOnly); 3
connect(d->tw_availActions, 1
set_syserr(EIO, 1
btn->setLabel(text()); 1
status_field.setType(XData::Field::Field_ListSingle); 1
p->drawLine(2, 1
PasswordStyle 1
m_sourceRow.clear(); 1
writeString(); 2
G(fixnum_class)->instance_type 1
hashval 10
XmlElement::XmlElement( 2
act_pgp_->setEnabled(true); 1
d->pb_auth->show(); 2
QWebView::resizeEvent(event); 1
depth 1
m_board->addTopLevelItem(score); 2
LEGOPTP.showGroupCounts 1
gt 12
gr 2
TEST_CASE(ifelse9); 1
gd 1
gc 1
d->pb_reply->setFocus(); 1
expandNodes(childNode); 1
setFlag(QGraphicsItem::ItemIsMovable); 1
gn 1
trayicon_->setToolTip(str); 2
opt.rect 1
ui_.nickname->setText(current.data(NickRole).toString()); 1
insertColumns(0,1,ind); 1
group->repaint(); 1
opt_pass 3
painter.setBrush(brush); 1
m_core 1
callbacks[0].proc 2
i.remove(); 1
if(s[x] 1
cb_security_level->addItem(tr(),QCA::SL_None); 1
pb_complete->setEnabled(false); 1
if(i->j.compare(j, 1
c->_id 3
QObject(parent) 3
_serial 3
ui_.cb_active->setCurrentItem(0); 1
QPipeWriterThread(Q_PIPE_ID 1
(buffer_end 1
getAction()->addTo(diagMenu); 2
d->act->cardOkay(); 1
Q_UNUSED(dir); 3
textcolor 2
click 1
callType 3
files.clear(); 1
OptAppearanceUI() 1
connect(standardFontButton, 1
TestFactoryRegistry::isValid() 1
actAHCommand 1
controls.append(new 5
addr.pcode 2
connect(d->act_scrolldown,SIGNAL(activated()), 1
mGeneralPanel->apply(); 1
; 21
populate(); 1
items.AddFront(pItem, 1
if(d->cb_preset->count() 2
connect(blockButton, 1
speller_ 3
while(!d->dialogList.isEmpty()) 1
bytesAvail 2
scale(m_unit); 1
s.setType(fl[i].value().first()); 1
if(x[j] 1
if(enc) 2
QList<QNetworkCookie>::Iterator 1
d->ck_ignoreNonRoster->setChecked( 1
checkMemoryLeak.simplifycode(tokenizer._tokens, 1
Builtin_Modules::Builtin_Modules(const 1
ui_.cb_value->setEnabled(true); 1
d->getAction()->addTo 9
connect(ui_.pb_topic, 1
d->labels.removeRef(label); 1
if(visible) 2
openChat(metacontact->getTopContact()); 1
if(text 1
MoodCatalog::MoodCatalog() 1
connect(d->te_sp, 3
unblockWidgets(); 1
Timer::Timer(STATE, 1
if(!isRunning()) 1
parent.setPosition(llvecpospar); 1
restoreColor(d->pb_cDND, 1
TestPath::findActualRoot( 1
btn->setIcon 1
if(i->type 3
Q_UNUSED(enabled); 1
strLowerPath 1
if(PsiOptions::instance()->getOption().toBool() 4
escaped 6
d->lw_selectedActions->takeItem(row); 2
d->le_pass->setEchoMode(QLineEdit::Password); 1
EDBHandle::EDBHandle(EDB 1
LLFloaterHardwareSettings::instance()->apply(); 1
TEST_CASE(forwhile9); 1
m_dwIDRange 1
LEGOPTP.emoticons 1
PluginManager 3
item.appendChild(it.payload()); 1
forward->QueueAnimation(ANIM_PROCESS_NORMAL); 1
if(w->target().compare(jid)) 1
init(); 18
addr.region 2
IconAction::IconAction(const 2
a.set_length(new_array_size); 2
m_find->setShortcuts(QKeySequence::Find); 1
watchedWidgets_[widget] 1
DummyDataService::DummyDataService() 1
bg_clicked(0); 1
openWhiteboard(metacontact->getTopContact()); 1
QApplication::activePopupWidget()->close(); 1
xdata.setFields(fields); 1
d->nonAnonymous 1
if((item 1
setMode(Select); 1
RealSuiteDescription::RealSuiteDescription( 1
d->cv->qa_rem->addTo(&pm); 1
online_option.value 1
if(size() 2
VarList::VarList() 1
d->GetLastInputInfo 1
edit.addWidget((QWidget 2
QSvgGenerator 1
page()->mainFrame()->setScrollBarValue(Qt::Vertical, 1
manager_->removeContact(contact); 3
TabManager::TabManager(PsiCon 1
hb->addWidget(d->save); 1
auth 3
drawablep->mXform.setParent(&mXform); 1
foreach(QJDns::DnsHost 1
EDBFlatFile::File::File(const 1
QMutableHashIterator<QString, 1
updateToolbarActionText(true); 2
disconnect(d->pa, 2
mode 7
d->promptStr 1
Q_UNUSED(section); 2
Q_UNUSED(mimeType); 1
chunk 2
if(d->id 2
FILETIME 4
frame++; 1
TypeInfo 6
m_menu->exec(QPoint(r.x() 1
ui_.mle->chatEdit()->setFont(f); 1
Rotate, 1
profConf->beginGroup(app); 2
Q_ASSERT(ok); 2
c++; 2
SASL::Params 1
std::ios::seekdir 2
addEntry(r.jid().full(), 1
ensured_nodes_.clear(); 1
if(!emitted_hostNameReceived 1
statusGroup->setMenuText 1
QCOMPARE(dateTime.toString(), 1
buttonBox->addButton(rejectButton, 2
eventNotifier->setWhatsThis 1
pb_changepw->setEnabled(false); 1
worldPos.scaleVec(llvecparentscale); 1
expblur<16,7>(blurred, 2
if(is_zero()) 2
Q_EXPORT_PLUGIN(ConsoleDumpPlugin); 1
set_syserr(EL2NSYNC, 1
LEGOPTP.onevent[eHeadline] 1
modify_buttons_[d->tb_seHeadline] 1
set_syserr(EEXIST, 1
writeString(promptStr 1
if(seen[obj]) 1
widget_ 1
connect(d->tb_down, 2
MyOpenPGPContext(Provider 1
callbacks[4].proc 1
connect(sendTo, 1
m_gameplay_steps->setChecked(settings.value(, 1
applicationPool->setMaxPerApp(config->maxInstancesPerApp); 1
QDomDocument 39
header()->setClickEnabled(false); 1
setStatusPresetWidgetsEnabled(true); 1
ConsolePrompt 1
j++; 3
tracker().failedTest( 5
~IconsetLoadThreadDestroyEvent() 1
R 1
c0.insertchrs 2
widget( 1
ev.xclient.window 1
AddBookmarkDialog 2
strlcpy(sys_name, 2
beg 2
items_.append(new 1
cookie.setExpirationDate(soon); 1
isDetails( 5
pa->client()->send(str); 1
QTwitterApp::unregisterMainWindow( 1
Q3PointArray		tmp; 1
connect(qa_hist, 1
strDest.replace(strDest.begin()+iIndex,strDest.begin()+iEnd+1,strReplace); 1
updateDisplay( 2
if(!r.status().mucItem().jid().isEmpty()) 1
niceUnit(size, 1
Q3PtrList<OptionsTab> 1
glPopMatrix(); 4
large_object_threshold 1
instance 4
panel->m_spinControl->SetParentControl(pGroup); 1
f.setName(fname); 1
switch(quoted[i].latin1()) 1
QWhatsThis::add(d->rb_delChatsNever, 2
GlobalCacheResolver 3
busNames 3
if(plainBytes) 4
:	QGLWidget(parent), 1
connect(ueventSocket, 1
item.expirationDate 1
stopPlayback(); 3
CertificateCollection::~CertificateCollection() 1
if(strcmp(buffer,)==0) 1
GoogleJingleInfoTask(Task 1
QVERIFY(widget.closeTabAction()); 1
m_recentFotowallUrls.append(QUrl(urlString)); 1
for(std::string::const_iterator 4
STATE; 2
d->gr_form 2
connect(bg_se, 1
d->profiles.clear(); 1
barLayout_->addWidget(tabBar_, 1
mCurrentAction 2
writeString( 1
mGroup(0), 1
memmove(p, 4
d->pb_quote->hide(); 5
pms->count[1] 1
piece->moveBy(QPoint(rand() 1
total_duration 1
JDnsSharedDebugPrivate(JDnsSharedDebug 1
ui_.pb_submit->hide(); 2
lb_count->setNum(mle->text().length()); 1
KeyBundle 10
fields_container_ 1
actionSendUrl(u->jid()); 1
dpy 2
if(d->aaaa) 2
setProfileState(d->status); 1
d->lw_highlightWords->takeItem(id); 1
ui_.le_ext->setModified(x); 1
ShowWindow(hwnd, 1
testString 1
written 4
stub->ret_type 1
restoreColor(d->pb_cProfileFore, 1
d->setPixmap(IconsetFactory::iconPixmap(), 1
gGeneral, 1
command.setAttribute(,status2string(status())); 1
setLastSxe(sender, 1
active--; 1
connect(m_historyForwardMenu, 2
tryCompress 1
menu->addMenu(avatarMenu); 1
MemoryRegion::MemoryRegion() 1
titleFontColor 4
strokeWidth_ 2
ReplaceBuffers(strInput); 1
GPGProc::GPGProc(QObject 2
piece->moveBy(m_pos 1
MainWindow::saveImage() 1
graphic[e.attribute()] 1
painter.translate(-80, 1
d->thread->closeOutput(); 1
username 1
m_isError( 1
m_navigationSplitter 1
key.change(c); 2
listView->setUniformItemSizes(true); 1
if(powerConstraint 4
mItemID 1
system(prof.init.toUtf8().data()); 1
widget.nextTab(); 1
OptSoundUI 4
migrateEntry<QSize>(element, 1
d->te->setEnabled(false); 1
--level; 1
char	c, 1
std::sort(sVisibleHUDTextObjects.begin(), 1
ContactProfile::~ContactProfile() 1
s.url 1
that->load(); 1
strPath+=array[i]+; 1
ui_.le_country->setEnabled(x); 2
readTrigger.start(0); 1
LEGOPTP.dockToolMW 1
Q_UNUSED(f); 2
if(sender() 1
NotInList::NotInList(const 1
d->lv->addEvent(e, 1
mech 2
i 51
s[0] 2
mp_sub(MP(this), 2
tracker().failedAssert( 1
acb->setController(this); 1
toolsMenu->addAction(tr(), 2
setIcon(PsiIconset::instance()->statusPtr(d->u)); 1
d->pb_next->setMinimumWidth(96); 1
d->anim->connectUpdate 1
for(QList<Jid>::Iterator 2
acc.resource 1
if(!locking) 1
cls->instance_type 1
d->data 1
~PlasmaFramePrivate() 1
obj->deleteLater(); 2
m_stringListModel->setStringList(QStringList()); 1
doResultsReady(); 9
initStyleOption(&opt); 1
d->anim->disconnectUpdate 1
xform_obj.setPositionZ(z); 1
TestCaseDecorator::setUp() 1
if(le_name->text().isEmpty()) 1
setFlags(QGraphicsItem::ItemIsMovable 1
list->m_spinControl->SetParentControl(pGroup); 1
if(unlink(file.path().c_str())) 1
if(!avail 1
map[11] 2
cf_title, 1
startTestRun( 1
KeyStoreWriteEntry 1
controller_ 3
MacSystemWatch::MacSystemWatch() 1
sizes 1
downButton_->setFixedWidth(buttonwidth); 1
ui_.pb_add->setEnabled(false); 2
KeyStoreTracker::instance()->removeTarget(d); 1
P_TRACE(4, 1
OptionsTreeModel 1
mazes_layout->addWidget(m_mazes_algorithm, 1
ui_.le_nickname->setText( 2
actionHistory(i->u()->jid()); 1
XWindowAttributes 2
d->mucManager 1
chatView()->setFocus(); 1
OptionsTree 6
Q3Dict<DiscoListItem> 1
set_syserr(EUCLEAN, 1
AddUrlDlg 1
TestFactoryRegistryList() 1
LEGOPTS.toolbars 1
bigint_sub3(z0, 2
that->resize(s.width(), 1
QDate 6
BookmarkManager::BookmarkManager(PsiAccount 1
addToScene(); 1
d->pre_stdin 2
sInstance->open();	/ 1
QList<PsiAccount::xmlRingElem> 1
ns_v6 1
ns_v4 1
popup->mouseReleaseEvent((QMouseEvent 2
y.data(), 3
MatchData 1
favouritesAction->setChecked(true); 1
PEPPublishTask(Task 1
m_privateBrowsing->setChecked(settings->testAttribute(QWebSettings::PrivateBrowsingEnabled)); 1
thread->start(); 5
mw.loadImages(images); 1
hp 1
temp[pos++] 7
hv 4
hw 2
proc->terminate(); 2
hk 3
hi 2
hl 1
MainWindow::showStatus(const 1
hb 3
hc 1
c->setIssuerList(issuerList); 1
time(&cur_time); 1
lb_pass->setEnabled(false); 1
Passenger::setLogLevel(logLevel); 1
Q_ASSERT(childIndex 1
gGL.vertex3fv(v[3].mV); 1
historyActions.append(m_historyBack); 1
lb_port->setEnabled(on); 1
QApplication::style()->drawPrimitive(QStyle::PE_FrameFocusRect, 1
object->mDrawable->makeStatic(FALSE) 1
m_bookmarksToolbarFrame->setFrameShadow(QFrame::Raised); 1
CompilerOutputter::printFailureMessage( 1
should_lock(args.secure_memory()), 1
d->crls 1
selectAll(); 1
actionTrigger.setSingleShot(true); 2
if(process) 2
md5_append(pms, 2
statusList->requestDestroyFavorite( 1
++n1; 1
setWhatsThis(tr()); 1
if(isUrl) 2
score->setSelected(true); 1
PsiTextView::PsiTextView(QWidget 1
ui_.log->appendText(QString( 2
scale.setVec(10.f 1
menu->add(others.at(i)); 1
icon->d->connectInstance(icon); 1
l->addWidget( 4
digest[i] 2
showSelf->setWhatsThis(tr()); 2
if(!validDomain(domain, 2
intersect_rect.stretch(-BUFFER_SIZE 1
d->display 2
m_model->removeRows(0, 1
ptv->selectAll(); 1
G(symbol)->setup(this, 2
m_slider->setVisible(false); 1
QCOMPARE(widget.webView(0)->url(), 2
connect(ui_.pb_open, 2
((int 1
if(!QFile::exists()) 2
for(DiscoList::ConstIterator 1
GO(sym_lt).set(symbol()); 1
mainWin->registerAction( 1
updateSelf(xitem, 1
Q_EXPORT_PLUGIN(SnarlPlugin); 1
TabManager::~TabManager() 1
mAudioPanel->setDefaultBtn(default_btn); 1
g_stdio_console 2
cb_ssl->addItem(tr(),UserAccount::SSL_Yes); 1
d->act_icon->addTo( 1
if(!executable) 2
help_rect.mBottom 1
QVERIFY(chat->anim() 1
arg_from_net 4
TestResult 2
set<string>::const_iterator 1
QPointer<SxeSession> 4
splittedText.push_back( 2
vector 1
srand(seed); 1
GameProtocol::sendQuit(Q3Socket 1
dockActivated(); 1
d->hp_host->fixTabbing(a, 1
service()->retryChat( 3
TemporaryFile(const 1
d->pix->setScaledContents(width, 1
if(out[n 1
TestResult::pushProtector( 1
prof.gps 2
ui->setupUi( 1
neg 2
mainWindow()->tabWidget()->newTab(); 1
negotiation->session->initializeDocument(negotiation->initialDoc); 1
sleep(180); 1
if(h->listeningFor() 2
new 40
d->te->setMinimumHeight(50); 1
if(feature 1
QApplication( 1
PsiToolTip::PsiToolTip() 1
m_theme 2
a.resize(bytes); 2
row_start 1
pChildElement->QueryIntAttribute(,&iResult); 1
vb1->addWidget(d->lb_top); 1
bg_se->insert(d->tb_seHeadline); 1
if(text.left(7) 1
server.pool.setMaxPerApp(maxPerApp); 1
this->statusList->setVisible( 2
if(files.isEmpty() 1
sigaction(SIGPIPE, 1
ui_.le_pcode->setText( 2
d->hp_host->setPort(0); 1
m_history[i].title 1
negate_binary(a.data(), 2
qVariantSetValue<KeyBundle>(arg, 2
QCOMPARE(IconsetFactory::icons().count(), 1
Removes 1
updateComboBoxes(jid, 2
migrateStringEntry(tag, 17
type 37
services_[nil->getAccountName()]->actionAuth(nil->getJid()); 1
variantToElement(v,item_element); 1
d->service 1
ui_.ck_queries->setChecked(item.iq()); 1
vb->addWidget(lb_commands); 1
c2eDendrite 1
actionsService_->moveToGroup(contact, 5
mUsePixelSize 1
ContactList 1
pMemDC->FillSolidRect(bmpRect, 1
emptyWidget->setPalette(p); 1
cb_->setToolTip(tr()); 1
connect(notification1, 1
d->exp->getOldest(d->jid, 1
at_id 1
HICON 1
readBoolEntry(a, 1
setGlobalStatus(Status(Status::Offline, 2
if(!pa_->find(message.from())) 1
AbstractLogDevice::~AbstractLogDevice() 1
CFNotificationCenterRef 2
PathTestNames 3
TestCase 1
d->pb_quote 1
QDialogButtonBox 6
button->setArrowType(Qt::DownArrow); 1
mV[2] 4
((ContactView 1
parentIndex 1
LEGOPTP.player 1
painterpath.setFillRule(Qt::WindingFill); 1
if(caps.contains('e')) 1
d->completionList 3
unz_global_info 1
g_event->askers[n].handler_pos++; 1
connect(d->m, 1
e->account()->cpUpdate( 1
QDBusConnectionInterface::AllowReplacement); 1
strType 1
if(children.item(i) 1
MainWindow 4
fclose(fp); 3
statusText 1
m->addAction(d->act_browser); 1
scene()->setSceneRect(m_pixmap->boundingRect()); 1
foreach(QCA::Provider 1
KeyStoreTracker::instance()->clearDText(); 1
CompilerOutputter::setNoWrap() 1
ev_timer_stop(loop->base, 1
disconnect(this,SIGNAL(defaultListError()),this,SLOT(block_getDefault_error())); 2
v_self 1
consoleMode 3
m_historyBackMenu->addAction(action); 1
connect(d->tb_left, 2
hb1->addWidget(d->le_priority,1); 1
if(d->signers[n].identityResult() 2
trayHide(); 5
VMMethod::execute(state, 1
menuActions_[actionlist[i].name] 1
OptionEditor::supportedType 1
controlPoint_ 4
dexc(SyntaxError, 1
layout->addWidget(poe); 1
if(s.at(n).lower() 1
message.append(spawnServer); 1
jla->go(true); 2
int	res; 2
y_brd 1
iseq->post_marshal(state); 1
message_ 3
ui_.lb_count->show(); 1
mTabContainer->addTabPanel(mPrefsChat->getPanel(), 1
d->pb_close->setText(tr()); 1
hb->addItem(new 2
Q_UNUSED(iconSharedObject); 1
setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff); 2
AdvancedWidget<QWidget>::mouseReleaseEvent(event); 1
PsiIcon::PsiIcon(const 1
++begin; 2
contextId 1
homeLineEdit->setText(settings.value(QLatin1String(), 1
selectionChanged(value.toBool()); 1
iss 2
QStyleOptionFrame 1
ui_.te_desc->setEnabled(x); 2
toolbar->addWidget(btn); 1
qa_ren 1
switch( 1
pb_remove->setEnabled(ok); 1
if(d->lastStatus 1
box->selectByValue(); 1
define_method_with_data( 1
bg_se 2
d->ssl 2
pms->abcd[3] 2
manager_->setStatusMessage(resource, 1
m.setFrom(j); 1
le_pwcur->setEnabled(enabled); 1
pb_next->setEnabled(false); 1
p->setPen(QPen(PsiOptions::instance()->getOption().value<QColor>(), 1
setLooks(); 6
d->will_be_ssl 3
startHideTimer(); 1
query.setAttribute(,PRIVACY_NS); 3
runApp(cmd, 1
XmlDocument::setStyleSheet( 1
lv_accs->setSelected(lv_accs->firstChild(), 1
m.setBody(logdecode(QString::fromUtf8(sText))); 1
act->input.opt_secfile 1
MacDock::overlay(text->text()); 1
tb.name 4
BrowserApplication::cookieJar()->clear(); 2
m_rightLayout->setContentsMargins(0, 1
ParseExpression(strInput, 1
capacityState.open(QIODevice::ReadOnly 2
rec.haveKnown 3
AskerBase(QObject 1
mPrefsChat->cancel(); 1
grid->addWidget(edit, 2
native_int 18
createCorner(Qt::BottomLeftCorner, 1
changeDefault_ 3
DesktopUtil::openUrl(url); 2
m_board->zoomIn(); 1
xform_obj.getPosition() 1
d->isAgent 1
tb[i] 1
MacDock::overlay(nextAmount 1
fin_process_success 4
if(val->nil_p()) 1
SearchButton(QWidget 1
AccountLabel::~AccountLabel() 1
connect(m_findNext, 1
if(Hex_Decoder::is_valid(buf[j])) 1
UserResource::UserResource(const 1
gpg.reset(); 1
setToolTip(d->url); 1
Q_ASSERT(flags 1
XDisplayKeycodes 1
bg_se->insert(d->tb_seChat2); 1
QList<ProviderItem 2
setInstructions(d.instructions()); 1
core->retranslateUi(); 1
am->insertSeparator(); 1
pb_close 1
d->searchPb 1
CFArrayAppendValue(defaultNotifications, 1
TipDlg::TipDlg(PsiCon 1
if(connect_peerCertificateAvailable) 1
m_bookmarksToolbarFrame->setFrameShape(QFrame::HLine); 1
setProfileState(STATUS_OFFLINE); 1
selectBrowserButton->setEnabled( 1
VirtualQuery(address, 1
fields 11
themeSelected(m_themes_selector->currentItem()->text()); 1
QChar 15
ui->deleteAccountButton->setEnabled( 6
d->complement 2
GO(string).set(new_class(object, 1
if(ui_.le_homepage->edited()) 1
if(have.user) 1
if(Hash::csm_add(state, 1
Q_ASSERT(element 2
ui_.toolbar->addAction(d->act_configure); 1
changes.insert(SxeRecordEdit::Parent, 1
if(pb_start->isEnabled()) 1
app.setApplicationName(); 1
ui->deleteAccountButton->setIcon(QtIconLoader::icon())); 1
middle1->setPalette(backgroundPalette); 2
AHCommand::AHCommand(const 3
act->setEnabled(false); 1
ensurePolished(); 1
QTimer::singleShot(10, 1
getrlimit(RLIMIT_NPROC, 1
LEGOPTP.excludeGroupChatsFromIgnore 1
if(d->pipeCommand.writeEnd().isValid()) 2
d->mle->setReadOnly(true); 1
++removed; 1
actSearch->addTo(&p); 1
ui_.lb_notAfter->setText(cert.notValidAfter().toString()); 1
Q3ListView::resizeEvent(e); 3
line->setFrameStyle(QFrame::HLine 1
qSort(list.begin(), 3
hb3->addWidget(d->le_subj); 1
PsiRichText::install(doc); 1
statusGroup->setExclusive(false); 1
NanoAssert(retval); 1
pendingTranformations_.append(QPointer<WbItem>(item)); 2
query.appendChild(list); 1
d->ck_showMenubar->setWhatsThis( 1
mask.fill(Qt::color0); 1
ns->put(state, 1
appType 6
if(!out) 2
g_lastInputTick 3
SafeDeleteLater::SafeDeleteLater() 1
retrieve_pieces_action->setEnabled(false); 1
static_cast<CAContext 1
actFileTrans->setWhatsThis 1
pItem->GetMusicInfoTag()->SetArtist(strFake); 1
TODO_ASSERT_EQUALS(char 5
statusMsg 3
oldTextEdit->setDocument(0); 1
matrix.translate(-points[1], 1
tb.dock 4
!ui_.le_state->text().isEmpty() 2
EventQueue::~EventQueue() 1
langs.set(lang, 1
vb->addWidget(d->te); 1
params.reset(); 1
if(u.queryItems().isEmpty()) 1
openUrl(url); 1
NickAndJid 1
z.set_sign(y.sign()); 2
resources_.insert(resource->getName(), 1
setFormat(index, 1
items_.swap(index,index+1); 1
items 9
QDataStream 23
Window::Window() 2
services_[account->getAccountName()]->actionDisco(jid, 1
ip 2
is 5
ir 3
it 29
spacingLayout->addSpacing(2); 2
in 34
ic 5
id 32
if 5690
LLTool 1
item_element.appendChild(text); 1
DirConfig 4
whoStarts->setCurrentIndex(meFirst); 1
ws_privacy->setCurrentWidget(b 1
saveAccounts(); 2
if(!key.isEmpty()) 1
i2 5
QHash<KeyStore 1
eventReady(GpgOp::Event::NeedCard); 1
CertContext 7
QGraphicsItem::mousePressEvent(event); 1
printFailedTestName( 1
q.trunc(0); 2
vb->addWidget(d->lv); 1
newList.removeAt(newList.indexOf(searchText)); 1
OPEN_EXISTING, 2
ui_.tv_affiliations->clearSelection(); 1
tmr2 2
s.mid(x 1
hb1->addWidget(d->busy); 1
m->addAction(d->act_copy); 1
PSendSysMessage(LANG_COMMAND_OPCODESENT, 1
m_cookies 2
tabBar_->setTabTextColor(i, 1
~Global() 1
apr_table_entry_t 3
HistoryDialog::HistoryDialog(QWidget 1
CapsManager::~CapsManager() 1
ops 3
d->lw_highlightWords->addItems( 1
xform_obj.setScaleChildOffset(TRUE); 1
m_pos.setY(attributes.value().toString().toInt()); 1
connect(data.d, 1
icon.blockSignals(false); 1
renderPause(); 1
OptionsTabIconsetRoster::~OptionsTabIconsetRoster() 1
Q_ASSERT(model->hasChildren(parent)); 1
FileTransView 1
TestPath::checkIndexValid( 1
twitpicUpload 3
actAdd 1
edit.setAttribute(, 21
MethodVisibility::fields, 1
QMapIterator<QString, 2
IncomingEdit 2
&nitems_return, 1
memset(data, 1
TEST_CASE(zeroDiv4); 1
Jid::Jid(const 2
newTextEdit->setTextCursor(cursor); 1
if(sign 1
writeConfig(name, 1
rm->insertItem(tr(),12); 1
corner->relayout(m_contentsRect); 1
tracker 1
twitterapi->setConsumerSecret( 1
RenderOpts::FirstRun 1
lvi->setText(1, 1
paint(&p, 1
if(!any_busy 1
QGraphicsView::showEvent(event); 1
Q3ListViewItem 24
e.xclient.data.l[0] 2
expected_ancestors.push(Module(rb_mEnumerable)); 1
processLegacyForm(jt->form()); 1
ret++;					\ 1
secprops.property_values 1
layout->addWidget(title,0,1); 1
d->connecting 3
pb_create->setEnabled(!le_name->text().isEmpty()); 1
asHex[2] 1
changes.insert(SxeRecordEdit::Chdata, 1
for( 9
childSetEnabled(, 4
if(sx 2
TestPlugInDefaultImpl::removeXmlOutputterHooks() 1
int	i; 1
int	i, 4
XGrabKey(QX11Info::display(), 1
loaders_.remove( 2
p->setClipRegion(clip); 1
play_buttons_[d->tb_seChat2Play] 1
MoodCatalog::Entry 3
clearWState( 1
center.setY(qBound(rect.top(), 1
int	id 1
CBString& 1
newUrl=QString().arg(fromDisplay).arg(newUrl); 1
connect(menu, 1
QApplication::setQuitOnLastWindowClosed(false); 1
unprocessed.clear(); 1
this->state 1
config->autoDetectRack 1
timer->singleShot( 1
btn->setToolTip(toolTipFromMenuText()); 1
delete 681
alert_ 3
if(!cur_last->nil_p()) 1
layout->setSpacing(18); 1
bar.removeTab(0); 1
vl.point(i, 1
m_controls_right 1
act_close_->setShortcuts(ShortcutManager::instance()->shortcuts()); 2
connect(pb_complete,SIGNAL(clicked()),SLOT(close())); 1
if(xprocess->state() 2
fig[6] 1
m_smsIsReady( 1
TestSetUp::run( 1
mp_init(&a) 1
services_.remove(acname); 1
Q_ASSERT(out); 2
Informs 1
searchLayout->addWidget(d->searchText); 1
QGridLayout 10
request.appendChild(feature); 1
jid_.set(server_.bare(), 1
PluginInstance() 1
authMenu->addAction(menuActions_[]); 3
sprintf(cmd, 1
doc.documentElement().insertAfter(children.item(newIndex), 1
~GpgAction() 1
QLineEdit::setFont(f); 1
JingleIQResponder::~JingleIQResponder() 1
TESTCASE(define_method_int_passed_two_args) 1
glGenTextures(1, 1
onig_init(); 1
ui_.avatar->setToolTip(text); 1
rb_->registerAccount(acname, 1
d->tray->setToolTip(ApplicationInfo::name()); 1
childSetAction(,&LLPreviewSound::playSound,this); 1
tab->setUserManagementEnabled(enabled); 1
editors 1
setDragMode(QGraphicsView::RubberBandDrag); 4
DirWatch2 2
PsiRichText::appendText(document(), 1
sEnvSettings->setFocus(TRUE); 1
Q_UNUSED(text); 2
setStatus(Terminating); 1
doneTrigger.start(); 4
def->init(); 1
sdl->deleteItLater(o); 1
transport->setStatus(resource->getStatus()); 1
Q3PtrListIterator<EDBItem> 3
m_twitPic->setAttribute( 1
tlsHandler 3
HistoryList 7
store.setNameFilters(QStringList( 1
~SubHistory() 1
if(d->sending) 6
c.add_handler<Silly_Exception>(handle_silly_exception); 1
LEGOPTP.onevent[eIncomingFT] 1
CColor(int 2
if(slot->reference_p()) 1
connect(act_file_, 1
d->pb_sysDetails->unsetPalette(); 1
template 2
mp_grow(n, 2
toolbar->addAction(m_pause_action); 1
d->setToolTip(QString()); 1
this->args 1
Timer 1
result->setAutoDelete(true); 2
setupStatusLists(); 1
HostPortEdit 1
setPos(center); 1
d->account 2
QTreeView::doItemsLayout(); 1
LLHUDText::~LLHUDText() 1
ui_.cb_lists->setCurrentItem(ui_.cb_lists->findText(name)); 1
PsiOptions::instance()->getOption().toBool() 8
errorStrings 1
Growl_NotifyWithTitleDescriptionNameIconPriorityStickyClickContext( 1
SecCertificateRef 1
iconInfo.hbmMask 2
method->vmmethod(state)->specialize(ti); 1
map[52] 2
Scale, 1
0x80, 34
services_[contact->getAccountName()]->actionOpenWhiteboard(contact->getJid()); 1
connect(removeAllButton, 3
moveData(newEdit, 1
account()->invokeGCMessage(jid().withResource(nick)); 1
inviteMenu->setEnabled(!inviteMenu->isEmpty()); 1
if(!v_showOffline) 1
if(!dirWatch) 1
).arg(reply->url().toString()).arg(errors), 1
SProcess::SProcess(QObject 1
effort 1
d->db 2
chb_gps->setText(tr()); 1
define_method_int_foo_result_x 1
painterpath.quadTo( 1
m_finishedDownloading 2
mClickAction 4
define_method_int_foo_result_i 1
if(trust 1
ui_.te->setColor(Qt::yellow); 1
strings_(strings), 2
d->cb_tabGrouping->setCurrentIndex(4); 2
if(!actionQueue.isEmpty()) 2
le_realm->setText(acc.realm); 1
tr(All 2
painter.drawRect(backgroundRect); 1
issuerList 1
AffiliationListIndex 1
d->onTop 2
tile 3
close(p[0]); 1
if(!d->pipeWriter) 1
d->rb_delChatsDay->setChecked(true); 2
if(name.contains(' 1
ui.loginEdit->setText( 1
v_desc 1
if(d->nickname.isEmpty()) 1
ConsoleReference::ConsoleReference(QObject 1
if(g_pluginman) 1
newtwitpicAction->setShortcut( 1
setUsesDropDown(true); 1
TestPath::TestPath( 4
thread->in 1
state->om->collect_mature(state->globals.roots); 1
CMS::CMS(QObject 2
GeneralGroupchatUI 11
PsiApplication::PsiApplication(int 1
maxStatusCount 1
set(from, 1
gFrameStats.mStopTime 3
p.resize(0); 1
UInt32 1
ui_.shortcutPreview->setText(str); 1
m_session->GetPlayer()->GetClosePoint(px, 1
ui.textBrowser->setText( 1
psi->createAccount(le_name->text(), 1
toolbarSelectionChanged(d->cb_toolbars->currentIndex()); 2
TLS::TLS(Mode 1
if(!ok 2
button->setVisible(m_controlsVisible); 1
Stores 1
QVariant::Type 3
ui_.sw_general->setCurrentWidget(ui_.pg_general_data); 1
BOOST_TEST_DONT_PRINT_LOG_VALUE(flusspferd::array::iterator) 1
buildStatusMenu(); 2
elems.push_back(substring.substr(1)); 2
Core::AuthDialogState 2
d->tb_info->setEnabled(false); 1
warnSend_ 4
Q_UNUSED(serialized); 1
ui_.le_host->setText(mucJid.host()); 1
uint32 28
appendNormalMessage(spooledType, 1
metacontact->setAvatar(QIcon()); 1
saveGeometryTimer_->setInterval(100); 1
d->attachView 1
EventDlg 7
accMigration.append(ua); 1
Already 1
m_restoreLastSession->setEnabled(BrowserApplication::instance()->canRestoreSession()); 1
language 1
qDebug(QString().arg(node.nodeType()).toAscii()); 2
ri->getRosterBuilder()->setSearch(text); 1
pm->setItemEnabled(11, 1
cm->executable 1
writeTrigger.setSingleShot(true); 1
eventLoop.exec(); 1
scroll(QPoint(-2 1
carry 16
p.setItemEnabled(2, 1
appendMessage(m, 1
actBrowse->setEnabled( 1
_active( 1
if(d->known 6
rootItem_ 1
font.setPointSize(common_smallFontSize); 1
actionSendMessage(j); 4
ASSERT_EQUALS(1, 6
CPPUNIT_ASSERT(!buffer.isOpen()); 1
edit->hide(); 1
d->opt_probe 2
layout->addWidget(text,1,1); 1
CPPUNIT_ASSERT(item.iq()); 3
IconToolButton 16
iconUpdated(); 5
checkIsValidIndex( 3
connect(account_, 2
partial.resize(eat); 1
e2 1
if(fixnum_p()) 1
pa->changePW(); 1
tok->str(); 4
m_newTabAction->setIconVisibleInMenu(false); 1
PongServer::PongServer(Task 1
sel->clear(state); 1
ui_.cb_value->setCurrentText(); 1
pixmap.fill(QColor(Qt::black)); 4
mp_neg(&n, 6
it.next()->removeAnim(false); 1
restoreColor(d->pb_cOffline, 1
LEGOPTP.serviceRosterIconset[; 7
textStream 1
enablePlugins->setChecked(defaultSettings->testAttribute(QWebSettings::PluginsEnabled)); 1
foreach(QCA::KeyStore 4
QPalette::ColorGroup 1
model->sibling(0, 1
if(munmap(MLOCK_TYPE_CAST 1
connect(d->ck_messageevents,SIGNAL(toggled(bool)),d->ck_inactiveevents,SLOT(setEnabled(bool))); 1
m.setHttpAuthRequest(req); 1
painter.setPen(QColor(96,96,96)); 1
MessageChannel(serverSocket).writeFileDescriptor(fds[1]); 1
global_state().get_named_mutex(mutex_name)->unlock(); 1
Iconset 47
ks->d->invalidate(); 2
LEGOPTP.autoRosterSizeGrowTop 1
if(node.isNull()) 4
childSetCommitCallback(, 5
tree->setAlternatingRowColors(true); 2
free(entry->header); 1
XData::Field 22
d->xdata_instruction->setText(str); 1
bigint_linmul2(get_reg(), 1
createUrlShortenerMenu(); 1
setWidgetSpacing(3); 1
active->reference(state); 1
mazes_layout->setColumnStretch(3, 1
LLToolPie::getInstance()->mPick 2
p->setPen(QPen(PsiOptions::instance()->getOption().value<QColor>())); 5
if(alloc) 1
i->setContact(&e->u); 1
ChatHandler::FillMessageData(&data, 1
ui_.cb_action->setCurrentIndex(ui_.cb_action->findText(tr())); 2
stopIcon(); 2
tup 1
SvgStreamRenderer::SvgStreamRenderer( 3
PAG_COMMIT 2
m_show_path(true), 1
update(buffer, 1
urls.append(m_webView->url()); 1
middle3->setFixedWidth(4); 2
HRSRC 1
setAccountDM( 1
slotAboutToShowWindowMenu(); 1
LLQuaternion	rotation; 1
ui_.te_translation->appendText(translation); 1
gObjectList.killObject(mAttachedObject); 1
manager_->removeContact(similar); 1
connect(this,SIGNAL(listsReceived(const 1
away_option.label 1
AtomicXmlFile::AtomicXmlFile(QString 2
ProxyDlg::~ProxyDlg() 1
widget->setAttribute(Qt::WA_TranslucentBackground); 1
tagName 2
Ok->width(), 1
TestFactoryRegistry::addTestToSuite( 1
PrivacyListItemTest::PrivacyListItemTest() 1
_next( 1
d->mainwin->setTrayToolTip(Status(Status::Offline, 1
postalcode_ 4
proxyHostName->setText(settings.value(QLatin1String()).toString()); 1
if(_e->type() 1
GrowlTestWidget::GrowlTestWidget(QWidget 1
LLHUDText 7
d->self->setContact(&d->su); 1
QTest::newRow() 54
m_bLeftTrigger 3
if(!node.isElement()) 1
TextOutputter::printFailureDetail( 1
those 1
std::string::const_iterator 6
if(lst->empty_p()) 1
check( 162
ProtocolAction 1
P_DEBUG(); 3
ray_target_id 2
vecRoot.push_back(g_localizeStrings.Get(10504)); 1
ControlButton 1
painter->drawRect(QRectF(frameRect).adjusted(-0.5, 1
req->setToolTip(f.desc()); 5
i--; 3
lb_pwver->setEnabled(enabled); 1
allowButton->setEnabled(enabled); 1
zoom(); 3
appRunScr->showScreen(); 2
html_file 2
processStatusLine(lines[n]); 1
actVCard 1
requestAvatar(); 1
cb_activated(i); 1
QList<QUrl> 4
cookie.domain() 1
d->determineAutoRosterSizeGrowSide(); 1
m.setChatState(state); 1
that->newTab(); 1
QList<ContactListItem 8
d->cb_toolbars->setCurrentIndex(d->cb_toolbars->count() 1
Maybe<int> 1
if(list.contains(KeyStoreEntry::TypePGPPublicKey)) 1
StrArrFree(strings_, 1
slimContacts_ 1
exitCode 4
printSuccess(); 1
samplesToWrite 1
if(!rt) 1
if(mod.is_negative()) 2
assertion_traits<double>::toString(delta) 1
G(send_site)->set_object_type(SendSiteType); 1
DiscoItem 8
m_status_timer->stop(); 3
ShellExecuteA(0, 1
mLCDPanel->apply(); 1
setPort(0); 1
it.toLast(); 3
resetUiWhenFinished 2
QCOMPARE(iconset->creation(), 1
d->lb_field.append(lb); 2
if(QRegExp([^a-z0-9\\.\\ 1
ui_.le_homepage->setEdited(x); 1
TestComposite::doStartSuite( 1
toolBar->addAction(discoProtocol); 1
Resets 2
ai_copy(&ai, 1
btn->setSizePolicy(d->size); 1
negotiationTimer_.setSingleShot(true); 1
computerStarts(!meFirst); 1
Private(IconAction 1
g_SkinInfo.ResolveIncludes(pRootElement); 2
SET(ns, 1
ui.setupUi( 4
TestSuccessListener::reset() 1
Q_ASSERT(KeyStoreTracker::instance()); 1
TranslationManager 2
FancyPopup::Private::~Private() 2
GlobalFixture::~GlobalFixture() 1
map[5] 2
d->out.append(a); 2
seconds 2
Ar::Ar(const 1
JT_Gateway 3
m_windowMenu->addAction(m_tabWidget->previousTabAction()); 1
pipeCommand.readEnd().reset(); 4
keyList 1
OggPlugin::~OggPlugin() 1
p.settings.fromXml(pset); 1
free(values[i]); 1
group->setExpanded(expanded); 1
itemFilter_ 3
ready_txt 1
IconLabel::IconLabel(QWidget 1
VCard::Org 2
topParent->resize( 1
lv_accs->setResizeMode(Q3ListView::LastColumn); 1
SLOT(proxyAuthenticationRequired(const 1
m_tabWidget->reloadAllTabs(); 1
model->insertRow( 2
if(m_animated) 2
d->iconSelect 1
SAFELY(Pa_AbortStream(m_pStream)); 1
QList<KeyStoreEntryContext 4
params.extractHave(need); 2
removeGroup(group); 1
TEST_CASE(zeroDiv2); 1
TestNamer::~TestNamer() 1
data[4] 1
GO(exc_primitive_failure).set(dexc(PrimitiveFailure, 1
++extra.rheight(); 1
view->setMinimumWidth(640); 1
touch(); 3
GO(sym_gt).set(symbol()); 1
if(!active->nil_p()) 1
grow_to(x_sw 1
selectionModel()->select(idx, 1
m_status_steps_message->setVisible(settings.value(, 1
LEGOPTP.keepSizes 1
if(i->jid().compare(j)) 1
psiIpcCommand 2
d->ft->sendFile(d->peer, 1
m_zoom_fit_action 1
rname 3
SecureMessageKey::Type 4
painter.drawLine(m_bumpmap_size 2
appendSysMsg(QString()); 2
iconLabel->setPsiIcon(icon); 1
d->cur_custom_status.insert(regexp, 1
text.append(PsiIcon::IconText(lang, 1
readNumEntry(stick, 1
setWindowTitle(tr() 1
#error 1
sendSxe(sxe.cloneNode().toElement(), 1
msg->addString(, 1
recv(Qnil), 2
d->init(); 7
setDocumentMode(true); 1
index.data(JidRole).toString(), 1
LLPickInfo 1
imagePainter.drawImage(qMax(x, 1
if(GetLastError() 2
ensureContactItem(e, 5
if(!d->pcountdown) 1
remote 1
connect(d->attachView, 2
target.append(SEPARATOR); 1
KeyStoreThread 1
m_posX 4
appendMessage(m); 1
BriefTestProgressListener::endTest( 1
foreach(QFileInfo 1
QList<item_dialog 1
alerting 1
label->setPixmap(icon 1
popup.insertSeparator(); 1
cursor.setPosition(initialpos); 1
sTextObjects.erase(LLPointer<LLHUDText>(this)); 1
if(!par) 1
d->fileExtensions 1
d->packet_from_net.append(a); 1
events.push_back(ev); 1
Q_ASSERT(queue->isEmpty()); 1
connect(manager_,SIGNAL(changeDefaultList_success()),SLOT(change_succeeded())); 1
libraryName; 1
eventList.clear(); 1
OptionsTabToolbars::~OptionsTabToolbars() 1
for(UserResourceList::ConstIterator 5
global->rng_mutex.unlock(); 1
p.setColor(QPalette::Active, 1
(void 3
CheckOther 7
m_toggle_overview_action->setEnabled(false); 2
keepCookies 3
LineEdit::paintEvent(event); 3
qFadeEffect(label); 1
if(mp_cmp_d(a, 3
d->le_oeOffline->setText(PsiOptions::instance()->getOption().toString()); 1
buff[n]=0; 1
m_details.insert( 1
prvt.appendChild(options); 1
QMessageBox 11
delete[] 3
frames.last().impix 1
checkvcl( 2
d->mle->setReadOnly(false); 1
useHost 1
WbNewImage::WbNewImage(QGraphicsScene 1
d->close(); 1
bg_color->insert(d->pb_cProfileFore); 1
MUCItem::Role 1
d->pix->setPsiIcon(name); 1
QCOMPARE(iconset->count(), 2
setPriority(el.attribute().toInt()); 1
restoreColor(d->pb_cOnline, 1
migrateSizeEntry(p_sizes, 3
last_r 2
d->index.resize(oldsize+1); 2
if(fi.exists()) 3
d->pa->showXmlConsole(); 1
obj->d->handles.clear(); 4
rectParent.appendChild(wElement); 1
PKCS12Context 2
vals 1
Figure::str2map(txt.right(2), 1
static_cast<QPipeWriterPoll 1
y1, 1
removeItem(resource); 2
ts.time().hour(), 1
accountFeaturesChanged(); 1
margin 1
QPropertyAnimation 1
fileNameLabel->setText(QFileInfo(m_output.fileName()).fileName()); 1
client->start(client); 1
updateStatusbarActionText(true); 2
m_eventManager->removeListener( 1
d->servers 1
m_searchButton->m_menu->deleteLater(); 1
TEST_CASE(ifelse8); 1
x.join 5
setVisible(visible); 1
nextControl 1
i->result 1
innerBounds(r); 1
delta_from_center 2
TabData(OptionsTab 1
d->cv->setShowOffline(true); 1
Invalid_Block_Size::Invalid_Block_Size(const 1
checkAccountsEmpty(); 1
loadPlugin( 2
ui_.hsplitter->setSizes(QList<int>() 1
del 8
QWebSettings::globalSettings()->setFontSize(QWebSettings::DefaultFontSize, 1
dec 6
def 3
DiscoListItem 12
mMsgPanel->apply(); 1
(dist_vec_squared(gAgent.getPositionAgent(), 1
foo->x 1
button->setIcon(QPixmap()); 1
(unsigned 1
fwi.dwTimeout 1
ui_.lb_valid->setText(tr()).arg(CertUtil::resultToString(result, 1
p.setPollInterval(2); 1
LEGOPTP.useRC 1
m_status_steps_message->clear(); 1
vector<string> 1
XmlOutputter::XmlOutputter( 1
ASSERT_EQUAL(rb_eRuntimeError, 1
m_max_zoom(5), 1
fig[0] 1
Q3ListViewItem::setText(column, 1
std::sort(sVisibleTextObjects.begin(), 1
m_bookmarkRootNode->add(toolbar); 1
connect(game, 6
DiscoItem::Identity 10
if(!fileName.endsWith(, 1
painter->drawPixmap(rect, 1
qlonglong 18
ap_rputs(e.getErrorPage().c_str(), 1
control->OnMessage(msg); 1
TrayIconWindowMaker::TrayIconWindowMaker(TrayIcon 1
refreshGeneral(); 2
qRegisterMetaType<QVariant>(); 1
defaultSettings->setFontSize(QWebSettings::DefaultFixedFontSize, 1
lat_ 2
detach(); 16
d->groupBox9->setEnabled(true); 1
QDir 55
Qt::ItemFlags 11
if(subflags 5
TabWidget::CurrentTab, 1
authentication 1
HistoryTreeModel 2
CDirectoryNode::~CDirectoryNode() 1
old=children.item(i); 1
m_pReader->CheckForUpdates(); 1
col.addCertificate(cert); 2
QPushButton::setIcon(pix); 1
migrateEntry<bool>(element, 1
ui.searchInfo->setText(QString()); 1
o.QStyleOption::operator=(option); 1
--folders; 1
UserListItem::UserListItem(bool 1
d->local.port 1
actReadme->setWhatsThis 1
m_historyForward 1
if(in_id 1
layout->addWidget(m_tabWidget); 1
TEST_CASE(forwhile8); 1
LEGOPTP.sp.clear(); 1
connect(task,SIGNAL(finished()),SLOT(getSelfSubscriptionsTaskFinished())); 1
connect(t, 1
Drawer::paintEvent(QPaintEvent 1
MainWin::~MainWin() 1
cookiesTable->setSelectionBehavior(QAbstractItemView::SelectRows); 1
ele.appendChild(nodeEle); 1
sp.setPriority(d->le_sp_priority->text().toInt()); 1
ReplaceBuffers(strOutput); 1
LLToolPlacerPanel::LLToolPlacerPanel(const 1
XmlPrompt::XmlPrompt(QWidget 1
for(AttachViewItem 1
params.SetQueryParam(m_Type, 1
d->pb_deny->show(); 2
PREF_SIZE(choose_pref_size(p_size)) 1
R4(d,e,a,b,c,72); 1
XmlDocument::~XmlDocument() 1
m_flickr->dropSearch(); 1
con_ssfMode 1
QProcess 1
aDeny(j); 1
pi.type 1
connect(buttons, 4
if(string[j].isNumber()) 1
di.dirWatch 1
bringToFront(prompt); 1
gMenuHolder->childSetEnabled(, 2
tree2.saveOptions(http: 1
q[j-t-1] 2
pipeList 1
obj->setParent(orig_parent); 1
d->exp 3
view_->registerAccount(acname, 1
b 30
painter.end(); 5
this->timer 1
ResType 1
result_to_net.clear(); 1
reparent(parentWidget(), 1
vb1->addWidget(d->w_http_id); 1
d->hide 4
textRect.adjust(spacing, 1
AccountsComboBox 4
currentTab()->zoomIn(); 1
if(!bytes) 1
jcv->go(true); 2
QCheckBox 5
manager_->addSelf(self, 1
scan_mutex.lock(); 2
setMinimumHeight(48); 1
ui_.le_port->setText(QString::number(port_)); 1
game_menu->addAction(quit_icon, 1
p.resetTransform(); 1
mapper->addChild(webView->page()->action(mapper->webAction())); 1
:Algorithm(from) 5
toolbar_->addAction(act_save_); 1
menu.show(); 1
updateS5BServerAddresses(); 2
setText(3, 1
AHCFormDlg 2
kg 1
Botan::BigInt::Sign 1
kk 3
km 2
ks 3
SHA1_CONTEXT() 1
d->interface->connection 1
mode_t 1
CFStringGetCStringPtr( 1
QDialog 6
delete_object(entry->header->to_object()); 1
vb->addWidget(Line1); 1
gMessageSystem->addUUIDFast(_PREHASH_SessionID, 2
if(d->jid.compare(d->pa->jid(), 2
connect(m_previousTabAction, 1
gMessageSystem->addU8Fast(_PREHASH_State, 1
d->pb_form_cancel->setEnabled(false); 2
connect(m_rightWidget, 1
CFBDDoc 1
CPPUNIT_TEST(testFromXml_PresenceInChild); 1
QList<PsiIcon 1
if(object->mDrawable->isActive()) 1
dmAccount 1
TabWidget 2
childDisable(); 5
if(ui_.le_pcode->isModified()) 1
indicators()->setNetworkTime( 1
m_lineEdits->setCurrentIndex(index); 1
float3 7
controls_layout->setColumnStretch(3, 1
d->agent 2
connect(readTimer, 1
ueventSocket 1
TEST_CASE(dealloc_use); 1
bstring 12
LEGOPTP.autoResolveNicksOnAdd 1
if(obj->d->type 3
tbDef.dirty 1
forceNotify 2
aspell_speller_add_to_personal(speller_, 1
pm.setItemEnabled(16, 1
session_->session_->ResampleComplete(NULL, 1
sprintf(temp,,iBuf+1); 2
m_gWindowManager.ShowOverlay(m_overlayState); 1
importRootNode->setType(BookmarkNode::Folder); 1
loadLibrary( 1
m_exceptionsModel->reset(); 3
manager_->setConfiguration(data); 1
delete(xprocess); 2
QMultiHash<int,KeyStore 1
UnZip::UnZip(const 1
mStarted 2
ui_.lv_users->updateEntry(s.mucItem().nick(), 1
calls_[jid.full()] 1
QCOMPARE(copy2->numFrames(), 3
gpg.doImport(a); 1
actionsService_->unsetAvatar(account); 1
Q_ASSERT(!d->tray); 1
m_scale_level 2
pNode->RemoveParent(); 1
R3(d,e,a,b,c,52); 1
d->cv->setShowAgents(true); 1
col++; 2
tabManager_->newTabs(this)->addTab(this); 2
capsSpecs_.remove(jid.full()); 2
cursor.setPosition(selection.start, 1
act_next_ 1
d->pb_form_submit 1
strcpy(snarlStruct.title, 6
chatEdit()->setEnabled(false); 1
foreach(QActionGroup 1
delete_object(obj); 2
Q3PtrListIterator<OptionsTab> 9
if(sFlags[1] 1
m_animated 1
LLComboBox 1
QFrame 5
processUnknownMessage(args); 1
act_color_->setIcon(QIcon(pixmap)); 1
Q_INTERFACES(QTextObjectInterface) 1
QList<const 7
refreshCommands(); 1
y 19
if((!d->cv->isShowOffline() 2
n->sign 3
need.realm 2
switch(type) 5
assert(neuroncoords.find(neuron) 1
setSizePolicy(QSizePolicy::Expanding,QSizePolicy::Expanding); 1
WRITE(long 2
alignment 1
m_board->takeTopLevelItem(10); 1
std::ios::openmode 2
doRead(); 1
message->setFrameStyle( 1
if(d->cvi 1
win2map(x, 1
xElement.appendChild(doc.createTextNode(QString::number(rect.left()))); 1
ui_.splitter->setSizes(list); 1
\class 4
setTabToolTip(w, 1
f.append( 1
if((cmp0 1
p_password 1
points.reserve(32); 1
manager_->removeMetacontact(metacontact); 1
ui_.lb_sn->setText(cert.serialNumber().toString()); 1
m_xRotationAngle 3
GameProtocol::sendMove(Q3Socket 1
xform_obj.setRotation(1, 1
d->anim->stripFirstFrame(); 1
nStr0 1
setMaximumWidth(m_widget->maximumWidth()); 1
moveListCastle(vl, 2
lb_type->setText( 1
OptStatusUI() 1
d->need_status 2
pem 3
list->addSimpleElement(pos); 1
m_mazes_algorithm->setCurrentIndex(m_mazes_algorithm->findData(algorithm)); 1
if(NIL_P(obj)) 2
QWhatsThis::add(d->pb_fChat, 1
_props.expirationDate 1
connect(d->pipeWriter, 1
SendSysMessage(LANG_SELECT_CHAR_OR_CREATURE); 6
d->ck_notifyAuth->setChecked( 1
contactView()->filterContact(i); 1
btn->setMenu(0); 1
d->loop->exec(); 1
lb_keyicon->setEnabled(true); 1
ui_.lb_count->hide(); 1
QVector<qreal> 2
newGame(); 2
setError(id, 1
d->attachView->setReadOnly(true); 1
m_image 2
ttable->kchrID 1
G(methtbl)->instance_type 1
CheckStl 1
actStop->setEnabled(true); 1
mTabContainer->addTabPanel(mSkinsPanel, 1
while(p1 1
QMessageBox::critical(0, 7
foreach(WbItem 2
m_corners[3][3] 1
LLToolPie::LLToolPie() 1
printFailureListMark( 1
QBoxLayout 5
if(node.isElement()) 4
NotInList::~NotInList() 1
d->q_ptr 4
items_[index+1].setOrder(order); 1
primaryWeight 8
item.setValue(ui_.cb_value->currentText()); 1
location->setModel(m_proxyModel); 1
BOOL 50
AccountModifyDlg 2
PCCERT_CONTEXT 1
seterror(); 4
scanned_static 2
connect(d->pa->client(), 4
QTimer::singleShot(3000, 1
moveListQueen(vl, 1
MyPGPKeyContext(Provider 1
if(!ok()) 2
act_modes_ 1
QCOMPARE(copy1->numFrames(), 3
connect(ui_.pb_ok,SIGNAL(clicked()),SLOT(accept())); 1
QLabel::paintEvent(event); 3
exit(0); 2
qLog(PowerManagement)<<<<value; 1
d->services 1
setContactChatState(XMPP::StateNone); 1
lastRoot 1
cppTest 1
nodeEle.setAttribute(,comments_[node]); 1
ui_.hsplitter->setSizes(list); 1
acc.opt_compress 1
QPipeEnd 2
m_scores 1
SNARL_GLOBAL_MESSAGE 1
WbItemMenu 2
d->statusButton->setAlert(IconsetFactory::iconPtr()); 1
set_sign(b.sign()); 1
game->setCaption(QString().arg(jid)); 2
pa->dialogUnregister(this); 3
m_theme->load(settings.value().toString()); 1
font.setPointSize(size); 1
m.setError(XMPP::HttpAuthRequest::denyError); 1
roster.insert( 1
connect(pb_close,SIGNAL(clicked()),SLOT(accept())); 1
if(list.count() 3
actionGCJoin(i->gc, 2
tokenAsker.ask(KeyStoreInfo(KeyStore::PGPKeyring, 2
QWhatsThis::add(d->rb_aAnimate, 1
plugIn.m_interface->uninitialize( 1
m_font 1
CommonDynamicSuiteDescription::CommonDynamicSuiteDescription() 1
cookiesTable->horizontalHeader()->resizeSection(i, 1
updateLastMsgTime(m.timeStamp()); 1
if(parts.count() 4
doSend(); 1
Certificate::Certificate(const 3
removeItem(account); 1
LLToolPlacer::setObjectType( 1
copy_unscanned(); 1
anim.d 1
vl.resize(0); 4
d->cp->dragDrop(text, 1
m_name 4
prof.rotate 2
i.isReadOnly 2
if(cmp0 2
JT_XSearch 1
CFIndex 2
if(cmp1 1
if(cur 1
statusmsg_field.setType(XData::Field::Field_TextMulti); 1
layout_ 4
CPPUNIT_ASSERT(!item.iq()); 3
CFPropertyListRef 2
++pending_; 1
connect(m_bookmarksToolbar->toggleViewAction(), 1
mTextSegments.clear(); 2
qFatal(); 2
box->move(drw->x(), 1
frames.append( 1
m_amp.DeAmplify((short 1
private 55
names 2
MainWindow::MainWindow() 1
Status 13
QCOMPARE(widget.webView(1)->url(), 2
that->resourceprep_table.insert(in, 2
d->pb_http_confirm->hide(); 5
name_ 15
SET(a, 16
if(u.isTransport()) 4
d->te->setAcceptRichText(false); 1
name2 2
name1 2
gd.tup 1
++i.updateCount; 1
CUtil::AddFileToFolder(g_advancedSettings.m_cachePath,,strCachePath); 1
if(desktopOfWindow(&win, 1
sasl_interact_t 1
abcd 1
list.setAttribute(,name); 1
region_ 4
option.ppBorderColor 1
writeText 4
AccountRemoveDlg(ProxyManager 1
filepath 1
ui.searchLineEdit->selectAll(); 1
ASpellChecker::~ASpellChecker() 1
if(cert_match_ipaddress(s, 3
if(ai->sec) 4
WebViewSearch 1
if(caps.contains('s')) 1
mWidth 1
VisibleTextObjectIterator 5
PSendSysMessage(LANG_GET_FLOAT_FIELD, 1
static_cast<CookieJar::AcceptPolicy>(acceptPolicyEnum.keyToValue(value)); 1
kCFStringEncodingUnicode, 2
connect(ui_.lv_keys, 1
elsize 1
if(y_arg.is_zero()) 1
pgpSecretKey 2
ai_new(&other, 1
realRemove.push(false); 1
version->setText(QApplication::applicationVersion()); 1
d->tray->setIcon(PsiIconset::instance()->statusPtr(d->lastStatus)); 1
glTranslatef((width() 1
rt 2
if(!pending) 1
VarList::Iterator 8
call->emitNotification( 1
lo 1
set_syserr(EADDRINUSE, 1
lk 2
lw 2
dialog->setWindowFlags(Qt::Sheet); 1
ls 1
view_->setManager(manager_); 2
GlobalFixture::GlobalFixture() 1
bg_sePlay->insert(d->tb_seHeadlinePlay); 1
updateButtons(); 4
m_details.push_back( 2
TrayIconWindowMaker::~TrayIconWindowMaker() 1
endRemoveRows(); 10
m_mainWindows.removeAt(i); 1
JSFunction 1
IconActionGroup::~IconActionGroup() 1
m_uiSamplesPerSec 1
d->cb_preset->setCurrentItem(d->cb_preset->count()-1); 1
connect(pb, 5
l2 2
l1 3
sendTabTo(tab, 1
set_syserr(EL3RST, 1
dtProxy 2
if(status 5
tb_browse->setEnabled(false); 1
chatEdit()->clear(); 2
m_mirrorItem 2
AspellCanHaveError 1
SecureMessageSignature::SecureMessageSignature(const 2
d->geometryOptionPath_ 1
rex 1
b->addWidget( 2
HistoryItem 20
res 45
req 3
ca_list 2
ret 462
rec 1
ref 1
reg 1
red 4
advancedWidgetShared 1
if(updateAll) 1
physloc.setAttribute(http: 2
ev_signal_stop(loop->base, 1
serverSupport_ 1
ui_.le_role->setModified(x); 1
setTest( 3
le_pass->setEnabled(false); 1
gGL.begin(LLRender::LINE_STRIP); 1
event->accept(); 17
Link::Link() 1
d->policies 1
if(scene_ 1
xform_obj.clearChanged(LLXform::SCALED); 1
d->lv 2
RTParse 1
updatePrivacyTab(); 2
mousePressEvent( 1
c->_name 4
setInstructions(d->jid.full(), 2
QListIterator<PsiIcon 15
connect(pb_erase, 1
InfoDlg 1
SourceLine::SourceLine( 2
updateInfoLabel(); 2
client_->sendMessage(m); 1
statusMapper->setMapping(action, 1
closeConfirmation.setWindowFlags(Qt::Sheet); 1
reset(ResetSession); 19
TwitterAPI::Role 1
StatusPreset::StatusPreset(QString 2
updateContact(jid(), 3
item->setIcon(placeHolderIcon); 1
grow_to(y_sw 1
d->status 4
WRITE(short, 1
ShortcutManager 2
gototwitterAction->setShortcut( 1
model_.edit(ui_.lv_rules->currentIndex()); 1
connect(qa_send, 1
m_node->url 2
opttab2->tabAdded( 1
optionsPath 2
remove(it); 1
connect(d->tray, 3
JAVASCRIPT_FUNCTION_RVAL( 1
qApp->setQuitOnLastWindowClosed( 1
curWrite.clear(); 2
mp_sub_d(n, 3
if(chosen 1
PieceHelper 3
FLOAT 2
ui_.cb_default->setCurrentItem(previousDefault_); 1
MethodVisibility 3
query.appendChild( 2
connect(m_tabBar, 10
gPipeline.markTextured(object->mDrawable); 1
QList<XData::ReportField>::ConstIterator 2
SASLContext 1
d->list 2
LLBufferStream::~LLBufferStream() 1
Q_INTERFACES(QCAPlugin) 2
sec_curWrite.resize(qMin(PIPEEND_BLOCK, 1
m_focusedControl 4
QCA_logTextMessage(QString().arg(id), 2
p->setBrush(cb); 1
TextIconFormatQueue 1
LoadControl(pSubControl, 1
object->mText->setOnHUDAttachment(TRUE); 1
connect(&timer, 2
accounts->addAccount(); 1
pm_settings_->addAction(act_end_); 1
setDropIndicatorShown(true); 1
query.appendChild(e); 1
d->le_oeChat1->setText(); 1
checkOther.invalidFunctionUsage(); 1
if(!i->u()->inList()) 1
xml.writeEndDocument(); 1
while(i.hasNext()) 1
area_ 4
TEST_CASE(sizeof1); 1
if(!d->cv->isShowAgents() 3
buttons.on 1
composingTimer_ 4
send(iq); 11
width_element.appendChild(e.ownerDocument().createTextNode(QString::number(size.width()))); 1
m_output.remove(); 1
TEST_CASE(realloc3); 1
top1->setAutoFillBackground(true); 2
action.mTarget 1
actionsService_->assignAvatar(contact, 1
:	LLTool(std::string()), 1
saveConfig( 1
0x41, 1
ui_.room->setText(jid.node()); 1
v_name 1
readBoolAttribute(ca, 1
if(in[i] 4
connect(m_leftWidget, 1
o->setOption(groupBase 2
rtype 14
m_frameTextItem->setZValue(1.0); 1
textRect.adjust(-left, 1
attributes 6
if(c.isValid()) 1
comment 5
gFloaterTools->setStatusText(); 1
QTwitterApp::core()->incrementRequestCount( 4
act_history_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
if(value->fixnum_p()) 1
ui_.le_server->clear(); 1
PsiFileController::PsiFileController() 1
d->le_oeFTComplete->setText(); 1
QWhatsThis::add(le_font[0], 1
for(PsiAccount 1
m.instance_eval(); 2
d->from_net.append(a); 2
CPPUNIT_ASSERT(buffer.isOpen()); 6
painter.drawText(height 1
if(negotiation->target.compare(session->target(), 1
d->qdns->deleteLater(); 2
sInstance->mPreferenceCore->setPersonalInfo(visibility, 1
xform_obj.setPositionY(y); 1
StatusList::setMaxCount( 1
smallChat_ 3
if(x_size 5
tag.setAttribute(, 1
value 23
closePipes(); 10
getChildTestAt( 1
Q_ASSERT(!parent.isValid()); 2
XMPP::Message 2
DynamicLibraryManager::doFindSymbol( 4
MainWin 2
TestDecorator::run( 2
CPPUNIT_ASSERT(item.presenceIn()); 3
top4->setAutoFillBackground(true); 2
d->h->get(d->jid, 3
packet_in.clear(); 1
d->diagnosticText 1
handle_give_money_dialog(); 1
OpServerFirstStep, 1
connect(m_move_animation, 1
_props.isTrusted 2
d->pa->setNick(d->pa->jid().user()); 1
fromString(QString(c)); 1
gm->insertItem(str, 1
opcodes[++i] 2
CPPUNIT_NS_END 51
xmlReader->setContentHandler( 1
saveAll 1
OnigErrorInfo 1
ui_.cb_active->clear(); 1
d->le_oeOffline->setText(); 1
settings.endGroup(); 43
task->get(Jid(jid.full())); 1
test3 1
test5 1
test4 1
test7 1
std::set<LLPointer<LLHUDText> 1
test9 1
test8 1
ui_.cb_ident->setAccount(pa); 1
c2eCreature 2
force.setVec(dst_center_x 1
if(key_type 1
ss->selector->associate(state, 1
add_sym(private); 1
LEGOPTP.useTransportIconsForContacts 1
d->frames.takeFirst(); 1
if(data 1
Drawer::makeMove(GameBoard::GameType 1
if(need) 2
SystemTimeToFileTime(&now, 1
actStop->addTo 1
_TS_CATCH_ABORT( 3
CBStream::~CBStream 1
m_session->GetPlayer()->SendCinematicStart(dwId); 1
MemoryRegion::resize(0); 1
m_message.details(); 1
ui_.le_state->setModified(x); 1
d->w1 1
d->w3 1
d->w2 1
account()->capsManager()->updateCaps(caps_jid,s.capsNode(),s.capsVersion(),s.capsExt()); 1
m_previousTabAction 1
v_rt->setWidth(lv->columnWidth(0) 1
top_margin 1
tm_ 2
QFrame::hideEvent(e); 2
LEGOPTP.ppMessage 1
item->setText(1, 3
tmr 2
if(active_file_check(savename)) 1
MUCItemsTask(const 1
recentlyRelocatedNodes_.append(node); 1
psi->removeAccount(i->pa); 1
qWarning(QString().arg(jid.full()).arg(node).toAscii()); 1
QList<KeyStoreOperation 1
keyItem->setText(1, 2
myPath.lineTo(qMin(width() 1
G(bignum)->instance_type 1
d->jt->setForm(submitForm); 1
TextOutputter 1
:QLabel(parent, 1
m_borders_visible(QSettings().value(, 1
connect(pb_key, 1
foreach(TuneController 1
services_[account->getAccountName()]->actionDisco(account->getJid(), 1
winamp 1
bigHistory 1
if(power_of_2(mod)) 3
setZValue(i); 1
m_mazes_size->setValue(settings.value(, 1
renderer 1
foreach(ConferenceBookmark 4
TEST_CASE(file_functions); 1
connect(sn_read, 1
if(addy.indexOf() 1
d->prev_self 1
if(ft) 2
ui_.cb_ident->setEnabled(enabled); 1
changes_[ReplaceN] 1
memcpy(data 1
buf 4
doc.appendChild(base); 2
busySources.remove(c); 1
wmState 1
QCOMPARE(messageHeadline->isAnimated(), 1
layout->addWidget(m_cookies); 2
if(!carry) 2
signMode 1
TabbableWidget::setJid(j); 1
KeyDerivationFunction 1
ui_.lb_ident->setVisible(visible); 1
insn_start: 2
CompilerOutputter::wrapColumn() 1
in_left 2
if(d->findDlg) 1
virtual 229
rm->insertItem(tr(),13); 1
g_SkinInfo.ResolveConstant(pChild->Attribute(), 2
delayOn.open(QIODevice::WriteOnly 1
if(_serial 1
TEST_CASE(ret8); 1
button->setMaximumSize(10, 1
manager_->removeSelf(self); 1
v_showAgents 2
set_syserr(ELIBSCN, 1
doc.appendChild( 1
LLToolMgr::getInstance()->clearTransientTool(); 2
if((from 1
lastChild 1
TestResultCollector::tests() 1
MiniClient::MiniClient(QObject 1
SET_CONTROL_FOCUS(focusControl, 1
QPipeDevice::QPipeDevice(QObject 1
takeArray(&sec_buf, 1
trayMenu->addAction(settingsaction); 1
FileWatch::FileWatch(const 1
OptionsDlg::OptionsDlg(PsiCon 1
if(cf->magic 1
d->t->deleteLater(); 1
resource->setStatusMessage(statusMessage); 1
(F32)gViewerWindow->getWindowDisplayHeight() 2
QT_BEGIN_NAMESPACE 1
bigint_shl2(z.get_reg(), 2
le_jid_->setToolTip(session->target().full()); 1
d->ext_ssf 1
if(ent) 1
if(!sel->nil_p()) 1
set_syserr(ELIBBAD, 1
statusInvisible->setWhatsThis 1
std::string 117
w->layout()->addWidget(btn); 1
LEGOPTP.popupChats 1
dlg->deleteLater(); 2
ProxyItemList 3
if(keys.contains(SxeRecordEdit::ReplaceFrom) 1
doc.setContent(QString(EMPTYWB), 1
OpUpdate 2
t->set(urls,conferences); 1
setExpandsOnDoubleClick(false); 1
d->mainwin->showNoFocus(); 1
dropPath.arcMoveTo(circle, 1
if(!d->opt_host.isEmpty()) 2
Q_UNUSED(password); 1
m_yRotationAngle 3
PsiOptions::instance()->mapLookup( 1
nonDestructiveBasicTest 1
viewMenu->addAction(m_viewStatusbar); 1
CPPUNIT_TEST(testFromXml_Order); 1
src_force.mV[VX] 1
QCOMPARE(history.history(), 6
refreshAffiliations(); 4
_serialized 1
QMainWindow( 1
toolBar->addAction(actJoin); 1
Private(GpgOp 1
KeyStoreListContext(p), 1
path 9
apr_table_addn(table, 1
sendComposingEvents_ 4
drawBoard(p, 1
Typing_Normal 1
static_cast<CipherContext 1
writeTrigger.start(0); 2
spellhighlighter_ 2
saveIntoItem(d->last); 1
item.setPresenceIn(presence_in); 1
d->restart(); 1
change(d->c); 2
m_displayMode 1
setSelected(i, 1
i.storeId 1
accounts_.removeAll(account); 1
useXData 1
migrateRectEntry(base, 1
top3->setPalette(backgroundPalette); 2
header()->setStretchEnabled(true, 1
i2.setFeatures(XMPP::Features(f)); 1
d->thread->setSecurityEnabled(true); 1
packet_to_net 3
m_ 1
ContactProfile 2
newGeometry_ 1
data->data 3
mc 1
request.setUrl( 11
KeyStore::~KeyStore() 1
if(sig_written) 2
QTabWidget::mouseDoubleClickEvent(event); 1
conf 4
colors.push_back(m_headlineColor); 1
ks->d->handle_updated(); 1
memcpy(new_p, 1
disconnect(static_cast<ContactView 1
names[n++] 2
enc 4
end 2
if(isPM) 1
if(d->consoleMode 1
rec.type 3
pubrecord 1
ent 6
Private(GPGProc 2
env 1
:_secure(from._secure), 1
charging 4
sm->setMapping(actRegister, 1
d->httpAuthRequest 1
connect(menu_, 2
add_sym(protected); 1
DiscoConnector 1
s32bit 9
switch(code) 1
deepsleep 1
QStylePainter 1
parser.file(); 1
d->tb_icon->setPopupDelay(1); 1
GoogleFileTransfer 1
:Algorithm(withAlgorithms(type, 1
a->deleteLater(); 1
setCurrentIndex(tabno); 1
mGrabMouseButtonDown 2
hasManualAvatar_ 1
QGraphicsScene 1
PsiAccountListIt 1
QString	s('\n' 1
).arg(reader.lineNumber()).arg(reader.columnNumber()).arg(reader.errorString())); 2
m_coordsRes 2
QPipeWriter 1
connect(psiCon_, 1
if(written) 1
cricket::Thread 2
childCountChanged(); 3
lb_home->hide(); 1
bottom2->setFixedHeight(4); 2
REGISTER_TEST(TestOther) 1
queue->enqueue(new 1
hb1->addWidget(l); 3
EventHotKeyID 2
tokenAsker 2
CompilerOutputter::printStatistics() 1
w->setWindowTitle(tr()); 2
metaAlertIcon 3
menu->addAction(tr(),this,SLOT(quitClicked())); 1
e.setAttribute(, 1
ui_.tabwidget->removeTab(index); 2
signing 5
grow_to(words 1
this->IsMeta 1
curWrite.resize(qMin(PIPEEND_BLOCK, 1
foreach(PsiAccount 19
hash->set(state, 1
CPanel(int 1
label->movie()->stop(); 1
iq_.appendChild(muc); 5
TestSuite::run( 1
QDomNode::NodeType 2
collect_young_now 1
SetCurrentVolume(GetMinimumVolume()); 1
set_syserr(EISNAM, 1
connect(pa->psi()->iconSelectPopup(), 1
m_exceptionsModel->m_allowedCookies.append(domainLineEdit->text()); 1
sButtonsAdded++; 1
TranslationManager::~TranslationManager() 1
bg_color->insert(d->pb_cGroupFore); 1
assert(neuroncoords.find(dend->source) 1
logDebug(); 15
if(!value->nil_p()) 1
ai_delete(&ai); 2
setCursorPosition(text().length()); 1
SnarlInterface::~SnarlInterface() 1
setMinimumHeight(m_widget->minimumHeight()); 1
EDBFlatFile::File::~File() 1
trayIcon->showMessage( 1
Settings::Settings(QWidget 1
their 1
app->mainWindow()->activateWindow(); 1
if(d->histAt 3
gpg.doCheck(); 1
shortcutItem->takeChild(shortcutItem->indexOfChild(keyItem)); 1
waiting 8
setUsesScrollButtons(true); 1
d->cb_sp_status->setStatus(preset.status()); 1
mod->method_table->store(state, 1
tb.id 1
item->setData(QVariant(ui_.autoJoin->isChecked()), 1
Features 4
path.append(baseURI); 1
cb_commands->clear(); 1
setSortRole(HistoryModel::DateTimeRole); 1
TEST_CASE(unreachable1); 1
Unit 7
QSettings().setValue(, 10
if(debug_channel->nil_p()) 1
moveToThread(animMainThread); 1
if((size_t)idx->to_nint() 1
lbl 2
connect(d->mainwin, 10
v.setRole( 2
QUrl 29
- 4
previousDefault_ 2
PsiOptions::instance()->setOption(QString() 1
updateReadNext(d->nextAnim, 1
d->tray->setToolTip(QString( 1
m_mazes_algorithm 1
di.setFeatures 1
LookupTable::fields); 2
GO(exc_type).set(type); 1
newval.convert(current.type()); 1
if(dpy 4
bOk->setMinimumWidth(100); 1
ui_.te->append(str 2
doc.documentElement().appendChild(element); 1
stripping->stripFirstAnimFrame(); 1
newPos.setX(qBound(rect.left(), 1
t->setActive(name); 1
writeConv.setup(LineConverter::Write); 1
PrivacyRuleDlgTest(); 1
setStyleSheet(QString()); 1
cond_met 2
QLabel::setScaledContents(true); 1
account()->dj_sendMessage(m, 2
if(e->key() 5
connect(di.dirWatch, 1
gm->insertSeparator(); 3
if(i->initted()) 1
d->pb_form_submit->show(); 1
if(d->pipeCommand.readEnd().isValid()) 2
set_syserr(EPROTOTYPE, 1
path.assign(docRoot, 2
d->pre_aux 2
m_scrolling(false), 1
m_navigationSplitter->setCollapsible(0, 1
requestClientVersion(j.withResource(r.name())); 2
connect(model, 19
if(!dir.rename(fi.fileName(), 1
tcf.setUnderlineColor(QBrush(QColor(255,0,0))); 1
m_total_pieces 1
queue->enqueue(0); 1
glClearColor(1, 1
connect(&asker, 1
reg[0] 3
m_cookieJar->setAllCookies(lst); 1
GoogleFTManager::~GoogleFTManager() 1
channel.writeScalar(e.getErrorPage()); 1
Algorithm::change(c); 3
SymmetricKey::SymmetricKey(const 2
i->contactProfile()->scVCard(i); 1
num 6
list_.removeItem(row); 1
if(!ns_.isEmpty()) 2
Q_ASSERT(model->rowCount() 1
PEPRetractTask 1
activated(); 3
mergeFeatures(&featureList, 1
m_navigationBar->setVisible(showToolbar); 1
proxyID 1
mRecording(FALSE), 1
globals.ffi_func.set(new_class(, 1
setWindowTitle(tr().arg(title)); 1
if(!d->attachView->isHidden()) 1
for(i 22
TEST_CASE(goto_); 1
for(k 1
std::map<c2eNeuron 1
for(n 20
Resource::~Resource() 1
LLPreferenceCore::LLPreferenceCore(LLTabContainer 1
:Resource() 1
button->setPos(right 2
oldStyle 1
appendSysMsg(m.body(), 1
CPPUNIT_ASSERT(!opener.isOpen()); 2
imageBuffer.open(QBuffer::ReadWrite); 1
l._tail 2
for(; 21
_instance->moveToThread(0); 1
mouseReleaseEvent() 1
textLabel->setFont(font); 1
if(!locked) 1
setPGPEnabled(false); 1
pb_save->setFocus(); 1
IOAllowPowerChange(root_port, 2
ProviderManager 1
if(d->state 15
m_bookmarkRootNode->remove(node); 1
hb1->addWidget(d->cb_preset,3); 1
if(account->isActive()) 1
XWMHints 1
Account::removeNetwork( 1
while(top_set 2
if(ui_.le_homepage->isModified()) 1
Q_UNUSED(file); 2
int		n; 1
CPPUNIT_TEST(testDestructor_OpenInWrongMode); 1
view_->setModel(model_); 2
TLSSession::TLSSession() 1
legacy_ssl_probe_ 2
snprintf(buf, 3
++ls; 1
model->setHeaderData(999999, 1
WinSystemWatch 1
\brief 6
ui_.le_jid->setToolTip(name); 1
).arg(m_tabWidget->count()), 1
connect(pa_->pepManager(),SIGNAL(publish_success(const 1
::bringToFront(this, 2
doJoin(); 1
curError 11
childSetAction(, 8
if(!online 1
item->setData(0, 6
p.rx() 1
set_syserr(EDEADLOCK, 1
bQuit->setText((terminating 1
MacKeyTriggerManager::instance()->removeTrigger(this); 1
rng 4
tmp->all_flags 1
current_rot 1
connect(m_slider, 2
m_exceptionsModel 1
angle 6
painter->save(); 2
KeyStore 6
if(!pset.isNull()) 1
if(gname 1
m_ui->listWidget->clear(); 2
m_history->clear(); 1
addAction(clearAction); 1
dropPath.moveTo(c); 1
quotient 2
files_field.setVar(); 1
r.setStatus(Canceled); 1
doNotChange 1
setVCard(jtVCard->jid(), 1
lst->move(edt->x(), 1
confver 1
ReplaceBuffers(strExpression); 1
CGUIControlFactory::GetConditionalVisibility(pRootElement, 1
ToolbarSearch 1
features_ 2
set_transcoder(modules.transcoder()); 1
PsiTextViewPlugin( 1
LLTabContainer 1
TEST_CASE(throw1); 1
opt_host 3
TESTCASE(define_method_int_passed_no_args) 1
d->pb_send 1
bands 1
d->cb_plugins->setEnabled(true); 1
LEGOPTP.rosterContactSortStyle 1
KeepUntilExpire 1
while(!data 1
SpellChecker::~SpellChecker() 1
d->cb_animation->setItemData 3
_skip_plugins 1
gMessageSystem->addU8Fast(_PREHASH_BypassRaycast,		(U8)b_hit_land 1
arrangeEdits(ridByParent, 2
element->setCheckState(state); 1
d->init(icon, 1
addTo(shortcutItem); 1
GENERIC_READ 1
XMPPResource::XMPPResource(const 1
m_solution.append(pos); 2
d->checkTimer->setSingleShot( 1
asker.ask(Event::StylePassphrase, 2
PsiOptions::instance()->setOption(,vl); 4
showProgressIcon(); 1
QList<XMPP::Jid> 8
c->update(from_net, 1
pgp_sec 2
AHCommand 16
ern->set_const(state, 1
TrayIcon::TrayIcon( 2
if(cur->nil_p()) 2
painter->drawPixmap(QPoint((2 1
while(!ts->atEnd()) 1
le_jid->setText(JIDUtil::accountToString(acc.jid,false)); 1
m_frame->paint(painter, 2
TEST_CASE(simplifycode); 1
CPPUNIT_TEST_SUITE_END(); 5
viewMenu->addAction(toggleStatusAct_); 1
Q_DECLARE_METATYPE(HistoryItem) 1
delegate_->tabWidgetCreated(this, 1
setMinimumSize(size()); 5
str[markers 1
GCMainDlg 2
m_libraryHandle 2
CookiesExceptionsDialog 1
if(active) 2
needs_cr 8
if(proxy.isValid()) 2
mp_init(&t); 1
++str; 23
++id; 2
d->pipeWriter->start(); 1
QList< 4
generator.setOutputDevice(&buffer); 1
_reason 4
Tune 11
TabbableWidget::StateComposing 1
if(!linkify_okUrl(link)) 2
baseName 1
alert_->activated(false); 1
Q_DECLARE_METATYPE(QList<QCA::KeyStoreEntry::Type>) 1
mTabContainer->selectFirstTab(); 1
dst_force.normVec(); 1
snarlStruct.timeout 1
pm_settings_->addAction(act_compact_); 1
QPointer<XmlParserDirectMsg> 1
TestFailure::~TestFailure() 1
gViewerWindow->getWindow()->setCursor(UI_CURSOR_ARROW); 2
nl 1
nc 1
TicTacGameBoard::TicTacGameBoard( 1
nf 1
if(!QMetaObject::invokeMethod(obj, 1
ns 1
nt 1
toggleStatusAct_ 1
connect(voiceCaller_,SIGNAL(accepted(const 1
TLSSessionContext 2
d->mainwin 3
QProcessSignalRelay(QProcess 2
std::ostringstream 3
actForward->setEnabled 1
TLS::TLS(QObject 1
pa->modify(); 1
JSAtom 1
connect(pb_start, 2
Drawer::takeFigure(int 1
connect(manager_,SIGNAL(listsReceived(const 1
stopButton->setEnabled(false); 2
info.id 1
:d(new 30
addItem(item); 2
_createLine 1
n1 12
n2 12
set_syserr(EISCONN, 1
toolBar 1
act_voice_->setEnabled(false); 1
f.setValue(val); 4
UserAccount 7
NewAccountDialog 1
m_addBookmark->setIconVisibleInMenu(false); 1
keystores_ 2
splitter_->addWidget(child); 1
if(wentry.type 1
++(global->refs); 2
mp_copy(x, 1
if(store(filename)) 1
sendStanza(account,PsiPlugin::toString(stanza)); 1
LLPCode 17
noneAction->setChecked(true); 1
if(changed) 1
QObject::connect(brd, 2
CLog::Log(LOGDEBUG, 1
.arg(title) 1
setIconText(text); 1
callbacks[3].proc 1
TextOutputter::~TextOutputter() 1
QCoreApplication::instance()->installEventFilter(this); 1
ui.colorBox->setCurrentIndex( 1
_plugin_priorities 1
m_pieces.clear(); 1
services_[contact->getAccountName()]->actionInvite(contact->getJid(), 1
parentRow 1
m_corners[2][2] 1
image.setAttribute() 1
pb_remove->setEnabled(false); 3
errmap[GpgOp::ErrorProcess] 1
image.setAttribute(, 2
addAllNeededContactItems(); 1
mListenerVObject->removeInventoryListener(this); 1
TEST_CASE(eraseBreak); 1
QObject::connect(signaler,SIGNAL(notificationTimedOut(void 1
toolbar 2
options->setOption(optionsPath, 3
rb_->rebuild(); 3
if(have_add) 1
d->cmode 1
bottom3->setPalette(backgroundPalette); 2
if(!r.publicKeyID().isEmpty() 1
DynamicLibraryManagerException::loadingFailed 1
connect(toggleStatusAct_, 1
excludeList 4
young.free_objects(); 1
SynchronizerAgent(QObject 1
out->resize(oldsize 1
msg 10
connect(this, 80
statusmsg_field.setLabel(QObject::tr()); 1
cursor.movePosition(QTextCursor::StartOfBlock, 1
QCOMPARE(is->emoticons.first()->name(), 2
retract.appendChild(item); 1
Connected, 1
Time 1
gm->setCheckable(true); 1
xform_obj.setParent(&par); 1
root.setIdentities(ids); 1
groupMenu->addAction(menuActions_[]); 1
d->leftover_stderr.clear(); 2
connect(ui_.autoJoin, 1
volume_params.setBeginAndEndS( 12
p->setClipRect(xoff 1
saveBookmarks(); 1
graphicsitem_.setPen(QPen(QBrush(strokeColor), 1
text_(NULL) 1
parseXml( 4
connect(d->cb_toolbars, 1
bignum_bitwise_op(BITWISE_OP_XOR, 1
pixPainter.drawPixmap((width() 1
LoadFavourites(); 1
pm.setItemEnabled(20, 1
animationMime 1
defaultAction_ 1
PsiToolBar 1
check(code.c_str(), 2
QCursor 1
LLColor4U 1
ck_connectAfterSleep->setWhatsThis( 1
TypeInfo::Slots::iterator 2
posX 2
qa_send 1
mapper->updateCurrent(webView->page()); 1
TEST_CASE(forwhile6); 1
{4, 4
connect(m_stopReload, 2
MetaOptionsTab::~MetaOptionsTab() 1
request.setRawHeader( 30
map[63] 2
bounceRec.nmIcon 1
GO(list).set(cls); 1
if(set_realm) 1
std::vector<CStdString> 2
glMatrixMode(GL_PROJECTION); 1
connect(account()->psi(), 2
~JingleIQResponder() 1
obj->d->pubrecord 2
userManagement_ 2
blocked 6
connect(pb_edit, 1
if(!pUpdateIndex) 1
event->acceptProposedAction(); 9
URLLabelPlugin( 1
setAffiliation(affiliation); 1
LLWLParamManager::instance()->mCurParams); 1
lb_realm->hide(); 1
LEGOPTP.hideMenubar 1
mutable 4
TestResultCollector::TestResultCollector( 1
reg.create(round_up((length 1
disconnect(ksm); 1
((IdlePlatform::Private 2
Q_ASSERT(!model->data(QModelIndex()).isValid()); 1
!stickEnabled 1
mBuffer(buffer) 1
graphicsitem->translate(d.x(), 1
m_corners[0][3] 1
data.append( 2
roster.insert(it2, 1
Q_ASSERT(model->parent(QModelIndex()) 2
m->addAction(d->act_send_message); 1
QCoreApplication::instance()->sendPostedEvents(); 1
auth_flags 1
m_bookmarksManager->addBookmark(parentNode, 1
if(!con) 1
d->tb_down->setEnabled(down); 1
if(cm) 1
Q_ASSERT(item); 2
opcodes 1
isServices_selectionChanged(0); 1
Botan::Library_State 1
writeTrigger.stop(); 1
OptionsTabStatus::OptionsTabStatus(QObject 1
setAcceptDrops(true); 9
m_proxyModel->setSourceModel(m_exceptionsModel); 1
if(!pipeCommand.create()) 2
ui_.pb_deleteList->setEnabled(i 1
Message::Message() 1
grid->addWidget(chb_qvga,6,0,Qt::AlignCenter); 1
connect(jackHandler, 1
LastActivityTask::LastActivityTask(const 1
int	fx, 1
email.internet 2
curTime 1
BookmarkManageDlg 1
accs 1
G(module)->setup(this, 1
CertificateInfoOrdered 9
oidx 1
sendFile(metacontact->getTopContact()); 1
::fcntl(pipeList[n], 1
registerFactory( 2
setSorting(2); 1
d->le_subj->setText(); 2
str.truncate(str.length() 2
i->contactProfile()->scOpenChat(i); 1
CertificateInfoType::CertificateInfoType(CertificateInfoTypeKnown 1
d->core 1
standardFont 4
QSvgRenderer::load(QByteArray(EMPTYSVG)); 2
SLOT(itemRemoved(const 1
applySettings(); 3
current_pos.rotVec(attachment_pt_inv_rot); 1
r 57
LLFloaterPreference 4
QueryPerformanceFrequency(&freq); 2
if(!d->instances.isEmpty()) 1
and 6
aReply(j, 2
XFree(d->ss_info); 1
SettingsDialog::SettingsDialog(QString 1
lb_keyname->setMinimumWidth(100); 1
sourceLine 1
NoughtsAndCrossesPlugin(); 1
ui_.cb_active->insertItem(tr()); 1
TestDiscoInfoQuerier() 1
AbstractContent::~AbstractContent() 1
d->pgp_sec 2
AdditionalMessage::AdditionalMessage( 3
actualBindAddress 2
mVisible 6
arg_count--; 1
QWebView::dropEvent(event); 1
cd.dwData 1
if(tmp) 1
tune.setTrack(stream.readLine()); 1
item.fromAgentItem( 2
QWhatsThis::add(d->pb_cAnimFront, 1
bResume 1
Q_DECLARE_METATYPE(HistoryList) 1
buf.clear(); 1
:object_memory(om) 1
if(sxesession) 1
d->pb_next->setText(str); 1
queue.enqueue(nc.charFormat()); 1
addSelf(); 1
if(late_close) 1
LLWLParamManager::instance()->mAnimator.setDayTime((F64)val); 1
showHidden(v_showHidden); 1
in_buf 1
if(!message.sxe().attribute().isEmpty()) 1
PlugInManager::addListener( 1
secAttr.bInheritHandle 1
btn->setChecked(b); 1
connect(game_, 1
LLToolCamera::getInstance()->pickCallback(mPick); 1
d->done 4
item.setValue(); 4
QMessageBox::Ok 1
doc.documentElement().insertBefore(children.item(i), 2
session_->removeNode(group); 2
toggleShowOfflineAct_->setChecked(false); 1
QVERIFY(IconsetFactory::iconPtr()); 1
button->setPos(offset 1
TEST_CASE(assign); 2
pb_search->setEnabled(true); 3
act_pgp_->setChecked(false); 1
snarl_ 1
if(!(node.isAttr() 1
id++; 1
GO(cmethod).set(new_class(G(executable), 1
argument_start(0), 1
region 1
parts 1
Q_ASSERT(index.column() 1
Link::~Link() 1
p->toolbars[base] 3
metacontact->setStatusMessage(statusMessage); 1
check(static 22
alloc_factory[allocator->type()] 1
m_uiSamplesPerSec, 1
if(obj->forwarded_p()) 1
if(!sd->lock) 1
Private::smallFontSize 1
painter.drawImage(x, 1
d->ssfmax 1
m_recentlyClosedTabsAction->setEnabled(!m_recentlyClosedTabs.isEmpty()); 1
Note 1
colon 2
sec_changed(); 1
d->lw_selectedActions->setEnabled(enable 1
plugins_[tcplugin->name()] 1
d->pcountdown 2
d->bundleSigner 2
btfromcstr 2
d->icsel->setIconset(i); 1
set_sign((sign() 1
chatView()->appendText(QString( 3
m_tabBar->setTabButton(index, 3
newGame 1
e.appendChild(doc.createTextNode(datum_)); 1
deletedPresets.clear(); 1
p->drawText(30, 1
attr.c_lflag 2
AccountModifyDlg::~AccountModifyDlg() 1
painter.fillRect(bumpmap.rect(), 1
_loader->unload(); 1
gGL.getTexUnit(0)->setTextureBlendType(LLTexUnit::TB_MULT); 1
Q_ASSERT(!accounts_.contains(account)); 1
if(pos 3
mCurrentStat 2
game->setItemEnabled(id, 3
bTrunc 1
d->unpause(); 1
te_log()->restoreSelection(cursor, 1
Algorithm::Algorithm() 1
RCCondition::RCCondition(class 1
setCursor(Qt::SizeAllCursor); 2
Q_EXPORT_PLUGIN2(qca_gnupg, 1
events 1
edt->setEnabled(TRUE); 1
QDialog::done(r); 6
subflags 2
mode_ 1
resizeContents(m_contentsRect, 1
base.setRgb(red, 1
EventDlg::~EventDlg() 1
Idle 1
connect(bg_color, 1
StatusComboBox::StatusComboBox(QWidget 1
event, 1
data[j] 1
Q_ASSERT(alignment 1
d->iss_customRoster->insert( 1
QWebSettings::clearIconDatabase(); 2
sm->insertItem(PsiIconset::instance()->status(STATUS_XA).icon(),		status2txt(STATUS_XA),		STATUS_XA		+ 1
i->setText(1, 3
model 1
last_used 3
a.resize(r); 1
QModemService::initialize(); 1
MarkSweepGC::MarkSweepGC(ObjectMemory 1
OptionsTabToolbars::OptionsTabToolbars(QObject 1
dialog->exec(); 4
painter->setPen(option.palette.highlightedText().color()); 1
setFlag(QGraphicsItem::ItemSendsGeometryChanges, 1
children_.removeAll(static_cast<QWidget 1
write(fd, 3
m_tests 1
d->mle->hide(); 1
root_port 1
list.prepend(item); 2
_l->failedAssertThrows( 1
connect(group_modes_, 1
QTextBrowser 1
QFont 34
act_send_ 1
msg.module, 1
d->ck_scrollTo->setChecked( 1
addTab( 5
tab->reload(); 2
if(crl.isNull()) 1
word3_muladd(&w2, 134
if(!global->rng) 1
QCOMPARE(dialogModel.rowCount(), 1
pb_open->setEnabled(FALSE); 1
errmap[GpgOp::ErrorFormat] 1
cb_plain->addItem(tr(), 2
m_test( 1
IconLabelPlugin( 1
d->te->setReadOnly(false); 2
this->statusList 1
base.setAttribute(, 4
connect(watcher, 2
d->s5bServer->setHostList(slist); 1
opttab->setData(psi, 1
m_rightLayout->setSpacing(spacing); 1
set_sign(y.reverse_sign()); 1
o_ 1
d->lb_bounce->hide(); 1
LLVolumeMessage::packVolumeParams(0, 1
on 1
om 1
ok 32
of 2
hb4->addWidget(d->pb_next); 1
meth->execute(state, 1
ASSERT_EQUALS(3, 1
op 12
d->cb_loadPlugin->setEnabled(true); 1
gpg.doPublicKeys(); 3
m_sourceRow.insert(0, 1
nextAnim_ 3
real->activated(playSound); 1
(sock_tout 1
tabBar_->setShape(tabsPosition_ 1
CKey::~CKey(void) 1
incomingEvent_ 2
QOAuth::HMAC_SHA1, 1
set_syserr(EINPROGRESS, 1
callbacks[2].id 1
d->profiles.removeRef(cp); 1
initCallbacks(); 1
bigint_comba_mul4(z, 1
items.SetCacheToDisc(CFileItemList::CACHE_ALWAYS); 1
sm->setMapping(this, 1
setFixedSize(25, 1
d->le_oeHeadline->setText(PsiOptions::instance()->getOption().toString()); 1
email.userid 2
RealTestDescription::RealTestDescription( 1
d->cb_incomingAs->setItemData(2, 1
d->servers.remove(d->servers.begin()); 1
r->filename 1
threadMutex.unlock(); 1
if(!initialized 1
PsiOptions::instance()->setOption(geometryOptionPath_ 4
PROT_READ 1
GlobalShortcutManager::KeyTrigger::Impl::Qt_VK_Keymap 1
d->ss_info 2
menu_modes_ 1
setPsiIcon( 5
if(ch 1
cb_ 2
_type 4
leftover_stdout.clear(); 2
setFrameTextEnabled(hasText); 1
TEST_CASE(pushback1); 1
young.lifetime 2
free_entries 1
PEPSubscribeTask 2
AspellStringEnumeration 1
d->vb_main 1
options.setAttribute(, 1
ui.statusEdit->initialize(); 1
need_update 10
readBoolEntry(p_sound, 1
popup->setData(jid, 1
Q_ASSERT(end 1
if(c) 12
showGroups_ 2
CPPUNIT_ASSERT(item.message()); 3
if(written 1
fin_process 6
addButtonItem(bPersp); 1
killTimer(m_timerId); 1
fields_layout->setMargin(0); 1
BDIGIT_DBL 2
start[i] 1
z[6] 6
pubring 1
if(s.at(n2) 1
d->clear(); 1
InterruptableCalls::fclose(f); 1
dlg->ws_tabs->addWidget(w); 1
int	x 2
transform(context->state, 2
soundPlay(str); 1
replaceWidget(lb_proxychooser, 1
int	n 1
:Q3MainWindow(parent, 1
hb->addWidget(pb_prev); 1
play_buttons_[d->tb_seMessagePlay] 1
if(ui_.le_phone->edited()) 1
if(in.at(v_at) 1
PluginManager::instance(); 1
while(counter 1
if(lock) 1
setContactStatusMessage(contact, 2
rate 2
LEGOPTP.color[cAnimBack] 1
controls_layout->addWidget(controls[3], 1
reposition(node, 2
TestNamer::TestNamer( 2
setWindowTitle(tr().arg(d->jid.full())); 1
connect(d->searchText,SIGNAL(textEdited(const 1
d->cb_proxy->addItem(tr(); 1
titleIcon->setPalette(backgroundPalette); 2
standardLabel->setText(QString(QLatin1String()).arg(standardFont.family()).arg(standardFont.pointSize())); 2
tabs_.removeAll(tab); 1
TicTacButton::Blank 1
if(makeAux 2
d->t->start(MSECSPERFRAME); 1
connect(t,SIGNAL(finished()),SLOT(getOptionsStorage_finished())); 1
if(compare(state, 2
d->psi 9
if(active->nil_p()) 1
if(!cache_no_pgp_) 1
IconWidgetDelegate(QObject 1
moveToThread(0); 2
options 2
d->pb_close->hide(); 1
Q_UNUSED(receiver); 1
cleanUrl.setHost(cleanUrl.host().toLower()); 1
QCOMPARE(iconset->version(), 1
G(thread)->set_object_type(Thread::type); 1
R2(e,a,b,c,d,36); 1
if(selectedwbitem) 2
le_pass->setText(acc.pass); 1
unhookEdit(); 1
w.show(); 3
text_ 6
if(selfid[i].unicode() 1
d->eventNotifier->setMessage(QString(); 1
chatEdit()->setDialog(this); 2
d->pm_settings->exec(QCursor::pos()); 1
d->needUsername 1
list->setItemSelected(item, 1
pre_aux.clear(); 4
CPPUNIT_TEST(testConstructor_OpenInWrongMode); 1
TestComposite::~TestComposite() 1
setProxy(proxy); 1
connect(ui_.pb_clear, 3
MacDock::stopBounce(); 2
if(!d) 11
m_board->clearSelection(); 1
namex.find(')') 1
symbol.c_str() 1
enabledAccounts_.append(account); 2
aChat(j); 1
q.setAttribute(, 1
g_pluginman 2
LLParcel 4
TabDlg::~TabDlg() 1
TestResult::stop() 1
if(wbitem) 9
pipeReader->start(); 1
connect(d->treeShortcuts, 2
QList<int> 21
hae->setMessage(m); 1
widget.newTab(); 8
if(node.isElement() 1
widget.lineEditStack(); 1
PEPGetTask 2
globals.current_task.set(thread->task); 1
ui_.le_nickname->setReadOnly(x); 2
bg_se->insert(d->tb_seSend); 1
if(iter 4
d->message 1
mainWindow()->raise(); 1
Qt::QueuedConnection, 2
S5BServer 1
app->quit(); 1
read(); 1
subnode 1
d->proc 2
newPresets[text].setName(text); 1
m_scale_level++; 1
qWarning(, 20
Q_DECLARE_METATYPE(QCA::SecureArray) 1
LLAppViewer::instance()->forceQuit(); 1
OptionsTabAppearanceGeneral::~OptionsTabAppearanceGeneral() 1
cfg.beginGroup(); 2
BookmarksManager 4
syncObject 1
Line1->setFrameShadow( 1
if(i->prevId()) 1
items_[index].setOrder(items_[index+1].order()); 1
ui_.le_email->setModified(x); 1
instances 1
cb->clear(QClipboard::Selection); 1
CFStringRef 8
account->actionJoin(); 1
JAVASCRIPT_OBJECT_FINALIZE(NULL, 1
sm->insertItem(PsiIconset::instance()->status(STATUS_AWAY).icon(),		status2txt(STATUS_AWAY),	STATUS_AWAY		+ 1
model()->removeRows(0, 1
privacyModel.reset(); 1
layout->addWidget(m_favIcons); 2
d->le_to->setFocus(); 1
WaitForSingleObject(changesMutex, 1
connect(act_voice_, 1
SourceLine::fileName() 1
throw; 3
OptionsTabApplication::~OptionsTabApplication() 1
if(closeLater) 1
tv_->setModel(tm_); 2
DirectoryMapper(request_rec 1
data.insert( 1
putchar 2
if(contact->status().type() 1
if(ui_.lv_keys->childCount() 1
bringToFront(d->pd); 1
connect(ui_.le_server,SIGNAL(popup()),SLOT(selectServer())); 1
probe->added_method(this, 1
SqueezeLabel::SqueezeLabel(QWidget 1
SYMBOL 5
out.enable(); 1
QVERIFY(!action->isEnabled()); 2
glBegin(GL_LINE_STRIP); 1
if(prompt) 1
tmp.convertFromImage( 2
actionsService_->showHistory(contact); 1
trayicon_->setIcon(p); 2
QHash<QWidget 1
:QObject(parent), 3
qt_XDestroyWindow( 1
p.setY(screen.y()); 1
m_lineEdits->setSizePolicy(locationBar->sizePolicy()); 1
r.format 1
GoogleFileTransferListener::GoogleFileTransferListener(GoogleFileTransfer 1
InitGrowlDelegate(&delegate_); 1
XDataField_Hidden(XData::Field 1
connect(powerHandler, 1
GameBoard::saveImage() 1
m_hasRendered 3
auth->setPassword(proxyDialog.passwordLineEdit->text()); 1
if(blocked) 1
if(!item) 3
Private(SecureMessage 2
GCUserViewItem 16
QList<QPoint> 1
QList<AskerItem> 1
QTextEdit 6
if(!actionQueue.isEmpty() 2
ui_.cb_default->setCurrentItem(0); 1
added 2
m_pixmap->setTransformationMode(Qt::SmoothTransformation); 1
if(as<Integer>(entry->at(0))->n2i() 1
:Algorithm(, 2
connect(d->act_whiteboard, 1
PsiCon::~PsiCon() 1
lAppname->setVisible(scr 1
messageBox->setEscapeButton( 1
vcardDict_[jid] 1
idlessItems_.append(item); 1
d->lb_top->setText(str); 1
toggleJoinedAccountsAct_ 1
quat.setQuat(x,y,z); 1
:	m_board(0) 1
SELECTED_EVENT 1
G(object)->setup(this, 1
PsiApplication::~PsiApplication() 1
clientName_ 1
disconnect(icon_, 2
j.setResource(d->acc.resource); 1
WbNewItem::WbNewItem(QGraphicsScene 1
acc.pass 3
m_renderer->load(theme); 1
if(jid.bare() 1
setTimerInterval( 1
account->setStatus(Status(, 1
QObject::connect(Ok, 1
info.setFeatures(features); 1
glViewport(0, 1
TestPath::getTestCount() 1
DetectedSession 2
i->icon 2
m.setSxe(sxe); 1
ui.setupUi(m_widget); 1
action->setData(index); 4
closeTabButton->setAutoRaise(true); 1
mainWindow()->loadPage(args.last()); 1
messageLabel->setFont(font); 1
parent->GetPiecePosIter(mat); 1
ui_.tv_affiliations->setUpdatesEnabled(false); 1
RosterInstance::RosterInstance() 1
if(!list.isEmpty()) 1
QCOMPARE(spy1.count(), 2
QMessageBox::Ok, 1
d->cv->qa_chat->setIconSet(IconsetFactory::iconPixmap()); 1
if(!gAgent.getID().isNull()) 1
SET(so, 1
GameBoard::sockConnected() 1
GAdvancedWidget::setStickAt( 2
cb_->setText(tr()); 2
pm->insertItem(tr(),am); 1
fin_status 8
setLastSxe(sender.full(), 1
setAttribute(Qt::WA_DeleteOnClose); 36
for(VarList::Iterator 2
CFNumberRef 2
if(!input.opt_pubfile.isEmpty() 1
d->cur_status 2
CPPUNIT_TEST(testFromXml_AllowAction); 1
prompt->show(); 1
PopupActionButton(QWidget 1
changeList(l); 1
setName(name); 1
pb 2
Private(ActiveProfiles 1
pa 5
dup 3
act_color_ 1
ph 1
if(d->pipeAux.readEnd().isValid()) 2
pm 4
QFile::remove(name); 1
actionOpenWhiteboard(i->u()->jid()); 1
autoSaveTimer_->setSingleShot(true); 1
lst->removeItem(0); 1
leftHeight 1
connect(bg_sePlay, 1
QClipboard 2
contact->setHasPGPKey(h); 1
om->collect_young(globals.roots); 1
barLayout_->setSpacing(0); 1
data[slen] 9
if(n.is_positive() 3
loader->unload(); 2
m_maze->cellMutable(m_player.x(), 2
if(colliding.size() 2
left.bustype 1
CertificateOptions::~CertificateOptions() 1
NewGameDialog 1
TEST_CASE(realloc2); 1
vsUsbCable(0), 2
act_add_to_roster 1
p.rotate(QApplication::isRightToLeft() 1
d->pb_send->show(); 1
printFailureMessage( 1
toolBar->setIconSize(QSize(16,16)); 1
BakerGC::~BakerGC() 1
if(tot 1
defaultEnableToolbars 2
g_event->askers.removeAt(at); 1
xprocess 6
m_trayIconMode 1
TestTracker::~TestTracker() 1
ev.xclient.data.l[2] 1
resize(QSize(16, 1
item->setIcon(0, 1
connect(tree, 4
command.remove(0,18); 1
act_file_ 1
model->fetchMore(QModelIndex()); 1
ui_.le_room->setText(mucJid.user()); 1
jid2.append('.'); 1
btn->hide(); 1
instance()->triggers_.insert(key, 1
translator_ 2
networkName 2
MUCAffiliationsModel::AffiliationListIndex 1
aAuth(j); 1
d->qoauth->setConsumerSecret( 1
prev_tune_ 2
reg->setForm(form); 1
prof.init 2
m_player_angle 7
m_session->GetPlayer()->SendEquipError(msg, 1
vsm_->setMetacontactExpanded(metacontact, 1
(argc 5
DestroyIcon( 2
StringArrayModel::StringArrayModel(char_t 1
org.name 2
published.clear(); 1
Q_DECLARE_METATYPE(QModelIndex) 1
ck_legacy_ssl_probe->hide(); 1
SourceLine::~SourceLine() 1
UrlList 3
if((p1 1
if(rankgroups[n] 1
readBoolAttribute(a, 17
scan_mutex.unlock(); 3
if(account->loggedIn()) 1
bool	res; 4
addDebug(index, 5
item->setup(); 1
rx.setMinimal( 1
item.pszText 1
TEST_CASE(func3); 1
m_bookmarksToolbar->show(); 1
hb2->addWidget(d->lb_pgp); 1
TestStl() 1
drawMap(p, 1
status.image 2
contactView()->filterGroup(g); 1
filterGroup(item, 1
detected.time 1
FancyItem::FancyItem(Q3ListView 1
QApplication::clipboard()->setText(i->url, 2
item->setIcon(thumbnail); 1
if(code 1
std::vector<std::string> 6
ChatEdit::~ChatEdit() 1
ChatDlg::SpooledType 1
SECURITY_ATTRIBUTES 1
LEGOPTP.color[cDND] 1
mPrefsIM->setPersonalInfo(visibility, 1
QString	optionsPath; 2
Every 1
if(node->object 1
QCOMPARE(history.history().count(), 5
if(mp_cmp_d(n, 1
SecureMessage::SecureMessage(SecureMessageSystem 2
TestFactoryRegistry::TestFactoryRegistry( 1
viewMenu->addAction(tr()); 1
reg.create(round_up(size, 1
TestRunner::WrappingSuite::run( 1
showStatus(ready_txt); 2
xprocess->start(, 2
while(i-- 1
d->ck_contactsMessageFormatting->setChecked(PsiOptions::instance()->getOption().toBool()); 1
values[i] 16
Message::addDetail( 4
QList<QAtResultParser::Node> 1
:QList<UserResource>() 1
if(!d->cv->isShowHidden() 1
releaseLibrary(); 2
set(state, 1
connect(static_cast<ContactView 1
DefaultMD5Context(Provider 1
lst->setFocusPolicy(Qt::NoFocus); 2
reg.grow_to(round_up(n, 1
bClean[iBuf] 1
in.take(in_id, 1
qScrollEffect(label); 1
AHCError::AHCError(const 1
m_ctrlPreview.Invalidate(); 1
item.type 4
p->setWindow(0, 1
d->isCA 2
m_actions.append(new 1
tb_vCard->setEnabled(enableVCardButtons); 1
ui_.cb_lists->removeItem(ui_.cb_lists->currentIndex()); 1
QGraphicsTextItem::paint(painter, 1
threadCancelled.lock(); 5
CheckMemoryLeak::AllocType 2
OggPlugin::OggPlugin(): 1
dialog->setWindowTitle(title); 1
jackHandler 2
mAboutBtn 1
label->hide(); 1
lb_logo->setPixmap(logo); 1
connect(d->whois, 1
nicks.insert(nick,nicknumber); 1
rect.right 1
keyList.last().keyItems 1
removeCall(from); 1
va_end 2
Q_ASSERT(model->data(QModelIndex()) 1
context->state[0] 1
ShowTextDlg::ShowTextDlg(const 2
d->lb_pgp->setPsiIcon(IconsetFactory::iconPtr()); 1
if(d->t.isActive()) 1
connect(agent, 2
dealloc_block(allocated[j].first, 1
CRLEntry::CRLEntry(const 3
m_bookmarksManager->setUrl(item, 3
QDesktopServices::unsetUrlHandler( 3
d->activate 2
QCOMPARE(combined->count(), 4
d->remove->setEnabled(true); 1
d->key 5
pixmap.fill(QColor(255, 1
that->setWinId( 1
connect(locationBar, 1
timeString 2
item(i)->setSizeHint( 1
base(loop), 1
ifs.close(); 1
ui_.le_topic->setText(m.subject()); 1
QCOMPARE(widget.count(), 6
State 3
setPsiIcon(icon); 1
resource->setStatus(status); 1
d->make_act(Export); 1
keySequences.append(QVariant(keyItem->text(1))); 1
createMainWin(); 1
assertion_traits<double>::toString(expected), 1
txt->setText(s); 1
if(!ui_.pb_submit->isEnabled()) 2
d->le_pass->setWhatsThis( 1
Clean(strResult); 1
act_clear_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
toplbl->setText( 1
XSync(QX11Info::display(), 1
d->le_to->setText(str); 1
m_recentlyClosedTabs.prepend(tab->url()); 1
m_action_key(0), 1
QList<UserListItem 8
suggestedIndex 4
if(!lvi) 1
pFocusedControl 1
WebPage::WebPage(QObject 1
fig[10] 1
this_thread::disable_interruption 6
set_syserr(EPIPE, 1
fel 1
b[b.size() 1
a->append(b); 2
RepeatedTest::run( 1
ptv_authors->hide(); 1
cleanup_temp_keyring(secname); 7
connect(act_join_groupchat, 1
CPPUNIT_TEST(testSmallerThan); 1
viewMenu->addAction(toggleJoinedAccountsAct_); 1
TextTestRunner::TextTestRunner( 1
mTelehubRot(), 1
extensions() 1
if(s.isEmpty()) 5
calc->deleteLater(); 1
m_standalone 1
revertSettings(); 2
m_targets 1
InfoDlg::~InfoDlg() 2
x_offset 4
game_->show(); 1
!ui_.le_ext->text().isEmpty() 2
QWhatsThis::add(d->ck_inactiveevents, 1
setStatus(Accepted); 1
ui.countdownLabel->setToolTip( 2
if(i->groupType() 2
setDefaultAction(string2action(execute)); 1
QListView 1
CookiesDialog 1
d->busNames.clear(); 1
setWindowOpacity(double(qMax(MINIMUM_OPACITY, 2
connect(cvlist, 1
xbuf[i] 1
cls->instance_fields 2
~MetaAlertIcon(); 1
status_options 7
setFrameStyle(QFrame::Panel 2
TEST_CASE(varid); 1
m_undo->setShortcuts(QKeySequence::Undo); 1
Solver::Solver(Maze 1
newval.convert(type); 1
m_bookmarksModel 1
PGPKeyContext 2
acc.opt_automatic_resource 1
ClearButton::ClearButton(QWidget 1
qSort(m_exceptions_allowForSession.begin(), 2
setIcon(icon, 4
if(!_host.isEmpty()) 1
d->setInteractive(tmode); 1
parent->setOpen( 1
_prev( 1
xml.setAutoFormatting(true); 1
info.fromXml(i); 1
out.append(in.at(n)); 2
if(u->publicKeyID().isEmpty()) 1
gPieAttachment->show(x, 1
d->xdata->setFields(form.fields()); 2
Account::fromString( 3
under->set_const(state, 4
SafeTimer::SafeTimer(QObject 2
AccountLabel 3
pm->insertItem(tr(), 1
if(!askQuit()) 1
if(wbitem->node() 1
if(xprocess 2
that->create(); 1
value=atoi(pvalue); 1
LEGOPTP.ppBorderColor 1
m_open_action->setEnabled(QDir( 4
if(_a.isEmpty()) 1
setDragMode(QGraphicsView::NoDrag); 1
m_bPassthrough, 1
tbDef.dock 1
cacheExportBinary 1
RootWindow( 1
MUCDestroyTask 2
d->gr_auth->setSpacing(4); 1
Q_ASSERT(name 1
This 11
disconnect(d->m, 1
connect(renderer, 1
offset.setY( 2
access_model.appendChild(access_model_value); 1
QGraphicsView::mousePressEvent(event); 1
CFDataRef 3
addStatus(XMPP::Status::XA); 1
cg.setColor(QColorGroup::Base, 1
glMultiTexCoord2f 1
items.append(item); 1
statusList->postDMDialog( 1
connect(act_history_, 1
StringListDialog::StringListDialog(UINT 1
if(XScreenSaverQueryExtension(QApplication::desktop()->screen()->x11Display(), 1
actionsService_->changeStatus(account, 1
++cutoff; 2
_sd->lock 1
connect(&ksm, 1
d->cb_ident->setAccount(pa); 2
CURL 2
tabsetToKinds_.insert(tab, 1
TestDiscoInfoQuerier 1
connect(d->h, 1
MASK 2
hMask 1
BookmarkTask(Task 1
sType.setNum(n); 2
foreach(TabbableWidget 7
m->addSeparator(); 1
.define_constructor(Constructor<IntHelper>()) 3
entry->mark(); 1
QTreeWidgetItemIterator 3
r->type 6
if(d->lb_pgp) 2
CLICK_EVENT 1
TEST_CASE(unknownFunction4); 1
Private(TLS 1
pb_search->setEnabled(false); 2
if(ai->size 5
d->jsp->publishCancel(this); 1
downloadInfoLabel->clear(); 1
SelectGame::checkParams(const 1
out.writeSecure(a); 1
MethodContext 9
loadSystem(); 1
setRole(MUCItem::NoRole); 1
d->setIcon 1
setChatState(StateGone); 1
= 2
ContactListItem::ContactListItem(ContactListGroupItem 1
TEST_CASE(allocfunc2); 1
setWindowTitle(JIDUtil::nickOrJid(u->name(), 1
cookiesTable->horizontalHeader()->setStretchLastSection(true); 1
(bg->isChecked() 1
timeRemaining 5
textItem->hide(); 1
LEGOPTP.ppOnline 1
f.fromString(fontName); 1
QBasicTimer 1
Authenticated, 1
if(bit_shift) 4
Q_DECLARE_METATYPE(LineEdit::WidgetPosition) 1
m_exceptions_block 2
m_cookieJar->setAllowForSessionCookies(m_sessionCookies); 1
ptrShell_NotifyIcon 1
i->setAlert(anim); 1
enablePlugins->setChecked(settings.value(QLatin1String(), 1
fwrite(report.c_str(), 1
session_->SignalState.connect(listener_, 1
G(blokenv)->setup(this, 1
status_field.setValue(QStringList(manager()->account()->status().typeString())); 1
d->frame->repaintBackground(); 7
if(other.contains(n)) 1
btn->setPopupMode( 1
TestResult::startSuite( 1
resetUiWhenFinished( 1
dlg->lv_disco->installEventFilter 1
y[j] 2
VCard::PhoneList 2
qWarning(qPrintable(QString().arg(file))); 1
if(message.from().bare() 1
mutex_name(name) 1
m_zoom_fit_action->setEnabled(true); 2
Kind 4
stdCOut() 11
if(parentElement.isNull()) 1
manager_->addAccount(account, 1
QVERIFY(is->loadSystem()); 2
free(text_); 2
if(!isPrivate 3
createMessage(); 1
call_mutex.unlock(); 1
old_trayicon_->hide(); 2
QT_WA( 12
MUCAffiliationsView::MUCAffiliationsView(QWidget 1
runner.setOutputter(new 1
sInstance->sendTelehubInfoRequest(); 1
QtopiaApplication::setPowerConstraint(QtopiaApplication::Enable); 2
G(bytearray)->setup(this, 1
manager_->updateState(account, 1
TestFailure 6
setMatrix(QMatrix().scale(s, 1
QList<QWidget 2
open(TabWidget::NewTab); 1
this->textCursor().hasSelection()) 1
acc.dtProxy 1
migrateStringEntry(roster, 1
ui_.lb_status->setPsiIcon(IconsetFactory::iconPtr()); 2
dump_pid_son(pid, 1
FigureDialog::mousePressEvent(QMouseEvent 1
BrowserApplication::instance()->saveSession(); 1
PrivacyListListener(Task 1
bstrListDestroy 2
0x30, 3
ContactListGroupItem 10
scale_level 2
Q_ASSERT(tabs_.contains(static_cast<TabDlg 1
if(RADIX 1
PsiOptions::instance()->removeOption(baseServicesPath, 1
avmplus::AvmLog(char 1
CookieJar::AcceptPolicy 2
if(key) 1
current_screen_area 1
Figure::moveListQueen(Q3PointArray 1
TestPlugInDefaultImpl::addXmlOutputterHooks( 1
addToolBar(navigationArea, 1
d->le_oeIncomingFT->setText(); 1
setRole(nick, 5
m_controls_flag 1
15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1, 1
if(str.length() 2
if(type_ 13
SelectGame::resizeEvent(QResizeEvent 1
g_audioConfig.GetAC3Enabled() 1
servers.push_back(jid); 1
act_widths_ 1
HostPortEdit::~HostPortEdit() 1
mResizeTimer.start(); 1
QMessageBox::Ok); 1
out.setSecurityEnabled(enabled); 1
groups_.insert(GroupSpec(group), 1
switch(click_action) 2
if(d->lib->load() 2
e.setAttribute(,url_); 1
Avatar 2
LLUICtrlFactory::getInstance()->buildFloater(this,); 1
task->execute(); 1
m_settingsDialog->show(); 1
type_assert(val, 13
animTimer 1
QFETCH(HistoryList, 11
changesMutex 2
m_tests.clear(); 2
checkNullPointer( 6
powerFile.setFileName(); 2
nick_ 2
widget->window()->testAttribute(Qt::WA_AlwaysShowToolTips))) 1
d->lb_count->setToolTip(tr()); 1
d->lv->setAllColumnsShowFocus(true); 1
layout_->removeItem(barLayout_); 1
((Player 1
dragPixmap.fill(Qt::transparent); 1
HICON		hIcon; 1
Cipher::~Cipher() 1
QComboBox 4
capabilities 3
separatorAction->setObjectName(); 1
AHCommandServer::AHCommandServer(AHCServerManager 2
T 1
model->setParent( 1
G(channel)->set_object_type(Channel::type); 1
QTest::newRow(); 5
sxe.appendChild(n); 1
w->exec(); 3
switch(stub->arg_types[i]) 1
QVBoxLayout 47
Section 2
ui_.cb_recent->setItemData(ui_.cb_recent->count()-1, 1
d->auth_flags 1
d->packet_mtu 1
OptionsTabAppearanceMisc::OptionsTabAppearanceMisc(QObject 1
LLHUDText::LLHUDText(const 1
if(askers[n].id 1
(version() 1
Algorithm 1
if(num 5
d->act_close->QAction::setShortcuts 1
setSortColumn(0); 1
d->twitterapi->createFavorite( 1
NoughtsAndCrossesPlugin::NoughtsAndCrossesPlugin() 1
column 1
CFRelease(cf_title); 1
if(id[0].isDigit()) 1
initMap(); 2
if(mp_cmp_d(MP(b), 1
ConstraintType::~ConstraintType() 1
piece->attach(tile); 3
bounceRec.nmResp 1
own 2
Q_ASSERT(c.parent 2
bigint_add2_nc(z 1
updateSideWidgetLocations(); 2
BrowserApplication::downloadManager()->handleUnsupportedContent(reply); 1
if(from.isEmpty()) 1
rm->setItemChecked(14, 1
XSetClassHint(x11Display(), 1
CPPUNIT_ASSERT(QIODevice::ReadWrite 1
QList<QHostAddress> 2
findSubTag(el, 4
QPixmapCache::insert( 4
Q_ASSERT(m_history); 1
filesize 1
WId 3
foreach(PsiToolBar 2
wbitem->setElementId(wbitem->id()); 1
:QThread(parent) 2
d->form 2
alert=false; 2
LEGOPTP.rosterAnim 1
mMouseOutsideSlop 1
if(!isAvailable()) 1
ViewActionsService::~ViewActionsService() 1
CRL::~CRL() 1
this, 156
migrateBoolEntry(tag, 44
d->cv->qa_assignAvatar->addTo(avpm); 1
d->buttons.removeAll((IconToolButton 1
app( 1
e.xclient.data.l[3] 1
remember_set 1
ui_.lb_host->setEnabled(on); 1
core->setBrowserPath( 2
IdlePlatform::~IdlePlatform() 4
out.insert(Email, 1
expectingUploadData 1
if(!isValid() 3
if(settings.status() 1
v_active 3
mLOD(0), 1
AccountModifyDlg::AccountModifyDlg(PsiCon 1
SecureMessage::Error 5
oldTrackBarPosition 2
painter.translate(delta 1
pdata 1
protocol->sendQuit(sock); 1
d->ssfmin 1
ui_.pb_hangup->setEnabled(false); 6
:MemoryRegion(from) 1
addStatus(XMPP::Status::Away); 1
gHoverView->resetLastHoverObject(); 1
MarkSweepGC::Entry 1
p.setPen(Qt::black); 1
data.d 1
m_scale_level_min 1
entropy_sources.insert(entropy_sources.begin(), 1
d->interface->dmScheduled 4
gAgent.startAutoPilotGlobal(mActions[mCurrentAction].mTarget); 1
jsdtrace_frame_linenumber(cx, 2
bar.addTab(); 2
hasVoice 1
quiting 1
d->mainMenu 1
startProvider(p); 2
connect(licenseButton, 1
QDeviceButtonManager 6
hasText 1
foreach(RosterExchangeItem 1
m_strOldName 1
if(e->alerting) 1
TestPath::~TestPath() 1
).toOptions(this); 10
CPPUNIT_ASSERT_EQUAL(PrivacyListItem::Deny, 1
ca_flag 1
ui_.le_city->setModified(x); 1
Exception::what() 1
redistribute(state); 1
p->drawPixmap(pxrect, 1
add_act 1
G(current_thread)->sleep_for(state, 1
connect(sw, 2
connect(&dtextTimer, 1
Q3ListViewItem::insertItem(i); 1
QCoreApplication 2
&& 71
QObject( 7
actionOpenChat(i->u()->jid()); 1
qLog(AtChat)<< 2
k 6
newopt.icon 2
list.removeAll(i); 2
grid=new 1
replace 1
setFrameStyle(QFrame::NoFrame); 1
showAccounts_ 1
connect(ck_automatic_resource, 2
createInternalConnections(); 1
setTabBar(m_tabBar); 1
alertFrameUpdated(); 1
item->setParent(this); 2
QObject::connect(Cancel, 1
if(!d->loop) 1
CGContextClosePath(context); 1
QPushButton::keyPressEvent(event); 1
Typing_MultipleSuggestions 1
XData::FieldList::ConstIterator 1
closeButton_->setFixedWidth(buttonwidth); 1
modify_buttons_[d->tb_seSend] 1
Private::stickToWindows 1
setToolTip(toolTip); 1
connect(t,SIGNAL(finished()),SLOT(changeDefaultList_finished())); 1
gFullObjectUpdates 1
QCA_logTextMessage(QString().arg(i.name, 1
m_tabWidget->lineEditStack()->setMinimumWidth(120); 1
m_output.setFileName(fileName); 1
tog_self 1
whoStarts->setEnabled(false); 1
set_sign(BigInt::Positive); 1
mainMenuBar()->insertItem(tr(), 7
m.urlAdd(Url(url, 1
XChangeProperty(qt_xdisplay(), 1
bo->insertWidget(n+1, 1
feature 3
bounceRec.qType 1
if(v_showHidden 1
out.write(a); 1
zoom(m_scale_level); 1
recordByNodeId_[id] 1
i.dirWatch 1
data_layout->addWidget(data_container_); 1
types 6
actQuit->setMenuRole(QAction::QuitRole); 1
createTrayIcon(); 1
type_ 23
timers 1
DesktopEntry 2
seen[obj] 1
if(j.compare(me->from(), 2
LLUUID 5
ui_.te_status->setAcceptRichText(true); 1
model->canFetchMore(QModelIndex()); 1
d->password 5
d->act_icon 1
DIGIT(a,i) 1
Q_ASSERT(qVariantCanConvert<QString>(variant)); 3
e.written 1
state->om->set_class(ns, 1
port_allocator_ 1
nb_rows++; 2
OStream 5
connect(d->ck_auth, 1
context->account()->actionDefault(context->jid()); 1
allOffline 1
u.addQueryItem(,jid.host()); 1
s.setIsInvisible(true); 1
setText(tr().arg(icon.name())); 1
i->startRename(0); 1
TCHAR 1
bytes_to_read 1
Tile 7
TicTacToe 1
PGPKey::PGPKey() 1
connect(tb, 1
for(QList<SearchResult>::ConstIterator 1
btn->setEnabled 2
rv 2
block_targets_.clear(); 1
m_fRightThumbX 3
m_fRightThumbY 3
m_dwPacketSize 1
d->statusGroup->setPsiIcon(IconsetFactory::iconPtr()); 1
session_->Accept(); 1
LEGOPTP.font[fMessage] 1
i->setOpen(true); 3
diagnosticText 14
cursor.insertText(QString(QChar::ObjectReplacementCharacter), 1
d->checkTimer 1
if(s.length() 2
:type(TypeCRL), 1
real->stop(); 1
map[57] 2
reg.grow_to(round_up(size() 1
s.host 1
connect(ui_.cb_default,SIGNAL(activated(int)),SLOT(default_selected(int))); 1
TestResult::addFailure( 2
:	QTreeWidgetItem(QTreeWidgetItem::UserType 1
thread->wait(); 1
removeSelf(); 2
setAuthCondition(r); 6
referenceMeta 1
encEnabled 1
tree.saveOptions(http: 1
hb->addWidget(pb_clear); 1
ui_.le_nickname->setEdited(x); 1
m_amp.SetVolume(m_nCurrentVolume); 1
d->set_username 1
if(ksl) 1
bg_se->insert(d->tb_seIncomingFT); 1
setWidgetsEnabled(true); 10
widget.currentWebView(); 1
while(recentList.count() 2
MainWin::Private::Private(PsiCon 1
if(defIdx 1
Q_ASSERT(!started); 1
ev.data 4
p->drawPixmap(x, 7
fields_container_->setWidget(fields_); 1
InfoContext 3
cookieSettings.setValue(QLatin1String(), 4
m_thrownException( 1
ContactListContact::ContactListContact(ContactListGroupItem 1
m_gameplay_path->setChecked(settings.value(, 1
model->headerData(0, 1
emitted_peerCertificateAvailable 2
QStringList::Iterator 27
DownloadModel::DownloadModel(DownloadManager 1
QList<XData::ReportItem>::ConstIterator 1
ruby_frame->last_func); 1
entry 16
d->tb_url 1
clients.clear(); 1
qDeleteAll(tabs_); 1
G(blokctx)->set_object_type(BContextType); 1
CPPUNIT_TEST(testVersionStringToInt_TooManyParts); 1
LLMemType 8
top2->setPalette(backgroundPalette); 2
createCommon(); 1
list.append( 2
authed 2
TestFixtureFactory 1
CFStringGetCString( 1
layout 3
QList<FileItem> 1
d->leftover_stdout.clear(); 2
account_->dialogRegister(this); 1
lb_path->setTextInteractionFlags(Qt::TextSelectableByMouse); 1
showAway(v_showAway); 1
ui_.le_orgName->setReadOnly(x); 2
widget->addAction(this); 1
m_statusBarText 1
actVCard->addTo(&p); 1
am->insertItem(tr(),17); 1
AttachView::~AttachView() 1
d->configDlg->setRoleAffiliation(s.mucItem().role(),s.mucItem().affiliation()); 1
opt.state 1
TEST_CASE(simple7); 1
m_start(start), 1
mhs->pt.y 1
if(!configIsValid(map)) 1
if(vr 1
LLSelectMgr::getInstance()->validateSelection(); 1
X11KeyTriggerManager() 1
if(is_v6) 1
setAcceptHoverEvents(true); 1
ca_done 3
connect(saveGeometryTimer_, 1
propagated 1
el.setAttribute(http: 1
task->primitive_return(ret, 1
PEPRetractTask(Task 1
mp->drawPixmap(0, 1
toolTip 2
d->render(); 1
pm_settings_->addAction(act_color_); 1
init_step 5
if(n.isEmpty()) 1
bignum_bitwise_op(BITWISE_OP_OR, 1
connect(t,SIGNAL(finished()),SLOT(createFinished())); 1
d->hp_host->setHost(s.host); 1
login 1
if(r.status().hasMUCItem()) 1
d->tb_icon->setPopupMode(QToolButton::InstantPopup); 1
out.privateKey 3
signPartDone 2
el.appendChild(t); 1
isd->show(); 1
TabWidget::TabWidget(QWidget 1
d->ck_useleft->setWhatsThis( 1
buffer->read_bytes(i); 1
d->alerting 6
autoProtocol 1
d2->bytes[new_size] 2
if(i->index 1
Q_ASSERT(c.next 2
PSendSysMessage(LANG_YOU_HEAR_SOUND, 1
lw->clear(); 1
p->setPen(Qt::black); 5
locks[] 4
selectStatusPreset(0); 1
request_rec 1
d->async_writeEntry(KeyStoreWriteEntry(kb)); 1
PsiToolTipHandler() 1
connect(di.changeTimer, 1
a->setText(idx.data().toString()); 1
setLastUsedOpenPath(QDir::homeDirPath()); 1
worker 1
if(entry->marked_p()) 1
checkLimit(j.userHost(), 2
buf_stdout.append(a); 1
makeMove( 1
controller.runTest( 1
TestFailure::failedTest() 1
d->pb_reg->setEnabled(false); 1
m_zoomLevels 3
d->pb_form_submit->setEnabled(false); 2
jsdtrace_function_info(JSContext 1
reNumber(); 3
if((vmm 1
item->setText(title); 1
connect(pb_rename, 1
menuBar()->insertItem(tr(), 2
c0.findreplace 2
bg_font->insert(d->pb_fPopup); 1
typeAtom, 1
d->tuneController 2
data.tasks->clear(); 3
if(alert 1
countWarning(); 1
++iter; 5
current_pos 1
anim 3
geom.moveTop(r.top()); 1
ActionList::Private::Private( 1
QList<Tile 2
fixerParent->fixerChildren.append(this); 1
assert(false); 1
statusMsg.replace(); 2
setData(d->vcard); 6
EventHandler::~EventHandler() 1
mainWinCleared 1
connect(passphraseDlg_,SIGNAL(finished(int)),SLOT(passphraseDone(int))); 1
Qt::DropActions 3
entries.push_back(entry); 1
snprintf(err_buf, 1
WbNewPath::~WbNewPath() 1
bg_sePlay->insert(d->tb_seChat1Play); 1
setup(state, 1
d->in.pem 1
actionAgentSetStatus(u->jid(), 1
JT_XRegister::JT_XRegister( 1
mListenerVObject->requestInventory(); 1
drawGroupIcon(); 6
connect(ui_.pb_destroy, 1
if(f.open(IO_ReadOnly)) 1
d->save->setText(tr()); 1
dlg->lv_disco->takeItem( 3
statusList->setState( 5
FUN_CLASP(fun)) 1
downButton_ 1
mOffsetY 2
m_protectors.push_back( 1
template<int 5
if(d->pd) 1
d->setIcon(i, 1
acceptButton->setFocus(Qt::OtherFocusReason); 2
suites().leaveOnly( 1
m_recentFotowallUrls.removeAll(fotowallUrl); 1
:	LLTool( 1
mVisibleOffScreen(FALSE), 1
account_=(PsiAccount 3
destination.setY( 6
d->sec_buf.clear(); 2
requires<LLTabContainer>(); 1
Q_UNUSED(msecs); 2
config_icon.addPixmap(QPixmap()); 1
model()->setData(model()->index(row,0,index),QVariant(jid.bare())); 1
ProviderItem(PluginInstance 1
LLSegment 1
FileWatch2 1
mAudioPanel 2
ui_.busy->start(); 8
if(!d->activeIds.contains(id)) 3
rotations 1
obj->pointer 1
addItem(metacontact, 1
titleText->setText( 2
gGL.getTexUnit(0)->disable(); 1
addWidget(button); 1
action->setText(item.title()); 2
isAvailable_ 1
d->async_writeEntry(KeyStoreWriteEntry(cert)); 1
CheckMemoryLeakInClass 1
LLFloaterTelehub::~LLFloaterTelehub() 1
OAuthWizard 1
fields_ 3
GPGProc 3
XmlOutputter::addFailedTests( 1
switch(v) 1
d->initContents(title, 2
Invalid_Message_Number::Invalid_Message_Number(const 1
item.bits 1
QPlainTextEdit 1
m->addAction(tr(), 1
StatusModel::instance()->setTheme( 1
primitive_func 1
errmap[GpgOp::ErrorEncryptUntrusted] 1
set_syserr(EREMCHG, 1
Options::ToolbarPrefs 2
model( 1
mStarted(FALSE), 1
c1.setsubstr 1
if(addr.isEmpty()) 1
m_player_time.start(); 3
itemFilter_(FILTER_ALL)	{ 1
if(qVersionInt() 3
closest_pieces.insert(piece); 1
set_symbol((SYMBOL)obj); 1
LLGLDepthTest 5
m_contentsRect 1
createChangedMap(); 1
bzero(data, 1
bool			hp; 1
m_timer.start(50, 1
ui_.cb_default->insertStringList(names); 1
GameBoard::updateChat(const 1
sortedActions 1
PythonPlugin(); 1
this->mPreferenceCore->apply(); 1
model_ 3
pControl->QueueAnimation(animType); 1
v_showAway 2
actionsService_->assignKey(contact); 1
Q_ASSERT(!children_.contains(widget)); 1
d->pb_http_deny->setFocus(); 1
if(carry 2
hb->addWidget(d->cb_proxy); 1
manager_->setClientInfo(resource, 1
Q_ASSERT(columns 1
CPPUNIT_ASSERT(c.node() 1
if(this->val 5
QPushButton::mousePressEvent(event); 1
use_uni 1
set_default_allocator(modules.default_allocator()); 1
MacKeyTriggerManager::Qt_Mac_Keymap 1
eventNotifier.keys 1
d->pb_reg 1
EDB 3
tune.setTime(stream.readLine().toUInt()); 1
disconnect(d->le_sp_priority, 1
optionsChanged(); 3
TabDlg::TabDlg(TabManager 1
DiscoList 2
KeyLoader::KeyLoader(QObject 1
readBoolEntry(p_roster, 1
md5_process(md5_state_t 1
FileRequestDlg::~FileRequestDlg() 1
CertificateInfoType::Section 2
++index; 1
~ConsoleWorker() 1
sign 5
ca_skip 5
p.resize(len 1
m_pStream 3
type_assert(obj, 13
ui_.le_host->setFocus(); 2
glDeleteLists(displist, 1
foreach(WbDlg 1
if(!ksl) 2
QCOMPARE(history.historyLimit(), 2
d->le_sp_priority->setText(QString::number(preset.priority().value())); 1
bg_font->insert(d->pb_fRoster); 1
m_corners[1][1] 1
pixmap_.convertFromImage(i.scaled(MAX_AVATAR_DISPLAY_SIZE,MAX_AVATAR_DISPLAY_SIZE,Qt::KeepAspectRatio,Qt::SmoothTransformation)); 1
langs 1
CPPUNIT_TEST(testIsBlock_NoBlock); 1
g_ksm->thread->call_mutex.lock(); 1
else			/ 1
d->cb_tabGrouping->removeItem(4); 4
connect(account->serverInfoManager(),SIGNAL(featuresChanged()), 1
account->setStatus(status); 1
ui_.log->setFont(f); 1
configSaveCurrentModel( 3
sei.cbSize 1
saveGeometryTimer_ 1
if(line.isEmpty()) 1
clear(root_); 2
lateMigrationData.sp[preset.name()] 1
tabBar_->hide(); 1
mPrefsVoice->setDefaultBtn(default_btn); 1
d->offset 2
typingStatus 6
bring(n, 2
tabWidget_->setTabText(chat, 1
le_fname->setText(fname); 1
io_object_t 1
rc2m->addResource(r, 1
graphicsItem()->paint(&painter, 1
out1<<; 1
Q3PtrList<ContactProfile> 1
d->act_clear->addTo( 1
HttpAuthManager::HttpAuthManager(XMPP::Task 1
d->twitterapi->deleteDM( 1
promptPassphrase(eventItem.id,eventItem.event); 1
UserListItem::~UserListItem() 1
TestCase::run( 1
d.rmdir(name); 2
p_realm 1
d->c->setClientParams(0, 3
d->pb_http_deny 1
x509_supported 2
if(_lb_enabled) 2
d->le_oeFTComplete->setText(PsiOptions::instance()->getOption().toString()); 1
SxeNegotiation 4
s2 1
s1 5
if(d->lib) 1
d->pipeAux.writeEnd().close(); 2
ASSERT_EQUALS(-1, 17
gameplay_layout->setRowStretch(5, 1
layout->addWidget(m_label); 1
sText 1
setPriority(priority); 1
sp.toOptions(PsiOptions::instance()); 1
if(caps.contains('c')) 1
BookmarksMenu::BookmarksMenu(QWidget 1
CompilerOutputter::extractBaseName( 1
KeyStoreManagerGlobal() 1
sx 2
GrowlNotifier 1
modelAccounts.insert( 1
ss 5
sp 5
sw 1
st 10
appendMessage(m_, 1
sh 3
AccountsComboBox::~AccountsComboBox() 1
sl 3
connect(m_localServer, 1
client_init 1
d->fileName, 1
:type(TypeCertificate), 1
m_show_path 1
themes_layout->addLayout(themes_button_layout); 1
TEST_CASE(if_with_and); 1
m_showMenuBarAction->setShortcut(QKeySequence(Qt::CTRL 1
p->init(); 1
account->setPassword( 1
indices.append(QString::number(idx)); 1
switch(screen) 1
errorDetail; 1
pixmap 6
delegate_.applicationName 1
setFocusProxy(edt); 2
Q_ASSERT(in.isEmpty()); 1
pm_settings_->addAction(act_history_); 1
setContactChatState(StatePaused); 1
dc.SetWindowOrg(0, 1
g_event->handlers.removeAt(at); 1
busySources 2
JSType 1
play_buttons_[d->tb_seIncomingFTPlay] 1
corner->setVisible(visible); 1
set_syserr(EL2HLT, 1
TokenAsker::TokenAsker(QObject 1
if(!res.resolve(state, 4
d->waiting 6
d->active 5
m_toolbarSearch->selectAll(); 1
QTextBlockFormat 3
topLevelItem->setText(0, 1
NEW_STRUCT(n_obj, 1
std::map<const 1
XDataField_Fixed(XData::Field 1
fig[3] 1
di.setJid 1
col.addCertificate(entries[i].certificate()); 1
dialog.show(); 4
t->addTab(it.current()); 1
d->le_newNickColor->setText(cs); 1
insertItem(prevRow, 1
item->setVisible(true); 2
presets 1
ASSERT_EQUAL(42, 2
d->jid 12
JT_Register 8
mapSignals(); 2
shortcuts.append(QKeySequence(Qt::CTRL 11
QList<QString> 22
int	n1, 2
~KeyStoreTracker() 1
gMessageSystem->newMessageFast(_PREHASH_ObjectAdd); 1
cb_group->setCurrentItem(0); 2
cookiesTable->setAlternatingRowColors(true); 1
auto_offline_field.setLabel(QObject::tr()); 1
setToolTip(); 1
ui.statusEdit->installEventFilter( 1
mLabelSegments.push_back(LLHUDTextSegment(iter->substr(line_length, 1
setup(Decode); 1
open 2
acc.customAuth 1
QPointer<ToolTipPosition> 1
ids.append(id); 1
d->lb_top 1
((object->usePhysics() 1
bits 1
connect(add_button, 1
hb2->addWidget(d->lb_count); 1
waitForAccounts( 1
connect(stream, 8
process->setProcessChannelMode(QProcess::ForwardedChannels); 2
if(get_byte(j, 1
d->thread->setSecurityEnabled(false); 1
password.clear(); 1
tab->loadUrl(webView(index)->url()); 1
Q_ASSERT(sec.isSecret()); 2
sn_write->setEnabled(false); 3
cb_ssl->setCurrentIndex(cb_ssl->findData(acc.ssl)); 1
++it; 18
state->run_best_thread(); 1
Q_UNUSED(posInDocument); 1
w.resize(600,300); 1
d->ck_keepSizes->setWhatsThis( 1
statusFont.setItalic(true); 1
define_method_simple_ok 3
gpg.submitPassphrase(asker.password()); 1
m_tabWidget->addWebAction(m_copy, 1
QCA_logTextMessage(QString().arg(q->objectName(), 2
pb_add->setDefault(true); 1
modelAccounts.removeAll( 1
setScene(scene_); 1
AcceptOnlyFromSitesNavigatedTo 1
ui_.vsplitter->optionsChanged(); 1
TextOutputter::printFailureType( 1
LEGOPTP.font[fPopup] 1
d->le_user->setText(); 1
blockFormat.clearProperty(QTextFormat::BlockTrailingHorizontalRulerWidth); 2
m_reload 1
Q_ASSERT(model->hasChildren(topIndex) 1
mle->setTextCursor(cursor); 1
pendingEvents_.push_back(i); 1
if(!c.isNull()) 2
if(ui_.le_city->isModified()) 1
inserted 1
sType 1
connect(&doneTrigger, 2
list.first() 1
c->start(); 2
d->cb_bounce->setItemData(0, 1
manager_->setIncomingEvent(contact, 1
m_rect 3
Array 28
group->setGroupInfo(QString().arg(online).arg(total)); 1
m_commands.push(command); 4
d->capsRegistry->save(file); 1
XmlDocument::setEncoding( 1
ensureItemVisible(item); 1
menu->clear(); 1
Q_ASSERT(disco); 1
substring.clear(); 2
G(array)->instance_type 1
encode(output 1
d->stripFirstAnimFrame( 3
ck_connectAfterSleep->setChecked(acc.opt_connectAfterSleep); 1
LLHUDIcon 1
QMenuBar 3
cb_ssl->addItem(tr(), 2
resource 6
device_->close(); 1
nodeprep_table.clear(); 1
text_color.mV[3] 2
TEST_CASE(varScope1); 1
setDefaultRenameAction(Q3ListView::Accept); 1
frame->setHtml(html, 1
actBugReport->setWhatsThis 1
out.resize(out.size() 3
d->pb_sysDetails->setPalette(customPal); 1
--(global->refs); 1
connect(act_send_message, 1
SecureLayer::SecureLayer(QObject 1
wbWidget_->setMode(WbWidget::Scroll); 2
clients.insert(client); 1
if(!node_.isNull() 1
d->peer 2
ae->setTimeStamp(QDateTime::fromString(sTime, 1
if(instances[n]->addr 1
PopupLayout 2
LEGOPTP.sizeChatDlg 1
out<<; 2
if(otherEntry.isNull()) 1
if(!global) 2
session->discardStream(); 1
d->tb_pgp->setEnabled(false); 1
if(wasBlocked) 1
screen 2
StatusListPrivate::~StatusListPrivate() 1
JAVASCRIPT_EXECUTE_START( 1
Loop::Loop(struct 1
accounts(0), 1
PieceHelper(const 2
d->le_fPopup->setFont(PsiOptions::instance()->getOption().toString()); 1
entry_append(state, 4
p->drawRect(0, 2
server.clients.erase(myself); 1
msg.module 5
console.writeSecure(codec->fromUnicode(str.unicode(), 1
d->issuerList 1
m_proxyModel, 3
NeoPreferredNetworkOperators::~NeoPreferredNetworkOperators() 1
d->twitterapi->deleteUpdate( 1
TEdit 1
toolBar->addWidget(lb_ident); 1
memcpy(der.data(), 2
gGL.getTexUnit(0)->enable(LLTexUnit::TT_TEXTURE); 2
font.setUnderline(false); 1
zoomFit(); 3
createNegotiation(SxeNegotiation::Joiner, 1
subscribe(client_->jid().bare(),task->node()); 1
CPPUNIT_ASSERT_EQUAL(PrivacyListItem::SubscriptionType, 1
ConstraintTypeKnown 1
d->mle->setUndoRedoEnabled(false); 1
Drawer::canTake(int 1
formTitleId_(formTitleId) 1
if(rest) 2
setGlobalStatus(Status()); 1
GUITestManager::instance()->registerTest(this); 2
trayOwnerDied(); 1
le_host->setEnabled(false); 1
manager_->setStatus(account, 1
message->setAlignment( 1
CGUIRSSControl::CGUIRSSControl(DWORD 1
m_navigationBar->addAction(m_historyBack); 1
m_shortDescription 2
if(!d->isActive) 2
initStyleOption(&panel); 2
ui.settingsButton->setIcon( 1
m_leftLayout->setContentsMargins(0, 1
le_font[x]->setFont(fnt); 1
action->addTo(this); 1
--size; 1
appendMessageFields(m); 1
if(incoming.edit->type() 1
TextTestRunner::setOutputter( 1
setupUi(this); 31
d->ck_popupOnOnline->setChecked( 1
Q3HBoxLayout 1
webView->loadUrl(url, 1
ContactListGroupItem::ContactListGroupItem(ContactListGroupItem 1
setSelected(true); 1
if(d->pa->hasPGP()) 1
Transport::~Transport() 1
loop->quit(); 1
hdrs 2
extern 36
qSort(commands_); 1
ui_.cb_lists->setCurrentIndex(0); 1
pa->setEnabled(s); 1
neededwidth 1
d->dns.stop(); 1
sort(0, 1
lbx_proxy->changeItem(s, 1
passwordDialog.iconLabel->setPixmap(mainWindow->style()->standardIcon(QStyle::SP_MessageBoxQuestion, 1
(y 1
SAFELY(Pa_StartStream(m_pStream)); 2
m_mazes_size 1
rest 2
that->clearWState( 1
GetPrivacyListTask(Task 1
RestoreApplicationDockTileImage(); 1
d->nickname 1
ResetSessionAndData 7
hElement.appendChild(doc.createTextNode(QString::number(rect.height()))); 1
if(!is_v6 1
v_m.setNick(nick); 1
state->return_value(val); 1
stacked_->setCurrentWidget(widget); 1
RegistrationDlg::RegistrationDlg(const 1
lb_instructions->setText(tr().arg(d->jid.full())); 1
EventItem::~EventItem() 1
tree.setOption(,QVariant(true)); 2
desktop->screenNumber(p) 1
LLUI::pushMatrix(); 3
changes.insert(SxeRecordEdit::ReplaceN, 1
LLToolSelect::handleObjectSelection(mPick, 1
m_cookieJar->load(); 1
gl_segmented_rect_3d_tex_top(border_scale_vec, 1
setEditTriggers(QAbstractItemView::EditKeyPressed); 1
channel->call(ret); 1
Private(IconLabel 1
d->lb_url 1
d->jsp->publishUpdate(this, 1
DiscoItem::Identities::ConstIterator 2
ui_.le_fullname->setModified(x); 1
closeButton_->setText(); 2
connect(pb_next,SIGNAL(clicked()),SLOT(doNext())); 1
QWhatsThis::add(le_font[3], 1
stopQueueing(); 1
GO(exc_rex).set(rex); 1
parent->statusBar()->addPermanentWidget(m_status_time_message); 1
msg->getString(, 1
QGraphicsView::hideEvent(event); 1
connect(pb_next,SIGNAL(clicked()),SLOT(doExecute())); 1
mRadius 2
st=s.show(); 1
qDebug(QString().arg(id).toAscii()); 1
b.resize(at); 1
start(); 3
gb_prop->setEnabled(true); 1
switch(state) 1
item.setJid(jid); 1
.arg(reply->errorString()) 1
c1.remove 1
lbx_proxy->insertItem(s.name); 1
autoItemsChildren(); 2
QList<CRLContext 3
gb_open->setEnabled(FALSE); 1
toplbl->setIcon( 1
BakerGC::Heap 1
LPCTSTR 2
setDynamicSortFilter(true); 1
SET(list, 1
IconAction::setIcon(icon->icon()); 1
EventDlg::EventDlg(const 2
btn->setPsiIcon(d->icon, 1
glBegin(GL_QUADS); 3
m_hint_action 1
~IconsetDetailsDlg() 1
LLViewerParcelMedia::start(); 1
PsiPrivacyManager::~PsiPrivacyManager() 1
XSetTransientForHint( 1
h->edb_resultReady(r); 1
0x38, 1
bar.setShowTabBarWhenOneTab(false); 1
ign_sigpipe 1
setFocusPolicy(Qt::NoFocus); 3
int	fh, 1
BriefTestProgressListener::startTest( 1
if(prolog.startsWith()) 1
unit->PlayDistanceSound(dwSoundId,m_session->GetPlayer()); 1
setGlobalStatus(s, 1
ASSERT_EQUALS(all 1
names[items[n]] 1
queuedSendTabTo(getTab(tab), 1
tab->setSimplifiedCaptionEnabled(simplifiedCaption_); 1
model->currentStatus()->slotReply(); 1
gettimeofday( 1
reply=QString().arg(fromJid); 4
while(!cls->nil_p() 1
slotUpdateWindowTitle(); 1
if(write(file.get_fd(), 1
modify(lv_accs->currentItem()); 1
aSend(m); 3
unlock_mem(ptr, 1
QTextFormat::setProperty(IconText, 1
connect(ui_.pb_cancel, 4
d->le_http_id->setEnabled(false); 2
mask 2
while(total 1
Config& 1
connect(worker, 4
d->node 1
glEnable(GL_DEPTH_TEST); 1
QAbstractButton 2
m_corners[3][0] 1
if(!conf.isEmpty()) 2
NeoVibrateAccessory::NeoVibrateAccessory 1
statusString 3
gMessageSystem->addUUIDFast(_PREHASH_GroupID, 1
m_player_steps(0), 1
for(UserListItem 2
m_history.clear(); 1
tw 1
tt 1
tr 6
ts 3
connect(d->psi->contactList(), 1
th 1
this->StoresBytes 1
graphicsitem_.setZValue(std::numeric_limits<double>::max()); 2
te 1
tb 3
Object(CLASS_OF(ex.value())) 4
if(!iobj->forwarded_p()) 1
toolbar->addSeparator(); 1
manager_->addResource(resource, 1
childs[i]->Draw(); 1
data.pa->psi()->recentNodeAdd( 1
m_paths.append(new 2
t0 12
t1 12
bg_color->insert(d->pb_cDND); 1
d->lb_status->setToolTip(QString()); 2
edit->setToolTip(f.desc()); 2
CPPUNIT_TEST(testSmallerThan_Equals); 1
m_requestFileName 1
menuActions_[]->setEnabled(contact->hasManualAvatar()); 1
addNickColor( 1
obj->field_count 2
HistoryManager 3
if(d->mle->text().isEmpty() 1
d->infoMap 2
if(isSecure(r.name()) 1
headerView->resizeSection(ContactListModel::PictureColumn,iconSize().width()); 1
actionsService_->openWhiteboard(metacontact); 1
negotiation->session->endSession(); 1
StatusSetDlg::StatusSetDlg(PsiAccount 1
legacy_ssl_probe 2
QPushButton::setText(newtext); 1
XSendEvent(xdisplay, 1
dialogs_.takeAt(dialogs_.indexOf(dialog))->deleteLater(); 1
isBouncing 2
doc.childNodes().at(0).save(stream, 1
global->manager->changePriority(name, 1
for(Form::Iterator 2
LLColor4(1.0f, 5
Q3PointArray		vl; 1
f.write(powerStr); 2
d->remote.addr 1
AgentList 2
strCurOutput.erase(i3+iRemove,2); 1
GCFindDlg::GCFindDlg(const 1
painter->restore(); 2
toolBar->addAction(actBrowse); 1
parent.update(); 1
bg_sePlay->insert(d->tb_seIncomingFTPlay); 1
loadingAnimation 1
d->mimeTypes 2
appendEmoteMessage(spooledType, 1
myPath.addEllipse(circle); 1
if(locked) 1
remove.push(c); 1
tryAgain(); 1
cookieSettings.beginGroup(QLatin1String()); 2
Drawer::xchg(GameBoard::FigureType 1
pm.insertItem(IconsetFactory::icon(), 13
d->le_to->insert(name); 1
QDomElement 343
pid_t 2
ui.statusCountBox->setValue( 1
qWarning(qPrintable(QString().arg(newUrl))); 1
m_findNext->setShortcuts(QKeySequence::FindNext); 1
if((int)line.length() 1
ui_.pb_submit->setEnabled(true); 2
bg_se->insert(d->tb_seOffline); 1
if(str.at(at) 1
scan 2
TestSuccessListener::addFailure( 2
m_controls_left 1
LEGOPTP.asXa 1
xml.writeAttribute(); 1
middle3->setPalette(backgroundPalette); 2
item.setIQ(ui_.ck_queries->isChecked()); 1
item.setAction(PrivacyListItem::Deny); 1
foreach(PsiPlugin 2
msleep(100); 1
lvi->setText(4, 1
painter->setPen(option.palette.color(cg, 2
actRefresh->addTo 1
i->repaint(); 2
MacDock::startBounce(); 1
ui_.pb_edit->setEnabled(b); 1
Private(PsiIconset 1
LLViewerObject::const_child_list_t& 5
QWebHistoryItem 2
Tokenizer::deleteTokens(tokens); 1
ani->setEasingCurve(QEasingCurve::InQuad); 1
parseString(data); 1
g->deleteLater(); 1
connect(act_color_, 1
p.settings.useAuth 1
d->mle->setFocus(); 3
roster.insert(cur_status, 1
applicationPool 1
old_trayicon_->show(); 4
d->twitterapi->friendsTimeline( 1
XDataField_ListSingle(XData::Field 1
callbacks[0].context 2
if(cvi 1
karatsuba_mul(z0, 1
removeButton_ 1
icon->stop(); 5
cv->parentWidget()->layout()->update(); 1
found 37
if(size 10
parentWidget_->move(geom.topLeft()); 1
edit.removeWidget(button); 2
d->pb_find->setEnabled(false); 2
QContextMenuEvent 1
CertificateInfoPair::~CertificateInfoPair() 1
QList<X11KeyTrigger 1
if(badPassphrase) 1
e.setPasswordKeyStore(pstyle, 1
WelcomeDialog 1
DirectoryMapper 2
StatusList::StatusList( 1
gototwitterAction 1
m.setFrom(s.from()); 1
layout->setContentsMargins(10, 1
_client 1
d->tb_url->setEnabled(false); 1
li.cbSize 1
int	n; 3
updateStatusbarActionText(showStatusbar); 1
for(n2 6
for(n1 2
hist->height() 1
CGPoint 2
mBuffer->eraseSegment(it); 1
Strings 4
updateTray(); 3
QHash<SxeRecordEdit::Key, 2
actionsService_->newBlankMessage(account); 1
updateLastSeen(); 1
hb->addWidget(pb1); 1
TestFactory 2
LEGOPTP.ppJidClip 1
v_text 2
QVERIFY(widget.previousTabAction()); 1
old_winid 1
v_jid 3
d->tb_url->setPsiIcon(IconsetFactory::iconPtr()); 1
PlugInParameters::getCommandLine() 1
cookiesTable->setSortingEnabled(true); 1
RenderOpts::hiColor 1
roster.remove(d->cur_status); 1
d->getAction()->setChecked(d->prefilterShowAway); 1
i->jdns->setNameServers(ns_v4); 1
d->tw_customRoster->resizeColumnToContents(0); 1
list.clear(); 8
y[j 1
whiteboarding 1
AuthEvent::AuthEvent(const 2
HANDLE 7
nickJid.nick 1
if(!d->multi 1
a[altv[rand()%(altc--)]] 1
keybind.toOptions(o, 1
passwordDialog.iconLabel->setText(QString()); 1
nBoard 1
m_pressedButtons 1
model()->removeRow(idx.row(), 1
le_resource->setWhatsThis( 1
if(ui_.le_ext->edited()) 1
m_dwDefaultFocusControlID 3
data[count] 2
verticalScrollBar()->minimum(); 1
setLargeIcons(false); 1
QTwitterApp::mainWindow()->retranslateUi(); 1
Console::Type 3
if(!meta2) 1
p->fillRect(0, 6
m_visibleCondition 2
MemoryRegion::MemoryRegion(int 1
BookmarkTask 4
d->updateIcon(); 2
MyKeyStoreEntry 3
QWhatsThis::add(d->ck_raise, 1
CPPUNIT_TEST(testFromXml_AllChildren); 1
setPrivacyTabEnabled(true); 1
pExpression->QueryIntAttribute(,&iCompare); 1
iIndex 5
run_file(dir 1
m_bCanPause 2
points[2], 1
setAutoFillBackground(true); 1
ContactListGroup::ContactListGroup(ContactListGroupItem 1
sounds_field.setRequired(false); 1
.arg(PluginManager::instance()->shortName(d->cb_plugins->currentText())); 1
ASSERT(pMemDC); 1
groups.removeOne(tr()); 5
servers_.append(server); 1
connect(ui_.pb_add,SIGNAL(clicked()),SLOT(addRule())); 1
ViewStateManager::AccountSpec::AccountSpec(Account 1
connect(d->pb_form_submit, 1
d->tb_pgp->setChecked(false); 1
type_field.setRequired(false); 2
ui_.le_ext->setEdited(x); 1
KeyStoreInfo::KeyStoreInfo() 1
Roster::~Roster() 1
connect(d->le_find, 2
setLastUsedSavePath(QDir::homeDirPath()); 1
instanceForQJDns.remove(i->jdns); 1
ops.removeAll(op); 3
busy_->stop(); 3
++weight; 1
crl 2
LEGOPTP.ppFile 1
d->init(titleIcon, 1
item->setData(QVariant(ui_.nickname->text()), 1
out[6] 1
VCard::Address 4
KeyStoreManager::shutdown(); 1
SystemTimeToFileTime(&st, 3
takeFigure(x, 1
if(!ul.isEmpty()) 4
VersionData 2
setMinimumHeight(0); 1
secList.append(rname); 1
meta_el.appendChild(info_el); 1
lcto_item 1
OptionsTabApplication::OptionsTabApplication(QObject 1
p->setPen(isSelected() 1
d->popup->show(); 1
clearPhoto(); 2
grep->show(); 1
d->lv->doResize(); 1
frame->print(&printer); 1
settings->setAttribute(QWebSettings::PrivateBrowsingEnabled, 2
d->ok 2
p.setColor(QPalette::Window, 1
FIXNUM 6
QTest::addColumn<QUrl>(); 2
if(isActive()) 2
); 288
dlg->lv_disco->insertItem( 1
ui_.listView->setModel(model_); 1
Q_ASSERT(frame 2
if(response.hasChildNodes()) 2
mainWindow()->loadPage(url.toString()); 1
)) 1
-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40, 1
d->transferList.removeRef(i); 5
setTextAlignment(3, 1
if(parent.childNodes().count() 1
G(string)->instance_type 1
chb_antidim->setChecked(prof.antiDim); 1
d->need_update 1
deleteAll(); 2
connect(d->pb_spDelete, 1
InstallEventLoopIdleTimerPtr 1
qApp->installTranslator( 1
MUCManager::MUCManager(Client 1
m_failures.clear(); 1
for(UserResourceList::Iterator 2
p.setPen 1
for(Form::ConstIterator 1
sendSxe(sxe.toElement(), 1
finishedTrigger.start(); 2
connect(d->capsRegistry, 1
reply=QString().arg(playingWith).arg(winner); 2
error 30
if(d->busy->isActive() 5
d->tw_customRoster->clearSelection(); 1
clientin 1
currentIndex( 1
ui_.log->appendText(QString(> 1
checkforupdatesAction 1
d->registerActions(); 1
overlayed 2
TEST_CASE(autoptr1); 1
m_reloadIcon 1
e->alerting 3
ck_auto->setChecked(acc.opt_auto); 1
setMinimumSize(size, 1
SendSite 4
object->mText->setOnHUDAttachment(FALSE); 1
QCOMPARE(is->system().name(), 2
PsiToolBar::PsiToolBar(const 1
TEST_CASE(varScope5); 1
alert 2
QCOMPARE(spy3.count(), 2
if(d->contactList->haveActiveAccounts()) 1
SvgStreamWidget::SvgStreamWidget(QWidget 1
m_viewTabBarAction->setText(!show 1
if(d->secure 1
active_avatars_[jid.bare()] 1
opcodes[i] 2
Load(m_xmlFile,bHasPath); 1
Idle::Idle() 1
m_viewToolbar->setShortcut(tr()); 1
qAddPostRoutine(deinit); 1
WbDlg::WbDlg(SxeSession 1
pItem.reset(new 2
quitAction->setShortcutContext( 1
parentId 2
connect(pb_complete,SIGNAL(clicked()),SLOT(doComplete())); 1
format 3
BOOST_FIXTURE_TEST_SUITE( 1
SnarlPlugin::SnarlPlugin() 1
TEST_CASE(sprintf1); 1
if(is_v6 1
allocator->init(); 1
DynamicLibraryManagerException::symbolNotFound 1
s.setAttribute(); 4
d 199
newKeyItem->setSelected(true); 1
progressIcon->start(); 2
ap_set_content_type(r, 3
ival 4
gAgents, 1
CFRelease(icon); 1
if(m.body().find(r->findStr, 1
loadAccount(account); 1
doAutoNickInsertion(); 1
foreach(PsiIcon::IconText 3
RichListViewItem::RichListViewItem( 2
bsclose 2
q.setAttribute(http: 1
if(!d->done) 1
Private(IconActionGroup 1
if(!ent) 6
QHostAddress 7
GO(module).set(new_basic_class(object, 1
statusButton 1
Q_UNUSED(bytesWritten); 1
if(le_pwnew->text() 1
if(n1 3
if(n2 2
needUpdate 2
icsel 1
Q_ASSERT(model->columnCount(childIndex) 1
i.take(p[0], 1
qDeleteAll(providerItemList); 1
connect(act_fill_, 1
foreach(JDnsSharedPrivate::Instance 3
EDBFlatFile::~EDBFlatFile() 1
Q_ASSERT(false); 5
PSendSysMessage(LANG_UPDATE, 1
connect(client, 3
if(emote) 2
context.palette.setColor(QPalette::Text, 1
mTabContainer->addTabPanel(mAudioPanel, 1
SETUP(Class) 1
keyStoreForTrackerId.insert(trackerId, 2
connect(fullscreen_action, 1
Config_Error::Config_Error(const 1
Q_UNUSED(row); 1
act_history_ 1
static_cast<AcceptPolicy>(acceptPolicyEnum.keyToValue(value)); 1
ChatDlg::setShortcuts(); 1
ui_.le_state->setReadOnly(x); 2
hw->setPaletteBackgroundColor(cw); 2
bignum_bitwise_op(BITWISE_OP_AND, 1
if(d->async) 7
d->tabManager 1
if(haveAlready(i->p->name())) 2
have_v4 1
have_v6 1
XReparentWindow( 2
if(!signPartDone) 1
n++; 1
reportError( 5
i->resetName(true); 1
up 3
--bumpedItems; 2
if(!self) 12
d->ck_gcSound->setChecked( 1
LLViewerParcelMgr::getInstance()->deselectLand(); 1
Drawer::checkBlackCastle(int 1
widget->show(); 2
parses 1
QCOMPARE(spy5.count(), 2
if(use_asker_fallback(r) 1
if(detected.session 1
snarlStruct.lngData2 3
ui_.le_topic->setCursorPosition(0); 1
startTrigger.stop(); 2
EventHandler::EventHandler(QObject 1
draw(tile, 1
if(newColor.isValid()) 2
if(obj->reference_p()) 1
LLTool::handleMouseDown(x, 1
settings.setValue(QLatin1String(), 36
target->removeEventFilter(this); 1
worker->start(_in_id, 1
setParent(QCoreApplication::instance()); 1
Q_ASSERT(dlg); 1
XMPP::Status::DND 2
mStats[stat].start(); 1
setModal(modal); 1
prof.wm 2
TODO_ASSERT_EQUALS(3, 1
if(type_info[i]) 1
connect(proc, 12
m_status_steps_message->setText(tr() 1
ui->pulse(pulse_type); 1
d->cb_loadPlugin->setEnabled(false); 1
v_geoLocation 2
LEGOPTP.raiseChatWindow 1
state->set_const(, 2
connect(pb_changepw, 1
mNetworkPanel->apply(); 1
tr( 65
verticalScrollBar()->setValue(verticalScrollBar()->maximum()); 2
cb_plain->setWhatsThis( 1
ui.statusListView->setUpdatesEnabled( 2
state[0] 1
if(x509_supported 1
le_name->setText(s.name); 1
&LLWaterParamManager::instance()->mFogDensity); 1
CGUIRSSControl::~CGUIRSSControl(void) 1
try 95
while(!parent.isElement() 1
glMultiTexCoord2f(GL_TEXTURE0, 4
if(children.at(i).isElement()) 1
hints->icon_window 1
p->drawPixmap(m, 1
switch(event.code) 1
score->setText(0, 2
connect(d->icon, 2
POPUP_FLAGS 2
if(d->sent 4
ui_.pb_submit->setEnabled(false); 4
textRect.setHeight(m_rightWidget->sizeHint().height()); 1
Invalid_Key_Length::Invalid_Key_Length(const 1
m_dynamicResourceAlloc 3
c1.insertchrs 1
hb2->addWidget(d->le_from); 1
PsiTextView::keyPressEvent(e); 1
Q_ASSERT(orientation 1
QWhatsThis::add(d->ck_alertOpenChats, 2
QApplication::beep(); 1
f.seek(d->index[id]); 1
PSendSysMessage(LANG_MOVIE_NOT_EXIST, 1
QMetaObject::invokeMethod(this, 20
i.reset(); 1
te->setAcceptRichText(false); 1
providerMutex.lock(); 6
QObject::setName(s); 1
dlg->lb_pageTitle->setText( 1
{ 11810
XmlElement::setName( 1
CertificateInfoPair::CertificateInfoPair() 1
itemComparator_ 1
displayFile(QLatin1String()); 2
q->atStart(); 1
XmlElement::elementFor( 1
bTrim[iBuf] 1
POINT 1
xElement 1
if(d->u->isSecure(( 1
QList<Item 2
gSavedSettings.getBOOL(), 2
data_->setFields(d.fields()); 1
ui_.le_pass->setText(password); 1
m_scale_start 2
m_themes_selector 1
NeoPhoneBook::~NeoPhoneBook() 1
std::getline(stream, 1
addTrackBar(cursor); 1
addr.extaddr 2
sInstance->center(); 1
negotiation->target 4
QMap<QString,QVariantMap> 1
q->requestNewStatus( 1
QTextCodec::ConverterState 3
if(!qlvi 1
KeyStoreWriteEntry(const 4
namespace 324
assert( 2
accountAvailable_ 1
Q_UNUSED(disableServerSendLast); 1
cache(QString().arg(corner.renderer), 1
items_delta 2
trimmed.setAttributeNode(parentAttr.item(i).toAttr()); 1
QColor 22
connect(&lateTimer, 1
dexc(NoMethodError, 1
setStyleSheet(); 2
Ok->move(bl, 1
QRect 62
icon->activated(false); 2
if(!tmp.isEmpty()) 1
counter 1
element 14
qRegisterMetaType<TabDlg 1
g_event->handlers[at].ids.removeAll(g_event->askers[asker_at].id); 2
move 2
shutdown(); 1
CGUIControlGroup 6
changedMap.insert(, 13
g.moveTo(g.x(), 2
SeparatorAction::SeparatorAction( 1
chosen 1
twitpicUpload->abort(); 1
Q_UNUSED(textWordWrap); 1
if(!ep) 2
RenderOpts::DisableVideoProvider 1
HRESULT 5
set_cmethod(as<CompiledMethod>(obj)); 1
dock 8
pb_add->setEnabled(!s.isEmpty()); 1
rotation 1
setContactChatState(XMPP::StateActive); 1
viewMenu->addAction(toggleAvatarsAct_); 1
doc_ 1
map[0] 2
Q_UNUSED(end); 3
QPushButton::setIcon(p); 1
cookiesTable->verticalHeader()->setDefaultSectionSize(height); 1
trayicon_->setContextMenu(menu); 2
ChessPlugin::ChessPlugin() 1
timer->setInterval(msec); 2
if(!rootid.isNull()) 1
meta 5
d->lastStatus 3
req_mutual_auth 2
WbManager::WbManager(XMPP::Client 1
setMessage(m); 2
Alertable::Alertable(QObject 1
phone_client_->SignalCallCreate.connect(slots_, 1
modify_buttons_[d->tb_seOffline] 1
karatsuba_mul(z, 1
request.setHeader( 8
:Q3ListViewItem(par,t), 1
d->pb_prev 1
bg_pos, 1
act_jump_[i]->setShortcuts(ShortcutManager::instance()->shortcuts(QString().arg(QString::number(i+1)))); 1
testNames.push_back( 2
Private(DiscoDlg 1
TEST_CASE(func12); 1
QWebView::mousePressEvent(event); 1
((std::istream 1
qDeleteAll(m_cornerItems); 1
ProfileNewDlg 1
VCard::EmailList 2
if(signMode 1
mimeData->setData(QLatin1String(); 1
AccountRegDlg::~AccountRegDlg() 1
DeleteObject( 2
repaint(FALSE); 6
d->groupBox9->unsetPalette(); 1
actionsService_->openWhiteboard(resource); 1
Q_IMPORT_PLUGIN(winampplugin); 1
Cipher::Mode 2
if(!entry.isNull() 2
d->w_http_id->hide(); 2
setWindowState(windowState() 2
logDebug(QString().arg(obj->metaObject()->className())); 3
foreach(SxeSession 1
MemoryPointer 4
system 2
QHash<QString,Result 3
profConf->endGroup(); 2
QActionGroup 2
G(staticscope)->set_object_type(StaticScopeType); 1
cs.resize(maxbytes); 3
certs.addCRL(c); 2
QTabWidget::contextMenuEvent(event); 1
big->into_string(state, 1
isAscii 1
adaptor 1
elems.push_back(substr); 2
.arg(bytesTotal 1
if(io_pending) 1
d->twitterapi->directMessages( 1
setCentralWidget( 1
listener_ 4
mp_div_d(MP(this), 2
52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1, 1
itemOpenDest(i->id); 1
connect(protocol,SIGNAL(sendData(const 2
statusLines.clear(); 2
allocated.push_back(std::make_pair(ptr, 1
m_cookieJar->setBlockedCookies(m_exceptionsModel->m_blockedCookies); 1
building_ 4
loadEnabledPlugins(); 1
d->deferredScroll(); 1
LLToolPie::getInstance()->resetSelection(); 1
temp.sort(); 1
XmlOutputterHook::statisticsAdded( 1
pm_settings_->insertSeparator(); 3
d->nextAmount 6
d->ck_askOnline->setChecked( 1
ev_io_start(loop->base, 1
connect(sxemanager_, 1
segment 1
ck_compress->setChecked(acc.opt_compress); 1
0x0A, 1
d->tl_cStatus->hide(); 1
tabTitle.replace(QLatin1Char('&'), 1
set_syserr(ENOLCK, 1
processGetSpawnServerPid(args); 1
shadow_color.mV[3] 1
m_timer.start(AUTOSAVE_IN, 1
d->exclusive 2
if(!g_ksm) 1
localCert 1
disableServerSendLast 1
tb.nl 2
s.split 2
scene_->queueTransformationRegeneration(wbitem); 2
le_host->setEnabled(on); 1
buttons 1
QCOMPARE(action->psiIconName(), 1
jsdtrace_fun_classname(fun), 5
dlg->show(); 1
accounts->setModified( 1
if(big 2
d->fname 3
handle 1
MainWin::MainWin(bool 1
d->append( 2
m_gfxChangeTimer->setSingleShot(true); 1
exceptionTable->setShowGrid(false); 1
d->act_configure->setEnabled(s.mucItem().affiliation() 1
migrateStringEntry(sorting, 3
cookiesTable->verticalHeader()->setMinimumSectionSize(-1); 1
context[2] 1
QPipeDevice::Type 4
LLWLParamManager::instance()->mAnimator.mUseLindenTime 2
node_.setNodeValue(data->data); 1
d->moveEvent(e); 1
hb->addWidget(pb_cancel); 1
m_defaultHeight 1
end: 1
d->h->erase(d->jid); 1
QAbstractTextDocumentLayout::PaintContext 1
if(!mBuffer 1
downButton_->setMinimumSize(3,3); 1
CRL 17
ap_rputs(ap_escape_html(r->pool, 2
lastSessionID++; 1
gb_trans->setEnabled(false); 1
splitter->addWidget(cvlist); 1
options->load(systemDefaults); 1
mainWindow->insertToolBarBreak(this); 1
list.append(o); 2
cb_security_level->hide(); 2
actualError->setMessage( 1
migrateBoolEntry(p_events, 2
gameplay_layout->addWidget(m_gameplay_steps, 1
pos.x 2
addNickColor(col); 1
GO(metaclass).set(new_basic_class(cls, 1
KeyStoreInfo::KeyStoreInfo(KeyStore::Type 1
lb_comment->setWordWrap(true); 1
DiscoData 2
d->xdata_form->setFocus(); 1
joinButton_ 2
QMainWindow::wheelEvent(event); 1
m_leftLayout->setDirection(QBoxLayout::LeftToRight); 2
am->insertItem(tr(),16); 1
Q_ASSERT(model->index(rows, 1
splitline 2
m_needsScaling 1
d->cv->setShowAgents(false); 1
m->clear(); 1
if(mp_cmp(MP(this), 3
m_sourceLine 2
m_paste->setShortcuts(QKeySequence::Paste); 1
ed->registerTimer(info.id, 2
mainbox->setMargin(0); 1
QWidget::keyPressEvent( 1
createActionList(tr(), 1
std::vector<Memory_Block>::iterator 2
vl 7
\reimp 1
KeyStoreEntry::KeyStoreEntry(const 2
readEntry(p_sound, 1
SymbolTable::fields); 1
insertItem(PsiIconset::instance()->status(status).icon(), 1
SASLParams 1
item->progressBar->setVisible(false); 1
m_flickr->stopPrefetch(row(item)); 1
if(e.type() 1
root.fromAgentItem( 1
BigInt::BigInt(const 3
connect(t,SIGNAL(finished()),SLOT(receiveLists())); 1
c->setClientParams(p_username, 1
d->tb_info->setPsiIcon(IconsetFactory::iconPtr()); 1
connect(jdns, 5
QList<NickAndJid> 2
a->sign 1
changeList 1
LLUICtrlFactory::getInstance()->buildFloater(floater, 1
m_stopReload->setIcon(m_stopIcon); 1
i.size 2
dst_force.mV[VY] 2
forwardHistory.removeLast(); 1
connect(i, 2
ev_io_init(&ev, 2
if(event.type 1
std::vector<Item 2
allocated.clear(); 1
lstrcpynW(tnd.szTip, 1
parentItem 6
neuroncoords[neuron] 1
lst->insertItem(QString::fromUtf8(s.ascii())); 1
ui_.pb_remove->setEnabled(false); 1
SpellChecker 2
d->updateProgress(i, 3
PlugInManager::unload( 2
room_ 4
header()->adjustHeaderSize(); 1
html.replace(QLatin1String(), 1
tr(Web 1
isFreerunner 1
setToolTip(QString()); 1
layout->addWidget(bQuit); 1
scene_size.scale(400, 1
password 4
o->setOption(base_ 1
soundMime 4
d->smode 1
buffer.setBuffer(&data); 1
needToSort 1
ZeroMemory(&item, 1
(j+2) 1
int		i, 1
delta.rotate((difference.x() 2
int		i; 1
progressIcon 1
cableEnabled 2
GpgOp 8
c2.ltrim 1
PsiToolTip::install(ui_.lb_status); 1
restoreState(data); 1
d->con->setParent(orig_parent); 1
AgentList::Iterator 2
actionGroupRemove(u.jid(), 1
newValue.replace(from, 1
if(bigint_add3_nc(z, 1
addToolbarAction(d->lw_selectedActions, 2
TabbableWidget::hideEvent(e); 1
connect(&bytesWrittenTrigger, 2
z[x_size] 1
purgeOldCookies(); 1
process->start(filename, 2
sasl_ssf_t 1
dialog.hide(); 2
snarl_->snShowMessage(caption.toStdString(), 1
drw->newFigure(s, 1
connect(pb_apply,SIGNAL(clicked()),SLOT(doApply())); 1
TESTCASE(define_module_function_simple) 1
buildOptionsMenu(); 1
dnd_option.value 1
pb_detach 1
phone_client_->OnIncomingStanza(e); 1
QKeyEvent 3
if(!configIsValid(config)) 1
closeTrigger.setSingleShot(true); 1
edt->setEnabled(FALSE); 1
modified( 1
affiliations_proxy_model_->setDynamicSortFilter(dynamicSortFilter); 1
setTabOrder(d->le_pass, 1
qDeleteAll(list); 2
index(); 1
:	m_maze(maze) 1
GO(sym_minus).set(symbol()); 1
Q_UNUSED(editor); 1
CPPUNIT_TEST_SUITE_REGISTRATION(CapsSpecTest); 1
actionsService_->sendMessage(contact); 2
setModal(false); 21
QTabBar::mouseReleaseEvent(event); 1
d->pb_next->setFocus(); 1
if(!chan) 1
URLBookmark::URLBookmark(const 2
int 1811
Private(URLObject 1
inp 1
items_.push_back(item); 1
updateToolbarActionText(false); 1
disconnect(lbx_proxy, 1
setUniformRowHeights(false); 1
jsdtrace_filename(cx->fp), 1
menu->addAction(tr(), 15
}gGL.end(); 1
LEGOPTP.showSubjects 1
if(fm.width(s) 1
setName(r.name()); 1
KeyStoreListContext 7
d->lb_ident->setVisible(visible); 2
loadFromCache(h); 1
services_[contact->getAccountName()]->actionHistory(contact->getJid()); 1
ui.countdownLabel->setMovie( 3
sc_username 1
openGame(); 1
actionsService_->remove(group); 1
QSizePolicy 4
TEST_CASE(iterator1); 1
for(FileTransItem 1
d->doTrackBar(); 2
psiPopup->deleteLater(); 1
R2(d,e,a,b,c,32); 1
if(enabled) 1
QTimer::singleShot(0, 17
mTelehubObjectID(), 1
changeTheme( 1
d->proxyman 1
removeItem(group); 1
LineEdit::WidgetPosition 1
endModal(h.iItem); 1
plugin_priorities.removeAt(n); 1
connect(&tokenAsker, 1
was->type_name 1
allowForSessionButton->setEnabled(enabled); 1
lldebugs 2
add_sym(method_missing); 1
lvi 2
trayicon_->hide(); 2
VCardStaticAvatar::VCardStaticAvatar(AvatarFactory 1
lineEdit->setFocus(); 1
ui_.cb_ssl->addItem(tr(), 1
connect(m_mazes_algorithm, 1
pre_command_close 2
item( 2
connect(m_showMenuBarAction, 1
dragTab_ 1
ViewActionsService::ViewActionsService() 1
i->p 2
tree->setSelectionMode(QAbstractItemView::ContiguousSelection); 1
list_.insertItem(item); 1
nameMap[name] 1
WinAmpController::WinAmpController() 1
gMessageSystem->newMessageFast(_PREHASH_UserInfoRequest); 1
i->h 1
viewport()->setMouseTracking(true); 1
return	!always_show 1
g_SkinInfo.GetSkinPath(, 1
newPresets.clear(); 1
TextOutputter::printHeader() 1
p.putRich( 1
d->tray->setAlert(d->nextAnim); 1
drawProgressBar(p, 1
d->make_act(Verify); 1
play_buttons_[d->tb_seOnlinePlay] 1
d->qdns 4
viewGroups->setExclusive(false); 1
if(!unreg) 1
total 10
if(!u->groups().isEmpty()) 2
numbers[i] 1
QTimer::singleShot(QApplication::doubleClickInterval()/2, 1
activeFiles->remove(s); 1
Logger::Logger() 1
if(changes.size() 1
doReadActual(true); 1
LLViewerCamera::getInstance()->getPixelVectors(mPositionAgent, 4
Score::Score(int 1
setp(NULL, 1
setUndoRedoEnabled(true); 1
lb_version->setText(is.version()); 1
Q_ASSERT(g_stdio_console 1
HHOOK 2
Q_ASSERT(model->buddy(QModelIndex()) 1
hb->changeItem(s1 2
connect(contactList_,SIGNAL(dataChanged()),this,SLOT(contactList_changed())); 1
ua.toOptions(&accountTree); 1
if(d->hostMismatch) 1
externalSchemes 1
LLUI::translate(box_center_offset.mV[VX], 1
map.insert( 7
QList<ToolbarPrefs>::Iterator 1
AuthFlags 1
buildRoster(acname); 1
if(referenceMeta) 1
scene_->setItemIndexMethod(QGraphicsScene::NoIndex); 1
tb[2].dock 1
:Algorithm(from), 7
LLSelectNode 1
mp_mul_2(MP(this), 1
CertificateRequest 8
after 1
JIDUtil::nickOrJid(nicksAndJids.first().nick, 1
loadIconset(&def, 1
send_sites->append(state, 1
if(!isTabbed()) 1
is.load 2
CompilerOutputter::printSuccess() 1
d->cancel(); 2
addTabButton->setToolButtonStyle(Qt::ToolButtonIconOnly); 1
stream->setRealm(j.domain()); 1
controls_layout->addWidget(controls[0], 1
v.setUrl( 2
if(now.time().msec() 1
activeWrite 3
brd->show(); 2
m_slider->setValue(value); 1
output[sig_bytes-j-1] 1
++d->histAt; 1
ui_.le_title->setText( 2
QueryPerformanceCounter(&start); 2
m_name( 1
d->xdata 5
glMatrixMode(GL_MODELVIEW); 1
img_scaled 4
removeUnneededContactItems(e); 3
widgets_.remove(i); 1
LLWLParamManager::instance()->mAnimator.mIsRunning 2
d->ft->setProxy(proxy); 2
if(!r->norm) 3
interface->connection 1
NODE_TYPE 5
item->stopButton->setVisible(false); 1
failedTests.insert( 1
ptv_authors->setText( 1
auto_join_ 2
ObjectMark::ObjectMark(GarbageCollector 1
pm.setItemEnabled(5, 1
if(newValue 3
if(partial) 2
if(strcmp(self->byte_address(state), 1
e.appendChild(item_element); 2
getManagingTabDlg()->closeTab(this, 2
(LPTSTR) 1
BOOST_CHECK_EQUAL(i->get_int(), 1
volume_params.setBeginAndEndT( 13
if(v.type() 1
setFlags(ItemIsSelectable 1
pi.settings.toOptions( 1
sprintf 3
strDest.replace(strDest.begin()+iIndex,strDest.begin()+iIndex+2,); 1
g_ksm 2
standard 1
proxy.setUser(settings.value(QLatin1String()).toString()); 1
stream.write((const 1
le->setEchoMode(QLineEdit::Password); 2
m.setTo(Jid(d->sendLeft.first())); 1
++ 10
int		id; 1
connect(d->pb_addNickColor,	 1
d->anim->restart(); 1
setVerticalScrollBarPolicy(sizeHint().height() 1
if(x[x_size-1]) 1
Exiv2::<%= 3
if(d->ai.sec) 1
{3, 4
mStats[mCurrentStat].addValue(); 1
processNextAction(); 9
adminMenu->addAction(menuActions_[]); 5
connect(pm, 1
d->pb_form_submit->hide(); 2
Contact::Contact(const 2
actions->addAction( 1
if(in_sendFirst) 1
scene_ 2
qt_translator_->load( 1
FancyPopup::Private::backgroundColor 2
systemDefaults 1
filename_ 1
QWhatsThis::add(d->pb_fMessage, 1
SET(task, 8
removeRows( 1
if(!text.isEmpty()) 2
mInputPanel->apply(); 1
meta->IsMeta 1
doRegGet(); 1
p.setY(screen.y() 1
hb3->addWidget(d->tb_icon); 1
IconsetLoadEvent 4
other->val 1
controlUnderPointer 1
files_field.setRequired(true); 1
realm 4
obj->d->pubmode 1
Qt::MatchWrap 2
ui_.le_country->setReadOnly(x); 2
set_syserr(EADDRNOTAVAIL, 1
if(denominator->n2i() 1
divide(x, 2
childSetValue(, 2
XmlOutputter::addHook( 1
battery->setCharging(false); 2
if(highest 2
le_font[0] 1
TEST_CASE(dir_functions); 1
LLXform 6
if(!d->ft) 1
gm->insertItem(/ 1
QCOMPARE(messageHeadline->name(), 1
vsm_->setGroupExpanded(group, 1
:QObject(parent) 25
d->le_player->setText(tr()); 2
titleIcon->setAutoFillBackground(true); 2
if(other->val 1
ResetSession 7
setPaletteBackgroundColor(parent->paletteBackgroundColor()); 1
act_close_->QAction::setShortcuts 1
TestFailure::isError() 1
activated(false); 2
view->setCurrentIndex( 6
psi_->dialogUnregister(this); 1
m.setSubject(logdecode(sSubj)); 1
XSetWMHints(dsp, 1
BrainView::BrainView(BrainInAVat 1
FORMAT_MESSAGE_IGNORE_INSERTS, 1
ListNode::fields, 1
if(d->started) 1
a.toOptions(&d->accountTree, 1
QSettings 46
LLPanelLandGeneral::onClickBuyPass(deselect_when_done); 1
setAttachmentVisibility(TRUE); 1
animateNickColor 1
setText(control); 1
frag.appendChild(unknownsDoc->importNode(child, 1
command.setAttribute(,action2string(action_)); 1
jid2.append(hex); 1
d->le_from->setReadOnly(true); 1
controls_layout->setRowStretch(6, 1
if(!in.open(QIODevice::ReadOnly)) 1
TEST_CASE(mismatch1); 1
index.data(Qt::DisplayRole).toString()); 1
if(!pipeStatus.create()) 2
v_atEnd 2
PsiAccount 52
cursor.insertFragment(textCursor().selection()); 1
CFRelease( 2
if(d->activeWrite) 1
wg 1
sounds_field.setType(XData::Field::Field_Boolean); 1
mOKBtn->setClickedCallback(onBtnOK, 1
m_themes_remove_button->setEnabled(QFileInfo(homeDataPath() 1
switch(node.nodeType()) 2
LLSelectMgr::getInstance()->sendGodlikeRequest(); 4
closeButton->setIcon( 2
errorInfo=QString()); 1
if(def 2
m_maze 9
applicationPool->setMax(config->maxPoolSize); 1
ui_.te->clear(); 1
bounceRec.nmStr 1
TEST_CASE(dereference_member); 1
d->ck_useEmoticons->setEnabled(true); 1
statusGroup->addSeparator(); 3
icon->activated(true); 2
slots_ 1
((CGUIControlGroup 1
if(!supported.contains(SXENS)) 1
setSizePolicy(QSizePolicy(QSizePolicy::Expanding, 1
SetConsoleMode(in_id, 2
LEGOPTP.gcNickColors.clear(); 1
counted++; 1
mbox->setWindowTitle( 1
handshaken(); 2
TestFactoryRegistry::unregisterFactory( 1
selection.end 1
mTabContainer->addTabPanel(mLCDPanel, 1
action->setData(QVariant(WbWidget::Scroll)); 1
action->setData(QVariant(WbWidget::Rotate)); 1
loggedIn 1
ChatEdit::resizeEvent(e); 1
opt_auto 2
if(!ok2) 1
te_log()->scrollToBottom(); 2
m_tabWidget, 5
st.wMonth 1
set_syserr(EISDIR, 1
account->setLogin( 1
unzFile 1
while(!string[j].isSpace() 1
Q_ASSERT(model->hasIndex(rows 2
~ConsolePrivate() 1
Settings::Settings( 1
d->ck_autoResize->setChecked( 2
lb_path->setText(); 1
connect(pb_cancel, 2
OptionsTabAdvanced::OptionsTabAdvanced(QObject 1
if((size_t)mp_count_bits(MP(b)) 1
joinByName_(true), 1
contact 5
mytype 3
parent.setRotation(quatparent); 1
connect(d->iss_defRoster, 1
deleteSingle(o); 1
d->stop(); 1
if(result) 22
ui_.toolbar->addAction(d->act_whiteboard); 1
setTabOrder(a, 2
setIdentity( 3
if(v_keyID 1
GPGProc::Mode 2
switch(way) 2
MainWindow::MainWindow( 1
pm->insertSeparator(); 2
board 1
z[10] 4
topParent->layout()->setEnabled( 2
connect(&dialog, 5
d->vboxLayout1->addWidget(d->pluginOptions); 1
d->lines.clear(); 1
ui.statusListView->setPalette( 1
textLabel->setText(QString().arg(clipText(text))); 1
d->statusTip 1
if(!validResource(s, 1
if(parts_name[0].contains(' 1
anim.Animate(time, 1
TestDescription::~TestDescription() 1
tab->setSimplifiedCaptionEnabled(enabled); 1
if(have.authzid) 1
setCaption(s 1
ui_.te->setTextFormat(Qt::PlainText); 1
mGeneralPanel 2
Event::Type 1
if(plain[i] 2
m_cookieJar->setAllowedCookies(m_exceptionsModel->m_allowedCookies); 1
w->endSession(); 1
data[i] 1
/ 1081
ui_.lb_identity->setVisible(visible); 1
SxeRecord::VersionData::VersionData(const 1
ChatDlg::chatEditCreated(); 1
open_cursor 1
d->recentNodeList.remove(d->recentNodeList.fromLast()); 1
obj 27
p.type 3
hangupRemote( 2
paint(&p); 1
ui_.le_pcode->setEnabled(x); 2
grep(); 3
proc.closeStdin(); 3
posY 2
if(a.tagName() 1
G(object)->set_const(this, 1
if(pipe.type() 1
call->AcceptSession(call->sessions()[0]); 1
float 47
right 2
controller_->dialogRegister(this); 2
d->canSendRealm 1
vsm_->setAccountExpanded(account, 1
if(!a->contains( 1
mTabContainer(tab_container), 1
shortcutItem 5
bookmarks->insertItem(tr(), 1
ev.xclient.message_type 1
tmr2->start(2000); 1
Iconset::Iconset(const 1
WRITE(int, 2
connect(statusIconProvider_, 1
play_buttons_[d->tb_seSendPlay] 1
updateStatus(); 12
foreach(KeyStore 2
if(!activeFiles) 3
connect(d->lv, 4
if(widget_->mode() 1
proc->start(bin, 2
Q3DragObject 3
set_syserr(EXDEV, 1
emit 684
connect(act_add,SIGNAL(triggered()),SLOT(addToDictionary())); 1
actionsService_->addContact(account); 1
)); 48
SHELLEXECUTEINFO 1
sVisibleHUDTextObjects.push_back(LLPointer<LLHUDText> 2
QString(QLatin1String(imageBuffer.buffer().toBase64()))); 1
if(seckeys[n].keyItems.first().id 1
protectedFunctor, 1
XmlOutputterHook::successfulTestAdded( 1
connect(&d->dns, 1
barLayout_->add(downButton_); 1
setMinimumSize(size.width() 1
CGContextClip(context); 1
ui_.mle->chatEdit()->setText(); 3
if(!defaultKeyID.isEmpty() 2
connect(d->le_sp_priority, 3
PsiOptions::instance()->getOption( 4
setToolTip(label); 1
config_ 3
Iconset::setSoundPrefs(v.absPath(), 1
painter.drawLine(columns 1
connect(d->act_send,SIGNAL(activated()), 1
if(!pipeCommand.create(true)) 2
TestResult::endTest( 1
connect(auxHandler, 1
ProfileManager::ProfileManager() 1
p->setRenderHint(QPainter::Antialiasing); 1
ui.countdownLabel->setPalette( 1
AdvancedWidget<QWidget>::mouseMoveEvent(event); 1
entries 5
MoodCatalog::Entry::Entry(Mood::Type 1
releasePieces(); 2
if(mod 4
QString	h(hst->currentText()); 1
pre_command.clear(); 4
tmr2->stop(); 1
renderText(FALSE); 1
error.appendChild(notauthorized); 1
initialized 3
cb_security_level->setCurrentIndex(cb_security_level->findData(acc.security_level)); 1
gotoidenticaAction->setShortcut( 1
kg.num 2
SetWindowPos(winId(),HWND_NOTOPMOST,0,0,0,0, 1
if(obj->tracked()) 1
Named_Mutex_Holder::~Named_Mutex_Holder() 1
d->ck_autoRosterSize->setWhatsThis( 1
fileMenu->addAction( 2
index.data(PasswordRole).toString()); 1
initialize( 2
++x1; 2
if(!secring.isEmpty()) 1
d->cb_incomingAs->setItemData(1, 1
instance()->triggers_.clear(); 1
readNumEntry(tag, 2
printf(, 19
apr_file_t 1
m_status_timer->start(); 3
interface->directMsgParser 1
setRenderHint(QPainter::Antialiasing); 2
manager_->removeItem(subitem, 1
CMusicDatabase 1
Q3Dict<QWidget> 1
QFontMetrics 26
acc.allow_plain 1
if(!n.isElement()) 1
settingsDialog.exec(); 1
set_syserr(EDESTADDRREQ, 1
deletions++; 1
start_segment 2
m_elements.push_back( 1
AccountAddDlg 1
painter.drawLine(x1, 2
addItem(nil, 1
cap 16
if(fx 1
if(fd 5
browser->show(); 1
can 1
if(!v_showAway) 1
m->addAction(d->act_mailto); 1
QPointer<ProxyDlg> 1
m_renderer 1
loadPlugin(files_[plugin]); 1
m_scrollInfo(0,0,scrollSpeed,) 1
if(unique) 1
bordersToggled(m_board->bordersVisible()); 1
d->set_authzid 1
TEST_CASE(zeroDiv1); 1
m_gfxChangeTimer->setInterval(0); 1
grid->addWidget(lbl); 1
s.settings 1
settingsAccounts 1
mTimer.reset(); 4
View 1
physloc.appendChild(e); 20
i->setAlert(&e->anim); 1
connect(tb_vCard, 1
QFETCH(int, 13
vector<DWORD> 1
z[9] 4
model_->invisibleRootItem()->appendRow(item); 1
Event::~Event() 1
word3_muladd_2(&w2, 49
layout->addWidget(tabs); 1
SET(chan, 1
TestPath::add( 2
localAddr 2
sEnvSettings 1
Protector::reportFailure( 1
StringUtils::SplitString(m_strRSSTags, 1
args.takeFirst(); 1
itemKind 3
connect(ck_showTips,SIGNAL(toggled(bool)),SLOT(showTipsChanged(bool))); 1
m_active_tiles.insert(piece, 1
setStatus(Calling); 1
QList<QJDns::DnsHost> 1
m_privateBrowsing->setCheckable(true); 1
it--; 1
le_priority->setWhatsThis( 1
Q_ASSERT(m_lineEdits->count() 1
iCRI.next(); 1
sig_read 2
readEntry(a, 10
mAttachedObject(NULL), 1
deletedPresets 1
setRootIsDecorated(false); 3
IODeviceOpener::~IODeviceOpener() 1
downloadInfoLabel->setText(info); 1
ui_.cb_recent->setEnabled(false); 1
domain 2
p_authzid 1
ui_.le_city->setText( 2
++step; 2
connect(ui_.tv_affiliations,SIGNAL(addEnabled(bool)),ui_.pb_add,SLOT(setEnabled(bool))); 1
if(can_lock()) 1
setNextAnim(0); 1
gViewerWindow->pickAsync(x, 2
cb_plain->setCurrentIndex(cb_plain->findData(acc.allow_plain)); 1
sp.setName(name.toString()); 1
e.appendChild(q); 1
printFailureTestName( 1
MLOCK_TYPE 1
bypass_sim_raycast 1
hb->addWidget(le_input); 1
while(!stream.eof()) 1
if(str.at(0) 1
r->push_back 1
childs[i]->DrawLOD(lod); 1
gpg.doSignAndEncrypt(signerId, 1
TestResultCollector::TestFailures::const_iterator 2
if(!ok1) 1
stub->ep 1
QSslConfiguration 2
ToolbarPrefs::ToolbarPrefs() 1
groupList.sort(); 1
TypingStatus 1
lb_name->hide(); 2
widget->resize( 1
if(in[n].type().section() 1
xk 2
pa->changeVCard(); 1
i->contactProfile()->scRecvEvent(i); 1
bDelete->setSelectsParent(false); 1
prepareGeometryChange(); 1
message 34
DummyDataService::~DummyDataService() 1
checked 1
exists 1
pa->privacyManager()->getDefaultList(); 1
manager_->addMetacontact(metacontact, 1
d->iss_system->setEnabled(true); 1
m_loggers.removeAt( 1
set_syserr(ENETUNREACH, 1
x, 2
that->checkChildrenDnd(); 1
HistoryView::HistoryView(QWidget 1
resize(600,440); 1
:_serial(from._serial), 1
x2 16
x3 1
x0 1
x1 18
x4 1
).arg(path), 1
if(d->ss_info) 2
obj->d->type 2
ui_.tb_emoticons->hide(); 3
LLBufferStreamBuf::LLBufferStreamBuf( 1
that->sc_authzid 1
need.pass 2
PsiWidgetPlugin::PsiWidgetPlugin( 1
pos.setX(-pos.x()); 1
p->frameGeometry().top() 2
children.clear(); 1
if(cls->superclass 1
exvsnprintf 2
switch(ret_type) 1
ui_.te_desc->setReadOnly(x); 2
if(d->tb_pgp->isChecked()) 2
ui_.pb_next->setEnabled(true); 2
gAgentPilot.addAction(STRAIGHT); 2
v_user 1
setIconSize(QSize(16, 1
textp->shift(offset); 1
LLViewerCamera::getInstance()->projectPosAgentToScreen(mPositionAgent, 2
d->opt_host 1
tune.setAlbum(CFStringToQString((CFStringRef) 1
doDebug(jdns, 3
vmm->specialize(active->vmm->type); 1
if(allowed 1
button->setUpdatesEnabled(TRUE); 2
root_(root), 1
m_status_remain_message 1
statusReportThread 1
forever 3
disconnect(ed, 1
constants->store(state, 2
bg_defAct 2
ChaseWidget::ChaseWidget(QWidget 1
m_hasCamera 3
Hex::Hex(Direction 1
JDnsShutdown 1
d->hp_host->setHost(); 1
d->hp_host->setPort(s.port); 1
if(!QFile::exists(str)) 1
if(isinf(d)) 1
map[8] 2
if(!(m_SearchStringEncoding 1
LLUICtrlFactory::getInstance()->buildFloater(sInstance, 1
hide(); 11
m_tile.fill(Qt::white); 1
gAgentPilot.mNumRuns 1
dragPainter.end(); 1
op->start(); 3
actionUnassignKey(u->jid()); 1
found++; 1
setInterval(10000); 1
target->SetUInt32Value( 1
g_event->handlers[i.handler_pos].ids 1
name->setText(qApp->applicationName()); 1
processClear(args); 1
mTabContainer->addTabPanel(mDisplayPanel, 1
socket_server_ 2
selfs_.insert(SelfSpec(self), 1
if(d->anim) 1
actionAuthRemove(u->jid()); 1
if(!mux) 1
secprops.min_ssf 1
if(sign() 4
tile->setPos(QPoint(0, 1
setCentralWidget(view_); 1
ret.append('|'); 1
d->le_url->setText(); 1
d->toolsMenu 1
trigger.open(QIODevice::WriteOnly 2
connect(bQuit, 1
p->drawLine( 2
tabs->addTab(controls_tab, 1
QTEST_MAIN(TestIconset) 1
actionAuth(u->jid()); 2
bUppercase 1
closeEvent->ignore(); 1
label->setText(); 1
setPixmap(0, 10
if(d->exp) 1
d->continueAfterStep(); 1
gb_pgp->setEnabled(true); 1
d->bg->addButton(rb_remove, 1
mapper.getApplicationTypeString()); 1
--m_sourceRowCache[j]; 1
le_jid->setFocus(); 3
opcode 3
xml.raiseError(tr().arg(xml.name().toString())); 1
OptionsTabPlugins::OptionsTabPlugins(QObject 1
disconnect(chatEdit(), 1
ui_.tb_emoticons->setVisible(PsiOptions::instance()->getOption().toBool()); 2
toolButtons 3
d->dialogList.append(i); 1
webViewSiteIconChanged(); 1
saveToAutoFile(); 1
if(meta1->hasSmallerSecondaryWeight( 1
JingleClientSlots::JingleClientSlots(JingleVoiceCaller 1
qDebug(QString().arg(edit->rid()).arg(rid()).toAscii()); 1
btArray 1
LEGOPTP.rosterAccountSortStyle 1
d->make_act(SecretKeyringFile); 1
d->findDlg->found(); 1
d->ft->send(le_to->text(), 1
memset(&ev, 2
if(stream.bad() 1
setWindowTitle(cap); 1
ruby 1
if(gpg.wasSigned()) 1
d->te->setDialog(this); 1
Q3ListViewItem::setup(); 1
LineEdit::LineEdit(QWidget 1
e.appendChild(text); 3
ui.notificationsBox->setChecked( 1
d->fileSize 4
verticalScrollBar()->maximum(); 1
OutputDebugString(); 4
lb_pwcur->setEnabled(enabled); 1
groupList.append(group); 1
fp->apply(); 2
rowCount(); 1
supportsStk 2
SetCurrentVolume(m_nCurrentVolume); 1
foreach( 7
ui_.sw_register->setCurrentWidget(ui_.page_fields); 1
if(module->nil_p()) 1
c->time.start(); 1
transferList.removeRef(i); 1
if(!sign) 1
closest 1
acc.opt_auto 1
QVERIFY(text.count() 1
ui_.le_title->setEdited(x); 1
real.setPixel(n, 2
connect(m_themes_remove_button, 1
CPPUNIT_ASSERT(!item.presenceIn()); 3
QCOMPARE(iconset->name(), 1
if(val 4
init(GUIenabled); 1
qa_chat->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
tb_resolveNick->setEnabled(enableVCardButtons); 1
m_lastControlID 3
p.end 1
iconObject->gotCloseEvent(); 1
AboutDialog::AboutDialog(QWidget 1
tree->header()->setStretchLastSection(true); 2
ui_.cb_value->setEnabled(false); 1
hb1->addWidget(d->lb_identity); 1
mbox->setInformativeText( 1
d->sec_buf 1
sasl_server_init(NULL, 1
registerCaps(http: 2
onlineOnly_ 1
QWebHistory 3
formMatrix_obj.init(); 2
qDeleteAll(m_controlItems); 1
contactUpdated(userStatus.userListItem, 1
SafeDeleteLater::~SafeDeleteLater() 1
active_avatars_[jid.full()] 1
updateAvatar(); 2
ContactList::ContactList(QObject 1
m_locations.append(QDir::homePath() 2
doFlash(true); 2
t 28
ivecControls 5
setFrame(frameClass 1
close(p[1]); 1
addResource(resource, 1
XData 22
HistoryModel::HistoryModel(HistoryManager 1
m_image_height 2
d->accountTree.loadOptions(accountsFile.fileName(), 1
MUCConfigurationTask(const 1
chatView()->appendText(QString() 1
painter.setRenderHint(QPainter::TextAntialiasing, 1
JDnsShared::Mode 1
if(!xprocess->waitForFinished(3000)) 2
presetNames 1
CDirectoryNodeArtist::CDirectoryNodeArtist(const 1
i.key()->pushNeighbors(); 1
if(!ptr) 2
hb->addWidget(d->pb_edit); 1
unpause(); 1
throw 97
sessions[lastSessionID] 1
connect(ui_.ck_enable, 1
if(otherCert.isNull()) 1
it->itemSelected(); 1
updateUserID(); 2
topLevelItem 3
w->doRefresh(); 1
if(!ext_authid.isEmpty()) 1
lb_desc->hide(); 1
call_mutex.lock(); 1
loc 2
ringMutex.unlock(); 5
setTabOrder(d->le_url, 1
loe 1
R4(a,b,c,d,e,60); 1
low 3
haveFile 1
:Q3ServerSocket(GAME_PORT, 1
BrowserApplication 1
newKeyItem->setExpanded(true); 1
QMultiHash<QString, 1
DesktopUtil::openUrl(http: 4
if(!filtered(str)) 1
if(i.tagName() 7
key_to_sym(key); 3
prefilterShowAway 1
lv_results->clear(); 1
entry.change(list[n]); 1
d->optionsMenu 1
account()->invokeGCFile(jid().withResource(nick)); 1
SetControlVisibility(); 2
ui_.toolbar->addAction(act_history_); 1
suite->addTest( 1
QList<ToolbarPrefs> 2
PGPTransaction::~PGPTransaction() 1
pb_open->setFocus(); 1
TEST_CASE(if4); 1
CPPUNIT_ASSERT(!item.isBlock()); 1
if(alpha) 1
if(children.length() 1
GO(sym_tequal).set(symbol()); 1
QVERIFY(iconset->load()); 1
m_hint_angle 4
foreach(int 9
connect(allowButton, 1
tab_main->removeTab(tab_main->indexOf(tab_privacy)); 1
le_resource->hide(); 1
if(!activeWrite) 1
QWebView::wheelEvent(event); 1
text_color 1
removeContactFromGroup(xitem, 6
connect(prompt, 1
,padL(0),padT(0),padR(0),padB(0) 1
connect(pb_detach, 1
d->last_ret 1
if(d->psi) 2
action->addTo(menu); 1
createExternalConnections(); 1
d->ck_auth->setChecked(s.useAuth); 1
contact->setSubscription(subscription); 1
children_ 1
CloseHandle(d->mutex); 2
proxyDialog.iconLabel->setPixmap(mainWindow->style()->standardIcon(QStyle::SP_MessageBoxQuestion, 1
connect(pb_stop, 3
u.userResourceList().append(ur); 2
DosFreeMem(p); 1
for(ProxyItemList::ConstIterator 2
OptionsDlg::~OptionsDlg() 1
line.truncate(width-3); 1
m_timeLine->start(); 2
d->list.removeRef(h); 1
scaled_size.scale(m_image_width, 1
updateName(); 2
sh.setHeight(int(document()->documentLayout()->documentSize().height())); 1
PsiAccount::getErrorInfo(err, 1
TestFactoryRegistry::~TestFactoryRegistry() 1
versions_ 2
plugin->message( 1
image.setAttribute(http: 1
if(which 4
d->tb_pgp->setIcon(i); 1
dir.x 1
item->m_url 1
cookies 2
moveCursor(QPoint(-offset, 1
y_element.appendChild(e.ownerDocument().createTextNode(QString::number(rect.y()))); 1
PluginManager::PluginManager() 1
d->rlist.removeRef(r); 1
gm->setItemEnabled(id, 1
if(!url.isEmpty()) 1
if(s.isAvailable()) 1
acceptButton->setDefault(true); 2
d->gr_auth 1
P_TRACE(2, 8
closeConfirmation.setEscapeButton(QMessageBox::No); 1
logDebug(QString().arg(fname)); 2
ui_.cb_lists->removeItem(previousList_); 1
d->activatedCount--; 1
num_bins 1
LLBufferStream::LLBufferStream( 1
foreach(DetectedSession 1
m_renderOrder 3
sei.lpFile 1
d->ck_awaySound->setChecked( 1
G(executable)->setup(this, 1
OptChatUI 6
restoreState(PsiOptions::instance()->getOption(toolbarsStateOptionPath).toByteArray()); 1
if(mux) 1
if(s.type 1
mApplyBtn->setClickedCallback(onBtnApply, 1
LLBufferStreamBuf::off_type 1
font.setPointSize(smallFontSize); 1
lib.setAutoUnload( 1
m_navigationSplitter->addWidget(m_toolbarSearch); 1
parentNode.insertBefore(node, 1
ptr->set_object_type(MemPtrType); 1
setText( 4
contains 1
if(!global_lib_state) 1
sbuf 2
taken 1
loadPage(home); 1
bookmarksManager->addBookmark(parent, 1
LEGOPTP.ignoreHeadline 1
IconsetSystemUI 5
QJDns::SystemInfo 2
g.pathBase 2
Private(ContactView 1
peerValidity 2
QWhatsThis::add(d->ck_asXa, 1
setCornerWidget(addTabButton, 1
history 1
QWidget::enterEvent(e); 1
TestPath::toString() 1
for(QList<EventItem 3
generate(settings.value().toUInt()); 1
menu_ 1
ObjectMemory::ObjectMemory(size_t 1
connect(ui_.ck_host, 1
connect(m_gfxChangeTimer, 1
d->self->clearAlert(); 1
if(in[n 2
group->setAccountName(acname); 1
unit->PlayDirectSound(dwSoundId,m_session->GetPlayer()); 1
clear_mem((byte 1
p.insertSeparator(); 3
if(nextAmount 1
i.trackerId 1
if(num_names 1
connect(jtVCard_, 2
QPushButton::setText( 1
act_modes_->setMenu(menu_modes_); 1
remove(n); 1
fields_->setEnabled(true); 1
sn_read->deleteLater(); 1
updateGL(); 10
m_status_remain_message->setVisible(true); 2
DeleteObject(pmhbitmap); 1
proxy_index 1
PsiOptions::instance()->mapPut(, 1
d->writeSuccess 2
i->setAnimateNick(); 1
help 2
SET(thr, 2
presets.unite(newPresets); 1
BSocket 1
d->count++; 1
soon 1
newWindow 2
ui.retranslateUi(this); 1
CPPUNIT_ASSERT(!(c2 4
CPPUNIT_ASSERT(!(c1 3
m_themes_preview 1
SocksClient 1
y1 5
loadImage(); 2
y3 1
y2 3
tree.setComment(); 3
if(p->init()) 1
bind(&Client::threadMain, 1
buffer.set(buf); 1
v_account 4
if( 93
replaceWidget(dlg->toolBarPlaceholder, 1
OptionsTabAppearance::OptionsTabAppearance(QObject 1
qWarning(qPrintable(tree.getOption(name).toString())); 1
Q_ASSERT(index.data(Qt::UserRole).canConvert<Item 2
CStdString 29
BlockContext 4
storage.appendChild(c.toXml( 1
gMessageSystem->addU32Fast(_PREHASH_AddFlags, 1
RenderOpts::OxygenStyleQuirks 1
chatView()->appendText(QString(> 1
ifs 8
bringToFront(dlg); 2
xform_obj.setScale(llvect3); 2
checkBlackCastle(fx, 1
iconset_.setIcon(QString().arg(jid.bare()),icon); 1
PsiPopup::~PsiPopup() 1
if(!processChar(str[n])) 1
downloadDirectory 1
scene->addItem(&graphicsitem_); 2
lb_home2->hide(); 1
ToolTipPosition 1
KeyStore::Type 4
d->actionList 2
form.setJid(server_); 1
capabilities.appendChild(info); 1
style()->drawControl(QStyle::CE_MenuItem, 1
d->hp_host->setWhatsThis( 1
c.last 2
!hasFigure(gt, 2
QCOMPARE(action->text(), 4
toolbar->addAction(new_action); 1
settings._debug 4
d->pb_reply->show(); 3
old_handler 3
MainWindow::MainWindow(QWidget 1
define_method_int_result 3
Character_Set 3
rect 2
m_loadingUrl 1
lg.setColorAt(1.0, 1
e->cvi.append(i); 1
middle1->setFixedWidth(4); 2
acc.priority 1
d->treeShortcuts->clear(); 1
if(++d->animateNickX 1
model->supportedDropActions(); 1
TabbableWidget::~TabbableWidget() 1
m_searchHistory->setChecked(true); 2
connect(bg_font, 1
memcpy(&context->buffer[j], 2
if(cur->module 1
sLog.outDebug(, 2
RemoveBookmarksCommand::~RemoveBookmarksCommand() 1
imagePainter.setCompositionMode(QPainter::CompositionMode_Plus); 2
!ui_.le_pcode->text().isEmpty() 2
obj->mark(); 1
clearContactItems(e); 2
xcg.setColor(QColorGroup::HighlightedText, 1
ProviderItem 21
authors 10
if(!d->tray) 1
request.append( 6
if(global->rng 1
Q_Q(StatusList); 8
Q_EXPORT_PLUGIN(NullPlugin); 1
d->ck_useEmoticons->setEnabled(false); 1
loadFromSettings(); 1
le_nick->setText( 2
obj->d->queryCache.removeAt(c_at); 1
QList<ControlButton 1
cf->execute(state); 1
m_board->removePiece(piece); 1
acc.opt_host 2
invisibleGroup()->updateParents(); 1
AskerPrivate(PasswordAsker 1
QX::~QX() 2
cls->set_object_type(ListType); 1
hb2->addWidget(d->tb_icon); 1
d->shift 2
if(!QFile::exists(dir)) 1
m_redo->setShortcuts(QKeySequence::Redo); 1
TEST_CASE(func13); 1
pm.insertItem 1
d->ck_asAway->setChecked( 1
joinedAccounts_(false), 1
CPPUNIT_ASSERT(!manager->capsEnabled()); 2
recent_activated(0); 1
Message::operator 3
if(readAndProcessStatusData()) 6
requests.remove(obj); 5
if(resolver) 1
contact->setStatus(r->getStatus()); 1
gPieObject->show(x, 1
dragStartPosition_ 1
updateSelf(srv->getSelf(), 1
if(set_password) 1
test6 1
foreach(JDnsShared 2
accountsList 1
KeyLoaderThread::In 1
CUtil::Tokenize(szNoClean,vecBufs,); 1
Q_UINT16 2
resize(400,240); 2
set_syserr(EBADR, 1
TestLeaf::doGetChildTestAt( 2
SxeRemoveEdit 1
i->contactProfile()->psiAccount()->avatarFactory()->removeManualAvatar(i->u()->jid()); 1
openTab( 2
pipeStatus.writeEnd().reset(); 4
symIndex++; 1
if(obj->zone 1
opt_automatic_resource 3
command.remove(0,6); 1
SettingsDialog 2
for(Q3ListViewItemIterator 1
VCardFactory::VCardFactory() 1
QList<ProxyItem> 1
lb_to->setText(tr()); 1
m_pixmap 2
p->toolbars.remove(base); 1
m_historyForward->setShortcuts(QKeySequence::Forward); 1
ap_log_error(APLOG_MARK, 2
transid_ 3
config.setType(XData::Data_Submit); 1
FancyLabel::~FancyLabel 1
p.name 2
GO(symtbl).set(new_class(object, 1
proxy_port 1
setObjectName(QLatin1String()); 1
m_loggerNames.removeAt( 1
asker.waitForResponse(); 1
that->setEnabled( 1
TEST_CASE(dealloc_and_alloc_in_func); 1
options->setOption(,false); 1
ui_.le_jid->show(); 1
playingWith_=jid; 1
setMask(mask); 1
text.setDevice(&file); 2
if(++x[j]) 1
d->id_end 3
item.setType(PrivacyListItem::SubscriptionType); 1
dumpOut[rot]->slen 1
ui_.ck_messages->setChecked(item.message()); 1
SecureMessageSystem 2
PsiOptions::PsiOptions() 1
QList<Iconset 1
layout->addWidget(lineEdit); 1
i->_instance 3
chatEdit()->installEventFilter(this); 2
stamp 1
if(i->addr 1
quit_icon.addPixmap(QPixmap()); 1
SelectGame::checkParams() 1
Alert(IDS_ALERT_NOT_ENOUGH_MEMORY); 1
setWindowIcon(QIcon(QLatin1String())); 1
if(!need_submitPassphrase) 1
setVibrateNow(value); 1
chb_qvga 1
if(first->nil_p()) 1
TESTCASE(include_module) 1
QShortcut 3
optionsBase 1
send(sock, 7
if(haveFile) 1
if(!cur.isEmpty()) 1
loop 6
--row; 2
JT_Register::setForm( 1
processKeyEvent(unicode, 1
error(); 7
parent->statusBar()->addPermanentWidget(m_status_steps_message); 1
pixmapOk 2
actionRename(e->u.jid(), 1
if(eof) 6
allowInput 9
emoticons 1
d->le_customRoster->setFocus(); 1
loadPage(2); 1
tr(Sound 1
effectp->setDuration(LL_HUD_DUR_SHORT); 1
btn->setEnabled(isEnabled()); 1
if(!(negotiation->groupChat 2
:EDB() 1
fields.setFields(fields_->fields()); 1
QCOMPARE(stripping->name(), 2
set_syserr(ESHUTDOWN, 1
status_field.setVar(); 1
qDebug(, 3
e.appendChild(doc.createTextNode(country_)); 2
qDebug() 91
mZCompare 2
bigint_mul(get_reg(), 1
textp->setLOD(1); 1
data->version 2
hb1->addWidget(lb_ident_); 1
bg_sePlay->insert(d->tb_seMessagePlay); 1
signedness 3
LEGOPTP.color[cAnimFront] 1
qDeleteAll(m_children); 1
ui_.le_nick->setText(nick); 1
jcv->get(j); 2
prompt 2
XmlConsole::~XmlConsole() 1
EventHotKeyRef 1
to.clear(); 2
m_oldValue 2
grabPiece(); 1
binary[j] 1
EventLoopTimerRef 2
threadMutex.lock(); 1
remaining 2
if(!d->activeFile.isEmpty()) 1
connect(m_tabWidget, 13
newTime 5
CPPUNIT_TEST_SUITE(CapsSpecTest); 1
game 3
if(h.jdns 5
barLayout_->setAlignment(Qt::AlignLeft); 1
cls->set_object_type(ClassType); 1
font.setPointSize(14); 1
m_twitPic->show(); 1
toggleAvatarsAct_->setCheckable(true); 1
QCoreApplication::instance()->removeTranslator(qt_translator_); 2
ui->addAccountButton->setIcon(QtIconLoader::icon())); 1
d->closeTrigger.start(0); 1
Confirm 3
grid->addWidget(chb_antidim,3,0,Qt::AlignCenter); 1
m_widget->move(0, 1
view->setModel( 2
thread_->Start(); 1
response.appendChild(doc.createElementNS(SXDENS, 3
delAll 2
ui.updateButton->setIcon( 1
if(controlPoint_) 3
roster.remove(name); 1
d->in.fileName 2
askers.removeAt(asker_at); 1
StatusSetDlg::StatusSetDlg(PsiCon 1
ShowTextDlg 5
step 4
m_result->popProtector(); 1
Algorithm::Algorithm(const 2
std::cout 32
proc->write(pre_stdin); 2
QVERIFY(is->loadAll()); 2
d->sb_asXa->hide(); 1
pa->eventQueue()->printContent(); 1
sEnvSettings->open(); 1
return(&buf[pos+strlen(token)]); 1
downloadsLocation->setText(QDesktopServices::storageLocation(QDesktopServices::DesktopLocation)); 1
memcpy(partial.data(), 1
connect(registry_,SIGNAL(registered(const 1
if(_loader) 2
QLocalSocket 2
item.setNick(nick); 1
last_delta 1
m_result->pushProtector( 1
should_lock(true) 1
Q_ASSERT(node); 3
dlg->cb_address->insertStringList(data.pa->psi()->recentBrowseList()); 1
startQueueing(); 1
if((Kind)keyItem->data(0, 2
i.jid 1
SxeSession::SxeSession(const 1
ActiveProfiles::instance()->unsetThisProfile(); 1
QCOMPARE(iconset->description(), 1
DefaultShared 2
toggleJoinedAccountsAct_->setCheckable(true); 1
SaveControlStates(); 1
d->iss_system->unsetPalette(); 1
if(info.isDir()) 2
Botan::global_state().load(modules); 1
R3(e,a,b,c,d,56); 1
Q_UNUSED(parent); 4
ui_.cb_default->setCurrentItem(names.findIndex(defaultList)+1); 1
varScope( 6
ASSERT_EQUALS(FILE 1
painter.setPen(backgroundColor); 1
ui_.cb_ident->setVisible(visible); 1
foundPos 1
if(!groups.isEmpty()) 1
tmp 10
if(input.op 6
connect(tb_browse, 1
KeyStoreTracker::instance()->addTarget(d); 1
uploadData 1
.arg( 5
d->le_input->setText(d->hist[d->histAt-1]); 2
cb_->setProperty(, 1
ui_.te_license->setText 1
addService(); 6
if(p1 1
Q3PtrList<MLabel> 1
if(!proghome.exists()) 3
statusList->setStatuses( 1
parser.readList(); 1
setGlowRadius((e->delta() 1
setAcceptRichText(false); 1
downButton_->hide(); 1
fclose 2
std::vector<Event 4
d->pb_http_confirm->setEnabled(true); 1
Protector::actualMessage( 1
PopupAction::PopupAction 1
bsplitcb 2
updateDumbStatus(); 3
if(isinf(res)) 1
LLRectf 1
Exception::operator 1
TestPath::up() 1
Random::~Random() 1
psi->emoticons.setAutoDelete(true); 1
piece->rotateAround(piece->children().first()); 1
QList<QByteArray> 5
CPPUNIT_TEST(testEqualsNotEquals_NotEqual); 1
secprops.property_names 1
rm->setItemChecked(13, 1
d->session 1
ioctl(m_fd, 2
add_sym(call); 1
Mutex_Holder::Mutex_Holder(Mutex 1
p->drawText((info_x 1
IconName 1
it.toFirst(); 2
QCOMPARE(iconset->authors()[1], 1
Q_UNUSED(option); 1
zG 3
zA 3
zB 3
hb3->addWidget(d->le_find); 1
QApplication::sendPostedEvents( 2
initialize(module); 1
gPieLand->show(x, 1
d->frame->setLineWidth(v); 1
j.setResource(s); 1
z, 1
ary->set(state, 15
if(fi->id 2
mainWindow()->show(); 1
infoLine->addStretch(1); 1
idx++; 1
view->setRootIsDecorated(false); 1
toolBar->addAction(actForward); 1
d->mainwin->decorateButton(state); 1
factory.ScaleElement(&element, 1
client_->close(); 2
FormField 3
statusmsg_field.setValue(QStringList(manager()->account()->status().status())); 1
d->isActive 2
QImage 35
llifstream 1
win 1
le_input 1
QSize 53
act->input.bin 1
d->le_subj->setToolTip(d->le_subj->text()); 1
ui_.le_homepage->setEnabled(x); 2
qSort(items_); 2
pb_add->setEnabled(false); 3
maybe_input 7
started 6
profConf->setValue(, 8
m_closeTabAction 1
).toString(), 1
crl_list 2
button->setProperty(, 2
set_syserr(ENOSTR, 1
le_authid->setText(acc.authid); 1
popup->deleteLater(); 1
qRegisterMetaType<TabbableWidget 1
grid->addWidget(lAppname,2,0,1,2); 1
gPipeline.markMoved(childp->mDrawable); 1
if(i->priority 1
AlertIcon::~AlertIcon() 1
if(done) 11
connect(d->tw_customRoster, 2
IONotificationPortRef 1
if(memcmp(workingCopy.data(), 1
CPPUNIT_ASSERT_EQUAL(PrivacyListItem::JidType, 1
PositionOptionsTabToolbars 1
AHCExecuteTask::AHCExecuteTask(const 1
PsiActionList::Private::Private(PsiActionList 1
psicon 1
setInteractive(true); 1
addTabButton->setDefaultAction(m_newTabAction); 1
vcardList_.remove(jid); 1
takeArray(&buf, 1
i->setGroupName(text); 1
actionsService_->serviceDiscovery(account); 1
item_type 2
qt_mac_set_menubar_icons(false); 1
pageAction(QWebPage::DownloadLinkToDisk)->trigger(); 1
m_letterbox 2
d->lv->setSelected(d->lv->firstChild(), 1
IconsetFactoryPrivate::instance()->unregisterIconset(this); 2
d->pb_auth->setMinimumWidth(96); 1
glVertex3f(x2, 2
manager_->getItemsByAffiliation(MUCItem::Owner); 1
connect(d->pb_customRosterDelete, 1
model->setHeaderData(-1, 1
PopupType 1
VehicleEntry 1
settings.setValue(, 18
d->jsp->queryCancel(this); 1
layout->addWidget(m_webView); 1
connect(d->pa, 5
migrateBoolEntry(p_lockdown, 2
history.updateHistoryItem(url, 1
ZoomSlider::ZoomSlider(QWidget 1
TEST_CASE(function); 1
jid2.append(jid.at(n)); 2
SuiteDescription 6
setEditRuleEnabled(i 1
i.key()->moveBy(-delta); 1
m_reply->deleteLater(); 2
LEGOPTP.noAwayPopup 1
GO(sym_plus).set(symbol()); 1
string++; 1
connect(voiceCaller_,SIGNAL(terminated(const 1
QMainWindow::show(); 1
int		res, 1
setContactToolTip(u->makeTip(true, 1
if(d->proxy.type() 3
popupLayout 4
ui_.pb_reject->setEnabled(true); 1
connect(ui_.le_filter, 1
mPrefsChat->apply(); 1
d->updateMenu(actions, 4
rx.setPattern(); 1
chb_antisuspend->setChecked(prof.antiSuspend); 1
TextOutputter::printFailure( 1
m_siteIcon 1
play_buttons_[d->tb_seFTCompletePlay] 1
connect(qa_ren, 1
updateParent(); 4
isCustom_selectionChanged(0); 2
top4->setFixedWidth(3); 2
mBuffer->eraseSegment(iter++); 1
gislan->setResource(home); 1
if(op_err 1
addStatus(XMPP::Status::Offline); 1
pCodec->SetContentType(strContent); 1
if(neg) 1
d->cb_loadPlugin->setChecked(value); 1
splitterEnabled_ 1
if(box.width() 1
auto_open_field.setRequired(false); 1
QWidget::setTabOrder(locationBar, 1
SetPrivacyListsTask(Task 1
d->host 7
setHistory(list, 1
connect(pb_vcard, 1
qWarning(QString().arg(task->statusString()).arg(QString::number(task->statusCode())).arg(client_->jid().full())); 5
m_historyHash.reserve(sourceModel()->rowCount()); 1
tilePainter.fillRect(0, 1
OptEventsUI() 1
tree->setModel(m_proxyModel); 1
d->roster 1
AccountLabel::AccountLabel(QWidget 1
delay(10000); 1
defaultSettings->setAttribute(QWebSettings::DeveloperExtrasEnabled, 1
d->tray->setAlert(IconsetFactory::iconPtr()); 1
o->deleteLater(); 1
URLLabel::~URLLabel() 1
getBaseURI(); 3
LEGOPTP.font[fChat] 1
kCFStringEncodingASCII 2
QWhatsThis::add(d->ck_showSubjects, 1
spawnServer 1
m_difficulty(0), 1
d->pb_form_submit->setEnabled(true); 1
options->setOption(,true); 1
if(startedAll) 1
--at; 2
z[1] 6
readBoolEntry(tb_prefs, 2
b->slen 3
data_container_->updateGeometry(); 1
d->ck_asOffline->setChecked( 1
xresource.status().type(), 1
rx.indexIn( 1
CPPUNIT_TEST(testFromXml_NoType); 1
d->using_srv 3
old_trayicon_->setIcon(p); 2
d->completionList.clear(); 1
voiceCaller_->terminate(jid_); 1
IODeviceOpener::IODeviceOpener(QIODevice 1
checkIndexValid( 3
IconsetLoadThread::IconsetLoadThread(QObject 1
hlayout->addWidget(selectBrowserButton); 1
cv.split 2
PopupActionButton::PopupActionButton(QWidget 1
if(!sxemanager_->checkSupport(target, 1
if(!prolog.isEmpty()) 1
pass_ 1
Q_UNUSED(yes) 1
widget->setImage( 2
FileTransDlg::FileTransDlg(PsiCon 1
FileTransDlg::~FileTransDlg() 1
setCentralWidget(wrk); 1
recalculateSize(); 3
QGraphicsView::mouseReleaseEvent(event); 1
d->pb_quote->setText(tr()); 1
layout->addWidget(bTango); 1
tbl 9
terminate_call(); 1
status_message->setContentsMargins(10, 1
GO(methtbl).set(new_basic_class(G(lookuptable), 1
migrateBoolEntry(p_disco, 2
ret.append('\\'); 1
i.lastModified 2
while(!found->nil_p()) 1
c->shutdown(); 1
OptionsTabIconsetEmoticons::~OptionsTabIconsetEmoticons() 1
QueueAnimation(ANIM_TYPE_WINDOW_OPEN); 1
addStatistics( 1
init_child(apr_pool_t 1
manager_->changeActiveList((i 1
le_input->setText(str); 1
f_info.setPointSize(common_smallFontSize); 1
snarl_->snGetVersion(&major, 1
DynamicLibraryManager::doLoadLibrary( 4
if(!a) 2
qApp->processEvents(); 10
_l->enterSuite(sd); 1
d->trayMenu->insertSeparator(); 2
d->contactList->loadAccounts(accs); 1
d->entry 1
connect(btn, 3
Private(AlertIcon 1
SpacerAction::SpacerAction(QObject 1
SafeDeleteLock::~SafeDeleteLock() 1
l._head 2
w->openTab(); 2
set_sign(Positive); 7
le->setText(f.value()); 2
iconInfo.hbmColor 2
ck_keepAlive->setChecked(acc.opt_keepAlive); 1
GO(lookuptable).set(new_basic_class(object, 1
SetColor(_clr); 1
mOffsetY(0), 1
std::memcpy(d2->bytes, 2
m_leftLayout->removeWidget(widget); 1
QCoreApplication::instance()->removeTranslator(translator_); 2
ui_.pb_reject->setEnabled(false); 9
clientsCopy.clear(); 1
pb_keyclear->setEnabled(true); 1
cpuinfo.close(); 1
instanceForQJDns.remove(jdns); 1
ui_.lv_keys->setSelected(i, 3
p.setPen(psigraphic[i 1
d->pb_reg->setDefault(true); 1
pix 6
statusBuf.resize(newsize); 2
showAgents->setWhatsThis(tr()); 1
connect(dialog, 3
status_field.setLabel(QObject::tr()); 1
G(methctx)->set_object_type(MContextType); 1
old_trayicon_->setPopup(menu); 2
TESTCASE(add_handler) 1
d->url 1
Any 1
if(!d.exists()) 5
EventGlobal() 1
actionsService_->removeAuthFrom(contact); 1
if((node.isAttr() 1
m_clearButton, 2
LEGOPTP.autoAuth 1
ContactViewItem 53
:AdvancedWidget<QMainWindow>(0, 1
lb_ident->setAccount(pa); 1
!hasKingsMeeting(gt, 8
generic 1
closeTabButton->setDefaultAction(m_closeTabAction); 1
d->act_whiteboard->addTo( 1
symbol.c_str(), 2
mp_mul(MP(b), 1
FileEvent 1
p->setPen(QPen(Qt::black)); 1
loaders_.insert( 1
QtopiaIpcAdaptor 1
GrowlNotifierSignaler() 1
if(_storeId 1
specificCondition 6
d->rb_delChatsHour->setChecked(true); 2
Figure::map2str(tx, 1
mazes_layout->setRowStretch(0, 1
if(elems.size() 2
UnopenableBuffer() 1
if(!entry.isNull()) 2
session_->Cancel(); 1
SxeEdit::~SxeEdit() 1
::close(m_fd); 1
SendMessage 1
SAFELY(Pa_CloseStream(m_pStream)); 1
np.authzid 1
p.drawPrimitive(QStyle::PE_PanelTipLabel, 1
message.shortDescription() 1
QTextEdit::resizeEvent(e); 1
item.setType(PrivacyListItem::GroupType); 1
if(u) 5
retract.setAttribute(); 1
GlobalShortcutManager::instance()->connect(sequence, 1
IconToolButton::IconToolButton(QWidget 1
EventHandler 1
int32 1
hasIndex(); 1
TestPath::removeTests() 1
setText(str); 1
QTabBar::ButtonPosition 4
itemCount->setText(tr(, 1
if(FIXNUM_P(val)) 6
abortNegotiation(negotiation); 5
QVERIFY(history.history() 1
d->le_http_id->setEnabled(true); 1
page 2
if(light) 2
d->ck_keepSizes->setChecked( 1
connect(process, 2
for(QLayoutItem 1
copy1->stripFirstFrame(); 1
if(in.isEmpty()) 4
QList<DirItem> 1
setImage( 1
readyReadTrigger.stop(); 2
SelectGame::~SelectGame() 1
QList<QListWidgetItem 2
? 6
pControl->UnfocusFromPoint(mousePoint); 1
m_timeLine->setFrameRange(-1 1
m_player.ry()++; 1
m_historyBackMenu 1
CFileDialog::DoDataExchange(pDX); 1
(widget->isActiveWindow() 1
view_->resizeColumnToContents(0); 1
fileNames 2
d->le_field.first()->setFocus(); 1
painter.setFont(QFont(, 1
findSubTag(element, 1
if(le_pwcur->text().isEmpty() 1
CFMutableArrayRef 2
moveListBlackPawn(vl, 1
(double)verticalScrollBar()->value(); 1
AccountManageItem 5
if(!vals.isEmpty()) 2
d->make_act(Encrypt); 1
createMenu(model()->index(0, 1
AbstractLogDevice::AbstractLogDevice(const 1
action->setChecked(true); 2
if(y1 2
location->setCurrentIndex(idx.row()); 1
deleted++; 1
mDisplayPanel 2
while((!segment.isOnChannel(mChannels.in()) 1
PsiTabBar 1
buildAllAccounts(); 1
Botan::global_state().set_default_allocator(); 2
PsiToolTip 2
m_mazes_size->setRange(10, 1
tab->blockSignals(false); 1
NeoKbdHandler::NeoKbdHandler() 1
toggleShowOfflineAct_ 1
{, 12
d->statusButton->setIcon(PsiIconset::instance()->statusPtr(STATUS_OFFLINE)); 1
m_navigationBar, 1
if(ctx->cm->splat 2
_testName 1
g_event->handlers 1
act->input.opt_ascii 1
RESOLUTION 3
act->setEnabled(tabSet 1
KeyStorePrivate(KeyStore 1
{} 9
while(count 1
d->resetSession(); 1
releaseKeyboard(); 1
setIsAvailable(false); 2
if(d->pa->voiceCaller() 1
ViewDataService 2
WPARAM 1
QCOMPARE(model->rowCount(parent), 1
buffer.open(QBuffer::ReadOnly); 2
TestResultCollector::addFailure( 2
m_windowMenu->addSeparator(); 2
removeDetectedSession(w); 1
if(vis 1
p->drawTiledPixmap(0, 3
bigint_simple_mul(z, 3
toolbarSelectionChanged(-1); 2
resizeContents(QRect(x, 1
metacontact->setStatusMessage(contact->getStatusMessage()); 1
AHCExecuteTask 7
IconsetFactoryPrivate 1
d->ref(); 6
Overview::Overview(QWidget 1
tracker().trace( 1
GO(array).set(new_class(object, 1
menu->addMenu(groupMenu); 1
if(!valid) 6
MemoryRegion::~MemoryRegion() 1
proxy.setType(QNetworkProxy::Socks5Proxy); 1
gpg.doSign(signerId); 1
webViewWithSearch->setParent(0); 1
LookFeelToolbarsUI() 1
CRLEntry::~CRLEntry() 1
w->setCert(certificate, 1
msg, 1
d->chain 1
StatusModel::DisplayMode 1
ui_.vsplitter->setSizes(list); 1
services_[account->getAccountName()]->openAddUserDlg(); 1
proc.closeAux(); 1
last_op 3
actionsService_->xmlConsole(account); 1
AuthEvent 6
s.setHeight( 5
opt_enabled 2
menu_->addSeparator 1
CertificateInfoTypeKnown 1
act_join_groupchat 1
account()->actionOpenWhiteboardSpecific(jid(), 1
altInvisibleGroup_->updateParents(); 1
context.m_result->addError( 1
buffer_end 1
m_rightWidget 1
connect(selfDestruct_, 2
qint8 2
asker_cancel(this); 1
Deletes 1
vb1->addWidget(d->gr_form); 1
m_id(0), 1
m_history.prepend(item); 1
if(meta->parent() 1
accept(); 12
aOpenEvent(i->e); 1
d->pb_deny->setMinimumWidth(96); 1
tryComplete(); 1
drw 2
documentBegin.setAttribute().arg(prolog)); 1
if(found->reference_p() 1
++packet_out_pending; 1
QToolBar::dropEvent(event); 1
TESTSUITE(Class); 1
CPPUNIT_ASSERT_EQUAL(0x00040300, 1
CapsManagerTest::CapsManagerTest() 1
LEGOPTP.lockdown.roster 1
i->contactProfile()->psiAccount()->avatarFactory()->importManualAvatar(i->u()->jid(),file); 1
rect.setLeftTopAndSize( 1
node_.parentNode().removeChild(node_); 1
TabManager 1
if(!obj->forwarded_p()) 1
ui.radioClose->setChecked(true); 1
view->setColumnWidth( 5
setMinimumSize(22, 1
iChannels 2
BaseClass() 1
addFailedTests( 1
if(i->p 1
d->pix->setPixmap( 1
insertRows(row,1,list); 1
mimeData->setText(tabText(index)); 1
GO(send_site).set(state->new_class(, 1
if(!info.isDir()) 1
last_object_id 1
ev_loop(base, 2
XGrabServer(dsp); 2
it.next()->stripFirstAnimFrame(); 1
connect(t,SIGNAL(finished()),SLOT(changeList_finished())); 1
Q_ASSERT(!tb.id.isEmpty()); 1
q->setParent(obj); 1
action->addTo(&toolBar); 1
if(buffer->left() 1
connect(&pipeAux.writeEnd(), 4
hw->changeItem(s1 2
LLStringUtil::trim(media_url); 2
Figure::moveList(Q3PointArray 1
lb_status->setText(tr()); 6
IconsetSelectPlugin( 1
btn->setPsiIcon 1
TestSetUp::TestSetUp( 1
bar.show(); 1
info.m_interface->initialize( 1
checkDestroyGroup(group_item); 2
mainWindow()->activateWindow(); 1
m_details.clear(); 2
QMutableMapIterator<QChar, 1
HostPortEdit::HostPortEdit(QWidget 1
mb.addButton(tr(), 1
if(file.open(QIODevice::ReadOnly)) 1
layout->addWidget(m_downloadHistory); 2
m_corners[1][2] 1
GC 1
hostMismatch 2
tab->reparent(w, 2
downButton_->setPopupMode(QToolButton::InstantPopup); 1
connect(listener_,SIGNAL(request(const 1
m_channelColor 1
replaceWidget(lb_proxyedit, 1
connect(old_trayicon_, 6
if(ui_.le_ext->isModified()) 1
doc->documentLayout()->registerHandler(IconFormatType, 1
client_xmlIncoming(stamp 1
connect(ed, 1
dialog.tree->selectionModel()->select(child, 1
_lb_enabled 2
QCOMPARE(checkableAction->isCheckable(), 1
negotiation->role 3
from->getRgb 1
d->le_priority->setText(QString::number(PsiOptions::instance()->getOption(base+).toInt())); 1
insertNodeAfter(newNode, 1
QPointer<JT_XRegister> 1
initialized_ 6
glClear(GL_COLOR_BUFFER_BIT 1
hb->addWidget(pb_find); 1
ProfileManager::~ProfileManager() 1
ui_.pb_refresh->setEnabled(false); 4
setCentralWidget(centralWidget); 1
side 1
childEnable(); 5
timer_.stop(); 1
bg_color->insert(d->pb_cProfileBack); 1
GoogleSessionListener::GoogleSessionListener(GoogleFTManager 1
acc.opt_connectAfterSleep 1
QString 1520
ctx->stack->put(msg.state, 2
allocators.push_back(allocator); 1
bwriteprotect 1
hasNewline 1
TEST_CASE(class2); 1
if(!unescape_string(list[n], 2
LLBufferArray 2
QObject::disconnect(signaler,SIGNAL(notificationClicked(void 1
manager_->setHasPGPKey(contact, 1
d->ck_dockHideMW->setChecked( 1
sassert(control_channel->has_readers_p()); 1
AdvancedConnector::Proxy::~Proxy() 1
middle1->setAutoFillBackground(true); 2
Creature 1
vsm_->setContactExpanded(contact, 1
ck_log->setWhatsThis( 1
if(d->lv->childCount() 2
drag->setPixmap(dragPixmap); 1
available_ 1
config[http: 1
OSVERSIONINFO 1
backForwardHelper(i); 2
removeAllUnneededContactItems(); 1
PythonPlugin::~PythonPlugin() 1
pb_execute 1
features 2
d->draw(painter, 1
d->cur_service_status.insert(service.toString(), 1
actionsService_->resendAuthTo(contact); 1
appRunScr->hide(); 2
pipeAux.readEnd().close(); 2
bigint_shl2(y.get_reg(), 2
prevPopups.remove((FancyPopup 2
deferredScroll(); 1
i->shutdown(); 1
secdirty 2
if(e->button() 1
item->stopButton->setEnabled(false); 1
enabled 2
++x; 3
setTabIcon(index, 2
talk_base::ThreadManager::SetCurrent(thread_); 1
addItem(transport, 1
connect(ui_.pb_remove,SIGNAL(clicked()),SLOT(removeCurrentRule())); 1
controller->endSuite( 1
low_prior 1
if(askers[n].a 1
p.home 2
QRegExp 9
ShortcutManager::connect(, 8
seen 1
p->setPen(cg.highlightedText()); 3
setFixedSize(470,240); 1
set_syserr(ENOSR, 1
searchCursor 1
Private(PsiPopup 1
OptionsTabWidget::OptionsTabWidget(QWidget 1
QVariant 90
connect(&actionTrigger, 2
d->cb_type 2
data_container_ 1
if(output.wasSigned) 1
doc 2
m 9
sn_read 3
Account::~Account() 1
m_navigationBar->show(); 1
middlehbox->addWidget(middle1); 2
d->profileName 2
urls.append(url); 1
drag->setMimeData(mimeData); 4
if(qAlpha(in.pixel(n,n2))) 2
Qt_XK_Keygroup 2
rosterServices_[acname]->disconnect(); 1
Fred 4
screen_center.mV[VY] 3
i.setJid(item.jid()); 1
check_interrupts(); 1
d->ck_raiseChatWindow->setChecked( 2
m_vecIntervals 1
le_nick->setText(le_transPrompt->text()); 1
v_tabIconName 1
m_recentlyClosedTabsMenu->addAction(action); 1
Qt::CheckState 1
groups_.append(g); 1
tophbox2->addWidget(top5); 2
ffi_status 1
XmlOutputter::addStatistics( 1
Drawer::mousePressEvent(QMouseEvent 1
bTerminate->setVisible(scr 1
urlShortener 1
AutoSaver::AutoSaver(QObject 1
if(hasNewline) 1
progressBar->setValue(bytesReceived); 1
oldcurs 1
while(!versions_.isEmpty()) 1
exponent 1
item->regenerateTransform(); 2
if(skip_plugins(def).contains(i->p->name())) 1
BookmarksModel 3
0) 1
0, 102
if(a.isNull()) 1
bookmarkMenu->addSeparator(); 1
if(tagName 1
painter.drawPath(myPath); 1
url_ 2
d->c->setTrustedCertificates(trusted); 1
pGUIControl->SetParentControl(pGroup); 1
IconsetDisplayItem(QListWidget 1
m_webView 3
ui.portEdit->setText( 1
bigint_add2(z 1
nanojit::CodeAlloc::freeCodeChunk(void 4
Add(pGUIControl); 1
if(ui_.le_bday->isModified()) 1
PSendSysMessage(LANG_UPDATE_CHANGE, 1
d->lv->setResizeMode(Q3ListView::LastColumn); 1
JT_AHCGetList::JT_AHCGetList(Task 1
d->error 2
ap_add_version_component(pconf, 1
SLOT(itemChanged(const 1
height 4
d->renderPixmap(); 3
loaded 1
QDateTime 51
R2(a,b,c,d,e,20); 1
yesterday.setTime(yesterday.time().addSecs(3)); 1
connect(pipeReader, 1
QMessageBox::StandardButton 1
d->make_act(SignDetached); 1
t->Start(); 1
memmove(new_p, 1
setIconSize(largeIcons_ 1
item->fileIcon->setPixmap(icon.pixmap(48, 2
connect(bConf, 1
m.addEvent(CancelEvent); 1
if(d->pipeReader) 1
e.what()); 2
frame->setObjectName(QString::fromUtf8()); 1
model->hasIndex(0, 1
setCursor(QCursor(Qt::ArrowCursor)); 3
action->setChecked( 3
FillApps(favouritesAction->isChecked()); 2
QVector< 1
m_parent->remove(m_node); 1
z[j+y_size] 1
if(!name.at(n).isLetterOrNumber()) 2
changed 9
CompilerOutputter::write() 1
LocalFree(lpMsgBuf); 1
TEST_CASE(func5); 1
msg->addString(); 2
ssf_min 2
mouse 4
setCaption(tr()); 1
free(p); 1
m_node->title 2
aboutAction->setText( 1
if(!peerCert.isEmpty()) 1
v_url 1
issuerInfoMap 4
mw->setCloseButtonMode( 2
Q_ASSERT(console->d->ref 1
pControl->PreAllocResources(); 1
if(d->v_enabled){ 1
painter.setBrush(Qt::darkGray); 1
connect(d->cb_loadPlugin,SIGNAL(stateChanged(int)),SLOT(loadToggled(int))); 1
battvolt.close(); 2
m_scale_level_min(0), 1
d->pb_send->setMinimumWidth(96); 1
control_channel->receive(state); 1
ContactListItem 9
corners[c][r] 1
d->tb_history->setToolTip(tr()); 1
protocol 2
gViewerWindow->getWindow()->setCursor(UI_CURSOR_HAND); 1
OpStart, 2
|| 59
connect(real, 2
FancyItem(Q3ListView 1
constructContextMenu()->exec(event->screenPos()); 1
ProtectorChain::count() 1
LEGOPTP.chatSays 1
PsiRichText::ensureTextLayouted(doc, 1
def->configChanged(conf); 1
BookmarksToolBar::BookmarksToolBar(BookmarksModel 1
setText(5, 1
if(server.isEmpty()) 1
HistoryModel 2
meta_el.appendChild(doc->createElement()); 1
connect(jla, 2
act_prev_ 1
find_lost_souls(); 1
ui_.le_state->setText( 2
ptv->setTextCursor(cursor); 1
QList<GrabbedKey> 1
m_tile_size 2
screen_pos_vec.setVec((F32)screen_pos.mX, 1
LLCoordGL 3
output.verifyResult 3
sprintfUsage( 4
last->put(state, 2
qWarning(qPrintable(name)); 2
CookieJar::KeepPolicy 4
box->resize(w, 2
lvi->setText( 1
if(!valid 2
mPreferenceCore 1
StatusList::~StatusList() 1
buttonMenu->addAction( 8
SystemInfoCache 1
stacked_ 1
:GarbageCollector(om) 1
reg.create(round_up(b_words, 1
Initializer::Initializer(MemoryMode 1
stopButton->setEnabled(true); 1
QPixmapCache::clear(); 1
mAttachedObject->mDrawable->getSpatialBridge()->mDrawableType 2
mat.Translate(pv[0].pos.x, 1
GetPubSubSubscriptionsTask 1
act->input.op 1
opt_secfile 1
ui_.le_fullname->setText( 2
OptionsTab::~OptionsTab() 1
ui_.toolbar->show(); 2
actRefresh 1
dt.setTime_t(s.toInt()); 1
resetComposing(); 3
statusBar()->close(); 1
sxe.removeChild(n); 1
lb_customPrivacy->setVisible(!l.onlyBlockItems()); 1
connect(icon, 5
setStatus(Terminated); 1
setContactToolTip(QString()); 1
actionsService_->recvEvent(metacontact); 1
d->visible 1
PsiTrayIcon::~PsiTrayIcon() 2
iq_ 15
d->info 3
JDnsSharedRequestPrivate(JDnsSharedRequest 1
it.current()->setData(psi, 1
TestSuiteBuilderContextBase::getFixtureName() 1
proc.writeAux(a); 1
QList<QCA::KeyStoreEntry::Type> 1
pm.setItemEnabled(18, 1
HistoryViewItem::HistoryViewItem(PsiEvent 1
view->scrollTo( 2
PlugInManager::removeXmlOutputterHooks() 1
QVariantMap 14
mTextSegments.push_back(LLHUDTextSegment(iter->substr(line_length, 1
((QTextEdit 1
Event::Source 1
QTranslator 4
certs.addCertificate(cert); 2
connect(t,SIGNAL(finished()),SLOT(destroy_finished())); 1
s.type 4
if((!p 1
Private::stickEnabled 1
KeyLoader::~KeyLoader() 1
FancyLabelPlugin( 1
QDomNamedNodeMap 3
surface_pos_global 2
QCOMPARE(stripping->anim()->numFrames(), 1
gb_account->setEnabled(false); 1
LEGOPTP.onevent[eSend] 1
stream.write((char 3
m_status_time_message->setVisible(settings.value(, 1
model_->setManager(manager_); 2
StringTools::wrap( 2
StatusModel::instance()->connectView( 1
bcatcstr 11
file_option.value 1
if(i->addr.protocol() 4
manager->scan(); 2
manager 2
QWebView::mouseReleaseEvent(event); 1
acc.jid 2
Asserter::makeExpected( 1
joinedAccounts_ 1
cvi->setOpen(gd.open); 1
&symbolPointer 1
SyncThread::SyncThread(QObject 1
CertificateChain 13
checkMemoryLeak.check(); 3
if(sessionInfo.id) 1
TESTCASE(module_define_class) 1
if(!pipe_set_inheritable(d->pipe, 1
EventItem::EventItem(const 1
title.remove(0, 1
LEGOPTP.askOnline 1
Test::checkIsValidIndex( 1
sourceLine, 1
buttonLine->addWidget(pb_edit); 1
d->ck_tabChats->setChecked( 2
iter 10
item 19
lbx_profiles->setCurrentItem(lbx_profiles->count()-1); 1
if(iconSet() 1
pb_edit->setEnabled(true); 1
doc_.appendChild(node); 1
QTime 9
d->panel[d->pcountdown 1
if(isSelected()) 7
addr 6
bg_color->insert(d->pb_cStatus); 1
completionModel->setSourceModel(BrowserApplication::historyManager()->historyFilterModel()); 1
QWhatsThis::add(d->ck_grabUrls, 1
cursor.setBlockFormat(blockFormat); 3
server.pool.setMaxIdleTime(atoi(args[1])); 1
wait( 1
KeyStoreInfo 3
setMaximumSize(size()); 4
hbm 1
m_navigationBar->addAction(m_stopReload); 1
StringPrepCache() 1
if(p.type 1
jsdtrace_object_create(JSContext 1
pubdirty 2
if(other.d->known 4
sVisibleTextObjects.push_back(LLPointer<LLHUDText> 2
add( 5
elems.push_back(name.substr(0, 1
if(c->createSelfSigned(opts, 1
op->entryId 1
migrateBoolEntry(p_tip, 1
QPainterPath 8
.arg(dataString(m_bytesReceived)) 2
keybind.clear(); 1
if(str.at(n) 4
tbl->store(state, 3
CPPUNIT_TEST_SUITE(CommonTest); 1
if(!server) 1
qa_logon 1
proxy.setType(QNetworkProxy::HttpProxy); 1
newList.prepend(searchText); 1
ss->initialize(state); 2
m_move_animation->setCurveShape(QTimeLine::LinearCurve); 1
TEST_CASE(fd_functions); 1
__NIL_END 1
createButtonMenu(); 1
\property 2
searchLayout->addWidget(d->searchPb); 1
if(offset 3
selectedTab_->deactivated(); 1
alerttagso 1
QDomNodeList 19
ContactListAlphaComparator::ContactListAlphaComparator() 1
doc.appendChild(element); 1
QList<QGraphicsItem 6
alerttagsc 1
Score 1
CheckMemoryLeakInFunction 4
le_jid->setText(); 2
mIsHUDAttachment(FALSE), 1
CERT_FIND_ANY, 1
Q3PtrListIterator<ContactProfile> 6
if(!pad.isEmpty()) 1
protocol->sendGameover(sock, 2
d->cb_toolbars->addItem(tb.name, 2
map 3
have.pass 2
max 4
d->cb_preset->setEnabled(enabled); 1
mac 1
while(entry) 3
actionsService_->deleteMOTD(account); 1
processGetCount(args); 1
m_slider->setVisible(true); 2
Qt::ToolButtonTextOnly 1
while(isspace( 1
lb_date2->hide(); 1
d->le_field.setAutoDelete(true); 1
if(key.isNull()) 1
l1->setGeometry(0, 1
Q_UNUSED(column); 2
d->cv->resetAnim(); 1
Q_UNUSED(align); 1
ringWatch.add(pubring); 1
if(msg.priv) 1
d->setNextAnim(0); 1
if(!d->su.isAvailable()) 1
p.drawPixmap(0,0, 1
connect(m_board, 15
sync(); 3
m_settingsDialog 1
ck_custom_auth->hide(); 1
ITunesController::ITunesController() 1
if(!d->pa->checkConnected(this)) 12
LLPreviewSound 2
pixmap_.convertFromImage(i); 1
painter->setPen(index.data(Qt::ForegroundRole).value<QColor>()); 1
if(!found) 22
resetHave(); 1
SetForegroundWindow(hwnd); 3
setSupportsVibrateOnRing( 1
ck_reconn->setWhatsThis( 1
if(bitmap) 1
connect(d->tb_up, 2
hb2->addWidget(pb_execute); 1
tmp, 1
if(signal 2
PsiConAdapter::PsiConAdapter(PsiCon 1
PlugInManager::addXmlOutputterHooks( 1
argTypes 1
tmp= 1
DynamicLibraryManager::LibraryHandle 4
if(dlg) 1
connect(tabShortCut, 1
Q_ASSERT(otherTabs); 1
assert(0); 1
set_syserr(ERANGE, 1
metacontact->setStatusMessage(c->getStatusMessage()); 1
frames.append(mainFrame()); 1
goto 32
tile->setPos(pos); 1
if(p->features().contains() 1
m_fileName 1
avatarm->insertItem(tr(), 2
qWarning(error); 1
d->pb_http_deny->hide(); 5
processResult(exitCode); 1
requestClientVersion(d->jid.withResource(r.name())); 2
introMessage 2
if(!ret) 4
setConstraints(f, 1
CPPUNIT_ASSERT(QString() 3
doWhois(); 2
QMatrix 13
m_firstChange.start(); 1
QList<EventItem 1
pb_close->setDefault(true); 2
sendSxe(sxe, 4
return_value 2
toolBar->addAction(actAHCommand); 2
prof.antiSuspend 2
AlertIcon::AlertIcon(const 1
widget.loadUrl(url1); 1
lb_keyname->setText(tr()); 1
lb_transDesc->setText(jt->desc()); 1
sound[ 1
r.setStatus(Completed); 2
if(qVariantCanConvert<KeyBundle>(v)) 1
c->setup(serverMode, 1
#warning 3
d->accessible 2
tc.insertText(act_suggestion->text()); 1
path.addRect(frameRect); 1
nanojit::CodeAlloc::allocCodeChunk(size_t 4
setElementId(QString()); 1
SecureMessageSignature::SecureMessageSignature() 2
SAFELY(Pa_StopStream(m_pStream)); 2
play_buttons_[d->tb_seSystemPlay] 1
IO(state, 1
d->connect_handshaken 2
pb_search->setEnabled(FALSE); 1
e.appendChild(x_element); 1
data->setHtml(Qt::convertFromPlainText(text)); 1
c->setConstraints(con_cipherSuites); 1
d->h->getLatest(d->jid, 1
foreach(KeyStoreOperation 1
setZValue(zvalue); 1
connect(act_prev_,SIGNAL(activated()), 1
asHex[0] 1
glTranslatef(offset.x, 1
ui.loginEdit->selectAll(); 1
PsiHttpAuthRequest 1
if(!strings->lookup2(state, 1
i.storeContextId 1
actionsService_->recvEvent(contact); 2
NetworkDiskCache 1
LLDrawable 1
pos.ry()++; 1
if(_type 3
roster 2
TimerInfo 3
tb[1].keys 1
setAvailable(false); 1
LLViewerStats::getInstance()->incStat(LLViewerStats::ST_CREATE_COUNT); 1
msg.method 5
x_brd 1
QVERIFY(iconset->load(g.pathBase 2
output[j] 1
TabDlgDelegate::TabDlgDelegate(QObject 1
pb_close->setMinimumWidth(80); 1
if(isMenuButton()) 1
editMenu->addAction(tr()); 1
QList<CertificateInfoType> 2
soundPlay(play_buttons_[b]->text()); 1
set_syserr(EBUSY, 1
resize(minimumSize()); 1
m_tabBar->setTabData(toIndex, 1
d->idleTime 1
datum_ 2
show 2
parm.terminator 1
connect(&d->t, 2
sp.setVerStretch(1); 1
hb4->addWidget(d->pb_http_deny); 1
d->le_sp_priority->setEnabled(enabled); 1
state->global_cache->clear(mod, 1
if(obj->d->published.count() 1
Q_ASSERT(model->columnCount(QModelIndex()) 1
ANTLR_USING_NAMESPACE(antlr) 1
std::for_each(engines.begin(), 1
doc->clear(); 1
MUCAffiliationsProxyModel::MUCAffiliationsProxyModel(QObject 1
memcpy(pms->buf, 1
if(!(PsiOptions::instance()->getOption().toBool())) 1
manager_->updateState(contact, 1
bring(-1, 2
set_syserr(EPFNOSUPPORT, 1
p[at++] 8
two.prepend(item2); 1
gm->setItemChecked(n+base_group, 2
tree->setExpanded(idx, 1
d->localKey 1
setTabOrder(d->cb_proxy, 1
mInputPanel->setDefaultBtn(default_btn); 1
d->te_sp->setText(preset.message()); 1
e->u 2
names.insert(xresource.name()); 1
ui_.cb_value->setCurrentText(item.value()); 1
while(!queuedOutgoingEdits_.isEmpty()) 1
d->cacheVCard 2
BOOST_CHECK_EQUAL(a.get_element(i).get_int(), 1
GAdvancedWidget::setStickEnabled( 2
timer.stop(); 5
lldebugst(LLERR_USER_INPUT) 5
queuedIncomingEdits_.clear(); 1
ai->size 5
set_syserr(EILSEQ, 1
initWM( 2
QList<QAbstractEventDispatcher::TimerInfo> 1
if(!cached_default_allocator) 1
if(!d->proxy.user().isEmpty()) 3
if(!meta1) 1
info.m_manager 1
if(!d->uf) 1
edits.append(new 3
ui_.lb_name->setText 1
pa->dialogRegister(this); 3
if(d->mode 14
LLFloaterTelehub::LLFloaterTelehub() 1
}; 500
}/ 1
}) 1
btn_save->setMinimumWidth(150); 1
dirs.clear(); 1
QApplication::postEvent(qApp, 1
bottom2->setAutoFillBackground(true); 2
foreach(QVariant 9
app.installTranslator(&translator); 1
priority_field.setType(XData::Field::Field_TextSingle); 1
maxStatusCount( 1
toolbar_->setIconSize(QSize(16,16)); 1
GlobalFixture 4
m_status_remain_message->clear(); 1
zoom_in_action->setEnabled(false); 1
conferences 1
d->le_to->setCursorPosition(0); 2
d->async_writeEntry(KeyStoreWriteEntry(crl)); 1
if(!done 1
it++; 6
BookmarksMenu 1
lastMsgTime_ 2
viewer_->show(); 1
dropText 1
d->te->setTextFormat(Qt::PlainText); 4
dirWatch 2
arguments 3
selectTabsWhenCreated->setChecked(settings.value(QLatin1String(), 1
UserAccount::SSLFlag 1
testPath.add( 2
d->bs 6
URLWatcherPlugin(); 1
d->setIcon((PsiIcon 1
connect(authorsButton, 1
BrowserApplication::historyManager()->updateHistoryItem(webView->url(), 1
d->bg 1
CPPUNIT_TEST(testBlockItem); 1
m_ofn.lpTemplateName 1
P_WARN( 2
0x2E, 1
secflags 2
m_lineEdits 1
if(stores_bytes_p()) 1
text_color.mV[VALPHA] 1
mLCDPanel->setDefaultBtn(default_btn); 1
BackgroundWidget(QWidget 2
setMinimumWidth(m_widget->minimumWidth()); 1
foreach(FormField 1
cw 2
xform_obj.setPositionX(x); 1
settings.setValue( 47
grid 3
va_start 2
map[50] 2
setAcceptDrops(TRUE); 2
clientsCopy 1
m_loggers[i]->logTextMessage( 1
mp_clear(n); 1
connect(d->pb_prev, 1
updateAccounts( 2
setWindowTitle(tr().arg(account_name)); 1
v.setData(data); 1
d->act->start(); 16
connect_hostNameReceived 1
connect(pb_close, 17
d->save->setChecked(false); 1
if(!i) 39
c2.insert 2
tabManager_->getTabs(this)->addTab(this); 1
default_value 1
data_.fromXml(e); 2
confirm 1
line->setFixedHeight(2); 1
folderRemove(v); 1
Protector::reportError( 2
downloadsView->setIndexWidget(m_model->index(row, 1
SecureMessageSignature::SecureMessageSignature(IdentityResult 2
channel.write(toString(server.pool.getCount()).c_str(), 1
ui_.pb_clear->hide(); 2
regexp 1
memcpy(buf.data(), 2
set(SecureArray(a)); 2
pubsub.setAttribute(http: 3
sentTos[act] 1
m_recentlyClosedTabsMenu 1
i->setData(0, 1
child=child.nextSiblingElement(); 1
preferedTabsetForKind_[kind] 1
QTabBar::mouseDoubleClickEvent(event); 1
if(i.type().section() 1
geom.setWidth(r.width() 1
gameover(0); 1
if(min_density_p(num_entries, 1
pix.fill(); 1
ui.portEdit->setValidator( 1
appendSysMsg(tr().arg(Qt::escape(dispNick_))); 1
fileNameLabel->setText(tr().arg(QFileInfo(defaultFileName).fileName())); 1
if(QApplication::mouseButtons() 1
d->ck_dockToolMW->setChecked( 1
QVERIFY(spy2.count() 1
o.save(pathToProfile(name) 1
QDBusInterface 1
migrateBoolEntry(p_lnf, 2
ua.fromOptions(&d->accountTree, 1
AttachView 1
bRepeat 1
QTwitterApp::mainWindow()->changeListBackgroundColor( 1
CPPUNIT_ASSERT(item.all()); 2
sha1_init(&_context); 1
gMenuHolder->childSetText()); 4
file 8
x.flip_sign(); 1
p.setItemEnabled(0, 1
PKeyBase::PKeyBase(Provider 1
data->parent 2
screen_pos_vec 1
QList<ActionList 4
m_sessionCookies.removeAt(row); 1
connect(ui_.pb_newList,SIGNAL(clicked()),SLOT(newList())); 1
GameProtocol::send(Q3Socket 1
QPointer<GCUserViewItem> 1
ck_keepAlive->hide(); 1
m_result->testFailuresTotal() 1
if(isSupported()) 1
form.setType(XData::Data_Form); 4
UnopenableBuffer 1
m_loadOnDemand 1
bottomhbox->addWidget(bottom3); 2
if(word 1
if(ui_.le_role->edited()) 1
p.setViewport(0, 1
ai->qbuf 8
volume_params.setType( 13
QTreeView 2
if(out_pending 2
XDataField_JidSingle(XData::Field 1
btn->setAutoRaise(true); 1
Private(SyncThread 1
ck_host->hide(); 1
Figure::str2map(txt.left(2), 1
foreach(QNetworkCacheMetaData::RawHeader 1
TestCase::runTest() 1
PrivacyRuleDlgTest::PrivacyRuleDlgTest() 1
chatView()->verticalScrollBar()->setValue(chatView()->verticalScrollBar()->value() 2
if(le_jid->text().isEmpty()) 1
APR_BRIGADE_INSERT_TAIL(bb, 2
c3.formata 1
TokenAsker 2
if(ui_.le_phone->isModified()) 1
phone_client_->SignalSendStanza.connect(slots_, 1
connect(bTango, 1
doClear(); 4
d->certs 1
d->pb_http_deny->setText(tr()); 1
if(vis) 1
bounceRec.nmRefCon 1
GO(thread).set(state->new_class(, 1
G(regexpdata)->set_object_type(RegexpDataType); 1
QAction::setIcon(d->icon 1
public 49
TrayIconPrivate( 1
d->le_oeChat2->setText(); 1
Contact 12
toolbar->addAction(zoom_out_action); 1
TestSuccessListener::reset(); 1
QDBusConnection::sessionBus() 1
closeTab(getTab(tab)); 1
addHistoryItem(item); 1
settingsOpen 1
FancyPopup::setHideTimeout( 1
pPotential 1
ts.date().day(), 1
e.appendChild(height_element); 2
m_bookmarksToolbar->setPalette(p); 1
LLColor3::LLColor3(const 3
gRlvHandler.filterNames(text); 1
d->le_oeSystem->setText(); 1
pNode->CollectQueryParams(params); 1
exceptionTable->setModel(m_proxyModel); 1
in_useClientInit 2
m_parent->add(m_node, 1
o.setOption( 2
if(ui_.le_nickname->edited()) 1
id2widget.insert( 1
Q_ASSERT(model->hasIndex(rows, 1
d->cb_tabGrouping->setCurrentIndex(3); 2
d->opt_pubfile 1
jdns_link(jdns); 2
pb_stop->setFocus(); 2
QGraphicsRectItem 1
i->contactProfile()->scAgentSetStatus(i, 1
d->ck_useEmoticons->setPalette(customPal); 1
_prev 1
QIconSet 1
QPushButton::hideEvent(event); 1
name.truncate(name.length()-1); 2
m_tabBar->contextMenuRequested(event->pos()); 1
promptUserToCreateAccount(); 2
if(set_username) 1
QXmlStreamReader 1
CPPUNIT_TEST(testIsBlock); 1
MUCManager 1
indexMap[idx] 1
if(p.x() 1
supportedContainers.contains(w->metaObject()->className())) 1
dlg->lv_disco->setSelected(item, 1
lb_comment->setText(PsiOptions::instance()->getComment(name_)); 1
pa->showXmlConsole(); 1
psi->init(); 1
if(primary) 1
QVERIFY(widget.webView(1)); 1
free(result); 1
ContactListGroup::~ContactListGroup() 1
file_share_session_client_->SignalFileShareSessionCreate.connect(listener_, 1
actStop 1
resetPos(); 1
CFBundleRef 2
d->ck_useleft->setChecked( 1
session_manager_ 1
SxeRecord::VersionData::VersionData(QString 1
ui_.gb_info->setEnabled(enabled); 1
d->pb_form_cancel->hide(); 2
mNumRuns--; 1
checkableAction->addTo(&toolBar); 1
account.setPassword( 3
beginRemoveRows(index(parent), 1
24 1
name->setText(title); 1
viewport()->setAcceptDrops(true); 1
PsiToolTip::install(ui_.le_topic); 1
view->setCurrentIndex(idx); 1
cb_typ->addItem(supportedTypes[i].name); 1
commands_.clear(); 1
threadCancelled.unlock(); 5
col.mV[3] 1
cls->has_ivars 2
if(late_read) 1
cls->setup(state); 1
toolbar->addAction(m_hint_action); 1
migrateBoolEntry(p_sound, 1
ui_.le_title->setEnabled(x); 2
Q_UNUSED(title); 1
bookmarks->insertSeparator(); 1
button->setSoundFlags(LLView::SILENT); 2
conf_x.appendChild(conf_x_field_type); 1
qSort(m_exceptions_block.begin(), 2
le_jid_->setReadOnly(true); 1
cb_profile->setWhatsThis( 1
ChessPlugin(); 1
if(x[j-1] 2
Q_DECLARE_METATYPE(QCA::Certificate) 1
qApp->quit(); 1
mainWindow->addToolBar(dockPositionToToolBarArea((Qt::Dock)o->getOption(base_ 1
TipDlg::show(this); 1
print 1
m_slider->setRange(min, 1
QList<ConferenceBookmark> 3
LLWeb::loadURL(media_url); 1
v_items 2
if(j.resource().isEmpty()) 1
item->removeFromScene(); 1
newKeyItem->setData(0, 1
windows.append(windowState); 1
rebuild(); 4
d->gr_form->setEnabled(true); 3
toggleJoinByNameAct_->setCheckable(true); 1
proc->setParent(0); 2
no(tr()), 1
switch(s) 1
EventItem 9
m_historyBackMenu->clear(); 1
done 15
RosterItem 2
if(!session.isNull()) 1
TestCaseDecorator::getName() 1
setSizePolicy(QSizePolicy::Maximum, 1
powerHandler->openByName(); 1
applyList(d->list, 1
hotKeyID.id 1
d->jt->setForm( 1
glTexParameteri(GL_TEXTURE_2D, 6
map[3] 2
TODO_ASSERT_EQUALS(, 16
client()->sendMessage(m); 1
headerView->setResizeMode(ContactListModel::PictureColumn,QHeaderView::Custom); 1
if(d->tb_pgp) 3
StringListDialog::~StringListDialog() 1
globals.ffi_ptr.set(ptr); 1
TEST_CASE(simple9); 1
parm 1
if(ui_.mle->chatEdit()->text().isEmpty()) 1
buffer.open(QBuffer::ReadWrite); 1
session_->flush(); 14
loadScripts(); 1
ui.displayNamesButton->setChecked( 1
gFloaterTools->showMore(FALSE); 1
zoom_out_action->setEnabled(false); 1
TEST_CASE(forwhile11); 1
headers 1
createActionList( 6
resetGroupName(); 3
readEntry(base, 1
d->le_to->setEnabled(true); 3
tog_hidden 1
order_ 1
QTRY_VERIFY(action->isEnabled()); 1
data[6] 1
QWhatsThis::add(d->ck_gcSound, 1
NODE 6
m_saveTimer, 5
d->mainwin->setGeometryOptionPath(); 1
out.resize(oldsize 2
d->parentWidget_->show(); 1
if(act) 1
QLabel::mouseReleaseEvent(e); 1
tune.setTrack(QString::number(tracknr)); 1
allocated_objects++; 1
IconsetLoadThreadDestroyEvent(QThread 1
AttachThreadInput(ThisThreadID, 1
Q_ASSERT(c.oldSize 2
layout->addWidget(lb_comment); 1
w->showNormal(); 1
affiliation_ 2
dialog.setWindowTitle(tr()); 1
_l->failedAssertPredicate( 1
setToolButtonStyle(icon().isNull() 1
act_voice_->setEnabled(!account()->capsManager()->isEnabled() 1
Object(rb_eTypeError), 2
g_event->askers[n].handler_pos--; 1
setResizeAnchor(AnchorViewCenter); 1
default:; 12
if(!out.isEmpty()) 5
g_graphicsContext.ScaleFinalCoords(rect.left, 1
subType 6
remove 3
zR 3
hb_http_id->addWidget(d->le_http_id); 1
JAVASCRIPT_OBJECT_CREATE( 1
MessageWindow(WinSystemWatch 1
menuActions_[]->setEnabled( 1
NextStep, 1
widget->hide(); 1
if(id.isEmpty()) 4
contact->setStatus(status); 1
if(!d->mle->isEnabled()) 1
Invalid_Algorithm_Name::Invalid_Algorithm_Name(const 1
Selector 5
o.setSecurityEnabled(secure); 1
dlg->lb_pageTitle->setHelp( 1
CLog::Log(LOGDEBUG,, 2
popup 6
qcaEventHandler_->submitPassword(id,QCA::SecureArray(passphrases_[entry.id()].utf8())); 1
help->insertItem(xpm, 1
ProviderManager::ProviderManager() 1
musicdatabase.Close(); 1
if(newgroup.isEmpty()) 2
isImage 1
psi_->dialogRegister(this); 1
services_[group->getAccountName()]->actionSendMessage(jids); 2
box->move(btn->x(), 1
m_fLeftThumbX 3
m_fLeftThumbY 3
le_port->setEnabled(on); 1
tb->setPsiIcon( 2
m_leftLayout->addWidget(widget); 1
gameplay_layout->setRowStretch(0, 1
divide(state, 2
grid->addWidget(chb_gps,8,0,Qt::AlignCenter); 1
actionsService_->clearAvatar(contact); 1
mPrefsIM 2
if(obj->d->success) 1
pText->setStringUTF8(pText->mObjText); 1
actionsService_->openChat(metacontact); 2
disconnect(voiceCaller_,SIGNAL(terminated(const 1
updateInProgress 2
m_loggers[i]->logBinaryMessage( 1
tune.setAlbum(stream.readLine()); 1
active->ip 1
lbx_proxy->setCurrentItem(lbx_proxy->count()-1); 1
m_viewToolbar->setText(!visible 1
origin.condition 1
PsiDataService::PsiDataService(PsiAccount 1
m_tests.erase( 1
printResult( 1
free(szRemove); 1
Test::findTestPath( 2
replaced 3
QList<SxeNegotiation 1
sha1_final((unsigned 2
LLPreferencesHandler 1
renderer->render(&p); 1
unloadPlugin( 1
StatusSetDlg 1
rectParent.appendChild(yElement); 1
KeyStoreOperation(QObject 1
field.setRequired(true); 1
mClickAction(0) 1
QModelIndexList 5
import_arguments(state, 1
mLabelSegments.clear(); 1
down_state, 1
d->from 5
connect(qApp, 8
AvatarFactory 1
event->setAccepted(true); 2
sym 1
while((p 1
services_[account->getAccountName()]->actionManageBookmarks(); 1
doc.setContent(contents); 1
meta_mask 4
JT_AHCServer::JT_AHCServer(Task 1
d->asTool 2
Global() 1
password_ 2
primaryAtChat()->registerNotificationType 2
pItem->m_bIsFolder 2
actJoin->addTo(&p); 1
m_gfxChangeTimer->start(); 1
stack_cleanup: 1
VCardStaticAvatar(AvatarFactory 1
QWebSettings::setIconDatabasePath(directory); 1
QString::number(sock->peerPort()); 1
m_board(board) 1
d->setCursor(Qt::WaitCursor); 3
u.publicKeyID 2
d->errorCode 7
tlsHandler->continueAfterHandshake(); 2
model->match(QModelIndex(), 1
TuneController 8
setPalette(pal); 1
progressBar->setMaximum(bytesTotal); 1
jid_.full() 1
if(LLWLParamManager::instance()->mAnimator.mUseLindenTime) 1
bytesWrittenTrigger.start(); 2
i->contactProfile()->doItemRenamed(i, 1
d->le_port->setText(QString::number(x)); 1
charMode 1
FileWatch 1
PsiIcon::~PsiIcon() 1
psi->roster.setAutoDelete(true); 1
manager_->setAvatar(contact, 1
ChatDlg 3
setInformation(from); 1
service->primaryAtChat()->chat 4
out[j] 1
applyButton->setText( 1
ui_.le_fullname->setEnabled(x); 2
statusMessage(tr()); 8
srv->actionGroupDelete(group->getGroupPath()); 1
have_systemstore 1
public: 396
if(jt->success()) 5
d->popupAction(lnk); 1
mWebPanel->cancel(); 1
sock->writeBlock(buf, 1
self->setAccountName(acname); 1
grid->addMultiCellWidget(fixed, 1
foreach(GrabbedKey 1
MAction 2
q.format 1
DebugBreak(); 1
d->loadIconset(oldDef, 1
d->f.setFileName(saveName); 1
hb1->addStretch(1); 7
frames 2
ui.countdownLabel->setText( 1
if(name.isEmpty()) 5
commands_.append(i); 1
ui.passwordEdit->setText( 1
callbacks[1].id 2
ns_ 6
QObject::connect(bg, 1
xdata.setInstructions(TextUtil::linkify(xdata.instructions())); 1
DuplicateHandle(GetCurrentProcess(), 2
if(entry->nil_p()) 1
WbDlg::~WbDlg() 1
updateParents(); 5
soundact->setOn(true); 1
m_ui->setupUi(widget); 1
(const 1
Figure::moveListBlackPawn(Q3PointArray 1
le_transPrompt->setText(); 2
TestFactoryRegistry::addRegistry( 1
connect(pb_modify, 1
Q_UNUSED(item); 1
fixedFont 4
XFREE(stub); 1
addedCookies 2
Q3Dns 1
LLToolPlacer::LLToolPlacer() 1
if(authzid) 1
LLFontGL::sSansSerif); 1
Map 1
gPipeline.markMoved(drawablep); 1
GetLastInputInfo 1
le_name->setFocus(); 3
iq_.appendChild(query); 4
setTabPosition(QTabWidget::Top); 1
Proxy 1
statusList(0), 1
qSwap(pos.rx(), 1
accountsModel(0), 1
Q_ASSERT(max 1
set_syserr(EDOM, 1
CookieExceptionsModel::CookieExceptionsModel(CookieJar 1
connect(discoInfoQuerier_, 2
connect(voiceCaller_,SIGNAL(rejected(const 1
Console::~Console() 1
ui_.pb_deleteList->setEnabled(false); 1
if(d->actionType 6
d->statusGroup->setPsiIcon(PsiIconset::instance()->statusPtr(STATUS_OFFLINE)); 1
isOld_ 2
d->prefilterShowOffline 1
m_rightLayout->insertWidget(1, 1
d->list.clear(); 1
kchr 1
d->pa->actionInfo(d->jid); 1
font.setBold(true); 2
dexc(VMAssertion, 1
state->om->collect_mature_now 1
pep_avatars_[jid.bare()]->updateHash(item.id()); 1
QModemCall 2
ASSERT_EQUALS(const 1
vboxLayout 1
queuedOutgoingEdits_.append(edit->xml(doc_)); 1
proxy_chooser_ 1
memcpy(s.data() 1
if(fi.isDir()) 2
c1.findreplacecaseless 2
interface->connection.data()->get( 1
connect(d->pb_chat, 1
m_pReader->SetObserver(NULL); 1
uploadData.reset(); 1
ssf_max 2
themes_button_layout->setMargin(0); 1
d->cv->link(this); 1
sxemanager_->startNewSession(target, 1
chatView()->setDialog(this); 2
Q_ASSERT(model->setData(QModelIndex(), 1
m_player_steps 2
m_gameplay_steps->hide(); 1
ensure_init(); 6
modify_buttons_[d->tb_seChat1] 1
_props.inKeyring 2
setText(text() 2
MyOpenPGPContext 1
options->setOption(base 6
authenticator->setUser( 1
d->act_scrollup->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
if(keepOpen_) 1
~URLWatcherPlugin(); 1
retranslateUi(); 1
QTreeView::keyPressEvent(event); 4
spacing 1
#	define 2
beginRemoveRows(QModelIndex(), 3
conn->setOptHostPort(host, 1
ui.shortenerInfoLabel->setText( 2
m_zRotationAngle 1
mFrameData.reset(); 3
if(!r.name().isEmpty()) 1
while(index 1
cerr 2
AHCFormDlg::AHCFormDlg(const 1
add_sym(const_missing); 1
longAgo.setDate(longAgo.date().addYears(-1)); 2
client->setErrorOnDisconnect(false); 1
hb2->addWidget(d->le_to); 1
bReplicate 5
dump(); 1
LLToolMgr::getInstance()->setCurrentToolset(gBasicToolset); 1
TEST_CASE(invalidcode); 1
downloadAsk->setChecked(true); 1
m_toggle_borders_action->setText(tr()); 2
if(base) 1
ASSERT_EQUAL(expected_ancestors, 1
if(graphicsitem_.pixmap().isNull()) 1
hasData_ 1
pm.setItemEnabled(10, 1
postEvent(event); 1
for(Entry 10
charCode 2
iii 1
hints 1
toolbars_.clear(); 1
account 3
jids.append(contact->getJid()); 1
f 23
Frame 3
doc.documentElement().replaceChild(element, 1
CHAR64LONG16 1
info_el.setAttribute(,selfAvatarHash_); 1
g_isHandleOwner 1
moveListWhitePawn(vl, 1
if(a[0] 1
globals.special_classes[(uintptr_t)Qnil 1
d->remove->setEnabled(false); 4
setChatState(b 1
acceptCombo->setCurrentIndex(2); 1
mListenerVObject 3
cstr2tbstr 18
pal.setColor(QPalette::Background, 1
checkParams(); 2
updateGroupInfo(g); 1
profConf 1
DynamicLibraryManager::~DynamicLibraryManager() 1
disconnect(icon, 3
d->cb_bounce->setCurrentItem( 1
aRosterExchange(d->rosterExchangeItems); 1
shared.set(use_system, 1
bins 1
title->setText(); 1
m_privateBrowsing 1
set_syserr(EMFILE, 1
looping 4
VirtualFree(p, 1
need_status 2
fieldsEnable(true); 2
QCoreApplication::setApplicationVersion(version); 1
ContactListView::ContactListView(QWidget 1
bScummvm 1
KNotificationInterface 1
GameBoard::resizeEvent(QResizeEvent 1
context.m_result->addFailure( 1
d->loadIconset(&d->system, 1
Q_ASSERT(qVariantCanConvert<QColor>(colorVariant)); 2
SecureMessage::SignMode 1
SafeDeleteLater 3
if(group->childCount() 1
QItemSelection 1
dict.erase( 1
vb_xdata->addWidget(d->xdata); 1
pms->abcd[0] 2
painter.setBrush(isDown() 1
if(msg.args 2
d->pb_next->show(); 2
pb_start->setEnabled(false); 2
Figure::validMove(GameBoard::GameType 1
checkableAction 1
d->pipe.release(); 2
CapsManager::CapsManager(const 1
d->searchText->clear(); 1
numAccountsChanged(); 2
restoreGeometry(settings.value().toByteArray()); 1
update_finished(); 1
QTest::addColumn<QWebPage::WebAction>(); 1
set_array(as<Array>(obj)); 1
stub 1
LLPreferenceCore::~LLPreferenceCore() 1
z[13] 2
LEGOPTP.dockHideMW 1
doFinish(); 1
while(children.at(i) 1
params.setAuthzid( 1
auto_auth_field.setVar(); 1
if(key.length() 2
AccountRegDlg 2
result.print 1
qWarning(QString()).arg(node).arg(ver).toAscii()); 1
CPPUNIT_TEST(testUpdateCaps); 1
v_port 3
te->setTextFormat(rich 2
if(item->type() 8
if(GetConsoleMode(pipe, 1
model_->removeRow(currentIndex().row()); 1
memcpy(stub->arg_types, 1
if(children.item(i).toElement().attribute() 4
GO(exc_segfault).set(dexc(MemorySegmentionError, 1
history.setHistory(list); 5
mOriginalPos 1
if(!str.isEmpty()) 12
if(obj 2
toolBar->addAction(actSearch); 1
fputs(time_str, 1
setCursor( 1
manager_->addTransport(transport, 1
c1.alloc 1
doReleaseLibrary(); 1
OptionsTabChat::~OptionsTabChat() 2
ui.searchLineEdit->setFocus(); 1
am->setItemChecked(17, 1
services_[resource->getAccountName()]->actionExecuteCommand(jid); 1
completed 1
d->cv->qa_clearAvatar->setEnabled(d->pa->avatarFactory()->hasManualAvatar(u->jid())); 1
d->optionsMigration.fromFile(pathToProfileConfig(activeProfile)); 1
anim.Create(pChild, 1
i.updateCount 1
LLVector3d		ray_end_global 1
assertion_traits<double>::toString(actual), 1
pal.setBrush(QPalette::Base, 1
channel->call(Tuple::from(state, 1
Result() 1
Roster::MainWindow 1
matching.append(w); 1
file_with_num 1
OnWindowUnload(); 1
enableJavascript->setChecked(settings.value(QLatin1String(), 1
hb1->addWidget(d->pb_reg); 1
check(checkStr.c_str()); 3
out.replace(x1, 4
lb_proxychooser->hide(); 1
if(sec) 1
QWhatsThis::add(d->ck_asAway, 1
pb_delete->setEnabled(TRUE); 1
addAction(act_send_); 1
hub_pos_region 1
min 14
newPresets.remove(name); 1
items_[i].setOrder(order); 1
free(rec); 2
painter.save(); 3
homeUrl 3
if(GetConsoleMode(h, 2
if(!t.isNull()) 1
request 3
countFailure(); 12
manager_->getItemsByAffiliation(MUCItem::Outcast); 1
} 20277
MLabel::MLabel(QWidget 1
t.scale(sx, 1
pieces[piecenum]->ApplyTransform(); 1
bTango->setVisible(scr 1
d->privateKeys 2
pi->ensureInit(); 1
QList<Action> 2
LayerTracker() 1
LEGOPTP.sp[name] 10
OpNextStep, 1
PGPKey 35
Drawer::hasTakenFigure() 1
xdg 4
for(j 1
eventNotifier.name 1
startTrigger.setSingleShot(true); 2
WebContentSelectorItem::~WebContentSelectorItem() 1
statusIconProvider_ 3
cleanup(); 12
append(v); 1
PsiOptions::instance()->setOption(); 4
if(!pubkeys.isEmpty()) 1
latestEntryList 1
LLFloaterWindLight 1
resume(); 1
ui_.cb_active->setCurrentItem(names.findIndex(activeList)+1); 1
le_value->setText(value_.toString()); 1
m_maze->cellMutable(position.x(), 1
))); 1
connect(ck_host, 1
closeAfterReply(); 5
Q3ListViewItem::takeItem(i); 1
e.xclient.display 1
m_tabBar->setTabsClosable(true); 1
negotiationElement.appendChild(doc.createElementNS(SXDENS, 1
str.replace(QRegExp(); 3
xml.writeAttribute(, 9
actionExecuteCommandSpecific(j,); 2
Asserter::makeActual( 1
QMessageBox::information( 1
((struct 1
ContactView 4
parent->addItem(item, 1
reply->abort(); 1
Synchronizer 2
lbx_profiles->insertItem( 1
connect(this,SIGNAL(defaultListError()),SLOT(block_getDefaultList_error())); 1
gone 1
QToolButton 8
LEGOPTP.onevent[eOnline] 1
Q3ListView::setPalette(mypal); 1
m_test->runTest(); 1
d->act->input.recip_ids 2
mapIndex++; 1
d->filterActive=false; 1
menuActions_[]->setEnabled(dataService->hasPep()); 1
QMessageBox::warning(this, 9
ui_.cb_ssl->setCurrentIndex(ui_.cb_ssl->findData(ssl_)); 1
updateInfo( 1
ai 2
if(!to.isValid()) 1
mQuitAfterRuns(FALSE), 1
value().toInt()); 2
play_buttons_[d->tb_seChat1Play] 1
item->tryAgainButton->setVisible(!done); 1
mp_mul_2d(a, 1
Deny 1
finished(); 4
updateSelf(); 1
LEGOPTP.gcHighlights.clear(); 1
if(!acceptDrop(i)) 1
childp->mDrawable->getFace(face_num)->setState(LLFace::HUD_RENDER); 1
d->tb_info 1
BOOST_CHECK_EQUAL(a.get_element(0).get_int(), 1
QWhatsThis::add(d->cb_sp_status, 1
(event->modifiers() 1
domElement 5
gFrameStats.setTrackStats(TRUE); 4
connect(ui_.pb_dumpRingbuf, 1
g_keyboardHook 2
hint_icon.addPixmap(QPixmap()); 1
message.GetParam1() 2
metacontact->setStatus(self->getStatus()); 1
chb_gps->setChecked(prof.gps); 1
metacontact->setIncomingEvent(NoEvent); 1
sound[e.attribute()] 1
webViewWithSearch->deleteLater(); 1
MAP_PRIVATE 1
TestResult::startTestRun( 1
item->m_output.setFileName(fileName); 1
checkpostIncrementDecrement( 4
ri.setAsk(o->getOption(rbase 1
osvi.dwOSVersionInfoSize 1
QFileSystemWatcherRelay2 2
p->setPen(QPen(Qt::red, 1
Q_ASSERT(c.last 2
SET(c, 16
if(!negotiation->session) 3
QAtUtils::skipField( 5
if(!j.isEmpty()) 1
pb_detach->setIconSize(QSize(16,16)); 1
QObject::disconnect(signaler,SIGNAL(notificationTimedOut(void 1
sd->activateAllTests(); 1
d->unloadAnim(); 1
output.encryptedToId 1
joinByName_ 1
connect(&finishedTrigger, 2
SecureArray::SecureArray(int 1
webViewUrlChanged(m_webView->url()); 1
QCOMPARE(iconset->authors().count(), 1
ContactListRootItem 3
nodes_ 1
scene_->regenerateTransformations(); 1
pb_next 1
PsiOptions 13
btn->setFocusPolicy(Qt::NoFocus); 1
addColumn( 3
gpg_waitForFinished(&gpg); 9
colorControl->update(LLWaterParamManager::instance()->mCurParams); 1
if(ioctl(fd, 2
NOTIFYICONDATAA 1
e.appendChild(doc.createTextNode(text_)); 2
InitializationVector::InitializationVector(const 2
accounts->loadAccounts(); 1
GroupData 2
NOTIFYICONDATAW 1
if(line.startsWith()) 2
d->cur_service_status 1
sp.setStatus(d->cb_sp_status->status()); 1
migrateIntEntry(p_dt, 1
j->go(true); 1
voiceCaller_->sendStanza(st); 1
services_[contact->getAccountName()]->actionUnassignKey(contact->getJid()); 1
CSRContext 5
qtKeyCode 2
accessible 1
connect(m_cookieJar, 1
mStreamBuf(channels, 1
TEST_CASE(func4); 1
Q_ASSERT(accounts_.contains(account)); 1
d->id_next 3
pControl->FreeResources(); 1
if(!(edits_.size() 1
if(init_step 1
mChannels(channels), 1
action->setObjectName(objectName); 1
_lb_column 3
painter->drawPixmap(option.rect.topLeft(), 1
appendSysMsg(tr().arg(str), 2
m_xml->setRootElement( 1
QObject::connect(sock, 9
QTwitterApp::mainWindow()->resize( 1
Certificate::~Certificate() 1
qPrintable(tempFileName())); 2
layout->addWidget(overlay,1,0); 1
d->forced 2
negotiations_.insert(negotiation->sessionId, 1
edt->move(2, 1
R0(c,d,e,a,b, 1
negotiationElement.appendChild(request); 2
vl.point(x).y(), 2
LEGOPTP.color[cStatus] 1
value.convert(varianttype); 1
assert(b); 2
m_twitPic 1
QWhatsThis::add(d->ck_popupMsgs, 1
rcm 3
connect(client_, 9
if(otherCsr.isNull()) 1
connect(d->iss_emoticons, 1
zoom_in_icon.addPixmap(QPixmap()); 1
LEGOPTP.color[cOnline] 1
d->lastReferrer 1
toString(args)); 1
marshal(tup->at(i)); 1
historyMenu->setTitle(tr()); 1
if(N) 1
if(testAttribute(Qt::WA_DeleteOnClose)) 1
TEST_CASE(stlBoundries3); 1
updateAccounts(); 3
textRect.setY(midHeight 1
m_leftWidget 1
connect(d->psi, 3
TEST_CASE(delete2); 1
R4(c,d,e,a,b,68); 1
if(parts[n].isEmpty()) 1
wbWidget_->setSizePolicy(QSizePolicy(QSizePolicy::Expanding, 1
CFRunLoopAddSource(CFRunLoopGetCurrent(), 1
c0.ltrim 1
TipDlg::show(d->psi); 1
MacKeyTriggerManager::Ascii2KeyCodeTable 1
d->jt 23
readEntry(tag, 1
lb_date->hide(); 1
insertItem(nextRow, 1
acc.opt_ignoreSSLWarnings 1
Output() 1
cursor.insertText(newText 1
chat_option.label 1
timer->start(); 4
jid.set(ui_.host->text(), 1
widget->setDisplayMode( 1
d->cur_emoticons 1
store.setNameFilter( 1
it->updateInfo(); 1
LEGOPTP.serviceRosterIconset.clear(); 1
socket.waitForBytesWritten(); 1
out.keyBundle 2
queuedSendTabTo(static_cast<TabbableWidget 1
karatsuba_mul(workspace, 1
ui.tabs->setCurrentIndex( 1
indexLastDirectorySeparator 1
AHCommandServer::~AHCommandServer() 2
under 4
map[58] 2
d->ck_auth 1
msg.lookup_from 2
CRect 2
NeoModemService 1
QList<PubSubItem> 1
d->flist.remove(i); 2
m_historyMenuModel 1
rootNode->remove(bookmarkNode); 1
XmlElement::name() 1
acc.req_mutual_auth 1
PrivacyListItem::PrivacyListItem() 1
if(priority 1
d->tb_history->setEnabled(true); 1
tb[1].locked 1
domainLineEdit->setCompleter(new 1
MyKeyStoreEntry(const 2
sVisibleTextObjects.clear(); 1
lv_blocked->setModel(&privacyBlockedModel); 1
d->checkTimer->start( 1
if(di.dirWatch->dirName() 1
qDebug(QString().arg(edit->value(SxeRecordEdit::ReplaceN))); 2
LEGOPTP.color[cProfileBack] 1
locality_ 4
this->service->post(); 1
f.open(QIODevice::WriteOnly 2
wb2m->addResource(r, 1
updateVisibleParents(); 1
CFURLCopyFileSystemPath( 1
m_board->setHeaderLabels(QStringList() 1
glEnable(GL_BLEND); 2
connect(ui_.pb_input, 1
act_save_ 1
jid2.append(); 1
gb_pgp->setEnabled(false); 1
i.key()->rotateAround(i.value()); 1
QPipeDevice::~QPipeDevice() 1
painter->setBrush(QColor(0, 1
TEST_CASE(eraseReturn); 1
_client->connectToServer(stream, 2
newstatusAction->setShortcut( 1
connect(t,SIGNAL(finished()),SLOT(receiveList())); 1
jsdtrace_execute_start(JSScript 1
menu_modes_->addActions(group_modes_->actions()); 1
QDBusMessage 2
Type_append, 1
initUi(); 2
tree->setDragDropMode(QAbstractItemView::InternalMove); 1
if(!negotiation->peer.compare(message.from()) 1
d->progress->show(); 3
HistoryMenuModel::HistoryMenuModel(HistoryTreeModel 1
qRegisterMetaType<SecureArray>(); 2
postEvent(new 1
vb_xdata->addWidget(d->xdata_instruction); 1
LLSelectMgr::getInstance()->selectDuplicateOnRay(ray_start_region, 1
e.xclient.format 1
XChangeProperty( 2
m_stop 3
ri->getRosterBuilder()->setSearch(); 1
nameprep_table.clear(); 1
set_syserr(ENOSPC, 1
QCOMPARE(action->isEnabled(), 2
ui_.cb_lists->addItem(name); 1
IconAction::~IconAction() 1
header->entry 1
connect(group_widths_, 1
setTextSizeMultiplier(1.0); 1
gb_open->setEnabled(TRUE); 1
if(encoded 1
Environment::~Environment() 1
realRow 1
ap_hook_post_config(init_module, 1
sm->setMapping(actSearch, 1
AccountsModel 1
icon.activated(false); 1
InitializationVector::InitializationVector(int 1
gameplay_layout->setSpacing(6); 1
szConditional++; 1
m_ofn.lpstrFilter 1
LLToolCamera::getInstance()->setMouseCapture(TRUE); 1
sOrigin 3
settings.remove( 2
d->lastTaken 2
ti->mark(obj, 1
sendMessage(metacontact->getTopContact()); 1
TestCase::TestCase() 1
LLWLParamManager::instance()->mCurParams.set(, 1
qWarning(); 71
jt->get(di.jid(), 2
dirtyPresets 1
showSelf(v_showSelf); 1
s->connectToHost(d->host, 1
if(timers[i].id 1
if(node.isDocumentFragment()) 1
CapsSpec::CapsSpec() 1
edits_ 1
m_nextTabAction->setShortcuts(shortcuts); 1
cls 2
gradient.setColorAt(0, 1
downloadsView->horizontalHeader()->hide(); 1
fflush(stderr); 2
if(userManagement_) 3
d->cb_toolbars->setEnabled(enable); 1
if(e) 3
callbacks[2].context 1
QFontMetrics	fm(font()); 4
d->ck_rosterAnim->setChecked( 1
add_sym(public); 1
pipeStatus.writeEnd().setInheritable(true); 2
StatusModel::instance()->setStatusList( 1
memcpy(sec_curWrite.data(), 1
connect(op, 3
c.next 2
m_addBookmark 1
actionSendMessage(i->u()->jid()); 1
actionExecuteCommand(u->jid(),); 1
widthaction->setData(QVariant(3)); 1
restore_context(ctx); 1
setAnim( 1
le_pwnew->setEnabled(enabled); 1
if(groupName.isEmpty()) 2
CBStream 1
tb.dirty 2
d->uf 3
keyList.last().userIds.append(QString::fromUtf8(uid)); 1
d->pb_close->setFocus(); 1
OptEventsUI 3
pItem->GetMusicInfoTag()->SetTitle(strFake); 1
passphraseKeyId 2
d->mle->clear(); 1
Q_UNUSED(painter); 2
m_board->header()->setResizeMode(QHeaderView::ResizeToContents); 1
i.key()->attachNeighbors(); 1
connect(pa->privacyManager(),SIGNAL(defaultListError()),SLOT(getDefaultList_error())); 1
XSelectInput(dsp, 5
connect(d->thread, 4
QPointer<XmlParser> 1
d->ck_useTransportIconsForContacts->setWhatsThis( 1
d->tb_icon 1
deleteTexture(m_success); 1
tile->setPos(tile->pos() 2
button->QToolButton::setIcon(pix); 1
menu->addSeparator(); 26
msg.use_from_task(this, 1
if(!negotiation->groupChat 1
moveListBishop(vl, 2
m_board->sortItems(1, 1
checkChildren(QModelIndex()); 1
top 2
groupMenu->addAction(tr(), 2
closeButton_->setSizePolicy(QSizePolicy::Fixed, 1
tot 1
pb_modify->setEnabled(ok); 1
activate_thread(thr); 1
GrowlNotifierSignaler 2
tod 1
titlePalette.setBrush(QPalette::Text, 2
R2(c,d,e,a,b,28); 1
m_themes_selector->addItems(themes); 2
m_pieces.append(piece); 4
WinSystemWatch::WinSystemWatch() 1
role_ 1
c->setUpdatesEnabled(true); 1
d->cb_preset->insertItem(text); 1
quint8 1
MUCItemsTask 7
sec_curWrite.clear(); 2
if(!c_to_app.isEmpty()) 3
account->setEnabled( 1
LLUICtrl 3
--i; 5
setUp(); 1
CompilerOutputter::setLocationFormat( 1
lb_home->setTitle(is.homeUrl()); 1
opt_keepAlive 2
account()->playSound(PsiOptions::instance()->getOption().toString()); 2
PsiToolTip::showText(he->globalPos(), 1
sm->setMapping(actAHCommand, 1
dlg->lv_tabs->setFixedWidth(largestWidth 1
SnarlInterface 1
preset 2
lists 1
button->setPopupMode(QToolButton::InstantPopup); 1
std::wstring 1
mp_read_radix(n, 2
ASSERT_EQUAL( 4
if(ret) 1
QVERIFY(widget.newTabAction()); 1
streamoff 1
updatePGP(); 3
if(e->u.jid().compare(jid)) 1
UserAccount::~UserAccount() 1
u64bit 3
if(y 1
if(x 57
d->listeningFor 9
radix 6
RegCloseKey(hkey); 2
triedResolve 1
if(p 7
if(s 4
if(r 59
if(u 1
if(t 4
if(v 2
if(i 19
if(h 1
if(k 1
if(j 3
if(m 2
if(l 3
if(n 82
if(a 1
LLPreferencesHandler() 1
if(c 19
if(b 1
if(e 5
if(d 2
if(g 2
le_fname->setText(QDir::convertSeparators(fi.filePath())); 2
sLog.outDebug(GetMangosString(LANG_GET_UINT), 1
favConf->setValue(, 1
atchat()->chat( 1
if(N 1
PortAudioDirectSound::~PortAudioDirectSound() 1
mSpawnPointPos[i].mV[VX], 1
impix 7
if(0 1
if(step 2
if(2 1
.arg(reply->url().toString()); 1
if(( 11
urlShortener->shorten(url, 1
QLabel::mousePressEvent(event); 1
if(! 4
SHA1_CONTEXT(const 1
real.setAlphaBuffer(true); 2
ConsoleReference 3
play_buttons_[d->tb_seOfflinePlay] 1
manager_->destroy(); 1
p.setColor(QPalette::Inactive, 1
QTextEdit::mouseReleaseEvent(e); 1
tryNextSrv(); 3
list_.focus(); 2
accountsModel 1
disconnect(sourceModel(), 12
searchText_ 2
d->ck_autocopy->setChecked( 1
d->s 2
d->r 5
s.id 1
switch(k) 5
toolBar->addAction(actBack); 1
d->t 3
d->c 5
if(!ui_.pb_refresh->isEnabled()) 2
game_ 3
d->h 1
d->o 1
d->n 10
d->m 2
if(g->groupName() 1
ui_.le_bday->setReadOnly(x); 2
TrayIcon::~TrayIcon() 1
DynamicLibraryManager::loadLibrary( 1
bigint_sub3(z1, 2
if(new_buf) 1
ControlType 1
timeToFullFile 4
manager_->setItems(changes); 1
AHCommandServer 3
setText(elided); 1
cp->addAllNeededContactItems(); 4
loadIconset(def, 1
v.setPhoto( 2
c->setConstraints(auth_flags, 1
CBitmap 2
i->contactProfile()->scOpenWhiteboard(i); 1
sldr 4
viewerText_->setReadOnly(true); 1
.arg(PluginManager::instance()->shortName(pluginName)); 1
ev_timer_start(loop->base, 1
urlObject 2
m_loggers.append( 1
target->m_children.append(tile); 1
PsiOptions::instance()->setOption(path 3
resultReady(r->id, 2
setWindowTitle(caption().arg(is.name())); 1
if(isNull()) 5
KeyLoader 1
if(!secdirty 1
section(ConstraintType::KeyUsage), 1
splitter_->setOrientation(Qt::Vertical); 1
to->setInformation( 1
while(!out.last().isSelfSigned()) 1
writeErrorTrigger.stop(); 1
tree->setContextMenuPolicy(Qt::CustomContextMenu); 2
v_m.fromStanza(s, 1
twos_complement(&b); 1
if(session) 1
lateMigrationData.toolbars[tbGroup].clear(); 1
keyStoreList 2
).arg(m_mainWindows.count()).arg(tabCount), 1
time_str[20] 1
out.resize(buf.size() 1
connect(t,SIGNAL(finished()),SLOT(setConfiguration_finished())); 1
qLog(Input) 2
TEST_CASE(ifelse10); 1
TestSuite::deleteContents() 1
history.setHistoryLimit(historyLimit); 1
psiPopupList->removeAll(psiPopup); 1
ui.displayNicksButton->setChecked( 1
Q3VBoxLayout 1
fi->done 1
hist->resize(w 1
item->setData(QVariant(c.autoJoin()), 1
GO(iseq).set(new_class(, 1
d->doApply(); 1
IconButton::~IconButton() 1
Console 6
m_status_steps_message 1
QMetaObject::invokeMethod(d, 1
if(_instance) 1
foreach(MoodCatalog::Entry 1
dialog.tree->removeAll(); 1
LLPanelLogin::setAlwaysRefresh(true); 1
PsiTabWidget 2
gAudiop->preloadSound(item->getAssetUUID()); 1
if(con_ssfMode) 1
delegate_.growlNotificationWasClicked 1
colors.push_back(m_channelColor); 1
switch(event->button()) 1
dtextTimer.start(); 1
TestPlugInDefaultImpl::TestPlugInDefaultImpl() 1
d->act->input.delete_key_fingerprint 1
e->anim 1
ANTLR_USING_NAMESPACE(std) 1
transport->setAccountName(acname); 1
QWhatsThis::add(d->ck_showCounter, 1
set_syserr(ESOCKTNOSUPPORT, 1
resize(minimumSizeHint()); 2
if(!d->start(false)) 1
btPower.setFileName(); 2
Q_UNUSED(event); 4
SetDefaults(); 1
image.setAttribute( 1
m_pixmap(0) 1
c0.format 1
cb_typ->setCurrentIndex(i); 1
cv->recalculateSize(); 1
painter.drawLine(neuroncoords[dend->source].first, 1
connect(pb_profiles, 1
pm->insertItem(tr(),rm); 1
if(!process->waitForStarted()) 2
setWorld( 2
AbstractContent::AbstractContent(QGraphicsScene 1
m_bRightTrigger 3
Console::TerminalMode 2
connect(pb_keyclear, 1
VM::VM(size_t 1
SET(ctx, 15
pthread_create( 1
gpg.setAsciiFormat(false); 3
d->panel[d->ocountdown 1
d->localSet 1
cvlist 1
child->updateItems(true); 1
glVertex3f(x, 2
d->dirName 1
setIcon(PsiIconset::instance()->statusPtr(status)); 1
connect(http_,SIGNAL(requestFinished(int,bool)),SLOT(get_finished(int,bool))); 1
SxeNewEdit::SxeNewEdit(const 4
TestPlugInDefaultImpl::removeListener( 1
LLTool::handleRightMouseDown(x, 1
manager()->account()->sendFiles(requester,l,true); 1
animTimer->start(120 1
NeoHardware::~NeoHardware() 1
m_recentlyClosedTabs.clear(); 1
if(	LLMediaManager::getInstance()->supportsMediaType( 2
model->setData(QModelIndex(), 1
ui.buttonBox->clear(); 1
GrepShortcutKeyDlg 1
button->setPixmap(color2pixmap(c)); 2
CGUIControlFactory::GetFloat(pChild, 2
QWhatsThis::add(d->ck_contactsMessageFormatting, 1
m_controlItems.append(button); 1
ASSERT_EQUALS(char 43
setLayoutDirection(Qt::LeftToRight); 1
deleteTimer.start(250, 1
messageBox.setInformativeText( 2
if(!have_entryList_op()) 1
actAHCommand->addTo(&p); 1
Q_ASSERT(!source->collidesWith(target)); 1
CPPUNIT_TEST(testVersionStringToInt_TooBigPart); 1
strOutput.Insert(i2+2,); 2
d->icon->activated(); 1
Constructor: 3
pm_settings_->addAction(act_widths_); 1
if(ui_.le_orgName->edited()) 1
PsiTipLabel::instance()->move(calc->calculateTipPosition(PsiTipLabel::instance())); 1
++h; 1
instances.removeAll(i); 1
node 6
label->setMovie(0); 1
G(symtbl)->setup(this, 1
p->setBrush(cw); 1
setText(oldText); 1
if(probe) 3
moveItem(i); 1
this->serverSocket 1
d->animateNickX 1
mPlaying 3
m_origins.push_back(origin); 1
item.setAction(PrivacyListItem::Allow); 1
QList<QDesignerCustomWidgetInterface 1
environment 5
tnd.uFlags		= 2
Q_UNUSED(paramValues); 1
addAction(m_showMenuBarAction); 1
CPPUNIT_TEST(testConstructor); 2
WRITE(long, 3
d->m.lock(); 3
if(data) 1
strDirectory.Delete(strDirectory.size()-1); 1
cpuinfo.open(QIODevice::ReadOnly 1
view->update( 1
_destroyLine 1
d->cur_custom_status 1
m_toggle_overview_action 1
CPPUNIT_ASSERT(cs[1] 1
m_pieces.removeAll(piece); 3
Q_ARG(QByteArray, 1
x_sw 2
globals.special_classes[(uintptr_t)Qtrue 1
d->anim->unpause(); 1
t->setList(list); 1
QNetworkRequest 14
fwi.cbSize 1
if(ui_.le_title->isModified()) 1
s.name 2
TextTestRunner::eventManager() 1
d->cv->qa_clearAvatar->addTo(avpm); 1
if(!stream.good()) 1
( 72
ks->startAsynchronousMode(); 1
bottomhbox->addWidget(bottom2); 2
y4 1
ruby_frame->last_class, 1
emitCommandAndRespond( 1
m_tabBar->setSelectionBehaviorOnRemove(QTabBar::SelectPreviousTab); 1
parent->statusBar()->addPermanentWidget(m_status_remain_message); 1
StatusModel::instance()->updateDisplay(); 2
domattr.setValue(value); 1
subUrl.setHost(host); 1
handled 1
ret_type 1
toolBar->addSeparator(); 4
fscanf(f, 2
handler 1
d->statusButton->setIcon(PsiIconset::instance()->statusPtr(status)); 1
p.settings.pass 1
entropy_sources.push_back(src); 1
addPath 1
MetaAlertIcon::MetaAlertIcon() 1
CookieJar 4
hasPEP_ 3
field.setType(XData::Field::Field_TextSingle); 1
TEST_CASE(opendir_function); 1
pControl->SetInitialVisibility(); 1
d->busy->stop(); 6
d->le_field.append(le); 2
resize(XSize, 2
item_file_req 7
bOk->setVisible(scr 2
ITunesController::~ITunesController() 1
CSize 1
if(d->start 1
Registries::const_iterator 1
ui_.le_host->setText(jid.host()); 1
Q_ASSERT(min 1
PEPAvatar(AvatarFactory 1
d->end 1
d->enc 5
QWhatsThis::add(d->ck_smallChats, 2
S32 36
next_id 1
pubkeys 2
setFixedSize(m_image.size()); 1
if(!d->canWrite) 1
settingsChanged(); 1
TEST_CASE(func14); 1
QWidget::focusInEvent(e); 1
connect(act_close_, 1
f.write(entry.exec.toUtf8()); 1
Q_ASSERT(tab); 1
p->setPen(cw); 1
TransferMapping 9
readBoolEntry( 2
return(buf); 1
lb_comment->setText(comment); 1
hist->setAlignment(Qt::AlignHCenter); 2
np.pass 1
QCA::KeyStoreEntry 9
AuthEvent::~AuthEvent() 1
if(!dtextTimer.isActive()) 1
sUrlDesc 1
Message::details() 1
e->account()->processReadNext( 1
eventNotifier 1
if(g_event->askers[n].handler_pos 2
setLayout(layout); 3
name 106
edit(senderItemIndex()); 1
TestCaseDecorator::runTest() 1
d->act_close->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
BOOST_CHECK(a.get_element(0).is_int()); 1
plugin_priorities 1
tab->doFlash(false); 1
ui_.te_status->setTextFormat(Qt::RichText); 1
v_readOnly 2
QueryPerformanceCounter(&plend); 1
SystemWatch 3
d->le_oeOnline->setText(); 1
painter.drawText(lobex, 1
popupCopy(link); 1
s.setPriority(fl[i].value().first().toInt()); 1
OpTryAgain, 1
UpdateWindow(winId()); 1
restoreGeometry(savedGeometry); 1
i->done 1
d->interface->connection.data()->get( 3
g_event 2
if(d->groupType 1
state->add_type_info(new 2
lastmsgtype 2
QSet<JDnsSharedRequest 1
QVERIFY(!icon.isNull()); 1
container->session 1
mp_init_set_int(a, 2
mNumSpawn 1
t->start(30000); 1
if(need_update) 3
ary->setup(state, 1
if(d->trackerId 5
suspendDone(); 1
addItem(account, 1
CertificateCollection 27
bookmarks->setEnabled(false); 1
d->xdata->show(); 2
item->setText(n); 1
m_details 1
if(div 1
copy 4
~StringPrepCache() 1
SkewY 1
return; 1057
setVisible 2
system(QString().arg(xprocess->pid()).toAscii()); 4
WSGI 1
if(!_lines.isEmpty()) 1
memcpy(other.data, 1
set_syserr(EDEADLK, 1
item.creationDate 1
ui_.le_host->setEnabled(on); 1
if(queuedOutgoingEdits_.isEmpty()) 1
setTabText(index, 1
d->lw_nickColors->clear(); 1
ChatDlg::Spooled_None; 1
QWhatsThis::add(d->pb_cListBack, 1
setCheckable( 1
std::strcpy(filepath, 1
lst->setSelectionMode(Q3ListBox::NoSelection); 2
startGame(fromJid, 4
connect(ui.doneButton, 1
mw.showMaximized(); 1
TestMemleakInFunction() 1
GameBoard::parseString(const 1
fce 1
setEdited(false); 4
hb->addStretch(1); 6
QCOMPARE(copy3->numFrames(), 4
LEGOPTP.popupHeadlines 1
SetAngle(0); 2
d->le_newNickColor->setText( 1
MenuDialog::handleInitDialog(fw, 1
barYesterday.dateTime 1
connect(pb_ok, 2
XSync(dpy, 1
act_pgp_ 1
if(!validate()) 1
XmlOutputterHook::failTestAdded( 1
connect(&console, 2
doneSend(); 4
H 4
jsdtrace_object_create_start(JSStackFrame 1
JT_AHCServer(Task 1
item->setParent(NULL); 1
Sends 7
setEditRuleEnabled(false); 1
d->frame->setMidLineWidth(v); 1
if(result 9
if(other_vals.contains(val)) 1
if(pconf[]) 2
cb_type->setCurrentItem(0); 1
textEdit->setPlainText(text); 1
referencewbitem 8
tree_(tree), 1
_l->failedAssertThrowsNot( 1
hist 2
sasl_security_properties_t 1
QGLWidget::wheelEvent(event); 1
cb_lang->setCurrentItem(x); 1
setupToolBar(); 1
d->mutex 2
0x00, 1
MessageContext 3
d->pipeCommand.writeEnd().writeSecure(a); 2
!(mAttachedObject->mDrawable->getSpatialBridge())) 1
c->setup(service, 1
setStatus(r.status()); 1
plugIn.m_manager 1
VMPI_setPageProtection(void 2
te->setTextFormat(Qt::RichText); 1
m_recentlyClosedTabsMenu->clear(); 1
mTabContainer->addTabPanel(mGeneralPanel, 1
LLXformMatrix 4
presets.remove(d->cb_preset->text(id)); 1
if(anim 1
proxy.setPassword(settings.value(QLatin1String()).toString()); 1
WorldDescription::~WorldDescription() 1
pos 9
pop 1
cb_commands->insertItem(i.name); 1
m_corners[2][0] 1
Result(const 1
doBrowse(parentAutoItems); 1
disconnect(this,SIGNAL(listError()),this,SLOT(getDefault_listError())); 1
loadOptions(e, 1
jsdtrace_jsvaltovoid(cx, 1
QHashIterator<KeyStore 1
handler_accept(d, 2
ProxyManager::ProxyManager(OptionsTree 1
d->consoleMode 1
EDBHandle::~EDBHandle() 1
setSplitterEnabled(!PsiOptions::instance()->getOption().toBool()); 1
yk 1
connect(opttab, 3
SASLParams() 1
XSetErrorHandler(old_handler); 2
item->showContextMenu(data.toPoint()); 1
m_move_animation 1
Core::Core( 1
bg_pos 3
gototwitterAction->setText( 1
if(d->secure) 1
m_mirrorItem->paint(&p, 1
services_[account->getAccountName()]->actionJoin(c, 1
showWithoutActivation(); 1
PlugInInfo 1
context.palette 1
p.settings.host 1
values->put(state, 4
SPDIF_SAMPLESIZE, 1
isValid 1
app->mainWindow()->raise(); 1
if(queueing_ 1
d->remoteSet 1
RichListViewStyleSheet::RichListViewStyleSheet(QObject 1
bytesWrittenArgs 2
d->cb_proxy->setCurrentItem(0); 2
if(data.empty()) 1
if(message.sxe().elementsByTagName().length() 1
suggestedFromStart 2
actions 14
ui_.log->setDialog(this); 1
c->tryAgain(); 1
m_tabWidget->tabBar()->setShowTabBarWhenOneTab(showTabBarWhenOneTab); 1
action_ 4
requestListNames(); 1
doc->rootFrame()->setFrameFormat(fmt); 2
StatusWidget::setCurrentServiceUrl( 1
SET(this, 43
messageBox->setDefaultButton( 1
vert1->addWidget(tabWidget_); 1
m_rightLayout->addItem(horizontalSpacer); 1
actOptions->setMenuRole(QAction::PreferencesRole); 1
Q3PtrList<FileTransItem> 3
proxyPassword->setText(settings.value(QLatin1String()).toString()); 1
roster.setAutoDelete(true); 1
LLTriangleRayIntersect(v[2], 1
accepted 4
Q3PtrListIterator<QLineEdit> 2
runAllTests(); 1
Private::BackgroundWidget 4
map[61] 2
QWhatsThis::add(d->ck_autocopy, 1
bTerminate 1
OptionsTabStatus::~OptionsTabStatus() 1
UnhookWindowsHookEx(g_keyboardHook); 1
CLog::Log(LOGINFO, 3
d->con_maxSSF 2
~KeyStoreOperation() 1
rbImage 1
view->resizeColumnToContents(0); 1
that->widget_flags 1
BringWindowToTop(hwnd); 3
selectedItems[0]->setSelected(false); 1
save(autoFile_); 1
quit 2
m_tabWidget->currentLineEdit()->selectAll(); 2
modifications++; 1
actJoin 1
Piece::Piece(int 1
m_recentlyClosedTabs.removeLast(); 1
setAttribute(Qt::WA_DeleteOnClose, 4
last_status_ 1
urls_ 3
Qt::AlignCenter, 2
accounts 1
add_sym(method_added); 1
d->searchWidget->setVisible(true); 1
TEST_CASE(ret5); 1
ChatEdit 4
TrayIconWindowMaker(TrayIcon 1
if(del) 1
QProcessSignalRelay 2
SxeRecord::SxeRecord(QString 1
account_ 7
painter.setPen(palette().color(QPalette::Base)); 1
reg->reg(j.user(), 1
if(empty_p()) 2
painter.drawLine(border, 2
if(cc) 3
gAgent.setFocusOnAvatar(TRUE, 1
d->thread->start(in, 1
apr_os_pipe_put(&readerPipe, 1
Error 2
1024 1
--packet_out_pending; 1
GameBoard::FigureType	fo, 1
glColor4f(0, 1
setWhatsThis( 1
bottom3->setFixedSize( 2
m_tabWidget->currentLineEdit()->setFocus(); 3
v_mood 1
QPointer<QObject> 4
mainMenuBar()->hide(); 2
d->httpAuthRequest.setId(id); 1
next->reset(); 1
sn_write->deleteLater(); 1
d->act_configure->addTo( 1
checkforupdatesAction->setText( 1
::dlclose( 1
Anim 8
if(clientInit) 1
WM_TASKBARCREATED 1
QTest::newRow(http: 2
setCurrentPage(tab); 1
attr.c_cc[VMIN] 1
QVector<quint64> 1
d->buf 1
mp_copy(a, 7
PsiToolTip::install(ui_.avatar); 1
m_zoom_fit_action->setEnabled(false); 1
item->setTextAlignment(Qt::AlignCenter); 1
bigint_shr2(y.get_reg(), 2
opt.init(this); 1
session_->SignalUpdateProgress.connect(listener_, 1
ViewStateManager::SelfSpec::SelfSpec(Self 1
all 2
dist 3
x[(x_size 1
TEST_CASE(new_nothrow); 1
AddUserDlg::AddUserDlg(const 1
toggleShowOfflineAct_->setCheckable(true); 1
ptr 4
negotiation->ownJid 4
copy2->stripFirstFrame(); 1
if(d->busy) 1
m_enableInspector->setCheckable(true); 1
SET(cm.get(), 1
downButton_->setMenu(menu_); 1
layout->addSpacing(12); 1
qcaKeyStoreManager_.waitForBusyFinished(); 1
menu->close(); 1
LLFrameStats::~LLFrameStats() 1
m_bookmarksToolbar->setVisible(showBookmarksBar); 1
G(bytearray)->instance_type 1
XDataField_TextPrivate(XData::Field 1
d->c->waitForFinished(msecs); 2
account->setExpanded(expanded); 1
if(platform_ref 1
model_.setList(list); 1
TestFailure::thrownException() 1
connect(showAllAction, 1
d->cb_ident->setVisible(visible); 2
what 5
bitmap_type 1
sLog.outDebug(GetMangosString(LANG_GET_FLOAT), 1
TestResultCollector::~TestResultCollector() 1
expected_ancestors.push(Module(rb_cObject)); 1
locations.append(QPoint(x,y)); 1
POSITION 1
group->setVisible(false); 1
connect(d->pb_auth, 1
setCornerWidget(closeTabButton, 1
m_recentFotowallUrls.prepend(fotowallUrl); 1
PsiActionList 3
PsiTabBar::~PsiTabBar() 1
resourcePathCString, 1
d->le_subj->setCursorPosition(0); 1
detachTab(static_cast<TabbableWidget 2
connect(this,SIGNAL(listReceived(const 1
resize(defaultSize()); 2
while(at 1
if(v_showAgents 1
QWidget::resizeEvent(e); 1
SASLParams::SParams 1
bigint_comba_mul8(z, 2
downloadInfoLabel->setText(tr() 2
IconSelectButton 1
msg->getUUID(, 1
m_success 3
w->geometry().x(), 1
m_pCallback 2
Instance 3
p->drawText(tm 2
grid->addWidget(initLabel,0,0,Qt::AlignCenter); 1
add_entry(state, 2
TLS::Mode 1
OptionEditor(bool 1
accMigration[i].proxyID 1
d->saveProfile(acc); 2
if(eclass 1
s.setStatus(fl[i].value().join()); 1
OptionsMigration 1
viewerText_->append(newUrl); 1
known 1
NanoAssert((oldProtectFlags 1
Data_Get_Struct(self, 1
ControlButton::ControlButton(const 1
d->te->setText(d->s.status()); 1
stripping->setName(); 1
if(certs[items[i]].constraints().contains(type)) 1
ui_.le_orgName->setEnabled(x); 2
d->tryAgain(); 2
ri.setSubscription(s); 1
ClearButton 2
QListWidgetItem 12
createMessageChatGroupchat(); 1
vb->addWidget(txt); 1
QFlags<QStyle::StateFlag> 1
loadUrl(url); 2
memset(map, 2
LoadReferences(); 1
tune.setArtist(stream.readLine()); 1
scroll(delta); 1
menu_widths_->addActions(group_widths_->actions()); 1
if(pz) 2
LEGOPTP.onevent[eOffline] 1
m_session->GetPlayer()->SendBuyError(msg, 1
TESTCASE(const_set_get_by_identifier) 1
z[15] 2
d->layout->addSpacing(5); 2
icon.blockSignals(true); 1
objReplChars 2
tabSingles_ 1
AskerItem 2
gSavedSettings.saveToFile( 1
doEnter(); 1
pub.change(kc); 4
DiscoDlg::Private::Private(DiscoDlg 1
pixmapUpdated(); 1
PsiOptions::instance()->getOption().toSize() 1
roster.clear(); 2
style 1
bg_sePlay->insert(d->tb_seOnlinePlay); 1
Hash 12
GpgOp::Type 4
ProxyItem 7
ui_.ck_presenceIn->setChecked(item.presenceIn()); 1
d->ck_showSubjects->setChecked( 1
memcpy(ba->bytes, 1
d->make_act(SignClearsign); 1
S3DModelPiece::~S3DModelPiece() 1
e.setPasswordData(pstyle, 1
s++; 2
ui_.sw_register->setCurrentWidget(ui_.page_server); 1
sEnvSettings->setVisible(FALSE); 1
if(nick 1
delete(process); 4
LEGOPTFIXME 3
d->start(false); 1
obj->d->results 4
d->cb_ident->setEnabled(false); 1
while(ss.str().size() 1
layout->setSpacing(0); 4
timeState.open(QIODevice::ReadOnly 4
lb_privacyStatus->setText(tr()); 3
menuBar()->addMenu(historyMenu); 1
GpgOp::KeyList 6
PREF_PAD 1
UserListIt 2
ui_.le_phone->setText( 2
readTimer 3
d->interface->connection->deleteLater(); 1
connect(qa_recv, 1
SLOT(slotSelectLineEdit()), 1
d->composing 2
if(!mBuffer) 3
d->tb_info->setToolTip(tr()); 1
if(shift 6
opt_ignoreSSLWarnings 2
LEGOPTP.ppTextClip 1
connect(ui_.pb_down,SIGNAL(clicked()),SLOT(moveCurrentRuleDown())); 1
clear(subitem); 1
closeTab(i); 2
d->edit->setEnabled(false); 4
ui_.busy->stop(); 19
p->restore(); 5
packet_out.clear(); 1
SelectGame::host() 1
offline_option.label 1
Q3Frame 1
MainWin::Private::~Private() 1
while((p2 3
doneTrigger.setSingleShot(true); 2
while((p1 3
bg_delChats->insert( 8
d->ck_askOffline->setChecked( 1
if(x_sw 8
m_animations[i].ResetAnimation(); 1
setValue( 6
textp->setLOD(0); 1
AdditionalMessage 2
tabWidget()->webViewSearch(m_tabWidget->currentIndex())->showFind(); 1
favourites.clear(); 1
symbols->put(state, 1
if(input.opt_alwaystrust) 1
global_state().get_named_mutex(mutex_name)->lock(); 1
foreach(UserListItem 7
Models 1
tp->go(true); 2
setHtml(newHtml); 1
closeConfirmation.addButton(QMessageBox::Yes); 1
QWhatsThis::add(d->rb_defActMsg, 2
trackercall(); 3
newEmptyLineEdit->deleteLater(); 1
listView->setLayoutDirection(Qt::LeftToRight); 1
NMP; 18
disconnect(voiceCaller_,SIGNAL(in_progress(const 1
ui_.te_status->clear(); 2
bundleSigner 2
newFrames.append( 1
reject(); 4
sn_write 3
d->self->setAlert(anim); 1
vb3->addWidget(pb_erase); 1
need_submitPassphrase 3
mp_clear(&low); 1
gpg(find_bin(), 1
GarbageCollector(om), 2
unprocessed 1
KeyTrigger 5
removeItem(self); 1
d->act->input.inkey 1
if(negotiation->role 2
vb1->addWidget(d->lv); 1
item.id 1
QToolBar::dragEnterEvent(event); 1
dlg->pb_apply->setEnabled(true); 1
resize(400, 1
Q_ASSERT(index 4
LocalModel::~LocalModel() 1
search_ 1
if(!jdns->init(QJDns::Multicast, 1
pubdirty(false), 1
new_crl.change(cc); 1
d->edb->unreg(this); 1
updateRow(item); 2
SxeSession 5
gViewerWindow->hideCursor(); 1
std::vector<LLPointer<LLHUDText> 3
cacheValues(); 2
mle->insert( 2
m_sourceRowCache.append(i); 1
if(blocks.empty()) 1
settings._showAll 4
BOOST_AUTO_TEST_CASE( 2
JDnsShutdownAgent 1
QWebView::load(request, 1
KEY_EVENT_RECORD 1
TestSuite::getChildTestCount() 1
d->pb_prev->setMinimumWidth(80); 1
LEGOPTP.sizeEventDlg 1
ui_.toolbar->addAction(act_pgp_); 1
out=out.replace(QRegExp((^|\\s|>)\\ 1
qa_send->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
gGL.begin(LLRender::QUADS); 1
if(substr 2
d->id_begin 3
ui_.cb_ssl->setCurrentIndex(ui_.cb_ssl->findData(UserAccount::SSL_Auto)); 3
CapsSpecTest::CapsSpecTest() 1
actionsService_->copyToGroup(contact, 1
auto_ptr<CDirectoryNode> 2
if(xprocess) 4
if(output.success) 1
TEST_CASE(sprintf4); 1
e->cvi.removeRef(i); 1
GUITestManager::GUITestManager() 2
testNames[index] 1
std::free(start); 1
if(errno 3
checkChildren(index, 1
connect(pb2, 1
MyTextItem(QGraphicsItem 1
act->input.opt_pubfile 1
opt.palette 1
parentWidget_->restoreGeometry(v.toByteArray()); 1
addItem(self, 1
imagePainter.end(); 2
fields_layout->addWidget(fields_container_); 1
VCardAvatar(AvatarFactory 1
m_player.ry()--; 1
QPaintEvent 1
d->pipeCommand.writeEnd().enable(); 2
Q_UNUSED(posInDocument) 1
size.scale(max_size, 1
m_lineEdits->removeWidget(newEmptyLineEdit); 1
m_board->setColumnCount(5); 1
setGlobalStatus(s); 1
if(parts_name.isEmpty()) 1
B_SYMBOL_TYPE_TEXT, 1
setImage(QImage(ba)); 1
backHistory.setAutoDelete(true); 1
context 1
trees_[key]=new 2
TestResultCollector::testFailures() 1
StatusWidget::setTheme( 1
chatEdit()->setFocus(); 7
include.SetAttribute(, 1
ui.statusEdit->cancelEditing(); 1
setFixedSize(sizeHint()); 1
GameProtocol::sendFigure(Q3Socket 1
gRlvHandler.filterLocation(text); 1
chat->close(); 1
Updater 3
md5_state_t 2
metacontact->setAccountName(acname); 1
samplesPassedIn 2
m_tabWidget->addWebAction(m_redo, 1
OptPluginsUI() 1
if(mgr.buttons().count() 6
_provider 2
z[4] 6
if((node_.isText() 1
menu->addAction(tr(),this,SLOT(settings_clicked())); 1
QCA_logTextMessage(QString(), 4
d->cb_proxy->setCurrentItem(d->cb_proxy->findData(id)); 1
if(do_quit) 4
0x0D, 1
if(!selfDestruct_) 1
LLTextBox 1
if(i->h) 1
cached_default_allocator 4
connect(&out, 2
aHttpDeny(d->httpAuthRequest); 1
Q_GLOBAL_STATIC(SystemInfoCache, 1
sasl_client_init(NULL); 1
ProtectFunctor( 1
d->findDlg->show(); 1
GameBoard::GameBoard(GameType 1
if(level 2
m_completion 1
LEGOPTP.delChats 1
copy.set_sign(Positive); 1
strPath 2
setText(name); 1
QTest::addColumn<HistoryList>(); 11
if(!obj->reference_p()) 1
iconSelect->setIconset(iss); 1
f.setType(field.var()); 1
KeyStoreInfo::KeyStoreInfo(const 1
lseek(file.get_fd(), 1
IconSelectPopup 3
m_rotation 2
m_newTabAction->setIcon(QIcon(QLatin1String())); 1
pipeAux.readEnd().setInheritable(true); 2
#if 188
tr(Text 1
printFailureWarning(); 1
Figure::checkKing(GameBoard::GameType 1
m_windowMenu 1
gViewerWindow->getWindow()->incBusyCount(); 1
avatar_ 3
hot_key_function_ 1
Last 1
d->sb_asOffline->setValue( 1
if(pixmap(i)) 1
ObjectCallback::~ObjectCallback() 1
updateChat(s); 1
eventReady(e); 3
QDBusConnection 1
xcg.setColor(QColorGroup::Background, 3
mObjectSelection 1
c.define_method(, 3
connect(t,SIGNAL(finished()),SLOT(unsubscribeFinished())); 1
clickEvent.Fire(message); 1
proxyDialog.setupUi(&dialog); 1
TestFailures::iterator 1
TextTestProgressListener::startTest( 1
PsiEvent::~PsiEvent() 1
writeResult 4
sockClosed(); 2
QCA::DirWatch 1
WorldPacket 4
setObjectType(IconFormatType); 1
Params 2
init(it, 2
SET((NormalObject 2
m_gWindowManager.Process(true); 1
String 28
SearchButton::SearchButton(QWidget 1
NativeFunction::fields)); 1
if(qgetenv() 1
d->sb_asXa->setValue( 1
initializeSearchWidget(); 1
tophbox2->addWidget(closeButtonBack); 2
setSorting(0,true); 1
blurcol<aprec,zprec>(img,col,alpha); 1
d->to 5
connect(session_, 8
SSLCertDlg 1
percentCharge 4
original(state, 1
vals.removeAll(ks); 1
QAction::setIcon( 2
switch(c) 1
ConstraintType::ConstraintType() 1
Q_EXPORT_PLUGIN2(psifileplugin, 1
if(!v_self 1
IODeviceOpenerTest::IODeviceOpenerTest() 1
if(WM_POWERBROADCAST 1
XSetClassHint(dsp, 2
remoteAddr 2
setOpen(item, 1
resize(sizeHint()); 6
QButtonGroup 1
Write::Write(STATE, 1
ui_.cb_type->addItem(e.text()); 1
d->cv->qa_ren->addTo(&pm); 2
prvt.setAttribute(); 4
d->lb_url->setEnabled(false); 1
LEGOPTP.browser 1
p->setPen(xcg.highlightedText()); 1
a.resize(size); 2
if(!plugin) 2
QTreeView::setModel(model); 1
rb_->unregisterAccount(acname); 2
kTableSize 1
d->searchText 1
setStatus(type); 1
files 2
allow_mmap_fallback 1
KeyBundle::~KeyBundle() 1
if(!d->ft->s5bConnection()) 1
delta 6
vsoPortableHandsfree.sync(); 2
showJid_ 1
LLButton 3
blockButton->setEnabled(enabled); 1
pep_avatars_[jid.bare()]->setData(item.id(),item.payload().text()); 1
field.setType(XData::Field::Field_TextPrivate); 1
mp_init(m); 1
if(x2 1
highlight 1
if(x1 4
ViewStateManager::ContactSpec::ContactSpec(Contact 1
addItem(status2txt(status), 1
CapsRegistry 2
TEST_CASE(pushback6); 1
JDnsSharedRequest::JDnsSharedRequest(JDnsShared 1
TestComposite::doEndSuite( 1
connect(act_scrollup_, 1
nicksAndJids.first().jid.full() 1
Boolean 1
moveListKnight(vl, 1
FileTimeToSystemTime(&ft, 1
ICONINFO 1
switch(e) 1
createCorner(Qt::TopLeftCorner, 1
define_class_under<BaseClass>(m, 1
if(cableEnabled) 2
actVCard->setEnabled( 1
setData(icon, 1
d->cvi 4
v.setOrg( 2
ProxySettings::ProxySettings() 1
LEGOPTP.alertStyle 2
hooks 2
unreg(); 1
v_pgpVerifyStatus 1
m_stop->setShortcuts(shortcuts); 1
gl_segmented_rect_3d_tex(border_scale_vec, 3
titleText->setFont(titleFont); 2
formMatrix_obj.setPosition(llvecpos); 1
d->update(static_cast<CertContext 1
connect(toggleJoinedAccountsAct_, 1
e.appendChild(doc.createTextNode(QString::number(lat_.value()))); 1
Object 11
readShortcuts(PsiOptions::instance()); 1
cp->removeAllUnneededContactItems(); 4
c->_storeId 3
PlugInParameters::~PlugInParameters() 1
drawablep->makeActive(); 1
negotiation->groupChat 4
DynamicLibraryManager::getLastErrorDetail() 4
Action(int 4
SeparatorAction::~SeparatorAction() 1
ui.moreButton->setMenu( 1
if(d->pcountdown) 1
bClean[atoi(vecBufs[nToken].c_str())-1] 1
atoms[n] 2
d->hadSelectionOnMousePress 1
d->actions.setAutoDelete( 1
TEST_CASE(stlBoundries2); 1
ui_.le_ext->setEnabled(x); 2
ui_.lb_count->setNum(chatEdit()->text().length()); 1
keepPolicy 3
SET(sel, 2
connect(manager_,SIGNAL(changeDefaultList_error()),SLOT(change_failed())); 1
QTabWidget::mouseReleaseEvent(event); 1
items_.append(item); 1
ui_.pb_apply->setEnabled(i 1
d->ck_dockDCstyle->setWhatsThis( 1
lastSxe_[] 2
tr().arg(contact->getName()), 1
Q_UNUSED(slot); 1
if(vis->method->nil_p()) 1
toolbar_->addAction(act_fill_); 1
TypedRoot<CompiledMethod 1
hb4->addWidget(d->pb_send); 1
GCFindDlg::~GCFindDlg() 1
widget.closeTab(index); 1
this->RequiresCleanup 1
vsoNeoHardware.setAttribute(, 1
previousActive_ 2
d->configDlg 2
Input 1
bringToFront(w); 8
gm->insertItem(tr(), 1
applicationPoolServerExe, 1
QGenericArgument 1
bool	save 1
deleteStatusReportFIFO(); 1
w->show(); 15
lb_status->setText(s); 1
groupMenu->addSeparator(); 3
toggleJoinByNameAct_->setChecked(false); 1
if(!f.open(QFile::ReadOnly)) 1
d->le_oeIncomingFT->setText(PsiOptions::instance()->getOption().toString()); 1
ev.xfocus.display 1
CPPUNIT_TEST(testConstructor_Unopenable); 1
writeFinished(r->id, 2
cricket::BasicPortAllocator 1
progressBar->setMaximum(0); 2
if(entry 1
session_manager_.reset(new 1
if(!stream) 2
output.errorCode 3
lb_keyname->setEnabled(true); 1
toIcon->blockSignals(b); 2
image.fill(0x00); 1
menu->exec(mapToGlobal(event->pos())); 1
JT_DiscoItems 2
QObject::timerEvent(event); 1
mPrefsChat 2
m_lineEdits->currentWidget()->setFocus(); 1
d->cb_toolbars->setItemText(d->cb_toolbars->findData(base), 1
m_frameTextItem->setPlainText(text); 1
m_vecControls.insert(i, 1
qDebug()<<<<value; 1
loadPage(file); 1
sig 2
setSourceModel(sourceModel); 3
OptionsTabAppearanceGeneral::OptionsTabAppearanceGeneral(QObject 1
if(ui) 1
PEPGetTask(Task 1
cancelThread(); 6
affiliations_proxy_model_->setDynamicSortFilter(false); 1
msgBox.exec(); 1
notifyRestart 1
resourceprep_table.clear(); 1
d->state 6
if(uit 1
xform_obj.setScale(vec); 1
clientTryAgain(); 2
if(!meta) 3
sslCfg.setCaCertificates(ca_list); 2
d->cert_pub 2
if(other 1
QObject::connect(drw, 6
d->to_net_encoded 2
connect(d->mucManager,SIGNAL(action_error(MUCManager::Action, 1
CPPUNIT_TEST(testSmallerThan_SameNodeVersion); 1
if(i.isNull()) 10
d->actions.insert( 1
char_t 11
XMPP::DiscoItem::Identities 1
_l->failedAssertLessThanEquals( 1
ua.toOptions(&accountTree, 1
XmlDocument::XmlDocument( 1
showStatusMessages_ 1
count--; 1
setFixedSize(380,420); 1
ReadyReadOutgoing, 1
timer->stop(); 2
~Private() 22
manager_->removeTransport(transport); 1
.arg(resource->getName(), 3
battery->setTimeRemaining(min); 2
new_buf 1
if(tmp 1
d->trackBar 2
requestForHandle.remove(h); 7
showDiagnosticText(tr() 1
GameBoard::FigureType	ft; 1
qDeleteAll(ops); 1
if(!d->acc.pass.isEmpty() 1
secdirty(false), 1
z[j] 6
foreach(DiscoItem::Identity 1
actPlaySounds->setWhatsThis 1
QDBusConnection::sessionBus().registerObject(, 1
ev.xclient.data.l[0] 1
addAction(act_close_); 2
showStatus(brd->status()); 3
setCursor(Qt::ClosedHandCursor); 1
setMenuText(tr()); 1
mTabContainer->addTabPanel(mNetworkPanel, 1
to_string(message_no)); 1
QFileSystemWatcherRelay 2
d->real 2
BigInteger::BigInteger() 1
value=findAttribute(buffer,readCount,); 3
tests_ 2
fields_.clear(); 1
sleep(1); 1
connect(ui_.cb_type,SIGNAL(currentIndexChanged(const 1
replaceWidget(lb_form, 1
if(!ReadFile(pipe, 1
m_total_targets(3), 1
CPPUNIT_ASSERT(QIODevice::WriteOnly 1
MyHeaderViewWidget(QWidget 1
if(a.type 4
typestr 2
Impix 6
setTextAlignment(5, 1
model_.list().clear(); 1
hb2->addWidget(d->pb_next); 1
qRegisterMetaType<Event>(); 1
JingleVoiceCaller 1
QDomDocumentFragment 2
TEST_CASE(class7); 1
currentEventId_ 1
item.setType(PrivacyListItem::JidType); 1
hints->flags 1
connect(ui_.pb_deleteList,SIGNAL(clicked()),SLOT(removeList())); 1
QKeySequence(tr())); 2
gGL.vertex3f(0.1f, 2
prof.qvga 2
partial.resize(0); 1
connect(d->pb_http_confirm, 1
qWarning(qPrintable(QString().arg(plugin))); 2
history.clear(); 2
metacontact->setAvatar(c->getAvatar()); 1
set_syserr(ETOOMANYREFS, 1
con_minSSF 1
QIODevice::OpenMode 1
map[10] 2
Foo 4
widthaction->trigger(); 1
old_trayicon_->setToolTip(str); 2
if(!transcoder) 1
gototwitpicAction->setText( 1
which 2
actAboutQt->setMenuRole(QAction::AboutQtRole); 1
OptionsTabIconsetEmoticons::OptionsTabIconsetEmoticons(QObject 1
GO(list_node).set(state->new_class(, 1
ForegroundThreadID 1
allocators.push_back(new 3
if(!isActiveTab()) 2
if(!provider.isEmpty()) 3
stripFirstAnimFrame( 2
class 396
clasp 1
vector<CStdString> 1
globals.special_classes[(uintptr_t)Qfalse] 1
top4->setPalette(backgroundPalette); 2
setHeight(h); 1
d->keepOpen 1
if(mode_ 6
d->lateTrigger.stop(); 1
sign_fixup(x, 2
Q_DECLARE_METATYPE(QLineEdit 1
(F32)bottom, 1
HistoryViewItem::~HistoryViewItem() 1
if(!pass.isEmpty()) 2
d->cv 1
d->activatedCount 3
bigint_add2(get_reg(), 3
gpg.submitPassphrase(a); 1
if(!Charset::caseless_cmp( 1
trees_.remove(node); 1
combo 1
iconset 1
SET(buf, 3
QString::number(err)); 1
services_[contact->getAccountName()]->actionRecvEvent(contact->getJid()); 2
d->infoRequested.removeAll(j.withResource(r.name()).full()); 1
blocks.resize(tup->field_count, 1
iconText 1
if(d->pb_reply->isVisibleTo(this) 1
XUngrabServer(dsp); 2
m_locations.append(); 3
result_ssf 2
hb4->addWidget(d->pb_form_cancel); 1
d->lv->ensureItemVisible(i); 1
XmlElement::addElement( 1
Transport::Transport(const 1
module 1
QLineEdit::Password, 1
doc.appendChild(capabilities); 1
dlg 9
bHasPath 1
for(QList<Url>::ConstIterator 1
d->mainwin->show(); 1
mle()->insert(text 1
lv_results->setMultiSelection(true); 1
d->sending 4
privacyInitialized 5
file.open(filename); 1
connect(d->remove, 1
appRunScr 2
XGetWindowAttributes(dsp, 2
signaler_ 1
emitDiscoInfo(j,n); 1
account->processChats(from); 1
connect(pa_->pepManager(),SIGNAL(itemPublished(const 1
d->pa->actionJoin(j.withResource()); 1
if(!table->nil_p()) 1
RealSuiteDescription( 2
child->copyItem 1
chb_wm->setChecked(prof.wm); 1
m_lineNumber 2
object[e.attribute()] 1
interface 2
if((int)cur.length() 1
args 57
d->cur_service_status.clear(); 1
connect(account(), 3
cursor.insertBlock(); 1
ui_.le_email->setText( 2
tabBar_->setUsesScrollButtons(true); 1
wbWidget_->session()->document().save(stream, 1
SourceLine::isValid() 1
AttachView::AttachView(QWidget 1
LEGOPTP.putTabsAtBottom 1
c2eBrainLobeGene 3
CDC 1
m_mazes_targets 1
loadUrl(openTabs.at(i), 1
CGUIControl 31
TEST_CASE(realloc5); 1
f.remove(); 1
refs 1
hb4->addWidget(d->pb_deny); 1
QNetworkReply 1
disconnect(m_stopReload, 2
QCA_logTextMessage(QString().arg(p->name()), 1
d->c->setIssuerList(issuers); 1
StatusModel::instance()->clear(); 2
OptionsTabPlugins::~OptionsTabPlugins() 1
DummyStream 2
pm_settings_->clear(); 2
Q_ASSERT(model->data(index, 1
if(loggedIn) 1
need.authzid 2
matrix.rotate(points[0]); 2
foreach(IconText 2
Type_getLatest 1
painter->setClipping(false); 1
connect(act_close_,SIGNAL(activated()), 1
sBattleGroundMgr.ToggleArenaTesting(); 1
QWidget::closeEvent(e); 2
TEST_CASE(close_function); 1
processClose(args); 1
allow_plain 6
thread->moveToThread(QCoreApplication::instance()->thread()); 1
RosterInstance 1
set_syserr(ENOLINK, 1
console 1
dc.SetWindowExt(docSize.cx, 1
QObject::connect(frametimer, 1
AHCServerManager::ServerList 1
m_stopReload 1
d->t.stop(); 4
connect(d->pb_addHighlightWord,	 1
signals: 29
vcard_avatars_[jid.bare()] 1
0x21, 1
setTabOrder(d->ck_auth, 1
if(under 2
tryAgainButton->hide(); 1
edtimers 1
m_failures.push_back( 1
lenstr 3
get_more_core(PREF_SIZE); 1
MetaActionList::MetaActionList() 1
m_image_width(0), 1
changedMap.insert(,SIGNAL(toggled 1
ui_.le_room->setText(jid.user()); 1
SLOT(setStatusBarText(const 1
m_children.at(i)->save(xml); 1
strInput 2
group_item 2
m_flickr->startPrefetch(idx); 1
pm_settings_->addAction(act_icon_); 1
if(delta.isIdentity()) 1
if(v_atEnd) 1
closeConfirmation.setInformativeText(tr( 1
glActiveTexture(GL_TEXTURE1); 3
if(f.isSecret()) 1
if(CompiledMethod 1
setCallProvider( 1
GoogleSessionListener(GoogleFTManager 1
acc.realm 1
_l->leaveWorld( 1
ownJids_.append(ownJid.full()); 2
~TimerFixer() 1
setCurrentIndex(idx); 1
Q_ASSERT(!d->loop); 1
menu.addSeparator(); 5
ri.setGroups(o->getOption(rbase 1
topParent->move( 2
m_gameplay_smooth 1
d->pb_close 2
jtVCard->deleteLater(); 1
Ptr 1
mV[1] 4
if(pubkeys[n].keyItems.first().id 1
mOffscreen 3
m_proxyModel 4
ttb->setEnabled( 1
m_lineEditCompleter 1
TimerFixer 3
addWidget(m_searchButton, 1
val 26
btn->setText(text()); 1
if(str.left(9) 2
tray_owner 2
var 1
trimmed.setAttribute( 1
ui.refreshCombo->setCurrentIndex( 1
connect(d->psi->iconSelectPopup(), 1
d->ck_spell->setEnabled(SpellChecker::instance()->available()); 1
par.setParent(&grandpar); 1
resizeColumns(); 2
TestResultCollector::testFailuresTotal() 1
sInstance->mPreferenceCore->refreshEnabledGraphics(); 1
p.setBrush(colorForSegment(segment)); 1
DynamicResourceAlloc(true); 1
setResizeMode(Q3ListView::LastColumn); 2
vb1->addWidget(d->attachView); 1
PsiEvent::PsiEvent(PsiAccount 1
QUrl::encode(prolog); 1
BakerGC::BakerGC(ObjectMemory 1
QSet<KeyStoreListContext 2
signaler->emitNotificationClicked(qcontext); 1
gd.state 1
foreach(AHCommandItem 1
parent.toElement().removeAttributeNode(node_.toAttr()); 1
m_historyForwardMenu->addAction(action); 1
AttachViewItem(const 2
dataBox->addWidget(iconLabel); 1
simplifiedCaption_ 2
key(default_key_value), 1
LEGOPTP.incomingAs 1
glGetIntegerv(GL_MAX_TEXTURE_SIZE, 1
ProxyChooser::ProxyChooser(ProxyManager 1
klass 1
updateInvisibleParents(); 1
setMaximumSize(width, 1
ASSERT_EQUAL(String(), 1
std::iostream(&mStreamBuf), 1
proc->disconnect(this); 2
el->append(me); 1
connect(d->iss_customRoster, 2
Drawer::newFigure(const 1
renderText(&painter, 2
strExpression 2
pb_start->setFocus(); 1
newKeyItem->setText(0, 1
mp_init_set_int(MP(o), 1
nameModified(); 1
OptionsTabAppearanceMisc::~OptionsTabAppearanceMisc() 1
hb1->addWidget(pb); 4
disconnect(this, 5
gGL.vertex3f(-0.1f, 2
statusMessage_ 4
undoStack->beginMacro(QLatin1String()); 1
tophbox2->addWidget(spacing); 2
if(addy.find() 1
c_name 1
if(password) 1
is->opcodes 1
PSendSysMessage(LANG_SET_FLOAT_FIELD, 1
m.setSpooled(true); 1
searchLayout->setSpacing(0); 1
e.appendChild(doc.createTextNode(floor_)); 2
connect(qa_logon, 1
TextTestResult::addFailure( 1
if(provided) 1
winner=; 8
name[firstNotDigitIndex] 2
d->probe_mode 4
out.resize(1); 1
detachedSig.clear(); 2
Private(EventHandler 1
XmlDocument::styleSheet() 1
shift_bits 6
_field 1
if(g.isEmpty()) 2
XDataField_Boolean(XData::Field 1
s.setAttribute(,node_); 1
hb3->addWidget(d->tb_info); 1
here 1
item->setIcon(action->iconSet()); 1
sounds_field.setLabel(QObject::tr()); 1
m_tabBar->mouseReleaseEvent(event); 1
if(buffer->nil_p()) 1
CookiesExceptionsDialog::CookiesExceptionsDialog(CookieJar 1
QFETCH(QWebPage::WebAction, 1
g_graphicsContext.ScaleFinalCoords(rect.right, 1
p.putPlain(s); 1
createTabs(); 1
LEGOPTP.showCounter 1
TextIconHandler::TextIconHandler(QObject 1
unit 6
send_message(dsp, 1
tree->setModel(proxyModel); 1
md5_word_t 6
int	x1, 3
SLOT(selfChanged(const 1
m_expiredTimer.start(nextTimeout 1
moveCursor(QPoint(offset, 1
openEvent(e); 1
that->setAcceptDrops( 2
EventTimerInterval 2
m_navigationSplitter->addWidget(m_tabWidget->lineEditStack()); 1
mNumSpawn(0) 1
OStringStream 4
q.read 1
jid2.replace(n, 1
mVisibleInFirst(FALSE), 1
d->act->input.signer_id 4
addAction(d->act_close); 1
model_->setShowStatusMessages(showStatusMessages); 1
PsiToolBar::~PsiToolBar() 1
if(pre_aux_close) 2
setAffiliation(user, 7
bookmarkActions_.clear(); 1
d->act->submitPassphrase(a); 1
A 6
_prev->_next 1
PSendSysMessage(LANG_CHANGE_32BIT_FIELD, 1
XmlElement::content() 1
m_label 2
JDnsSharedPrivate 1
providerList.removeAt(n); 2
Drawer::win2map(int 1
mFontp(LLFontGL::sSansSerifSmall), 1
setWindowTitle(tr().arg(name)); 1
CPanel::CPanel(int 1
rng->add_entropy(in, 1
d->cb_preset->setCurrentIndex(0); 1
zoneOffset 2
services_[group->getAccountName()]->actionGroupRename(group->getGroupPath(), 1
m_tile_size(0), 1
ClearPrivateData 1
el->append(e); 1
Sets 2
if(!m.spooled()) 1
_client->close(); 1
chb_antisuspend->setText(tr()); 1
p->drawPixmap(0, 1
QWidget::keyPressEvent(e); 1
GameBoard::GameType	gt; 1
insertLast 1
PsiTipLabel::~PsiTipLabel() 1
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63, 1
doContext(); 1
addToolBar(bookmarkArea, 1
glVertex3f(x 2
RosterActionsService::RosterActionsService(PsiAccount 1
ck_legacy_ssl_probe->setEnabled(!on); 1
opttab->applyOptions(); 1
ChatView::ChatView(QWidget 1
GrowlTestWidget(QWidget 1
cursor.insertFragment(QTextDocumentFragment::fromHtml(convertIconsToObjectReplacementCharacters(text, 1
old_term_attr 1
CFileDialog::OnFileNameChange(); 1
QJDns::NameServer 1
useCustomBrowserCheckBox->setChecked( 2
TokenAsker::~TokenAsker() 1
while(it 1
qSort(groups); 1
Tokenizer 17
Invalid_IV_Length::Invalid_IV_Length(const 1
SSLCertDlg::showCert(cert, 1
TEST_CASE(func15); 1
keyList.last().keyItems.last().fingerprint 1
i->contactProfile()->scActionDefault(i); 1
d->system.addToFactory(); 1
args[4], 1
m_status_time_message->clear(); 1
Private(PasswordAsker 1
ui_.le_phone->setReadOnly(x); 2
probe->lookup_failed(this, 1
image.save(&buffer, 1
p.ry() 1
adjustSize(); 3
spinning 1
:Algorithm(type, 3
Q_ASSERT(g_tty_console 1
PrivacyRuleDlg::PrivacyRuleDlg() 1
m_borders_visible 1
foreach(Provider 1
CGContextSetRGBFillColor(context, 2
d->atError 1
d->mainwin->setTrayToolTip(s); 1
d->storeId 1
closeProgram(); 2
connect(manager_,SIGNAL(listError()),SLOT(list_failed())); 1
TestResultCollector::runTests() 1
Filter::~Filter() 1
LEGOPTP.eventPriorityChat 1
isEnabled_ 1
ui_.pb_hangup->setEnabled(true); 4
if(!disableServerSendLast) 1
d.mkdir(); 1
UINT 6
QCOMPARE(bar.isVisible(), 3
TransferMapping() 1
pb_prev->setEnabled(false); 1
tree.setOption())); 6
progressBar->setValue(0); 2
QStringList	lst(QStringList::split(SEP, 1
actionsService_->joinConference(account, 1
mSkinsPanel->apply(); 1
resizeEvent(&e); 1
d->service->post( 1
nextTimeout 2
CRLContext 6
gAgent.startAutoPilotGlobal(mActions[0].mTarget); 1
TicTacArray 1
lb_keyname->setEnabled(false); 1
WbScene::WbScene(SxeSession 2
divide(n, 2
d->pb_chat->setText(tr()); 1
manager_->session_manager_->OnSignalingReady(); 1
setPixmap(pm); 2
BrowserApplication::downloadManager()->cleanup(); 2
object 4
CompilerOutputter 1
d->pb_form_cancel->setText(tr()); 1
glBindTexture(GL_TEXTURE_2D, 6
mFontWidthMap[font] 1
XFlush(dsp); 2
if(d->self) 4
if(!from_net.isEmpty()) 1
ProfileManageDlg::ProfileManageDlg(const 1
TestDecorator::doGetChildTestAt( 1
addService()); 1
m_solver(0), 1
favConf->beginGroup(); 2
RemoveEventLoopTimer(d->mTimerRef); 1
chb_antidim 1
hb4->addWidget(d->pb_close); 1
saveVCard(j, 2
core->setSettingsOpen( 3
pb_cancel 1
OBJECT 148
QString	fn; 1
tv_->setAlternatingRowColors(true); 2
m_unit 2
e.xclient.data.l[1] 1
Path.insert(Path.begin(), 1
busy 7
global->rng 3
reg->unreg(); 1
item->optionsUpdate(); 3
QGraphicsSvgItem::mouseReleaseEvent(event); 1
d->ck_jidComplete->setChecked( 1
QPipeReader 1
Account 18
hlayout->addWidget(selectBrowserEdit); 1
LLUI::translate(target_pos.mV[VX], 1
set_syserr(ECHILD, 1
wizard->deleteLater(); 1
X 3
d->late_read 2
foreach(ViewDataService 1
encstate 3
__int64 4
column_start 1
QXmlStreamAttributes 1
lvi->setText(2, 1
setTransformationAnchor(AnchorUnderMouse); 1
setChatState(StateInactive); 1
result 45
webView 5
form.setInstructions(QObject::tr()); 3
v.setAddressList( 2
mem 1
if(d->panel[i].spinning 1
QTimer::singleShot(200, 1
gAgentPilot.stopPlayback(); 1
QTimer::singleShot(2000 1
leftover_stdout 2
if(platform) 3
enabledAccounts_.removeAll(account); 2
btn->setFollowsBottom(); 1
Read::Read(STATE, 1
connect(voiceCaller_,SIGNAL(in_progress(const 1
add(jid(), 1
menuWidth 1
view->setItemsExpandable(false); 1
connect(viewTabBarAction, 1
m_tabWidget->addWebAction(m_cut, 1
setConnecting(); 2
GO(fixnum_class).set(new_class(, 1
diff 2
FileTransferHandler 3
Method 2
if(session_->document().documentElement().hasAttribute()) 1
if(edit->version() 1
connect(ui_.cb_lists,SIGNAL(activated(int)),SLOT(list_selected(int))); 1
options_ 2
d->proc->write(a); 2
TestLeaf::countTestCases() 2
if(!d->httpAuthRequest.hasId()) 1
Close, 1
collapse(index); 1
dlg->pb_apply->setEnabled( 1
page()->setForwardUnsupportedContent(true); 1
mPrefsIM->getPanel()->setDefaultBtn(default_btn); 1
AdvancedWidgetShared::AdvancedWidgetShared() 1
QMessageBox::information(d->cv, 7
Test::getChildTestAt( 1
setProxy(); 1
setFrameStyle(NoFrame); 1
if(actionQueue.isEmpty()) 2
thr->interruptAndJoin(); 1
DIGIT(a,i++) 1
initToolBar(); 1
d->statusButton->setText(status2txt(status)); 1
value=PsiOptions::instance()->getOption(option); 1
feature.setAttribute(); 1
mMaxLines(10), 1
connect(d->pd, 1
Important: 1
d->hMask 1
ui.accountsComboBox->clear(); 1
QAction::setMenu(p); 1
umask(old_umask); 1
searchClearClicked(); 2
SSLCertDlg::SSLCertDlg(QWidget 1
d->canSendAuthzid 1
le_port->hide(); 1
ui_.te->setReadOnly(true); 1
setSeparator(true); 1
if(str.mid(n) 1
indicators()->setSignalQuality( 1
CRL::CRL() 1
checkHasChats(); 1
d->animTimer->start(120 1
disconnect(account, 1
j.setNode(s); 1
if(ioctl(pipe, 1
ts.time().second()); 1
ui_.le_email->setReadOnly(x); 2
d->le_newHighlightWord->setFocus(); 1
m_bookmarksToolbarFrame->show(); 1
raise(); 2
StatusSetDlg::~StatusSetDlg() 1
m_failedTest( 1
dialogs.append((QDialog 1
startPlayback(); 1
if(amd) 1
Private(FancyPopup 2
setLastUsedSavePath(lastUsedOpenPath()); 1
Q_ASSERT(model->columnCount(topIndex) 1
JDnsShared::JDnsShared(Mode 1
cp->resetAllContactItemNames(); 1
callbacks 4
activeFiles 1
applicationPoolServer 1
autoProtocol->setChecked(true); 1
setSelfDestruct(60); 3
menuBar()->addMenu(bookmarksMenu); 1
hwnd 2
BOOL			create_selected 1
num_bytes 2
selectionChanged(dummy, 1
proxyMigration[i].id 1
BasicContext::BasicContext(Provider 1
set(QString(s)); 2
LEGOPTP.asOffline 1
old 1
c0.fill 1
ui_.sw_general->setCurrentWidget(ui_.pg_general_message); 4
d->allowClientSendFirst 1
palette.setColor( 3
actionActivated(r-10000); 1
if(_sd) 1
p.setX(screen.x() 1
d->te->selectAll(); 1
command.setAttribute(,c->node()); 1
installTranslator(QLatin1String() 1
providerList.clear(); 1
o 2
CPPUNIT_ASSERT(!item.presenceOut()); 3
readyReadTrigger.start(); 2
sessionInfo 2
JingleIQResponder::JingleIQResponder(Task 1
FileTransferHandler::~FileTransferHandler() 1
o.take(p[1], 1
menu->insertSeparator(); 1
di.setIdentities( 1
Config 1
set(var, 2
copy(); 1
md5_append(md5_state_t 1
connect(d->searchPb,SIGNAL(clicked()),SLOT(searchClearClicked())); 1
m->addAction(tr()); 1
buffer.append(hdrs[i].key); 1
connect(cb_address, 1
TestDecorator::~TestDecorator() 1
resize(QSettings().value(, 2
bdelete 3
copyItem(_item); 1
if(matchRecordExceptTtl(r, 1
CPPUNIT_TEST(testFromXml_PresenceOutChild); 1
include.InsertEndChild(element); 1
d->login 3
setAllCookies(cookies); 2
map[55] 2
d->lv->setSorting(-1); 1
emitted_hostNameReceived 2
m_progress 2
m_root 1
if(importing 1
tempDoc.setContent(buffer.buffer()); 1
set_syserr(ENOTBLK, 1
connect(psi, 4
connect(buttonBox, 6
m_theme->load(theme); 1
opt_connectAfterSleep 2
Handle 12
vb1->addWidget(toolbar_); 1
Cipher::Padding 2
if(i->pa 2
ev.xfocus.mode 1
if(i->h 1
fullscreen_action->setShortcut(tr()); 2
Self::~Self() 1
d->le_subj->setText(s); 1
if(compare 1
connect(&negotiationTimer_, 1
memcpy(s.data(), 1
OptionsTabWidget(QWidget 1
lvi->s 1
if(i->p) 1
if(msync(MLOCK_TYPE_CAST 2
fallThrough 1
if(!done) 4
LookupTable 10
menu->popup( 1
time 3
connect(d->pb_reply, 1
doc_.setContent(parseProlog(doc)); 1
free(text); 1
presets[name.toString()] 1
ui_.toolbar->addAction(act_info_); 1
connect(m_restoreLastSession, 1
tr(XBEL 2
getContext(context, 2
hb2->addWidget(d->pb_refresh); 1
d->lb_count->hide(); 1
GO(scheduled_threads).set(tup); 1
KeyStoreManager::scan(); 1
groupState.insert(k.toString(), 1
Q_ASSERT(!optionPath.isEmpty()); 1
list[0].title 1
VCardFactory 2
passphrases_.remove(id); 1
Qt::ToolBarArea 3
widget->applyTheme(); 1
ProxyEdit 1
that->nameprep_table.insert(in, 2
tabWidget_->setTabPosition(QTabWidget::Top); 1
if(!e->alerting) 3
w->addAction(this); 4
to_net_encoded 4
output[output_size 2
bdestroy 6
LEGOPTP.eventPriorityAuth 1
d->pb_refresh 1
connect(pb_transGet, 1
barLayout_->setParent(0); 1
regex_t 2
bb 1
e.change(c); 1
params.setRealm( 1
cls->superclass 1
if(shared) 2
from->remove(type); 1
backgroundRect.adjust(-left, 1
if(cert.isNull()) 2
reg[top_word] 1
dlg->lv_disco->clear(); 1
QMenu::mousePressEvent(e); 1
m_downloadManager->m_autoSaver->changeOccurred(); 1
doLatest(); 1
set_float(as<Float>(obj)); 1
currentChanged(currentIndex()); 1
have_openpgp 1
setTrayIconMode( 1
Q_ASSERT(model->hasChildren(parent) 1
if(pa 1
switch(input.op) 1
ev->id 1
ASSERT_EQUALS(0, 1
painter.translate(-3 1
set_realm 2
(UInt8 2
Q_UNUSED(profile); 4
deleteAction->setEnabled(index.flags() 1
trayIcon 1
d->pb_send->hide(); 1
set_syserr(ECONNABORTED, 1
CPPUNIT_TEST(testConstructor_Open); 1
copyString( 1
Connector::Connector(QObject 1
TEST_CASE(err); 1
ext_authid 3
ToolbarSearch::ToolbarSearch(QWidget 1
JSClass 1
s->connectToHost(d->proxy.host(), 3
if(p) 4
QPersistentModelIndex 1
writeErrorTrigger.start(); 1
QFETCH(QUrl, 1
doTryDone(); 6
m_transformRefreshTimer 1
Constraints 5
mPrefsChat->getPanel()->setDefaultBtn(default_btn); 1
showAway->setWhatsThis(tr()); 1
le_host->hide(); 1
AHCError 1
QVERIFY(chat->isAnimated() 1
Pops 3
WbItem::~WbItem() 1
d->startChanges(); 2
action(lvi->text(0), 3
PsiPopup::PsiPopup(PopupType 1
Contact::~Contact() 1
QLineEdit::keyPressEvent(e); 1
define_class<IntHelper>() 3
applicationPool->setMaxIdleTime(config->poolIdleTime); 1
matrix.shear(0, 1
qa_logon->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
asker->set_accepted(password); 1
sasl_conn_t 1
setX509PrivateKey(kb.privateKey()); 2
MemoryRegion 19
qDebug( 2
m_recentlyClosedTabsAction->setEnabled(false); 1
pipe_set_blocking(pipe, 8
ui.updatesCheckBox->setChecked( 1
if(!CreatePipe(&r, 1
actionSendMessage(list); 1
AccountRegDlg::AccountRegDlg(ProxyManager 1
sigsegv_handler_generic(signal, 2
QTest::addColumn<bool>(); 1
help->setFont(font); 1
:	QWidget(parent) 1
d->cb_proxy->addItem(pi.name, 1
TEST_CASE(strcpy_result_assignment); 1
d->hist.prepend(str); 2
logDebug(QString().sprintf(, 3
removeContactItem(e, 2
if(!jid().isValid()) 1
if(d->peerCert.isEmpty()) 1
mazes_layout->setColumnStretch(0, 1
if(!Charset::is_space( 1
scene_->addItem(this); 1
m_test->run(result); 1
QFile 65
tree.setOption(,QVariant(QSize(210,295))); 1
QWhatsThis::add(d->ck_allowUnlistedPopup, 1
controls_layout->setRowStretch(0, 1
d->gr_auth->setEnabled(false); 1
vm.collect(); 1
m_navigationBar->addWidget(m_navigationSplitter); 1
m_scale_level(0), 2
Executed 5
qlv_selectionChanged(lv_accs->currentItem()); 1
setAffiliation(MUCItem::NoAffiliation); 1
m.setBody(QString().arg(m.subject())); 1
setFirstSeparator(m_historyMenuModel->bumpedRows()); 1
tearDown(); 1
Qt::DropAction 3
CppUnit::TestFactoryRegistry& 1
d->ck_dockHideMW->setWhatsThis( 1
info.setAttribute(,i.key().node()); 1
d->cv->qa_wb->addTo(&pm); 1
m_testErrors 1
m_downloadHistory->setChecked(true); 2
Q_ASSERT(child 1
le_jid_ 1
GO(exc_arg).set(arg); 1
PubSubSubscription::PubSubSubscription() 1
QCA::keyStoreManager()->waitForBusyFinished(); 1
metacontact->setStatus(status); 1
SettingsDialog::SettingsDialog(QWidget 1
setError(x); 13
remainder 3
resize(ChatDlg::defaultSize()); 1
addDetail( 9
QWhatsThis::add(d->rb_delChatsClose, 2
bl; 1
d->pb_next->setMinimumWidth(80); 1
arg_from_app 2
separator 3
act_geometry_ 1
c0.setsubstr 2
for(int 191
brd->saveImage(); 1
strOutput.Insert(i2,); 2
Settings::~Settings() 3
GUITestManager 4
GrowlNotifier::GrowlNotifier( 1
PsiConAdapter::~PsiConAdapter() 1
for(cutoff 2
BigInt::BigInt(u64bit 1
assert(i 2
QModemServiceNumbers::requestServiceNumber( 1
connect(serverlist_querier_,SIGNAL(listReceived(const 1
TESTCASE(undef_creation_funcs) 1
displayPressedKeys(QKeySequence()); 1
COPYDATASTRUCT 3
lb_instructions->setText(str); 2
(_time 1
LLFloaterScriptDebug::show(last_hit_hud_icon->getSourceObject()->getID()); 1
assert(( 1
if(confver 1
: 360
AvmAssert(retval 3
newText 15
testElement->addAttribute( 2
m_frame 1
for(GCUserViewItem 2
i.setFeatures(XMPP::Features(version 1
pipeCommand.writeEnd().write(pre_command); 2
m_session->SendSetPhaseShift(PhaseShift); 1
restartTimer(); 3
p.setHttpPoll(pi.settings.host, 1
m.setTimeStamp(QDateTime::currentDateTime()); 6
nots 7
timer_set 2
beginInsertRows(index(parent), 1
CFRelease(context); 1
setWindowTitle(CAP(tr().arg(d->pa->name()))); 1
param_mgr->setDensitySliderValue(param_mgr->mFogDensity.mExp); 1
TopToBottom 2
if(d->jt) 1
method(Qnil), 2
group->setMenu(popup); 1
c->reset(); 4
d->eventNotifier->setMessage(); 1
pb_next->setFocus(); 1
actualFailure->setMessage( 1
set_syserr(EFAULT, 1
actions.remove( 1
ctx->sp 2
Board::Board(QMainWindow 1
auto_open_field.setType(XData::Field::Field_Boolean); 1
set_syserr(EADV, 1
Exception::fileName() 1
++z_j[k]; 1
:	m_unit(32) 1
for(u32bit 71
if(!pre_aux.isEmpty()) 2
slot 3
foreach(QCA::KeyStoreEntry 3
LLViewerJointAttachment::~LLViewerJointAttachment() 1
if(lv_accs->childCount() 1
global->rng_mutex.lock(); 1
LLAlertDialog 1
m_toggle_borders_action->setEnabled(true); 2
PREF_CATEGORY_WIDTH 1
model()->removeRows(index.row(),1,index.parent()); 1
qWarning(QString().arg(jid.full())); 1
progressIcon->stop(); 2
async_entryList(); 2
c0[0] 1
textLabel->setSizePolicy(QSizePolicy::Expanding, 1
testElement->addElement( 5
cb_plain->hide(); 1
d->profiles.setAutoDelete(true); 1
base.truncate(base.length()-1); 1
QModemCallProvider::AtdBehavior 1
d->closeLater 1
GameBoard::GameBoard(int 1
ck_host->setChecked(acc.opt_host); 1
v_ts 3
pb_save->setDefault(true); 1
ByteStream 2
task->stack->put(state, 1
newWbItem_->parseCursorMove(mapToScene(mapFromGlobal(event->globalPos()))); 1
item->setData(QVariant(c.password()), 1
real.setPixel(x, 2
Q_ASSERT(index.isValid() 1
Q_CLASSINFO() 1
d->pb_auth 1
c->InitiateSession(buzz::Jid(jid.full().ascii())); 1
IconButtonPlugin( 1
TLSContext::Result 1
m_searchSymbol->show(); 1
map[6] 2
Q3PtrListIterator<ContactViewItem> 10
i->moveToThread(this); 1
bsplitscb 1
m.fromStanza(s, 1
AccountManageItem(Q3ListView 1
updateDisplay(); 2
Q_ASSERT(op 1
disconnect(this,SIGNAL(defaultListAvailable(const 2
Private(OptionsDlg 1
if(domainCompare(a.name, 2
mTrackStats 2
stretch 1
if((fd 2
d->ck_ignoreHeadline->setChecked( 1
checkNullPointer(int 1
if(flag) 2
capsJids_[s].push_back(jid.full()); 2
whoStarts 1
addAction(d->act_send); 1
bg_se->insert(d->tb_seOnline); 1
d->proc->closeWriteChannel(); 2
TabbableWidget::ensureTabbedCorrectly(); 2
buzz::XmlElement 3
if(!fi.exists()) 3
d->async_removeEntry(id); 1
StatusModel::instance()->setParent(this); 1
if(!asker_ask(this, 1
items_old.removeAll(item); 1
tune.setArtist(CFStringToQString((CFStringRef) 1
ui_.le_email->setEdited(x); 1
d->lw_highlightWords->addItem( 1
config->autoDetectWSGI 1
xml.raiseError(tr()); 1
DIR 6
base_addr 4
if(selfDestruct_) 1
bottom1->setPalette(backgroundPalette); 2
lastWrite 4
storage.appendChild(u.toXml( 1
GO(symbol).set(new_class(object, 1
fail( 3
XData::FieldList 9
ui_.le_email->setEnabled(x); 2
foreach(TabDlg 5
e.xclient.message_type 1
d->impix 1
qWarning(QString().arg(client_->jid().full())); 1
updateVisibility(); 4
disconnect(le_name, 1
menu->insertItem(tr(), 1
c0.writeprotect 12
QList<long>::Iterator 2
ruby, 1
m_autoSaver, 2
color 2
services_[contact->getAccountName()]->actionSendMessage(contact->getJid()); 1
isel 2
m_selecting(false), 1
rememberSettings(); 4
for(EDBHandle 2
textRect.setHeight(16); 1
--n2; 1
mPrefsVoice->cancel(); 1
setImage(QImage(QDir(AvatarFactory::getCacheDir()).filePath(h))); 1
if(!console.start(con, 1
d->cb_tabGrouping->setCurrentIndex(2); 2
if(jid().full() 1
_l->trace( 1
ConsoleWorker 1
d->textStr 1
set_syserr(ECOMM, 1
::shl_unload( 1
d->pb_prev->setEnabled(false); 1
acc.clear(); 1
d->self->stopAnimateNick(); 1
ed->unregisterTimer(info.id); 2
accounts_.append(account); 1
if(unescape_config_stringlist(plugin_priorities_str, 1
SubTabBar 3
i->setParent(0); 1
pm->insertItem(IconsetFactory::icon(), 3
IconSelectPopup::IconSelectPopup(QWidget 1
reportFailure( 1
index.sibling(index.row(), 2
t.setCodec(QTextCodec::codecForName()); 1
#elif 32
TestMemleakStructMember() 1
if(pi.settings.useAuth) 1
Message 25
d->tb_icon->setMenu(d->psi->iconSelectPopup()); 1
alloc_info 2
fig[1] 1
XSize 1
NEW_STRUCT(o_regdata, 1
tree_->setOption(option, 1
mDoFade 2
QMainWindow::mousePressEvent(event); 1
QFile::remove(name 1
Synchronizer::Synchronizer(QObject 1
m_strRSSTags 1
XmlElement::toString( 1
if(!dir.exists()) 2
if(!word.isEmpty()) 1
d->recalculateSizeTimer->start( 1
connect(m_clearButton, 2
QTwitterApp::registerMainWindow( 1
connect(&closeTrigger, 1
list_.anchor(anchorRight, 1
if(drop_root) 1
clear_mem(x, 2
services_[resource->getAccountName()]->actionOpenChatSpecific(jid); 1
if(delAll) 1
m_outputter 2
PrivacyDlg 2
LLAgentPilot::LLAgentPilot() 1
QCA_logTextMessage(QString().sprintf(, 2
appendText(doc, 1
setData(Qt::UserRole, 1
ParseNext(pChildStart); 1
x.setFields(xdata_->fields()); 1
click_action 2
mNetworkPanel 2
foreach(Handle 5
if(features.size() 1
ui( 1
d->xdata->setFields( 2
TLS::Version 1
m_xmlFile 2
QList<QDialog 1
actBack 1
out.append(entry); 1
connect(d->trayMenu, 1
d->statusLines.clear(); 2
field.setVar(f.realName()); 1
m_cornerItems.append(c); 1
m_inactiveText 2
QCOMPARE(edit.textMargin(LineEdit::RightSide), 1
AlertIcon::Private::Private(AlertIcon 1
ui_.ck_presenceOut->setChecked(item.presenceOut()); 1
ic->stop(); 1
WbItem 15
fig[5] 1
v.setFullName( 2
addToolbarAction(parent, 1
set_syserr(EHOSTUNREACH, 1
pb_browse->setDefault(false); 1
code 3
list->setAllowKeyboardMovement(FALSE); 1
p->setPen(cb); 1
response.appendChild(documentBegin); 2
g.pathHome 2
TestComposite::TestComposite( 1
object->hide(); 1
status_field.setOptions(status_options); 1
set_syserr(ETIMEDOUT, 1
connect(w, 11
setFocus(); 1
controller_->recentGCAdd(jid_.full()); 1
middlevbox->addSpacing(5); 2
ev->start(); 1
GameBoard::sendFigure(const 1
if(client_->isActive()) 1
CompiledFile 2
viewGroups->setMenuText(tr()); 1
TEST_CASE(strcat_result_assignment); 1
ApplicationPoolServerPtr 1
LLAgentPilot 1
actionDisco(j, 2
PGPKeyContextProps 1
addAction(showAllAction); 1
connect(rosterService, 5
std::map<std::string, 1
Q_ASSERT(start 1
TextTestProgressListener::TextTestProgressListener() 1
buttonLine->addWidget(cb_); 1
last_ret 1
if(!folderRemove(QDir(info.filePath()))) 2
d->act_clear->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
method 1
FancyPopup::Private::Private(FancyPopup 2
SuperClass::operator 1
if(!d->console) 1
connect(ui_.pb_ok, 3
lb_security_level->hide(); 2
LLUICtrlFactory::getInstance()->buildFloater(this, 2
p.drawEllipse(QRect(displ, 1
reset(ResetAll); 6
g.moveTo(r.left() 1
popup->move( 2
pendingTranformations_.clear(); 2
regExp 1
ui_.le_city->setEnabled(x); 2
lb_comment->setText(); 1
s_downloadManager 1
tokenizer 2
vis 3
m_tabWidget->addWebAction(m_historyBack, 1
BrowserApplication::downloadManager()->hide(); 2
isAnimated 2
e.appendChild(doc.createTextNode(QString::number(bearing_.value()))); 1
GameBoard 5
QtopiaServerApplication::instance()->shutdown(QtopiaServerApplication::ShutdownSystem); 1
confirmClosingMultipleTabs->setChecked(settings.value(QLatin1String(), 1
scrollTo(index); 1
hb->addWidget(d->le_host); 1
ui_.lb_port->setEnabled(on); 1
d->idle.stop(); 1
CapsRegistry::CapsInfo::CapsInfo() 1
ck_ignoreSSLWarnings->hide(); 1
SecureVector<byte> 8
plugins_.remove(plugin); 1
p->drawRect(2, 1
file_options 1
QSvgRenderer 1
qLog(PowerManagement)<< 1
ForceForegroundWindow(foregroundWindow); 1
QList<Piece 2
setText(0, 8
intersect_rect.intersectWith(dst_textp->mSoftScreenRect); 1
ASSERT_EQUALS()); 35
Q_ASSERT(isValidNodeName(node)); 2
thr->set_top(state, 1
boost::char_separator<llwchar> 2
d->result.clear(); 1
for(;;) 5
TESTCASE(const_set_get_by_string) 1
groupChat_ 2
lb_plain->hide(); 1
rect.adjust(20, 2
ASSERT_EXCEPTION_CHECK( 4
model_.setList(PrivacyList(name)); 1
painter->setClipPath(m_frame->contentsClipPath(m_contentsRect)); 1
game->theirMove(space); 1
QList<Account> 4
Idle::~Idle() 1
qSort( 2
readNumEntry(p_events, 1
d->setup(id, 2
if(rit 1
PsiPrivacyManager::PsiPrivacyManager(XMPP::Task 1
b->setSizeHint( 1
loop->remove_signal(signal); 1
PsiIcon 78
migrateIntEntry(p_tip, 1
CollectQueryParams(params); 1
md5_finish(&md5, 2
if(_url.isEmpty()) 1
:d(from.d) 11
LLQuaternion 8
GroupItem 14
if(!isAgent) 2
UserResourceList::~UserResourceList() 1
MainWindow::newGame() 1
modify_buttons_[d->tb_seChat2] 1
it2 2
d->sl_rosterop->setValue(PsiOptions::instance()->getOption().toInt()); 1
fclose(f); 2
getDefault_waiting_ 2
:Q3CheckListItem(par,,CheckBox) 1
OptionsTabIconsetRoster::OptionsTabIconsetRoster(QObject 1
connect(ui_.room, 1
ba[z] 1
TuneControllerPlugin 1
t->set(items); 1
connect(cookiesButton, 1
LEGOPTP.color[cListBack] 1
AutoSaver::~AutoSaver() 1
timer->setSingleShot(singleShot); 2
if(d->animatingNick) 1
d->checkTimer.stop(); 1
std::pow(std::log(log_x), 1
SecCertificateGetData(cr, 1
connect(ui_.pb_remove,SIGNAL(clicked()),ui_.tv_affiliations,SLOT(removeCurrent())); 1
task->go(true); 2
CFRelease(context[3]); 1
Class 57
TEST_CASE(class9); 1
o.call(), 1
layout->addWidget(text,0,1); 1
UserResource::UserResource() 1
IdlePlatform::IdlePlatform() 4
o.call(); 1
m_historyBack->setIconVisibleInMenu(false); 1
set_syserr(E2BIG, 1
pe.appendChild(rectParent); 1
mux->lock(); 1
connect(ui_.tv_affiliations,SIGNAL(removeEnabled(bool)),ui_.pb_remove,SLOT(setEnabled(bool))); 1
certs.addCertificate(c); 2
oldIcon 1
buzz::Jid 2
mp_int 26
d->te_asMessage->setText( 1
m_xml->setStandalone( 1
connect(tryAgainButton, 1
connect(pb_addBlock, 1
setMouseCapture( 2
if(ui_.le_street->isModified()) 1
ASSERT_EQUAL(3u, 1
bo_t 1
p->setBrush(Qt::NoBrush); 1
themes_layout->addWidget(m_themes_preview); 1
setExpanded(index, 2
LLColor4(0.5f, 6
FLASHWINFO 1
client_xmlOutgoing(stamp 1
SxeEdit 1
serviceUrl 1
menuBar()->insertSeparator(); 1
setCursor(Qt::ArrowCursor); 3
ui.portEdit->setEnabled( 1
if(d->signers.isEmpty()) 2
d->pluginOptions->setParent(d); 1
connect(bTerminate, 1
if(wasBlocked 1
if(next_collection_bytes 1
engines.push_back(mod_engines[j]); 1
domElement= 6
themes_layout->addWidget(m_themes_selector); 1
themes_preview_layout->setSpacing(6); 1
connect(m_notifier, 1
d->unload(); 3
i->id 2
QToolButton::paintEvent(event); 1
QDomAttr 1
sessions.erase(lastSessionID 1
i.exists 2
m_zoom_size 1
In 1
setColumnWidth(1, 1
if(sFlags[0] 1
TestMemleakInClass() 1
modemService->primaryAtChat()->chat( 4
SourceLine::operator 3
setuid(getuid()); 1
TestRunner::addTest( 1
edt_init 1
Message::shortDescription() 1
hb3->addWidget(d->tb_url); 1
errout.str(); 13
delay(15000); 1
act_compact_ 1
ui_.gb_connection->setEnabled(true); 1
toIcon->setAnim 2
sassert(0); 1
QMainWindow 1
binsert 2
bookmarksActions.append(showAllBookmarksAction); 1
if(!hSystemStore) 1
Q_UNUSED(exitCode); 2
u.setName(nick); 2
QColor	cb, 1
defaultSavePath.prepend(s.value().toString() 1
std::memset(ptr, 2
Q_DECLARE_METATYPE(QWidget 1
PsiTipLabel::PsiTipLabel(QWidget 1
ret++; 5
gObjectList.addDebugBeacon(hub_pos_region, 1
d->pb_sysDetails->setEnabled(false); 1
savename 2
set_syserr(EIDRM, 1
toolBar->addWidget(new 1
testPath.insert( 2
TEST_CASE(class6); 1
bar.call_tabLayoutChange(); 1
if(stringprep(cs.data(), 6
if(list[n] 1
binsertch 1
ui.statusListView->update(); 1
eraseRect 1
c.parent 2
m_corners[3][2] 1
stream.flush(); 1
object.remove_const(); 3
if(	hasMouseCapture() 2
panel->m_largePanel 1
message.addDetail( 1
LEGOPTP.ppChat 1
# 70
if(doc.setContent(contents)) 1
sysUpdateIcon(); 1
FancyPopup 5
hb2->addWidget(busy_); 1
m_autosaver->saveIfNeccessary(); 1
qt_x_last_input_time 2
if(msg.lookup_from 1
d->sent 3
LEGOPTP.clNewHeadings 1
actionsService_->sendMessage(resource); 1
if((arg 1
LLVolumeParams	volume_params; 1
d->lb_identity->setVisible(visible); 2
switch(status) 3
mAttachedObject->isHUDAttachment() 1
~Entry() 1
painter.restore(); 3
connect(chatView(), 2
bootstrap_ontology(); 1
remoteSet 1
m_scale_start(0), 1
messageLabel->setSizePolicy(QSizePolicy::Expanding, 1
map[n1] 2
QList<QJDns::NameServer> 3
Q_UNUSED(result); 2
QObject::disconnect(d, 1
moveListKing(vl, 2
connect(d->pb_customRosterDetails, 1
m_pos(pos), 1
d->realJid 1
toolButton->setFocusPolicy(Qt::NoFocus); 1
dc.FillSolidRect(rect, 1
m_scale_level_max 1
parentWidget 7
errmap[QProcess::FailedToStart] 2
pb_close->setAutoDefault(false); 1
d->le_from->setToolTip(e->from().full()); 1
block_targets_.push_back(target); 1
proc.writeCommand(a); 1
CheckMemoryLeakStructMember 1
X11KeyTriggerManager::instance()->addTrigger(this); 1
ctx 1
<< 84
connect(bookmarkManager, 3
command.setAttribute(,c->name()); 1
settings._checkCodingStyle 4
:SecureMessageSystem(parent, 4
pb_prev->setEnabled(true); 1
d->untrusted 2
updateContact(xitem, 2
groupContainsAFinding 1
d->le_toolbarName->setFocus(); 1
useAux 2
mLastRecordTime(0.f), 1
result_result 22
__BEGIN 1
m_stream 33
d->attachView->clear(); 1
d->watcher->addPath(d->dirName); 1
Drawer::Drawer(GameBoard::FigureType 1
if(signing) 1
drw->setEnabled(TRUE); 3
delegate_->destroy(this); 1
lb_path 1
kTableCountOffset 1
cursor.endEditBlock(); 3
game_menu->addAction(config_icon, 1
fixedLabel->setText(QString(QLatin1String()).arg(font.family()).arg(font.pointSize())); 1
if(node_.toProcessingInstruction().data() 1
connect(jcv, 2
llofstream 1
bookmark->title 2
connect(ui_.pb_reject,SIGNAL(clicked()),SLOT(reject_call())); 1
:QLineEdit(parent, 1
qa_recv->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
GameBoard::sockError(int 1
memset(&secAttr, 1
act_scrollup_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
Figure::moveListKing(Q3PointArray 1
pipeStatus.readEnd().finalize(); 4
timer->start(msec); 2
vb1->addWidget(d->xdata_form); 1
HWND 6
connect(pb_delete, 2
config->autoDetectRails 1
stream.setDevice(&buffer); 1
widgets_.append(widget); 1
TestCaseDecorator::~TestCaseDecorator() 1
p.settings.user 1
ck_showTips->setChecked( 1
updateGeometry(); 1
statusmsg_field.setRequired(false); 1
frametimer->moveToThread(animMainThread); 1
StatusModel::~StatusModel() 1
am->insertItem(/ 2
if(!initialized) 1
handleDirtyRings(); 4
QCOMPARE(edit.textMargin(LineEdit::LeftSide), 1
crls 2
addItem(i, 4
info.setAttribute(,i.key().extensions()); 1
Q_UNUSED(opt); 2
imagePainter.setClipRect(e->rect()); 1
QVERIFY(action); 1
QToolButton::mouseReleaseEvent(event); 1
connect(d->cb_ident, 2
ui_.lv_keys->setSelected(ui_.lv_keys->firstChild(), 1
mod->setup(state); 1
removingDown 2
model->fetchMore(parent); 2
LEGOPTP.autoRosterSize 1
d->constraints 1
server_ 1
Item::Item() 1
check->setToolTip(f.desc()); 1
MetaActionList::~MetaActionList() 1
LEGOPTP.ppStatusClip 1
custom 2
Base64::Base64(Direction 1
gMessageSystem->addU8Fast(_PREHASH_PCode, 1
fprintf(stderr, 18
if(super->nil_p()) 2
if(!tokenAsker.accepted()) 2
ck_keepAlive->setWhatsThis( 1
if(initialized) 1
atom 1
cb_plain->addItem(tr(),ClientStream::AllowPlain); 1
LLViewerJointAttachment::LLViewerJointAttachment() 1
data.setFields(d->xdata->fields()); 1
qDebug(); 43
m_bookmarksToolbar->setAttribute(Qt::WA_MacNoClickThrough, 1
connect(m_viewToolbar, 1
HCERTSTORE 2
glPushAttrib(GL_CURRENT_BIT); 1
disconnect(d->icon, 2
if(isBusy) 1
connect(sm, 1
Qt::FocusPolicy 1
fp.setColor(QPalette::Active, 2
rest_long 2
passphraseDlg_->show(); 1
chb_qvga->setText(tr()); 1
if(!taken) 1
OutputDebugString((LPCTSTR)lpMsgBuf); 1
noIcons(); 2
TextIconFormat(const 1
m_pause_action 2
metacontact->setStatusMessage(self->getStatusMessage()); 1
changes_ 1
cableChanged(); 2
bringToFront(d->ftwin); 1
services_[group->getAccountName()]->actionGroupDelete(group->getGroupPath()); 1
migrateIntEntry(tag, 3
unzClose(d->uf); 1
partial 2
XUnmapWindow( 1
CookieJar::KeepUntilExpire 1
talk_base::Thread 1
SecureMessageKey 7
output.signerId 3
addAction(act_scrollup_); 1
set_sign(reverse_sign()); 1
d->pe_settings->fixTabbing(cb_type, 1
resize(560, 3
pb_edit->setEnabled(false); 1
IconsetDisplay::IconsetDisplay(QWidget 1
d->pb_next->forceSetPsiIcon(0); 1
d->watcher 2
(height() 2
strCount_(strCount), 2
last_delta2 1
IconSharedObject() 1
this 1
iconStop(); 6
TreeProxyModel::TreeProxyModel(QObject 1
to_net 4
items_.insert(it,item); 1
QDir::homePath(), 2
m_label.font->DrawScrollingText(m_posX, 1
m_radius 1
Elements::iterator 1
setText(str.join()); 1
TestRunner::WrappingSuite::WrappingSuite( 1
RosterActionsService::~RosterActionsService() 1
if(!types.contains(typesLeft[n])) 1
geom.moveLeft(r.left()); 1
timers.removeAt(n); 1
doc.setContent(stanza); 1
valueStr.setNum(isVisible()); 1
c.change(cert_list[n]); 1
ui_.lv_rules->setCurrentIndex(model_.index(row-1,0)); 1
p.setBrush(Qt::blue); 1
dropPath.lineTo(c.x() 2
if(lvi) 1
LEGOPTP.ppHideTime 1
QWhatsThis::add(d->pb_cOnline, 1
SASL::Params::Params(const 1
le_to->setReadOnly(false); 1
gGL.vertex3fv(v[2].mV); 2
m_id 4
LLFloaterPreference::~LLFloaterPreference() 1
object_type 1
out[0] 3
manager->updateCaps(); 3
idFeatures.append( 1
if(!node.isNull()) 1
sectmp.close(); 1
primaryAtChat()->registerWakeupCommand( 1
d->animateNickColor 1
if(g->groupType() 1
m_posY 2
LLFirstUse::useSandbox(); 2
g_lastMousePos 1
index.data(AutoJoinRole).toBool(), 1
QMapIterator<QString,QVariant> 2
replaceWidget(lv_discoOld, 1
n--; 1
if(d->f.open(QIODevice::ReadOnly)) 1
it.current()->applyOptions(); 1
JDnsShared::~JDnsShared() 1
connect(QCoreApplication::instance(),SIGNAL(aboutToQuit()),SLOT(deleteLater())); 2
ui_.cb_lists->setCurrentItem(names.findIndex(currentList)); 1
high 3
while(bitmap 1
SafeDelete::~SafeDelete() 1
ctx->no_value 1
FancyPopup::setBorderColor( 1
command.setAttribute(, 3
HPAD 1
SLOT(slotFileSaveAs()), 1
signers 2
if(ui_.le_city->edited()) 1
(p->frameGeometry().right() 2
NeoCallVolume::~NeoCallVolume() 1
QString	s; 3
SynchronizedObject::~SynchronizedObject() 1
ui_.toolbar->addAction(act_clear_); 1
TEST_CASE(freefree2); 1
layout->addWidget(textEdit); 1
mainMenuBar()->show(); 1
if(realm) 2
d->pb_nickColor->setPixmap( 1
if(global->refs 1
CPPUNIT_TEST(testDestructor_Open); 1
if(d->uf) 1
flusspferd::array::iterator 2
listener_->reply(false, 1
KeyStoreEntry::Type 3
spell_menu.addSeparator(); 1
di.setIdentities 1
doAlert(); 2
recent->setEnabled(false); 1
d->ext_authid 1
retval 11
connect(metaAlertIcon, 2
QList<SxeEdit 2
QList<Status> 1
enableImages->setChecked(settings.value(QLatin1String(), 1
lstrcpynA(tnd.szTip, 1
sei.lpVerb 1
that->clearWState(Qt::WState_MouseTracking); 1
set_syserr(EBFONT, 1
this->mutex_factory 1
aHistory(jid()); 1
connect(pa->privacyManager(),SIGNAL(changeList_error()),SLOT(changeList_error())); 1
command.remove(0,8); 1
setText(BookmarksManager::tr()); 3
d->pb_chat 1
actionsService_->openChat(contact); 2
XCloseDisplay(dpy); 2
cm->vmmethod(state); 1
triggers_.removeAll(trigger); 2
QPixmap 64
cTest 1
InfoDlg::InfoDlg(int 2
addStatus(XMPP::Status::Online); 1
CDirectoryNode::CDirectoryNode(NODE_TYPE 1
InfoDialog::InfoDialog(DesktopEntry 1
sasl_done(); 1
if(online 1
static 434
post.prepend(foo); 1
TEST_CASE(if1); 1
clock_t 1
GrepShortcutKeyDlg::GrepShortcutKeyDlg() 1
mw->setTrayIconMode( 2
recipIds.clear(); 1
ownJids_.removeAt(i); 1
if(!instance_) 3
GO(sym_init_copy).set(symbol()); 1
MainWindow::newGame(int 1
menu->addMenu(sendTo); 1
ui_.le_host->setEnabled(false); 1
setNodeValue(newNode, 1
QSKIP(, 14
painter->setPen(Qt::white); 1
LEGOPTP.gcNickColors 5
values_[node]=value; 1
task->pop(); 1
focusControl 1
QLineEdit::Normal, 4
SxeEdit::SxeEdit(const 1
actRegister 1
CompilerOutputter::processLocationFormatCommand( 1
.toUpper().replace(QRegExp().mid(1); 1
if(!unescape_stringlist(in, 1
pthread_kill_other_threads_np(); 1
ev.xclient.format 1
if(hk 1
QFile(QString().arg(m_id)).remove(); 1
Q_ASSERT(widget); 12
canRead 4
if(ha 1
historyActions.append(m_tabWidget->recentlyClosedTabsAction()); 1
QVERIFY(child.isValid()); 1
Thread::init(state); 1
gAudiop->triggerSound( 1
CKey::CKey(const 1
errorSpecific 1
newPix.setMask(mask); 1
HttpAuthManager 1
lb_logo->setFixedSize(logo.width(), 1
stub->arg_types 1
Q3ListViewItemIterator 15
StatusWidget::setScrollBarWidth( 1
set_syserr(ENOANO, 1
pb_open->setDefault(true); 1
statusMenu->addAction(menuActions_[]); 7
addSuccessfulTest( 1
d->xdata_form 2
Exception::lineNumber() 1
history.setHistory(initial); 1
setString(utf8str_to_wstring(text)); 1
connect(d->lw_selectedActions, 1
removeEntry(e); 3
KeyStoreEntry 10
qVariantSetValue<Certificate>(arg, 2
CommonDynamicSuiteDescription::CommonDynamicSuiteDescription( 1
CPPUNIT_ASSERT(QIODevice::ReadOnly 3
m_syncObject 1
m_historyForward->activate(QAction::Trigger); 1
_iq.appendChild(query); 2
Q_ASSERT(count 1
device 1
MemoryRegion::MemoryRegion(bool 1
chrs.content[c 1
target->m_rect 1
_suite 4
volume_pcode 14
fd(connection), 1
vmm 1
item.setAttribute(,value_); 1
do_free(ptr, 2
connect(d->pb_next, 2
s.truncate(clip); 2
myPath.arcMoveTo(circle, 1
actionRemove(j); 1
G(string)->has_ivars 1
QUiLoader 1
if(input.opt_ascii) 11
infoLine->addWidget(lb_path); 1
if(url.find(: 1
sl.split 1
resort(metacontact); 1
ModelMenu 1
QModemServiceNumbers::requestServiceNumberFromFile( 1
set_syserr(EREMOTE, 1
if(output.verifyResult 1
if(d->attachView->childCount() 1
h 16
le_input->setFocus(); 2
connect(t,SIGNAL(finished()),SLOT(getConfiguration_finished())); 1
toolbar->addWidget(stretch); 1
processNegotiationMessage(message); 1
:SecureLayer(parent), 3
hints->window_group 1
d->list.setAutoDelete(true); 1
keyItem->setText(0, 1
IconAction::setIcon(QIcon()); 1
Source 1
decorateButton(status); 1
btn 1
root->setExpanded(true); 1
d->pe_settings 1
SET(io, 1
LEGOPTP.use_asOffline 1
Q_UNUSED(stanza); 1
QList<QTreeWidgetItem 6
setAccount(controller_->contactList()->enabledAccounts().first()); 1
qreal 7
delafter 12
setTextCursor(tc); 2
LLSelectMgr::getInstance()->deselectAll(); 2
d->te_sp->setText(); 1
ToolbarPrefs 11
tls 3
cd.lpData 1
qDebug(QString().arg(target.full()).toAscii()); 1
if(!f.open(QIODevice::WriteOnly 1
XmlOutputter::fillFailedTestsMap( 1
++last; 1
QPointF 19
pb_prev 1
resource->getClientVersion() 1
pix.fill(QColor()); 1
if(n.nodeName() 1
if(decimal) 1
dataServices_.insert(acname, 1
CertificateOptions 1
qDebug(QString().arg(edit->value(SxeRecordEdit::ReplaceFrom))); 2
mDisplayPanel->apply(); 1
_out_id 1
if((need.user 1
v_isWMDock 2
m_themes_remove_button 1
tabBar_ 1
hb3->addWidget(d->tb_pgp); 1
service->primaryAtChat()->chat( 1
MUCInvite 1
connect(m_bookmarksModel, 4
privacyBlockedModel.setSourceModel(&privacyModel); 1
textp->mTargetPositionOffset.clearVec(); 1
if(meta) 4
d->pe_settings->setProxySettings(s.settings); 1
ASSERT_EQUALS(CheckMemoryLeak::NewArray, 2
G(methtbl)->setup(this, 1
JT_XSearch::JT_XSearch( 1
graphic[ 1
XMMSController::XMMSController() 1
CPPUNIT_ASSERT_EQUAL(PrivacyListItem::Allow, 1
theirTurn(space); 1
if(in_sendFirst 1
installPsiToolTipFont(); 1
item->setDropEnabled(false); 1
X11WM_CLASS(); 9
if(parts_name.count() 2
while((hashval)as<Integer>(ent->at(0))->n2i() 3
updatePhoto(); 4
QPipeReader(QObject 1
gCrashSettings.saveToFile(crash_settings_filename, 1
Q_D(const 15
PsiTipLabel 4
if(consoleMode) 4
outputter.write(); 1
Botan::set_global_state(0); 1
TestResult::reset() 1
rng->randomize(out, 1
tnd.uCallbackMessage= 2
handle_go_to(); 2
buffer.append(hdrs[i].val); 1
if(nick.isEmpty()) 1
painter.translate(0, 2
d->cb_sp_status->setEnabled(enabled); 1
dragPainter.drawPixmap(i 1
m_status_time_message 1
pos.ry()--; 1
pm.insertItem(IconsetFactory::iconPixmap(), 1
d->save 1
d->popup 1
d->activeFile 1
ac->setAvailability(QPowerSource::NotAvailable); 2
#define 315
it->opt_enabled 1
dest 3
connect(c,SIGNAL(stopped()),SIGNAL(stopped())); 1
CreatePreview(pTempDoc); 1
desc 26
m_frameTextItem 2
m_stringListModel->setStringList(list); 1
Returns 2
object_memory->remember_set 1
setSize(size); 1
d.setJid(venue); 1
OptShortcutsUI 10
logDebug(QString().arg(item->p->name())); 1
bzero(name_data, 1
active->no_value 2
T::srand( 1
viewMenu->addAction(tr(), 3
toolbar_->addAction(act_modes_); 1
sender()->deleteLater(); 3
LEGOPTP.onevent[eChat2] 1
ui_.pb_apply->setEnabled(false); 1
ele.appendChild(doc.importNode(df, 1
this->obj_type 1
v_m.setTimeStamp(timeStamp()); 1
setRole(role); 1
LEGOPTP.font[fRoster] 1
frame_data.mNumTerseUpdates 1
LEGOPTP.eventPriorityHeadline 1
action->setData(-1 1
tut::xform_test_t 1
statusReportThread->interruptAndJoin(); 1
MAction::MAction(PsiIcon 1
puts 3
KeyStoreWriteEntry() 1
maybeTip(w->mapToGlobal(he->pos())); 1
removeTrackBar(cursor); 1
BOOST_CHECK_EQUAL(a.length(), 3
item.setPresenceOut(presence_out); 1
setStatusBarTextRole(HistoryModel::UrlStringRole); 1
QPushButton::setText(label); 1
jsdtrace_fun_linenumber(JSContext 1
le_name->setText(aname); 1
IconsetRosterUI() 1
hb4->addWidget(d->pb_quote); 1
QAccessible::updateAccessibility( 1
QTwitterApp::~QTwitterApp() 1
task(NULL), 1
llwarns 3
d->qdns->setRecordType(Q3Dns::A); 1
DynamicLibraryManagerException::what() 1
m_bIsAllocated 3
config[] 4
setWindowIcon(pix); 1
errmap[QProcess::ReadError] 2
boost::mutex 1
JAVASCRIPT_OBJECT_CREATE_START(jsdtrace_filename(fp), 1
ProtectorContext 1
ui_.pb_up->setEnabled(b); 1
m.setHttpAuthRequest(HttpAuthRequest(s.element().elementsByTagNameNS(http: 1
idlessItems_.takeFirst()->addToScene(); 1
obj->field[i] 1
progress(calcProgressStep(d->sent, 2
d->cb_proxy->clear(); 1
~MyHeaderViewWidget() 1
sigts 1
v_rich 2
m_paused(false), 1
CBString::~CBString 1
d->count 2
info.setIdentities(identities); 1
closed(); 1
if(!QRegExp(p1, 1
gPipeline.markTextured(drawablep); 1
pep_avatars_[jid.bare()] 1
glEnable(GL_TEXTURE_2D); 3
popup.insertItem(tr(), 2
Context 1
InstallApplicationEventHandler(hot_key_function_, 1
ProfileOpenDlg::~ProfileOpenDlg() 1
identity.setAttribute(,( 3
valueStr.setNum(pos().x()); 1
Q_EXPORT_PLUGIN( 1
edit.addWidget(button, 2
lAppname->setText(appName); 1
hb->addWidget(pb2); 1
mActions.put(new_action); 1
menu->addAction(menuActions_[]); 32
m_pRootElement 6
pa->client()->s5bManager()->setServer(d->s5bServer); 1
m_mainWindows.prepend(browser); 1
deleteAllDialogs(); 1
LLObjectSelection 1
setSecure(true); 1
effectp->setDuration(0.25f); 2
frameLayout->addLayout( 1
SubTabWidget 4
mSoftScreenRect.setLeftTopAndSize(screen_center.mV[VX] 1
instance->claim(); 1
const 928
d->mucManager->setRole(nick, 3
ksm->d->unreg(q); 1
if(w->session()->target().compare(jid)) 1
if(!pa) 2
CommonTest::CommonTest() 1
~AccountRemoveDlg(); 1
doc.appendChild(e); 1
Child::Child(STATE, 1
tcf.setUnderlineStyle(QTextCharFormat::SpellCheckUnderline); 1
d->listing.clear(); 1
d->pb_http_deny->setEnabled(true); 1
tabWidget_->setTabPosition(QTabWidget::Bottom); 1
TestFactoryRegistry 3
d->statusButton->setMenu( 1
r.setStatus(AHCommand::Executing); 2
object->mDrawable->getFace(face_num)->clearState(LLFace::HUD_RENDER); 1
if(!busySources.contains(c)) 1
cell_width 3
context[4] 1
set_syserr(EREMOTEIO, 1
mod->set_name(state, 2
WbNewPath::WbNewPath(QGraphicsScene 1
PopupAction 5
d->ocountdown 1
providerList.insert(n, 1
QDialog::reject(); 5
option.defaultRosterIconset 2
mechlist.clear(); 1
g_SkinInfo.LoadIncludes(&includes); 1
CGUIMessage 6
QList<Private::NickAndJid> 2
ui_.tb_pgp->hide(); 1
ProxyChooser 1
ContactProfile::Entry 2
urls.append(url.toString()); 1
services_[contact->getAccountName()]->actionSetManualAvatar(contact->getJid(), 1
providerItemList.clear(); 1
if(obj->marked_p()) 1
d->dbname 1
updateCursor(); 11
TEST_CASE(vcl2); 1
buf[n] 1
ui_.tb_emoticons->setIcon(IconsetFactory::icon().icon()); 2
i.event 2
qca_init 1
d->data.pa->dialogRegister(this); 1
le_option->setText(name_); 1
m_col_delta 2
rb_->setSearch(searchText_); 1
parent->add(item, 2
d->tb_icon->setPsiIcon(IconsetFactory::iconPtr()); 1
d->rlist.append(r); 6
word 56
if(found) 40
work 1
setImageForUrl( 1
d->tb_history 1
d->le_oeMessage->setText(PsiOptions::instance()->getOption().toString()); 1
session.change(sc); 1
if(ret 11
tryAgainButton->setEnabled(false); 1
m_completion->preventSuggest(); 1
composingTimer_->start(2000); 1
if(pass) 1
connect(m_toolbarSearch, 1
QTextCursor 14
QWhatsThis::add(d->pb_cProfileBack, 1
if(keyItemsCount 1
lst->resize(edt->width(), 1
srvResult(true); 1
tc.setPosition(current_position 1
hb1->addWidget(d->pb_close); 1
lab 2
disconnect(w, 1
BrowserApplication::historyManager(); 1
haveaddr 2
QWhatsThis::add(d->rb_delChatsDay, 2
ensureIndex(); 1
m_dwButtonCode 3
order 1
if(state->om->collect_young_now) 1
w->showMaximized(); 1
vsUsbCable 2
CompilerOutputter::printFailedTestName( 1
pascal 1
mainWin->connect(statusMapper, 1
obj->d->name 1
m_searchButton 1
view->setIndentation(10); 1
QList<QWebFrame 2
Q_IMPORT_PLUGIN(qjpeg) 1
connect(pb_prev,SIGNAL(clicked()),SLOT(doPrev())); 1
d->lb_ident->setAccount(d->pa); 2
GlobalShortcutManager::GlobalShortcutManager() 1
tabBar_->setCurrentIndex(i); 1
.arg(QKeySequence( 2
mNetworkPanel->cancel(); 1
actBrowse 1
setWhatsThis 1
action->setIcon(icon); 3
localSet 1
Q_ASSERT(asker_at 3
lcto_pos 1
if(!d->le_to->getSelection(&start, 1
SecureArray::~SecureArray() 1
if(d->dns.result().isNull 1
action->setData(historyCount 1
host.address 1
d->pb_chat->setMinimumWidth(96); 1
if(!d->s5bServer->start(PsiOptions::instance()->getOption().toInt())) 1
layoutChildren(); 5
height_element.appendChild(e.ownerDocument().createTextNode(QString::number(size.height()))); 1
zoom(board_zoom); 1
VMMethod(state, 1
error(ErrFile, 4
connection.registerObject( 1
connect(PsiOptions::instance(), 4
LLFloaterHardwareSettings::instance()->cancel(); 1
migrateStringEntry(p_iconset, 1
data->primaryWeight 2
actionSendFile(u->jid()); 1
painter.drawText(textRect, 1
activatedCount 1
kse.change(c); 2
actionGroupAdd(u->jid(), 2
two2.prepend(item2); 2
d->lastRequestType 7
win->show(); 1
out.release(); 1
d->add->setEnabled(true); 2
primaryWeight_ 4
self->setStatusMessage(resource->getStatusMessage()); 1
total_triangles 1
>> 1
eventReady(GpgOp::Event::ReadyReadDiagnosticText); 1
d->sbState 1
TEST_CASE(open_function); 1
createLanguageMenu(); 1
ui_.ck_legacy_ssl_probe->setChecked(legacy_ssl_probe_); 1
active->sp 1
setOpen(i, 1
Tests 6
glownImage.fill(0x00); 1
reverse->QueueAnimation(ANIM_PROCESS_REVERSE); 1
mainWindow()->slotHome(); 1
tree->setExpanded(m_proxyModel->index(0, 1
Initializer::~Initializer() 1
leftover_stderr 2
act->setData(QVariant(tabDlgMetaType, 1
actAdd->setEnabled( 1
titleIcon->setPsiIcon(icon, 2
target 5
d->w.wakeOne(); 1
if(mPick.getObject().notNull() 1
m_rightWidget->setGeometry(textRect); 1
Avatar::Avatar(AvatarFactory 1
if(!gPipeline.canUseVertexShaders()) 1
tabMenu_->clear(); 1
_l->failedAssertSameData( 1
if(ui_.le_orgUnit->isModified()) 1
mat.Translate(pv[1].pos.x, 1
~KeyStoreThread() 1
windows.at(offset)->activateWindow(); 1
forced 1
bring(-n, 2
d->smime 2
__attribute__ 1
call->setConnected(); 1
QWebSettings 9
StandardApplicationPool 1
QSslConfiguration::setDefaultConfiguration(sslCfg); 2
phase 2
Metacontact 7
ServerList 1
pipeStatus.writeEnd().close(); 4
QCOMPARE(bar.count(), 3
default_key(default_key_value) 1
SLOT(authenticationRequired(QNetworkReply 1
chain->append(cert); 1
HistoryDlg::HistoryDlg(const 1
m_timeLine->setDirection(QTimeLine::Forward); 1
setLastUsedSavePath(fi.dirPath()); 1
LEGOPTP.xmlConsoleOnLogin 1
if(!online) 6
mInputPanel->cancel(); 1
QString		hst; 1
d->c->setClientParams(&user, 1
SetWindowTextA(winId(), 1
ASSERT_EQUAL(v, 3
addStatus(XMPP::Status::Invisible); 1
d->ck_alwaysOnTop->setWhatsThis( 1
TEST_CASE(closedir_function); 1
d->atEnd 1
if(math.const_defined()) 2
negotiation->session->eraseQueueUntil(negotiationElement.toElement().attribute(), 1
currentWebView()->setFocus(); 2
sldr->setValue(val); 1
d->le_to->insert(js); 1
file=dir.absoluteFilePath(file); 2
Q_UNUSED(ascending); 1
setStatusBarTextRole(BookmarksModel::UrlStringRole); 1
if(server) 4
GameBoard::GameType 2
Q_IMPORT_PLUGIN(qtiff) 1
ui_.te->setUndoRedoEnabled(false); 1
m_hooks.push_back( 1
QVERIFY(!idx.isValid()); 1
info_el.setAttribute(,avatar_image.height()); 1
aFormSubmit(data, 1
d->t->start(250, 1
if(parts[n].indexOf('.') 1
vcard_static_avatars_[jid.bare()] 1
addAction(STRAIGHT); 2
m_maxSavedSearches 1
_suiteName 1
d->attachView->addUrlList(m.urlList()); 1
m_themes_preview->setPixmap(pixmap); 1
TestSuiteBuilderContextBase::addTest( 1
set_syserr(EAFNOSUPPORT, 1
o.rect 1
currentMaxDumpSize 1
vb1->addWidget(d->mle); 1
QDialog::close(); 1
contact->setIncomingEvent(event); 1
handle_click_action_open_media(object); 1
filterActive 1
mw->slotHome(); 2
trees_[key]->setComment(subnode,comment); 1
Q_EXPORT_PLUGIN2(xmmsplugin, 1
connect(ui_.listView->selectionModel(), 1
bTerminate->setVisible(false); 1
EventQueue::EventQueue(const 1
if(b_words) 1
value=Qt::Unchecked; 1
free(c_title); 1
substr.clear(); 1
cursor.beginEditBlock(); 3
if(obj->klass 1
connect(lv_results, 1
CertificateRequest::~CertificateRequest() 1
addMetacontact(metacontact, 1
CertificateRequest::CertificateRequest() 1
verticalScrollBar()->setValue(verticalScrollBar()->minimum()); 1
connect(animTimer, 1
d->tb_info->setEnabled(true); 1
accountsModel->cleanUp(); 1
pm.insertItem(tr(), 16
this_thread::disable_syscall_interruption 10
ensureCursorVisible(); 1
std::auto_ptr<Exception> 2
plugins.append( 9
SecureMessage 2
m_sourceRow.append(sourceModel()->rowCount() 1
ui.colorBox->addItem( 1
searchNow(); 1
strftime(time_str, 1
Q_UNUSED(option) 2
header()->hide(); 4
nil 1
server_init 1
connect(d->act_find, 1
grid->addWidget(chb_antisuspend,2,0,Qt::AlignCenter); 1
hb->addWidget(pb_next); 1
map2win(tfx, 1
account()->invokeGCChat(jid().withResource(nick)); 1
nix 2
iconRects[icon] 1
if(linkify_isOneOf(in.at(n), 2
c0.replace 2
gameplay_layout->setColumnStretch(0, 1
column_count 1
printFailure( 1
newTrayOwner(); 1
d->serial 1
d->te->setText(PsiOptions::instance()->getOption(base+).toString()); 1
quoted 1
mp_copy(y, 1
if(str.left(4) 1
e.appendChild(doc.createTextNode(postalcode_)); 2
PsiOptions::instance()->setOption(lastUsedSavePathOptionPath, 1
country_ 4
actTip->setWhatsThis 2
RealWorldDescription().activateAllTests(); 1
callbacks[1].context 2
prefilterShowOffline 1
initAscii2KeyCodeTable(&key_codes_); 1
readAhead 2
set_syserr(EROFS, 1
(i->type() 1
updateCompleted(); 5
TestCaseMethodFunctor( 1
statusLists.remove( 2
item.setType(type); 1
memcpy(curWrite.data(), 1
ui_.le_state->setEdited(x); 1
it->updateItems(); 1
connect(m_ui->searchButton, 1
m_zoom 5
TEST_CASE(fcloseall_function); 1
io_connect_t 1
setItemSelected(i, 1
'/}2345@ 1
allocated_objects--; 1
switchToVt7(); 1
Test::findTest( 1
PEPCreateNodeTask 2
Message::Message( 5
if(!SetNamedPipeHandleState(pipe, 1
stream.setAutoDetectUnicode(true); 1
d->tb_down->setEnabled(enable 1
if(connect_handshaken) 1
index.data(Qt::DecorationRole).value<QIcon>().paint(painter, 1
ocountdown 1
actionSendMessage(); 1
toolbar_->addAction(act_clear_); 1
org.unit 2
x_element.appendChild(e.ownerDocument().createTextNode(QString::number(rect.x()))); 1
TEST_CASE(eraseGoto); 1
muc.appendChild(data.toXml(doc())); 1
connect(d->edit, 1
IODeviceOpenerTest(); 1
rebuildToolbarKeys(); 4
d->le_http_id->clear(); 1
CPPUNIT_ASSERT(c.extensions() 1
LEGOPTP.lastSavePath 1
m_lineEdits->removeWidget(lineEdit); 3
setRootIndex(model->index(0, 1
this->mPreferenceCore->cancel(); 1
p->configChanged(conf); 1
lateMigrationData.sp.clear(); 1
m_corners[2][3] 1
selfDestruct_ 6
pm.setItemEnabled(7, 1
c1.findreplace 2
model->currentStatus()->slotCopyLink(); 1
LEGOPTP.chatBgImage 1
connect(jt, 5
d->cb_preset->insertStringList(presets); 1
clientVersion_ 1
passwordDialog.introLabel->setText(introMessage); 1
d->exp->get(d->jid, 1
painter.drawPixmap(column 3
LLGLDisable 1
it.setAll(); 1
ui.accountsComboBox->setToolTip( 1
QWebView::dragMoveEvent(event); 1
int			res, 2
ASSERT_EQUAL(c, 3
ui.buttonBox->addButton( 2
G(lookuptable)->instance_type 1
CColor 5
proxy->setWidget(widget); 1
mp_clear(&high); 1
this->op 1
m.setThread(d->thread); 1
t.setDevice(&f); 2
GameBoard::updateHistory(int 1
d->tw_availActions->clear(); 1
registerCaps(, 2
dlhandle 1
pageAction(QWebPage::OpenImageInNewWindow)->trigger(); 2
~DiscoListItem(); 1
comments_[node]=comment; 1
op->wentry 1
TabbableWidget::TabbableWidget(const 1
if(!first) 2
Validity 10
if(size.width() 1
bg_sePlay->insert(d->tb_seSystemPlay); 1
httpSyncFinished(); 1
m_corners[0][0] 1
d->lb_count 1
setData(index(row,0,list),QVariant(item.jid().full())); 1
dlg->lv_disco 1
ext_keyStoreLog(QString().arg(filePath)); 1
qcaEventHandler_ 1
if(word_num 1
opt_host_ 1
acc.opt_keepAlive 1
d->pre_aux_close 2
PSendSysMessage(LANG_CINEMATIC_NOT_EXIST, 1
act_pgp_->setIcon(i); 1
bytesWrittenArgs.clear(); 2
QCOMPARE(bar.showTabBarWhenOneTab(), 2
opttab 4
if(slot) 2
XDataWidget::~XDataWidget() 1
d->sendLeft 1
state->queue_thread(thr); 1
d->mainwin->setUseDock(PsiOptions::instance()->getOption().toBool()); 2
ck_compress->setWhatsThis( 1
if(output[j] 1
OptionsTabEvents::OptionsTabEvents(QObject 1
OptionsStorageTask 2
d->pb_next->setEnabled(false); 3
m_themes_selector->setCurrentRow(theme); 2
bg_color->insert(d->pb_cOffline); 1
iValue 2
lineEdit->setVisible(scr 2
pipe.close(); 1
QSpacerItem 1
if(!WriteFile(pipe, 1
connect(sn_write, 1
AdvancedWidget<QWidget>::changeEvent(event); 2
OnMessage(message); 1
m_recentlyClosedTabsAction->setMenu(m_recentlyClosedTabsMenu); 1
Drawer::checkWhiteCastle(int 1
if(lines.count() 2
setup(dir, 1
addAction(d->act_scrollup); 1
if(!obj->d->handles.isEmpty()) 1
TestCaseDecorator::tearDown() 1
lb_date->setText(date.toString(Qt::LocalDate)); 1
LineEdit::LineEdit( 1
JDnsSharedRequest::~JDnsSharedRequest() 1
key->change(kc); 1
if(!graphicsItem()) 1
LLSliderCtrl 4
eventList 1
va_list 3
setPos(x, 1
cookiesTable->verticalHeader()->hide(); 1
i->jdns 1
ModelTest::ModelTest(QAbstractItemModel 1
prof.antiDim 2
printf(); 26
++m_testErrors; 1
seckeys 2
d->ck_autoRosterSize->setChecked( 1
hb->addWidget(pb_complete); 3
EventNotifierAction::EventNotifierAction(QObject 1
printFailuresList(); 1
marked 1
setSelectionMode(ExtendedSelection); 1
d->lastMousePos 2
http_ 1
pControl->UpdateVisibility(); 1
dexc(IllegalLongReturn, 1
changes_[Name] 1
LLAgentPilot::~LLAgentPilot() 1
qApp->setFont(QToolTip::font(), 1
d->ftwin 2
game_menu->addAction(scores_icon, 1
d->anchorOnMousePress 1
gSavedSettings.setS32(, 1
act_scrolldown_ 1
if(c->time.isNull() 1
if(err 14
qWarning(qPrintable(QString().arg(node))); 1
d->cb_ident->setEnabled(true); 1
me->setOriginLocal(originLocal); 1
setToolTip(tr()); 1
finalize(); 5
set_syserr(EDOTDOT, 1
http: 9
paused 4
d->desc 2
frame_data.mTotalDuration 1
d->le_to->setEnabled(false); 1
d->busy->start(); 8
connect(&d->srv, 1
GeoLocation::GeoLocation() 1
sub->put(state, 2
PsiToolTip::showText(pos, 2
if(d->isActive) 1
groupState.remove( 1
connect(ui_.log, 1
stacked_->setParent(0); 1
TEST_CASE(use); 1
gn_->notify(name, 1
hookEdit(); 2
m_strName=strName; 1
if(y.sig_words() 1
manager_->execute(command, 1
NeoBandSelection::~NeoBandSelection() 1
m.setBody(d->mle->text()); 1
if(s.isEmpty() 1
#include 4602
d->gr_form->setSpacing(4); 2
m_mazes_preview 1
_TSM_ASSERT_THROWS_NOTHING( 2
noneAction->setCheckable(true); 1
fillFailedTestsMap( 1
QCOMPARE(edit.textMargin(other), 1
setFilterCaseSensitivity(Qt::CaseInsensitive); 1
bool	res 1
bool	ret 3
CPPUNIT_TEST(testVersionStringToInt_TooSmallPart); 1
DummyWorldDescription::DummyWorldDescription() 1
ui_.le_title->setReadOnly(x); 2
memcpy 9
gpg_keyStoreLog(gpg.readDiagnosticText()); 10
AccountModifyDlg::AccountModifyDlg(PsiAccount 1
connect(ui_.cb_ssl, 1
node->title 3
QObject::connect(edt, 2
preferedTabsetForKind_[it.key()] 1
lab->hide(); 2
updateAccountsOnExit( 1
i->moveItem(this); 1
startupBehavior->setCurrentIndex(settings.value(QLatin1String(), 1
key.setPGPPublicKey(pub); 1
FancyPopup::FancyPopup(QString 2
d->tb_icon->hide(); 1
hasPGPKey_ 1
checkMemoryLeakStructMember.check(); 1
m_s 1
CloseHandle(m); 2
addTo(item); 1
TestResult::~TestResult() 1
Jid::Jid() 1
d->readAhead 1
o->setOption(base 51
d->t.start(1000); 1
QList<Q3Dns::Server> 1
Message::Message(STATE, 1
SafeTimer 5
str.insert(start, 1
OnMessage(msg); 1
cache_no_pgp_ 2
GO(blokenv).set(new_class(object, 1
settings.beginGroup(); 3
TOOL_SIZE, 1
setWState( 1
closeTab(tab); 1
d->cb_preset->setCurrentIndex(id); 1
if(e.tagName() 3
statusLists.insert( 2
newItems 2
resetParams(); 1
TestRunner::WrappingSuite::getChildTestCount() 1
CompilerOutputter::printFailureReport() 1
d->le_input->setText(); 1
d->mainwin->decorateButton(-1); 1
op->type 3
closeConfirmation.addButton(QMessageBox::No); 1
connect_peerCertificateAvailable 1
nextId 2
c->setParent(0); 2
QStringList() 1
global->manager->clearDiagnosticText(); 1
auto_open_field.setValue(QStringList((PsiOptions::instance()->getOption())); 1
stop(); 14
ui_.gb_listSettings->setEnabled(b); 1
CPPUNIT_TEST(testFromXml_SubscriptionType); 1
conf_x_field_type.appendChild(conf_x_field_type_value); 1
SourceLine::SourceLine() 1
generalElement.setAttribute(, 2
PsiToolTip::showText(globalPos, 3
G(io)->setup(this, 1
QLayout 7
sxemanager_ 1
restoreWidgets(); 1
if(init_done) 1
nicknumber=0; 1
points[4], 1
infos_ 1
query.setAttribute(, 2
dlg->adjustSize(); 1
c0.character 1
setDeleteBeforeUpdate( 1
d->con->setParent(this); 1
channel.write(toString(server.pool.getActive()).c_str(), 1
act->setProperty(, 1
connection.data()->deleteLater(); 1
passwordDialog.setupUi(&dialog); 1
ai->sbuf 8
TEST_CASE(class8); 1
Asserter::failNotEqual( 1
mainFrame()->setHtml(html, 1
smallerFont.setPointSize( 1
painter.setBrush(oldbrush); 2
addTabButton->setAutoRaise(true); 1
Account::setNetworkName( 4
ensured_nodes_ 1
d->iconName 4
layout->addWidget(cb_); 1
f.reset(); 1
isEmail 4
ExclusiveZone 24
fields_->setForm(xdata); 1
haveEnabled 1
m_phoneBookIsReady 2
d->labels.append(label); 1
temp.setAttribute( 2
Role 1
if(negative) 1
d->tw_isServices->addTopLevelItem(item); 1
title 12
if(aname 2
iconNames 1
game->show(); 2
d->le_customRoster->setText(it->data(0, 1
hb4->addWidget(d->pb_auth); 1
pm.convertFromImage(i); 1
WebActionMapper 2
VCardFactory::instance()->getVCard(jid_.bare(), 1
QTimer::singleShot(250, 3
if(global_random()->provider()->name() 1
setX509CertificateChain(kb.certificateChain()); 2
41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1, 1
LLPanel( 1
d->simPinRequired 3
m_themes_selector->clear(); 2
if(items.count() 1
engines.push_back(new 4
bounds 1
namely 1
QWidget::timerEvent(event); 1
getout: 1
if(item 7
3 1
actionTrigger.stop(); 2
if(bits() 1
bool			x; 1
connect(pb_search, 1
pb_complete->setDefault(true); 1
QGraphicsView::resizeEvent(event); 2
d->cvi->setProfileName(name); 1
fillColor_ 2
if(last.isSpace() 1
CheckPeerCertificate, 1
zoom(m_scale_level 2
_TS_LAST_CATCH( 4
originElement 1
iconset_.addToFactory(); 1
TestDecorator::TestDecorator( 1
d->lw_nickColors->takeItem(id); 1
vb->addStretch(1); 3
mPositionAgent 6
d->value 1
NeoModemService::~NeoModemService() 1
session_->removeNode(wbitem->node()); 2
qWarning() 22
LEGOPTP.ppOffline 1
reg.copy(b.data(), 1
menu->addMenu(bookmarkMenu); 1
action->setData(QVariant(WbWidget::Translate)); 1
d->cb_incomingAs->setItemData(3, 1
QStyleOptionMenuItem 3
need.user 2
m_bookmarksManager->addBookmark(parent, 2
d->iconUpdated(); 1
v_ver 3
pItem->GetMusicInfoTag()->SetAlbum(strFake); 1
Override 1
m.setTo(d->pa->serverInfoManager()->multicastService()); 1
d->tasks 1
).arg(title); 1
msgBox.addButton(QMessageBox::Cancel); 1
m_locationFormat 1
QLayoutItem 1
d->lb_count->show(); 1
PrivacyListBlockedModel::PrivacyListBlockedModel(QObject 1
d->opt_alwaystrust 1
protocol->setGameType(sock, 1
toggleJoinByNameAct_ 1
d->in.type 5
d->m.unlock(); 2
qa_vcard->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
loadToolbarsState(); 1
item->fileNameLabel->setText(QFileInfo(item->m_output.fileName()).fileName()); 1
set_syserr(ELIBACC, 1
ui.displayBothButton->setChecked( 1
c0.rtrim 1
LLToolPie::getInstance()->pickAndShowMenu(FALSE); 1
font.fromString( 2
d->le_oeSend->setText(PsiOptions::instance()->getOption().toString()); 1
assert(g_keyboardHook); 1
q.flip_sign(); 2
out.append(c); 3
d->vb_main->addWidget(splitter); 1
m_overview->load(texture.copy(0, 1
LookFeelToolbarsUI 16
if(active->sender->nil_p()) 1
contact->setStatusMessage(statusMessage); 1
d->cv->qa_recv->addTo(&pm); 1
showNormal(); 2
0); 1
query.setAttribute()); 1
yesterday.setDate(yesterday.date().addDays(-1)); 3
z[7] 6
Asserter::makeNotEqualMessage( 1
QApplication::clipboard()->setText(me->message().body(), 2
d->pa 16
d->pd 1
progressBar->hide(); 1
detected.session 1
QCOMPARE(messageHeadline->frameNumber(), 1
Q_ASSERT(rows 3
StatusPreset::StatusPreset() 1
ProtectorChain::push( 1
p.voice 2
queuedOutgoingEdits_.clear(); 1
hotplug_sock 1
trigger->activate(); 2
writeErrorTrigger.setSingleShot(true); 1
Asserter::failNotEqualIf( 2
while(!active 1
d->le_oeHeadline->setText(); 1
if(addr 1
setKeyID(false); 2
Path::Path(Maze 1
PSendSysMessage(LANG_GET_UINT_FIELD, 1
controller->currentTune_ 1
top3->setAutoFillBackground(true); 2
apr_pool_cleanup_register(pconf, 1
Q_UNUSED(status); 1
m_status_time_message->setText(tr())); 1
if(!queueing_) 1
DirItem 1
TwitterAPIPrivate::~TwitterAPIPrivate() 1
GpgOp::Error 4
m_currentZoom 3
if(!have_openpgp) 1
obj->setParent(0); 3
l.append(CapsSpec(node(),version(), 1
++at; 2
pieces.clear(); 1
Algorithm::~Algorithm() 1
gFrameStats.mUseTimer 3
actionsService_->registerAccount(acname, 1
CGSize 1
signers.clear(); 2
set_method_data( 1
Store 2
:RichListViewItem(parent) 4
qt_dnd_enable(that, 1
::close(fd); 1
TimerFixer(QObject 1
QList<MUCItem> 7
d++; 2
AddUserDlg::~AddUserDlg() 1
y_pixel_vec 2
tnd.hIcon		= 2
history->goToItem(history->backItems(-1 1
connect(t,SIGNAL(finished()),SLOT(getBookmarks_finished())); 1
filterString_ 2
buttons.dock 1
vbox->addWidget( 1
ASSERT_EQUAL(to_ruby(3), 1
d->statusMenu->insertSeparator(); 4
it.current()->restoreOptions(); 1
tabCount 1
m_isDialog 2
scanner 1
QStyleOptionFrameV2 3
if(x->nil_p()) 1
ri.setName(o->getOption(rbase 1
rm->insertItem(tr(),14); 1
session_->document().save(stream, 1
scanned 2
chb_kbd->setText(tr()); 1
if(!next) 1
m_pos(0, 1
valid 7
keyItem->setData(0, 1
historyReset(); 1
buttons->at(i)->setEnabled( 1
,h1(0),h2(0),h3(0) 1
button->setMenu(menu); 1
m_expiredTimer.setSingleShot(true); 1
m_open_action 1
QDialog::resizeEvent(e); 1
CapsSpecs 7
connect(m_historyBackMenu, 2
URLObject 2
pb_transGet->setEnabled(!str.isEmpty()); 1
leftover_stderr.clear(); 2
addingToolButton(btn); 1
m_done(false), 1
handle_sit_or_stand(); 1
icon_ 10
d->ft->accept(offset); 1
qa_vcard 1
identities_ 2
tab->setTabBarShownForSingles(tabSingles_); 1
TEST_CASE(strPlusChar2); 1
v_iconName 1
AddBookmarkDialog::AddBookmarkDialog(const 1
ui_.listView->addAction(removeBookmarkAction); 1
m_lineEdits->removeWidget(currentLocationBar); 1
lb_ident_->setSizePolicy(QSizePolicy(QSizePolicy::Minimum, 1
d->issuerList.clear(); 1
stacked_->removeWidget(widget); 1
d->ck_alwaysOnTop->setChecked( 1
layout->addWidget(m_webViewSearch); 1
d->opt_secfile 1
d->le_toolbarName->setText(tb.name); 1
str.length() 1
d->fileName 6
q->requestFriendsTimeline(); 1
active_file_add(d->activeFile); 1
LEGOPTP.gcNickColoring 1
m_tabWidget->addWebAction(m_paste, 1
if(!validResource(resource, 1
BigInt& 7
G(lookuptable)->setup(this, 1
icon= 3
if(e->type() 12
memset(data(), 1
mouse_direction.setVec( 1
ui.updateButton->setToolTip( 1
Server(int 1
reply=QString().arg(fromJid).arg(message); 1
keyring.clear(); 1
vb->addWidget(xdata_); 1
ensureDTextEmit(); 5
sm->setMapping(actJoin, 1
expFloatControl->mExp 1
m.setThread(t.text(), 1
set_syserr(EL3HLT, 1
theCurrentKCHR 1
SourceLine 5
TLSSession::TLSSession(const 1
i.h 1
m_finished 2
TEST_CASE(STLSize); 1
i.a 1
trunc 1
twitterapi->setServiceUrl( 1
QTwitterApp::core()->incrementRequestCount(); 2
makeNewTab(true); 1
CPPUNIT_ASSERT(features.test(QStringList())); 5
disconnect(client_,SIGNAL(xmlIncoming(const 1
(result 3
v_clientOS 1
ConferenceBookmark 3
Q_UNUSED(playSound); 1
foreach(ProviderItem 1
connect(qa_clearAvatar, 1
bg_se->insert(d->tb_seFTComplete); 1
while(!mod->nil_p()) 2
e.appendChild(textTag( 6
d->cb_bounce->setItemData(2, 1
ui_.le_role->setEdited(x); 1
QUndoStack 1
account->autoLogin(); 1
while(!d->list.isEmpty()) 2
servers_.removeAll(server); 1
if(d->infoMap.value(CommonName).isEmpty() 1
add_sym(from_literal); 1
EDBResult 3
m_model->endInsertRows(); 1
S32			LLToolPlacerPanel::sButtonsAdded 1
set(s); 2
QPixmap	xpm(chess_xpm); 1
set_syserr(ELOOP, 1
if(tbl) 2
nicksChanged(); 1
createNode(node); 1
QTwitterAppAdaptor::QTwitterAppAdaptor( 1
TestCase::~TestCase() 1
account()->client()->send(QString(stanza)); 1
tree_.fromXml(base); 2
d->ocspLocations 1
IconsetFactoryPrivate() 1
BookmarkToolButton::BookmarkToolButton(QUrl 1
iconLabel->setSizePolicy(QSizePolicy::Maximum, 1
CGUIListContainer 1
setWindowIcon(d->anim->icon()); 2
m_node 1
doDisco(it->item().jid().full(), 1
LLHUDObject(type), 1
m_registries.insert( 1
set_syserr(EINTR, 1
LLWaterParamManager::instance()->propagateParameters(); 2
TButton 1
a 27
XFreeModifiermap(map); 1
unloadAnim(); 1
QAction 71
QTEST_MAIN(TestIconAction) 1
sTextObjects.insert(ptr); 1
di.setFeatures( 1
frame_data.mNumFullUpdates 1
gGL.vertex3fv(vert.mV); 8
d->cb_proxy 1
LiveRosterItem::setJid(j); 1
l->setBuddy(d->le_http_id); 1
ui_.le_homepage->setReadOnly(x); 2
d->iss_customRoster->setItemSelected(item, 1
Container(int 1
resize( 3
disconnect(statusIconProvider_, 1
GameProtocol::sendText(Q3Socket 1
if(!actionTrigger.isActive()) 4
tabs.append( 31
d->hideTimer->stop(); 2
if(d->proc->state() 12
minimize(); 3
QTextEdit::contextMenuEvent(e); 1
cb_security_level->addItem(tr(),QCA::SL_Integrity); 1
qca_secure_free(p); 1
hb2->addWidget(d->lb_time); 1
connect(d->act_configure, 1
query.setAttribute(); 3
ui_.le_nickname->setEnabled(x); 2
glPopAttrib(); 1
if(!under) 1
ip_ptr 1
chb_rotate 1
GeneralGroupchatUI() 1
fullscreen_action->setCheckable(true); 1
event 8
OnWindowLoaded(); 1
moveCursor(QPoint(0, 2
d->cv->qa_vcard->addTo( 1
d->parentWidget_->installEventFilter(d); 1
d->pa->dj_sendMessage(m); 2
secprops.maxbufsize 1
QGLWidget::keyReleaseEvent(event); 1
action->trigger(); 1
math.remove_const(); 2
mItemID.setNull(); 1
v_tune 2
types[i] 13
edit.setWidgetSpacing(-1); 1
QAbstractItemModel 3
TEST_CASE(unknownFunction1); 1
QTOPIA_TASK(NeoBattery, 2
setWindowOpacity(style()->styleHint(QStyle::SH_ToolTipLabel_Opacity, 1
setImage(QImage(getFileName())); 1
d->cb_incomingAs->setCurrentItem(d->cb_incomingAs->findData( 1
tcsetattr(fd, 2
appRunScr->pixmap 4
w->takeTransfer(h, 1
LLStat 1
HBITMAP 2
if(item->IsBag()) 1
setAlert( 1
KeyStoreManager::start(); 2
~saslContext() 1
qRegisterMetaType<QCA::KeyStoreEntry>(); 1
Auto, 1
stk 1
actionsService_->rerequestAuthFrom(contact); 1
str 122
QCA::keyStoreManager()->start(); 1
push(value); 1
sxe.appendChild(queuedOutgoingEdits_.takeFirst()); 1
u.statusType 2
c->setZValue(2.0); 1
TEST_CASE(mismatch4); 1
historyMenu->setInitialActions(historyActions); 1
QWhatsThis::add(d->pb_cDND, 1
lib 4
history.addHistoryItem(items[i]); 1
Algorithm::operator=(from); 12
downloadsView->verticalHeader()->hide(); 1
.arg(QLatin1String(GITVERSION)); 1
tabWidget()->webViewSearch(m_tabWidget->currentIndex())->findNext(); 1
d->index[oldsize] 2
setWindowTitle(tr()); 18
m_hint_angle(0) 1
if(!newPipe) 1
querier_ 1
setCurrentIndex(accounts().indexOf(account_)); 1
SPDIF_CHANNELS 1
if(!from.isEmpty()) 1
alpha 1
Called 1
LocationBar 2
clear 2
Botan::BigInt::encode((Botan::byte 2
d->unreg(); 1
m_image_ts 1
e.appendChild(doc.createTextNode(area_)); 2
forceSetPsiIcon(i, 1
item.setJid(item_old.jid()); 1
if(!d->s5bServer) 1
profile.mkdir(); 3
tbDef.extraOffset 1
LLGLState 2
d->ck_dockDCstyle->setChecked( 1
l->setFont(font); 1
if(connect_hostNameReceived) 1
p->drawLine(x, 4
connect(g, 1
ev.xclient.data.l[3] 1
endInsertRows 1
d->mle->setMinimumHeight(50); 1
actionAssignKey(u->jid()); 1
state->om->store_object(this, 1
ui.trayIconVisibleWhenMinimized->setChecked( 1
Random 4
d->pb_http_confirm 1
makeCurrent 1
if(d->act) 1
if(d->proxy.host().isEmpty()) 1
for(File 1
viewMenu->addSeparator(); 2
unzCloseCurrentFile(d->uf); 1
toolbar->setFloatable(false); 1
m_overview->hide(); 1
location->setView(view); 1
QList<QKeySequence> 7
splitter->addWidget(view); 1
CPPUNIT_ASSERT_EQUAL(0, 5
connect(manager_,SIGNAL(listReceived(const 1
showScreen(QX::ScreenPaused); 2
if(w->session() 1
pGroup->AddControl(panel->m_spinControl); 1
border_scale 2
e.appendChild(textTag(&doc,,nick_)); 1
set_syserr(ENOENT, 1
TEST_CASE(pushback7); 1
saslProvider 1
ids.append( 1
if(kind_of<Module>(recv)) 1
disconnect(m_history, 1
tree.setOption(,sl); 1
S64 1
protected: 33
connect(&timer_, 2
set(key, 1
as<Integer>(i); 1
m_properties.push_back( 1
dialog->show(); 2
m_cookieJar->setAllowForSessionCookies(m_exceptionsModel->m_sessionCookies); 1
a.resize(oldsize 1
includes.InsertEndChild(include); 1
setFrame(frame); 1
CPPUNIT_TEST(testDisableCaps); 1
header 8
colorVariant 1
selectBrowserEdit->setEnabled( 1
IconsetDisplayPlugin( 1
d->iss_system->insert( 1
for(uint 6
QResizeEvent 1
!pipe_set_inheritable(p[1], 1
Hash::csm_add(state, 1
formMatrix_obj.setRotation(quat); 1
OptionsTabTree::~OptionsTabTree() 1
:QObject(keyStoreManager) 1
mVertAlignment(ALIGN_VERT_CENTER), 1
SET(md, 4
TESTCASE(construct) 1
setupMenus(); 1
lastCommandBytes 3
GO(task).set(state->new_class(, 1
Q3PtrListIterator<EDBHandle> 2
bOk->setText(); 1
while 197
shift 1
animated 3
XmlElement::~XmlElement() 1
painter.fillRect(success.rect(), 1
if(!host.isEmpty()) 1
failure->isError() 1
d->text->setText 1
id.category 3
layout->setColumnMinimumWidth(1, 1
d->act_find 1
if(d->busy->isActive()) 5
f.flush(); 1
meta->setup(state); 1
TestCase::getName() 1
d->flist.setAutoDelete(true); 1
statusGroup->setUsesDropDown 1
d->act_scrollup 1
field.setLabel(f.fieldName()); 1
HttpAuthListener::HttpAuthListener(XMPP::Task 1
d->filename 2
GetResInfo(theKCHRRsrc, 1
buildRoster(name); 1
phone_client_->SignalCallDestroy.connect(slots_, 1
JT_DiscoInfo 6
CPPUNIT_TEST(testVersionStringToInt); 1
rosterServices_.remove(acname); 1
CAction 1
G(task)->instance_type 1
QueryPerformanceCounter(&end); 2
d->pa->dialogRegister(this, 6
control->OnMessage(msgLostFocus); 2
setPrivacyTabEnabled(false); 3
detected.jid 2
setDragEnabled(false); 1
if(substring 3
ck_autoItems->setChecked(PsiOptions::instance()->getOption().toBool()); 1
aFile(jid()); 1
pageAction(QWebPage::CopyImageToClipboard)->trigger(); 1
foreach(QObject 1
x++; 1
SystemParametersInfo(SPI_GETFOREGROUNDLOCKTIMEOUT, 1
QList<QVariant> 1
_testFailedAsserts 3
setObjectName( 3
file.remove(); 1
manager_->changeDefaultList((i 1
m_image_ts(0), 1
d->updatePopup(); 1
context->state[3] 1
getAvatar(j); 1
bookmarksMenu->setInitialActions(bookmarksActions); 1
confirm.arg(option), 1
if((showText 1
m_pos 4
QBitmap 2
md5_init(&md5); 1
id_ 5
m_keepCookies 2
posTbDlg->exec(); 1
meta->deleteLater(); 1
m_newTabAction 1
std::ostream& 3
idx 11
d->progress->hide(); 3
ids 1
if(i.owner 1
block 1
ts.date().year(), 1
SYSTEMTIME 3
RealSuiteDescription::RealSuiteDescription() 1
Q3ListView::keyPressEvent(e); 5
call->setState( 2
i->error 1
showAvatars_ 1
if(needUpdate) 1
if(i.trackerId 3
o->setOption(ibase 1
connect(pb_clear, 1
lasttimerinterval 3
XUngrabKey(QX11Info::display(), 1
p->setBrush(QBrush(QColor(193, 1
actRefresh->setEnabled( 1
m_browsingHistory 2
m.setTimeStamp(QDateTime::fromString(sTime, 1
bTerminate->setText(terminating 1
c0.toupper(); 1
info 4
utc 1
~Client() 1
Twitter 2
showHttpId 1
d->optionsMenu->insertSeparator(); 1
PrivacyDlg::PrivacyDlg(const 1
if(((qType 1
bundleURL 2
allowEdits_ 2
i->contactProfile()->scRemove(i); 1
blankImg.fill(0x00000000); 1
nam 1
v_at 5
fixerParent 1
m_viewStatusbar->setText(!visible 1
if(SecTrustCopyAnchorCertificates(&anchors) 1
setContextMenuPolicy(Qt::CustomContextMenu); 2
LLUIImagePtr 1
webView(index); 1
connect(pb_execute, 1
d->list.remove(i); 3
memmove(out.data() 1
btn->setPopupMode(QToolButton::InstantPopup); 1
Output 1
#if( 2
d->lb_time->setFrameStyle( 2
connect(vcard_static_avatars_[jid.bare()],SIGNAL(avatarChanged(const 1
menu_widths_ 1
RosterExchangeEvent::RosterExchangeEvent(const 1
XMPP::Stanza 1
AdvancedWidgetShared(); 1
botan_throw_abort(); 6
SET(cm, 20
toIcon->setImpix 2
MetaOptionsTab::MetaOptionsTab(QObject 2
std::string(), 1
m_headlineColor 1
Q_ASSERT(qVariantCanConvert<QFont>(fontVariant)); 1
talk_base::scoped_ptr<cricket::HttpPortAllocator> 1
interface->friendsInProgress 3
Private(Provider::Context 1
removeTest( 2
setData(2, 1
if(mode 35
::bringToFront(d->findDlg); 1
xprocess->setProcessChannelMode(QProcess::ForwardedChannels); 2
TestDecorator::run(result); 1
mApplyBtn 1
muc.appendChild(MUCItem(MUCItem::UnknownRole, 1
if(d->asTool) 1
button 3
le_pwcur->setText(); 1
SuiteDescription::~SuiteDescription() 1
CompilerOutputter::printFailureType( 1
Q3PtrList<File> 1
CertificateInfoType 3
~RingWatch() 1
connect(this,SIGNAL(listError()),SLOT(getDefault_listError())); 1
closeConfirmation.setWindowTitle(tr()); 1
act_send_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
changes.insert(SxeRecordEdit::PrimaryWeight, 1
Creates 3
c->setSessionId( 1
connect(toggleJoinByNameAct_, 1
OptionsDlg 3
d->le_subj->setText(m.subject()); 1
add_sym(inherited); 1
data.pa->psi()->recentBrowseAdd( 1
groupID 1
CookieJar::CookieJar(QObject 1
setHtml(); 5
logDebug(QString().arg( 1
tabWidget_->removePage(tab); 1
cricket::SocketServer 1
err.appendChild(generalElement); 2
G(external_ivars)->store(state, 1
LLFloater 1
rename(group, 1
rec.address 3
d->posChanging(&wpos->x, 1
if(node_.isAttr()) 1
changes_[ProcessingInstructionTarget] 1
setMatrix(t); 1
node_.toProcessingInstruction().setData(data->data); 1
CSSM_DATA 1
IconsetEmoUI() 1
active_control 4
rid_ 2
pop->popup( 2
Q_EXPORT_PLUGIN(EchoPlugin); 1
deinit(); 2
TEST_CASE(strPlusChar1); 1
cb_profile->setCurrentItem(x); 1
Mutex_State_Error(const 1
tree->setUniformRowHeights(true); 2
actionsService_->moveToNone(contact); 1
GetVersionEx(&osvi); 1
PhysicalLocation::PhysicalLocation() 2
QObject::disconnect(t, 1
list.setAttribute(,name()); 1
control 12
wharf 1
seen_objects++; 1
trayicon_->setContextMenu(popup); 2
(_reason 1
m_smsIsReady 2
memcpy(a.data() 1
xdata.setInstructions(form.instructions()); 1
.arg(file.readAll().toBase64().constData())); 1
uchar 7
if(!reference_p()) 3
TestFixture 1
act_info_ 1
layout->addWidget(notification1,3,0); 1
b->setIcon( 1
authm->insertItem(/ 1
controller_->dialogUnregister(this); 2
m_session->GetPlayer()->HandleEmoteCommand(anim_id); 1
pending_requests_.clear(); 1
QList<KeyStoreEntry::Type> 6
d->srv.stop(); 1
setStatus(Rejecting); 1
XmlOutputter::setStyleSheet( 1
pid); 1
SearchLineEdit::SearchLineEdit(QWidget 1
layout->draw(&painter, 1
r->j 6
itStart 2
negotiation->peer 3
printStatistics(); 2
Cancel->setGeometry(Ok->x() 1
d->pb_close->show(); 1
hb->addWidget(l); 3
Regexp 2
Q_ASSERT(model->hasIndex(-2, 2
total_time 1
pipeStatus.reset(); 2
insert.push(c); 1
WebPage 1
proxy_chooser_->fixTabbing(ui_.ck_legacy_ssl_probe, 1
md5_append(&md5, 1
if(hash 1
handle_buy(NULL); 1
type_info[ti->type] 1
ConsoleReferencePrivate(ConsoleReference 1
if(peerValidity 1
m_recentlyClosedTabsAction->setEnabled(true); 1
if(!d->sending) 2
NativeFunction 4
long_children 1
if(HierarchyResolver::resolve(state, 1
GPGProc::Error 2
QPipe::~QPipe() 1
if(name.length() 3
KeyStoreManagerPrivate(KeyStoreManager 1
if(list.contains(KeyStoreEntry::TypeCertificate) 1
my_stat 8
negotiation->session->setImporting(false); 1
dlg->lb_pageTitle->setScaledContents(32, 1
TEST_CASE(realloc4); 1
statusButton->setSizePolicy 1
updateSelf(rosterServices_[acname]->getSelf(), 1
tilePainter.fillRect(50, 1
AdvancedConnector::Proxy 1
d->pre_stdin_close 2
top5->setAutoFillBackground(true); 2
set_syserr(EBADMSG, 1
xmlToStringList(tb_prefs, 1
grid->addWidget(bTerminate,4,0,1,2); 1
CRL::CRL(const 1
OnInitWindow(); 1
showIcons_ 1
addToolBar(toolbar); 1
home.replace('\\', 1
if(dir.exists(fname)) 1
geom.moveRight(r.right() 1
LEGOPTP.alwaysOnTop 1
pix.setMask(mask); 1
ary 1
showAllAction->setShortcut(QKeySequence(Qt::CTRL 1
flashing_ 1
Exception 10
QWidget::show(); 1
_l->leaveTest( 1
d->lb_time 2
o->removeOption(, 1
QTextCharFormat 4
setWindowFlags(Qt::Sheet); 3
c->setMTU(packet_mtu); 1
affiliations_model_->setAffiliationListEnabled(a); 1
ServerListQuerier::ServerListQuerier(QObject 1
loader=new 1
detachTab(getTab(tab)); 1
if(control_channel->nil_p()) 1
Connect 1
if((name 1
mAudioPanel(NULL), 1
apr_pool_cleanup_register(r->pool, 1
mpid 1
resetAffiliationList(MUCItem::Owner); 1
session_->SetLocalFolder(dir.path().toStdString()); 1
PsiContactList 2
VCard::AddressList 2
need 2
if(unescape_string(parts[0]) 1
set_syserr(EBADSLT, 1
connect(d->optionsMenu, 1
m.setSubject(d->le_subj->text()); 1
TestDecorator::getName() 1
button->setMinimumSize(10, 1
setChecked(false); 2
if(pipe.isValid() 1
FancyLabel::Shadow 1
localKey 1
setPalette(QToolTip::palette()); 1
if(d->GetLastInputInfo) 1
m_searchButton->m_menu 2
CapsSpecTest(); 1
tab, 1
QCompleter 1
act_info_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
activate_thread(next); 1
le_font[2] 1
viewMenu->addAction(viewTabBarAction); 1
SET(mod, 4
LLFloaterWindLight::show(); 1
if(!j.isValid()) 1
updateLayout(); 4
ui.languageCombo->addItem( 1
account.setServiceUrl( 3
sysRemove(); 2
c1.formata 1
formMatrix_obj.setParent(&parent); 1
server_task_->sendReply(AHCommand::canceledReply(command), 1
blockReadNotify 4
ctx->args 1
if(Charset::is_space( 1
statusGroup 1
g_pluginman->appendDiagnosticText(str 1
TEST_CASE(STLSizeNoErr); 1
pubsub.appendChild(conf); 1
SecureMessageSystem::~SecureMessageSystem() 2
if(!i->done) 1
LLVector2(intersect_center_x 1
d->le_user 1
Mood::Mood(Mood::Type 1
reg[j] 3
if(i->result) 1
d->pa->setNick(d->vcard.nickName()); 2
instance()->m_core->restoreSession(); 1
addTab(emptyWidget, 1
addSeparator(); 4
Group::Group(const 1
d->le_newNickColor->setText(); 2
mp_div_2d(a, 1
QMetaObject::invokeMethod(d->pipeWriter, 1
state 29
Q_UNUSED(exitStatus); 2
QObjectList 6
d->console->d->ref 3
mp_mul(MP(this), 1
iSRI.next(); 1
nextAnim 1
setTabOrder(d->le_from, 1
messageBox->deleteLater(); 4
connect(fixedFontButton, 1
m_webViewSearch->setWebView(m_webView); 1
IconsetDisplay::~IconsetDisplay() 1
m_bookmarksToolbarFrame->setVisible(showBookmarksBar); 1
if(obj->d->handles.isEmpty()) 1
Result 7
WRITE(void 2
initializeDocument(doc); 1
foreach(URLBookmark 1
switch(mp_cmp(MP(this), 1
updateCountVisibility(); 2
d->jsp->publishStart(this, 1
testsNode->addElement( 2
TicTacButton 2
newList.removeLast(); 1
tab->blockSignals(true); 1
d->lb_status 1
createMessageChat(); 1
stopButton->click(); 1
SymmetricKey 4
global->ksm_scan(); 1
ui.nextButton->setText(QChar(9654)); 1
CString 3
IconsetLoadEvent(IconsetLoadThread 1
tabs_.clear(); 1
setAlternatingRowColors(true); 1
d->act_scrolldown->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
resource->setClientInfo(clientOS, 1
bResume->setVisible(scr 1
LEGOPTP.popupMsgs 1
meta->apply(doc_, 6
u.addQueryItem(,host 1
s.port 1
WbItemMenu::~WbItemMenu() 1
for(QObjectList::Iterator 1
QWhatsThis::add(d->ck_autoVCardOnLogin, 1
toolbarsVisible 1
e.xclient.data.l[4] 1
Q_UNUSED(orientation); 3
static_cast<MACContext 3
jsdtrace_function_return(JSContext 1
if(last_op 3
d->lb_player->hide(); 2
removeNegotiation(negotiation); 5
workingCopy[i] 1
painter.setRenderHint(QPainter::Antialiasing, 4
p->configChanged(config); 1
removeWbItem(item); 1
if(!i 2
row++; 1
d->act_close 1
ProfileOpenDlg::ProfileOpenDlg(const 1
items.setAttribute(, 1
menu->addAction(m_page->mainWindow()->showMenuBarAction()); 1
LLVector3		scale 1
v_poll 2
TestSuite::~TestSuite() 2
sources 1
Botan::BigInt 1
GlobalShortcutManager::KeyTrigger::KeyTrigger(const 3
SecureMessageKeyList 12
painter.setBrush(QColor(0, 1
if(other_vals.contains(vals[k])) 1
connect(pb_add, 4
cb_group->insertStringList(temp); 1
d->realm 1
logger 2
QVERIFY(widget.currentLineEdit()); 1
painter.drawLine(0, 4
if(eof 1
chb_antisuspend 1
GCUserView::GCUserView(QWidget 1
pm_settings_->addAction(act_info_); 1
gAudiop->triggerSound(item->getAssetUUID(), 1
it.setType(JidType); 1
NotInList 2
if(e.id() 1
mp_sub(&a, 1
setShowIcons(showIcons()); 1
whoStarts->insertItem( 2
XInternAtoms( 1
c.change(static_cast<const 1
xml.writeStartElement(); 2
paper 3
vhost 2
d->data.removeAt(i); 1
offset 2
connect(ui_.te_desc, 2
if(!pubtmp.open()) 1
InstructionSequence::get_instruction_name(op) 1
piece->moveBy(-delta); 1
conn->setOptSSL(legacy_ssl); 1
results.append(p); 1
Figure::hasKingsMeeting(GameBoard::GameType 1
messageLabel->setTextFormat(Qt::RichText); 1
m_searchSymbol 3
vsm_ 3
checkOther.checkZeroDivision(); 1
pb_removeBlock->hide(); 1
QCOMPARE(action->isCheckable(), 1
ASSERT_EQUAL(to_ruby(1), 1
DynamicLibraryManager::Symbol 6
loadConfig( 1
global->config_mutex.lock(); 3
pc 2
YSize 1
).arg(confirm.id()); 1
tb[0].locked 1
v_rt->draw(p, 1
qa_assignAvatar->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
if(!wait(100)) 2
ui_.lb_notBefore->setText(cert.notValidBefore().toString()); 1
ray_target_id, 1
hb2->addWidget(d->lb_status); 2
ui.languageCombo->setCurrentIndex( 1
(void)retval; 1
animateNick(); 1
checkOther.warningRedundantCode(); 1
negotiations_.insert(sessionId, 1
statusBuf.append(buf); 2
d->getAction()->addTo( 1
GoogleFileTransferListener(GoogleFileTransfer 1
signer 1
cleanup_temp_keyring(pubname); 7
p.drawPixmap((size 1
piece 6
if(otherCrl.isNull()) 1
ur.setClient(client_name,client_version,); 1
JDnsSharedRequest 5
QCOMPARE(edit.widgetSpacing(), 2
if(tuple->at(i) 1
d->infoRequested 2
XmlOutputter::~XmlOutputter() 1
i->updateRate(); 2
cls->klass 1
parent->ApplyTransform(); 1
startedAll 2
QList<QJDns::Record> 3
domElement.appendChild(xElement); 1
bg_font->insert(d->pb_fChat); 1
BigInt::BigInt(Sign 1
zoomIn(); 2
setWindowIcon(PsiIconset::instance()->status(status).impix()); 1
TextOutputter::printFailureWarning() 1
dump_pid(pid, 1
calcLOD(); 1
global->manager->unloadAll(); 1
di.changeTimer 1
if(id->nil_p()) 1
TestPath::removeTest( 1
m_rect.setRect(-m_rect.bottom() 1
real.setPixel(n 2
KCrash::setCrashHandler(KCrash::defaultCrashHandler); 1
myking 3
d->ck_messageevents->setChecked( 1
XMPP::Jid 19
update( 1
negotiations_.remove(negotiation->sessionId, 1
connect( 130
_l->failedAssertDiffers( 1
mypal.setColor(QColorGroup::Base, 1
buttons->at(i)->setType( 1
m_widget->width(), 1
map[56] 2
ContactViewItem::ContactViewItem(UserListItem 1
pb_execute->setEnabled(cb_commands->count()>0); 1
SyncThread 1
m_vecControls.erase(m_vecControls.begin(), 1
delete_aspell_speller(speller_); 1
tryAgainButton->setEnabled(true); 2
pipeCommand.reset(); 2
readTimer->setSingleShot(true); 1
PopupActionButton 4
ui_.le_street->setReadOnly(x); 2
if(!word.at(n).isSpace()) 1
m_cookieJar->setAllowedCookies(m_allowedCookies); 1
d->gb_docklet->hide(); 1
QStringList	lst; 1
QFileSystemWatcher 5
kc->_props.keyId 1
sInstance->setVisibleAndFrontmost(); 1
if(new_size 2
le_host->setText(acc.host); 1
tips 1
lastWritten 3
item->setVisible(false); 1
BrowserApplication::historyManager()->loadSettings(); 1
mp_clear(&a); 2
usleep(VIBRATION_TIME 1
l->setActive( 2
busy->stop(); 10
if((i->type() 1
d->lastSize 1
parentTest 1
SecureMessageSignature 5
qVariantSetValue<CRL>(arg, 2
:BasicContext(p, 1
QByteArray 277
e.appendChild(doc.createTextNode(description_)); 1
browser->start( 1
if(late) 1
d->c->setMTU(size); 1
check(char 5
doSearchGet(); 1
if(!c) 7
d->vb_main->addWidget(d->searchWidget); 1
disconnect(d->le_newNickColor, 1
connect(d->pb_deleteToolbar, 3
set<ClientPtr> 2
result_mechlist.clear(); 1
m.addEvent(ComposingEvent); 2
cableEnabled(0), 2
gcDlg_ 1
_use_system 1
IntHelper() 1
remko->setResource(psi); 1
writer.write(&buffer, 1
d->endChanges(); 3
qa_wb 1
Q3PtrList<Iconset> 2
readBoolEntry(tag, 1
if(d->h->lastRequestType() 1
manager_->removeServer(this); 2
dlg->ws_tabs->raiseWidget( 1
state->om->collect_young(state->globals.roots); 1
ResetAnimations(); 1
PsiTabWidget::PsiTabWidget(QWidget 1
GpgOp::Key 1
GpgOp::KeyItem 1
Exception::~Exception() 1
MoodDlg::MoodDlg(PsiAccount 1
connect(dlg->lv_disco, 2
gAgent.setLookAt(LOOKAT_TARGET_CONVERSATION, 1
TextTestProgressListener::addFailure( 1
d->mode 7
dlg->lv_tabs->header()->hide(); 1
d->con_minSSF 2
vsm_(vsm), 1
ui_.toolbar->setSizePolicy(QSizePolicy::Minimum, 1
connect(d->bg, 1
d->tabWidget3->setEnabled(true); 1
clients_[account]->send(stanza); 1
for(QStringList::ConstIterator 26
HKEY 2
TestResult::endTestRun( 1
TabDlgDelegate::~TabDlgDelegate() 1
quoted.insert(ls, 2
window()->unsetCursor(); 2
SendSysMessage(LANG_BAD_VALUE); 4
tree->header()->resizeSection(0, 2
migrateIntEntry(p_popup, 4
te->setReadOnly(true); 1
((e->modifiers() 1
ui_.le_pcode->setReadOnly(x); 2
if(high_top_bit 1
ui_.le_orgName->setModified(x); 1
env_arr 1
connect(act_copy, 1
, 380
this->rotate 2
modify_buttons_[d->tb_seOnline] 1
m_searchButton->setMinimumSize(QSize(menuWidth, 1
d->pipe.enable(); 1
CPPUNIT_ASSERT_EQUAL(PrivacyListItem::FallthroughType, 1
system(); 7
FILE_SHARE_READ 2
d->act_scrolldown 1
hasEnemyFigure(gt, 4
MUCJoinDlg 1
disableButtons(); 4
acc.host 2
if(!parent->isVisible()) 2
ChatView::~ChatView() 1
d->act->write(in); 1
if(_props.inKeyring) 2
m_navigationSplitter->setSizePolicy(QSizePolicy::Expanding, 1
actQuit->setWhatsThis 1
SET(o_reg, 4
d->conditionMet(); 1
m_tabWidget->addWebAction(m_historyForward, 1
PsiTabWidget::~PsiTabWidget() 1
SASL::Error 1
Item::~Item() 1
layout->addWidget(new 19
m_feed 1
addContact(newContact, 1
extract 1
d->make_act(PublicKeyringFile); 1
Mutex_Holder::~Mutex_Holder() 1
pSubControl 1
if(w1 1
content 6
if(w) 3
while(!queuedIncomingEdits_.isEmpty()) 1
connect(d->pb_form_cancel, 1
cb_address->setCurrentText(d->jid.full()); 1
m_bumpmap_size(0), 1
s2m->addResource(r, 1
ui_.cb_active->setCurrentItem(previousActive_); 1
tryAgainButton->show(); 1
m_eventManager->addListener( 2
insert( 1
qFatal( 1
UserResource::~UserResource() 1
UserResourceList::ConstIterator 8
removeItem(transport); 1
cb_lang->setWhatsThis( 1
authDialogOpen( 1
m_bookmarksManager 4
mypal.setColor(QColorGroup::Text, 1
client_->send(stanza); 1
checkWhiteCastle(fx, 1
foreach(VariantTree 1
setTabOrder(le_fname, 2
if(!pi->fname.isEmpty() 1
pxw 1
TLSContext::SessionInfo 1
QWhatsThis::add(d->ck_popupFiles, 1
m_stringListModel->setStringList(newList); 1
o_.saveOptions(); 1
resetImage(); 4
XMPP::Status::Away 6
if(!avail) 1
pubtmp.close(); 1
mPieSlice(-1) 1
connect(this,SIGNAL(defaultListAvailable(const 1
PortAudioDirectSound::PortAudioDirectSound(IAudioCallback 1
PrivateKey 10
gViewerWindow->getWindow()->setCursor(UI_CURSOR_TOOLGRAB); 1
layout->setMargin(12); 1
EventHandlerUPP 1
StaticSuiteDescription::StaticSuiteDescription() 1
d->frame->setFrameShadow( 1
TestSuite 5
fillList(); 1
if(done 3
away_option.value 1
m_navigationBar->close(); 1
FORMAT_MESSAGE_ALLOCATE_BUFFER 1
Q_UNUSED(paramNames); 1
BigInteger 11
data_ 17
CStdStringArray 3
typ 2
if(Q3TextDrag::decode(i, 1
theID 1
LastActivityTask 4
arguments->set(state, 2
painter.setPen(QColor(224,224,224)); 1
matrix.shear(tan(points[0] 1
network_manager_ 2
index.data(NickRole).toString(), 1
tabs.append(tab); 1
out.take(out_id, 1
xprocess->terminate(); 2
if(speller_) 2
AHCServerManager::AHCServerManager(PsiAccount 1
slotSearchEnded(); 1
server.pool.setMax(atoi(args[1])); 1
QCA::Initializer 1
srvResult(false); 1
abort(); 11
d->pluginOptions=NULL; 1
signedMakesItGood 1
port_allocator_.reset(new 1
AlertIcon 1
FlashWindowEx(&fwi); 1
actionsService_->moveGroup(group, 2
m_toggle_overview_action->setEnabled(true); 2
16 1
TabbableWidget 5
parent.setScale(llvecparentscale); 1
menu->setModel(m_bookmarksModel); 1
if(!m.mucInvites().isEmpty()) 1
powerConstraint 8
destroy_hooks, 1
OpenPGP::~OpenPGP() 2
m_enableInspector->setChecked(settings.value(QLatin1String(), 1
if(!g->client_init) 1
lb_comment->setTextInteractionFlags(Qt::TextSelectableByMouse); 1
if(column 2
migrateStringEntry(p_dt, 1
destination.setX( 4
list->selectNthItem(mNumSpawn 1
TestFactoryRegistry::makeTest() 1
if(ui_.le_nickname->isModified()) 1
lineEdits 1
filename 3
g_audioContext.SetActiveDevice(CAudioContext::DEFAULT_DEVICE); 1
painter->setRenderHints( 1
messageBox->exec(); 4
np.user 1
geoloc.appendChild(e); 7
:	m_rotation(rotation), 1
d->tw_availActions->header()->hide(); 1
interface->authorized 2
selectStatus( 5
if(readText) 2
rich.reserve(int(plain.length() 1
Theme::Theme() 1
gm->setItemChecked(8, 1
mp_sub_d(MP(this), 2
connect(ck_custom_auth,SIGNAL(toggled(bool)), 4
flt->val 1
info_dlg->show(); 1
if(!have.contains(i)) 1
proc->setReadChannel(QProcess::StandardError); 2
auth->setPassword(passwordDialog.passwordLineEdit->text()); 1
out=out.replace(QRegExp(); 2
tree.setOption(,QVariant(2)); 1
if(use_engines) 1
if(!(children.at(i).isProcessingInstruction() 1
TestNamer::getTestNameFor( 1
buttonLine->addStretch(1); 1
if(d->ai.size 2
settings.remove(); 4
TreeProxyModel 1
:i(parent), 1
widget.addWebAction((QAction 1
q.formata 3
r++; 1
mouseMoveEvent(), 3
toolbar_->addAction(act_geometry_); 1
TestCaseDecorator::TestCaseDecorator( 1
account()->dialogRegister(this, 3
d->iss_system->setEnabled(false); 1
d->pb_auth->setEnabled(false); 1
newMainWindow(); 2
menu->actions()[i]->setEnabled(scr 1
QWhatsThis::add(d->sb_asAway, 1
).arg(str).arg(QString(err).replace('\n', 1
ensureVisible(e); 2
QCOMPARE(spy0.count(), 2
QCOMPARE(model.rowCount(), 1
IOBuffer 2
result_mechlist 2
DefaultKeyStoreEntry 3
m_bumpmap_ts 1
QTest::addColumn<LineEdit::WidgetPosition>(); 2
if(meta->parent().isEmpty()) 1
preset.setAttribute(, 2
QWhatsThis::add(d->cb_animation, 1
Figure::hasPoint(const 1
o.state 1
QCOMPARE(is->system().version(), 2
DllMain( 1
gGL.color4f(text_color.mV[VX], 1
delegate_->resizeEvent(this, 1
left 4
data[0] 6
drw->setFocusPolicy(Qt::NoFocus); 2
m_corners[1][0] 1
act_fill_ 1
if(insertLast) 1
m_image_height(0), 1
updateChildLayout(widget); 1
setTrayOwnerWindow(_event->xclient.display); 1
QDialog::keyPressEvent(e); 1
reply=QString().arg(fromJid).arg(playingWith_); 1
QPointer<MUCConfigDlg> 1
PsiIconset::PsiIconset() 1
set_syserr(ENOEXEC, 1
CPPUNIT_TEST_SUITE_REGISTRATION(IODeviceOpenerTest); 1
background 3
time_str[19] 1
Private(TokenAsker 1
if(d->jid.compare(jid, 1
s.slen 2
Passenger::setLogLevel(config->logLevel); 1
Hides 1
toolbars_ 1
lje 1
status_ 11
connect(d->restoreDefaults, 1
services_[contact->getAccountName()]->actionOpenChat(contact->getJid()); 1
d->cb_plugins->addItem(plugin); 1
credit); 1
sessions_.removeAll(session); 1
barLayout_ 1
ui_.tb_emoticons->setMenu(account()->psi()->iconSelectPopup()); 1
strPlusChar( 3
m_protectorChain->pop(); 1
manager_->updateState(group, 1
manager_->renameContact(contact, 1
feature.setAttribute(,f); 1
DiscoDlg::Private::~Private() 1
if(e->psiAccount() 1
if(user) 2
dealloc_block(ptr, 1
mLCDPanel->cancel(); 1
m_toggle_borders_action 1
setStatus(InProgress); 1
PsiOptions::instance()->mapLookup().toString(); 2
foreach(UserResource 4
vsoUsbCable(), 1
if(pipeAux.readEnd().isValid()) 2
m_searchSymbol->move(2, 1
info.setAttribute(,i.key().version()); 1
files_field.setOptions(file_options); 1
availablePlugins(); 1
status2 2
m_hint 4
m_clr 1
importRootNode->title 1
connect(d->le_newNickColor,	 1
hdrs_arr 2
StatusPreset(tr(), 10
getssfparams(); 4
ui_.lv_users->updateAll(); 1
LEGOPTP.ppHeadline 1
d->tb_up->setEnabled(enable 1
doc.setContent(prolog); 1
setModal(true); 9
updateTip(); 3
favouritesAction 1
TwitterAPI::~TwitterAPI() 1
err, 1
FancyPopup::~FancyPopup() 2
d->getAction()->setChecked(true); 2
bookmarks.setAttribute(); 1
map[15] 2
PsiRichText::setText(ui_.te_status->document(), 2
ui_.ck_history->setChecked(true); 1
QGraphicsView::moveEvent(event); 1
c->setCertificate(localCert, 1
set_syserr(EMULTIHOP, 1
ViewStateManager::TransportSpec::TransportSpec(Transport 1
add_sym(opened_class); 1
m_widget 1
AHCommandItem 1
d->interface->directMsgParser->setServiceUrl( 1
PsiTipLabel::instance()->hideTip(); 1
d->v_enabled 2
connect(pb_previous,SIGNAL(clicked()),SLOT(previous())); 1
ui_.pb_remove->setEnabled(b); 1
if(j.isNull()) 1
erase(); 1
wbitem->resetPos(); 1
getManagingTabDlg()->selectTab(this); 1
set_syserr(ENOTSOCK, 1
if(opt_pass) 1
mUseBubble(FALSE), 1
i->stopAnimateNick(); 1
vec.setVec(x, 3
setAllCookies(QList<QNetworkCookie>()); 2
config().set(, 1
layoutMargin 1
d->le_from->setText(expandAddresses(d->jid.full(), 1
SParams 4
pb_start->setEnabled(true); 1
window()->installEventFilter( 1
m_historyForwardMenu 1
closeButton_ 1
ui_.ck_autoActivate->hide(); 1
if(qcaVersion() 1
if(doc.childNodes().at(0).isProcessingInstruction() 1
NDns 1
XData::Field::OptionList::Iterator 4
LEGOPTP.usePerTabCloseButton 1
sysUpdateToolTip(); 2
done=true; 1
TipDlg::~TipDlg() 1
reload(last); 1
d->lv->addColumn(); 1
bg_color->insert(d->pb_cAway); 1
QWhatsThis::add(d->te_sp, 1
JDnsSharedPrivate(JDnsShared 1
model()->insertRows(row,1,index); 1
if(list.contains(KeyStoreEntry::TypeKeyBundle) 1
Protocol 1
bg_se->insert(d->tb_seMessage); 1
if(after) 1
ConsolePrompt::~ConsolePrompt() 1
ASSERT_EQUAL(to_ruby(2), 1
m_pause_action->setShortcut(tr()); 1
Typing_TabbingNicks, 1
div 2
QDesktopServices::openUrl(reply->url()); 1
dir 3
TEST_CASE(if11); 1
pxrect 1
layout_->addWidget(splitter_); 1
handle_object_open(); 1
that->setFocusPolicy( 1
Avatar::~Avatar() 1
ap_log_rerror(APLOG_MARK, 1
QJDns::Record 9
ss->hits 1
c->nextStep(stepData); 1
QBuffer 17
:_secure(secure), 3
LASTINPUTINFO 1
ck_ignoreSSLWarnings->setWhatsThis( 1
actionsService_->updateMOTD(account); 1
bQuit->setText(tr()); 1
alt_ 2
EventQueue::EventQueue(PsiAccount 1
setFilter(getFilter() 8
d->pb_send->setText(tr()); 1
v_nextId 1
opt_ascii 1
act_scrolldown_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
m_leftWidget->move(textRect.x(), 1
updateToolbarActionText(showToolbar); 1
d->iss_system->setItemSelected(d->iss_system->lastItem(), 1
if(!d->packet_in.isEmpty()) 1
QCoreApplication::instance()->installTranslator(translator_); 1
When 1
if(!features.contains(WBNS)) 1
Client(Server 1
foreach(DiscoInfo 1
if(!k->nil_p()) 2
setCache(diskCache); 1
ul1 3
last_time_ 1
PGPKeyDlg::PGPKeyDlg(Type 1
connect(showAllBookmarksAction, 1
d->ck_popupOnOffline->setChecked( 1
gGL.begin(LLRender::LINES); 1
z.set_sign(BigInt::Positive); 2
set_syserr(ELIBMAX, 1
iconset->addToFactory(); 1
TEST_CASE(strPlusChar3); 1
actions.addAction( 1
mTabContainer->addTabPanel(mInputPanel, 1
settings.setValue(it.key(), 1
QWebSettings::setWebGraphic(QWebSettings::DefaultFrameIconGraphic, 1
buttonMenu 1
hb4->addStretch(1); 1
agent 4
Q_UNUSED(statusString); 2
iconInfo.fIcon 1
disconnect(tab, 2
ui_.le_bday->setEdited(x); 1
ASpellChecker::ASpellChecker() 1
clear(); 21
loader=loaders_[file]; 1
removeItem(nil); 1
d->ck_rc->setChecked( 1
plist 6
m_keyboardModifiers 1
_props.userIds 1
v_id 4
TEST_CASE(simple5); 1
v_m.setFrom(j); 1
mp_clear(&b); 1
services_[nil->getAccountName()]->actionAdd(nil->getJid()); 1
i->index 1
inspect(state, 1
q 19
switch 122
snarlStruct.cmd 7
new_size 1
connect(d->cb_plugins,SIGNAL(currentIndexChanged(int)),SLOT(pluginSelected(int))); 1
removeEntry( 1
model_->setSlimContacts(slimContacts); 1
pb_new 1
munlock(d, 1
:PsiEvent(acc) 3
m_leftLayout->setSizeConstraint(QLayout::SetFixedSize); 1
connect(cb_type, 1
if(SYMBOL 1
item.setAction(action); 1
fileName 6
mCancelBtn 1
Closing 2
foreach(QAction 3
~KeyStoreManagerPrivate() 1
TrayIconPrivate(TrayIcon 1
if(!emitted_peerCertificateAvailable 1
d->pb_form_cancel 1
TEST_CASE(class1); 1
view_ 2
m_bookmarksToolbarFrame->setAttribute(Qt::WA_MacNoClickThrough, 1
Event 5
d->rb_delChatsClose->setChecked(true); 2
c.define_iterator(&Container::begin, 1
setReadOnly(false); 1
tabBarSingles_ 1
alreadyItems 4
view->header()->setStretchLastSection(true); 1
list.append(parent); 1
SelectGame::SelectGame(QWidget 1
map[12] 2
updateIdentityVisibility(); 6
yes, 1
activeIds 1
d->trayMenu 3
if(tlo) 1
m_image_width 2
gAgent.sendReliableMessage(); 2
G(errno_mapping)->store(state, 1
actionTrigger.start(); 4
QSet<Piece 1
if(d->ft->resumeSupported()) 1
m_zoom(5), 1
Options 2
Q_UNUSED(configName); 2
f.fromString(PsiOptions::instance()->getOption().toString()); 5
LLUI::setLineWidth(1.0); 1
strDirty.erase(i,i2-i+11); 1
QList<QCA::KeyStoreEntry> 1
d->reqid_base 1
c_at 1
TicTacGameBoard::~TicTacGameBoard() 1
global->config[name] 1
d->acc 1
if(copy.is_zero()) 1
autoSaveTimer_->setInterval(1000); 1
CertificateInfoPair 1
mDisplayPanel->refreshEnabledState(); 1
s5b_init(); 2
setText(QKeySequence(key).toString()); 1
if(!slot) 1
setEncoding( 1
p.setOpacity((qreal)elapsed 1
PAGE_EXECUTE_READWRITE); 1
if(!s.isEmpty()) 4
LayerTracker 2
m_mirrorItem->setVisible(isVisible()); 1
pMemDC->SelectObject(pOldBmp); 1
m_leftLayout 1
if(!profileNew(name)) 1
suggestedNicks 4
dialogs_.append(w); 1
SecureMessageSystem::SecureMessageSystem(QObject 2
statusOffline->setWhatsThis 1
connect(d->le_to, 3
if(rest_long 1
IconLabel::~IconLabel() 1
QCoreApplication::setApplicationName(QLatin1String()); 2
protected 5
e->obj->field_count 1
openLinksIn->setCurrentIndex(settings.value(QLatin1String(), 1
switch(mp_cmp_d(&n, 1
resetTransform(); 1
FileTransItem 15
if(whiteboarding) 1
QMessageBox::critical(dlg(), 4
if(i->nextId()) 1
connect(&readyReadTrigger, 2
Private(GCMainDlg 1
split(a,b); 1
setCentralWidget 1
TestResult::addListener( 1
if(!v_showAgents) 1
panel->m_spinControl 1
d->hp_host 1
setUseMissedTimer(false); 1
RosterItemExchangeTask::RosterItemExchangeTask(Task 1
green 4
painter.drawPath(dropPath); 1
channel 1
accountName_ 5
shared_ptr<Thread> 1
dnd_option.label 1
gpg.setKeyrings(pubname, 1
if(!d->onTop) 1
StretchLogoLabel 1
if(hours 2
ClientPtr 2
m_controlsVisible 1
ApplicationInfo::capsVersion(), 1
currentLocationBar->setFocus(); 1
this->statusReportFIFO 1
context->count[1] 1
XMPPRosterItem 4
d->type 13
Mutex_Factory 1
Test 25
GO(exc_stack_explosion).set(sxp); 1
d->proc->setInheritPipeList(plist); 2
MiniClient::~MiniClient() 1
acc.proxyID 2
autoFile 1
le_option->setReadOnly(false); 1
HistoryMenu::HistoryMenu(QWidget 1
if(word_shift) 2
ui_.host->setText(jid.domain()); 1
connect(d->qdns, 1
manager_->sendStanza(st); 1
connect(d->pb_send, 1
Scores::Scores(QWidget 1
std::memcpy(d2->bytes 2
layout->addWidget(notification2,3,1); 1
m_mazes_algorithm->setInsertPolicy(QComboBox::InsertAlphabetically); 1
domElement.appendChild(text); 5
m_lineEdits->addWidget(new 1
TrayIcon::TrayIconPrivate::TrayIconPrivate(TrayIcon 1
d->regExp 1
FileTransView(QWidget 1
while(it.hasNext()) 3
bg_color->insert(d->pb_cListBack); 1
QCOMPARE(spy6.count(), 2
connect(cb_ssl, 1
QMutex 22
widget.previousTab(); 1
removeItem(metacontact); 2
fromString(s); 2
p.setHttpConnect(pi.settings.host, 1
icon.setRegExp 1
parent 18
center.setX(qBound(rect.left(), 1
d->pending 2
painter->setRenderHint(QPainter::TextAntialiasing, 1
KCrash::setApplicationName(progname); 1
joinAccounts->setWhatsThis(tr()); 1
update(a); 1
PsiRichText::install(document()); 1
d->pipeAux.writeEnd().write(a); 2
mle()->setUpdatesEnabled( 2
++p1; 1
passphraseDlg_->promptPassphrase(name); 1
_ok 8
d->cb_toolbars->removeItem(d->cb_toolbars->findData(base)); 1
m_status_timer->setInterval(1000); 1
~DefaultKeyStoreList() 1
disconnect(real, 1
providerItemList.append(item); 1
set_iseq(as<InstructionSequence>(obj)); 1
setColumnWidth(2, 1
bInverse 1
m_proxyModel->setSourceModel(model); 2
mouseDoubleClickEvent( 1
ui_.cb_value->setEditable(false); 1
d->w.wait(&d->m); 4
painter.drawRect(progressRect); 1
modify_buttons_[d->tb_seSystem] 1
d->xdata_form->show(); 1
updateHistory(s, 1
d->le_subj->setReadOnly(true); 1
out.writeRawBytes 1
lb_customPrivacy->hide(); 1
Q_DECLARE_METATYPE(WebView 1
saveSubscriptions(); 2
acc.pgpSecretKey 1
bigint_linmul3(z.get_reg(), 4
applicationPoolServerExe 1
d->ck_gcNickColoring->setChecked( 2
if(!RTEST(forward)) 1
valEle.setAttribute(,comments_[child]); 1
for(QDomNode 23
blurrow<aprec,zprec>(img,row,alpha); 1
MarkSweepGC::~MarkSweepGC() 1
m_tabWidget->addWebAction(m_undo, 1
pa_ 2
std::cerr 3
actOnlineHome->setWhatsThis 2
gname 6
connect(lw, 1
pat 1
d->interface->statusParser->setLogin( 1
error(ErrReject, 1
XmlElement::elementAt( 1
TEST_CASE(throw2); 1
buttons.name 1
pad 2
allBlocked 2
m.addMUCInvite(MUCInvite(jid)); 1
i->contactProfile()->scRename(i); 1
bg_sePlay 1
OptionsTabSound::~OptionsTabSound() 1
Account::Account() 1
setTextAlignment(2, 1
NeoBandSelection::NeoBandSelection( 1
change(getContext(type, 1
manager_->requestList(ui_.cb_lists->currentText()); 2
connect(&readTrigger, 1
connect(d->t, 2
PsiToolBar::structToOptions(o, 2
edt->clear(); 1
d->pb_http_deny->setEnabled(false); 2
if(v_readOnly) 1
file_avatars_[jid.bare()] 1
auth->setUser(passwordDialog.userNameLineEdit->text()); 1
textRect.setX(left); 1
JT_XRegister(Task 1
connect(ui_.mle, 2
listener_->reply(true, 1
ui_.lv_rules->setModel(&model_); 1
QWebSettings::globalSettings()->setAttribute(QWebSettings::DeveloperExtrasEnabled, 1
connect(pb_new, 3
CPPUNIT_ASSERT(item.isBlock()); 2
TEST_CASE(staticvar); 1
if(f.count() 1
QCA_logTextMessage(QString().arg(objectName()), 1
m_showTabBarWhenOneTab 1
pep_avatars_[jid.bare()]->updateHash(); 1
loadPlugin(plugin); 1
rest=node.mid(idx+1); 1
if(language 1
mod 17
ci.node 1
OptionsTabSound::OptionsTabSound(QObject 1
setSuite( 3
Q_UNUSED(iconText); 1
SecureMessage::Type 2
sm->setMapping(actAdd, 1
screen_offset 3
fprintf(fp, 22
cvlist->clearFilter(); 1
if(!sec.isNull()) 3
XMPP::Status::XA 2
m_targets.clear(); 1
removeWbItem(wbItem(node)); 1
tv_colWidth 2
mUsePixelSize(TRUE), 1
QDataStream& 2
a.resize(ret); 2
mp_toradix_nd(MP(this), 2
if(d->n.is_negative()) 2
joinButton_->setEnabled(enabled); 1
setConfiguration(XData()); 1
Solver 1
SecureMessageSignatureList 5
actionQueue.clear(); 2
m_pause_action->setCheckable(true); 1
cb_security_level->addItem(tr(),QCA::SL_Highest); 1
c2eNeuron 1
free(values); 1
transports_.insert(TransportSpec(transport), 1
Ok->setEnabled(res); 1
QMessageBox::Close, 5
le_pwver->setText(); 1
d->async_entryList(); 1
QString		d(); 6
QAbstractProxyModel::setSourceModel(newSourceModel); 3
d->mle->setDialog(this); 1
printf( 2
chat( 13
set_syserr(ENAMETOOLONG, 1
gototwitpicAction->setShortcut( 1
m_done 6
QObjectListIt 2
rectParent.appendChild(xElement); 1
gPieAvatar->show(x, 1
TestFailure::TestFailure( 1
if(!linkify_isOneOf(pre.at(cutoff), 2
UNKNOWNFILENAME; 1
PEPUnsubscribeTask 2
ProviderManager::~ProviderManager() 1
ui_.le_orgUnit->setText( 2
lineEdit->deleteLater(); 1
actPublishTune->setWhatsThis 1
diskCache.setCacheDirectory(location); 1
name->to_str(state)); 1
SLOT(sslErrors(QNetworkReply 1
painter->drawText((rect.height() 1
SASLContext::HostPort 1
MyKeyStoreList(Provider 1
Stanza 3
url.addQueryItem(QLatin1String()); 2
listPlugins(); 1
Q_ASSERT(m_player.y() 4
form.setInstructions(QObject::tr().arg(messageCount)); 1
CloseHandle(pipe); 3
lb_jid->setText(tr()); 1
mWidth(0.f), 1
envSettings->syncMenu(); 1
srv->actionGroupDeleteAll(group->getGroupPath()); 1
IconToolButtonPlugin( 1
h++; 3
actionSendFiles(e->u.jid(),files); 1
d->lib 4
QMap<QAction 3
Ui::PasswordDialog 1
KeyLoaderThread(QObject 1
new_ent 1
CLIENT_THREAD_STACK_SIZE 1
pubsub.appendChild(publish); 1
keyItem 5
SideWidget::SideWidget(QWidget 1
processGetActive(args); 1
children.insert( 1
ChangeBookmarkCommand::ChangeBookmarkCommand(BookmarksManager 1
img.fill(0x00000000); 1
hook(((QChildEvent 1
acc.opt_pass 2
RosterBuilder::RosterBuilder(Roster 1
list.append(( 1
tr()) 1
tr(), 38
for(UserAccountList::Iterator 2
Action 6
ac->setAvailability(QPowerSource::Available); 2
srv->actionGroupRename(group->getGroupPath(), 1
d->ck_alertOpenChats->setChecked( 2
children 6
if(own_decoder) 1
Piece::~Piece() 1
chb_wm 1
ResourceMenu 5
setupNextRead(); 2
ent->put(state, 1
p.setColor(QPalette::Base, 1
closeDialogs(this); 6
closeButtonBackLayout->addWidget( 2
reply=QString().arg(fromJid).arg(message).arg(option.toString()); 1
chatView()->setPaper(brush); 1
d->cb_preset->insertItem(tr()); 1
mMsgPanel(NULL), 1
ksm->d->reg(q, 1
LEGOPTP.useleft 1
ViewStateManager::GroupSpec::GroupSpec(Group 1
DefaultProvider 2
d->startTime 2
ui_.avatar->hide(); 2
setWindowTitle(str); 1
Application::SessionPtr 3
QWhatsThis::add(d->ck_autoAuth, 1
FigureDialog::~FigureDialog() 1
QRegExp(([a-zA-Z0-9] 1
tr(Images 1
d->psi->dialogUnregister(this); 4
Provider::~Provider() 1
d->sortedActions 1
m_lastTestFailed 2
GO(selectors).set(LookupTable::create(state)); 1
TicTacButton::TicTacButton( 1
setup(key); 1
for(oi 1
StatusListPrivate::maxCount 1
rootid 1
QWhatsThis::add(d->ck_spell, 1
if(m.subject() 1
tog_agents 1
std::stringstream 2
buttons.keys 1
QDialog::accept(); 7
vbox->addSpacing(5); 1
if(hash_redistribute_p(this)) 2
controls_layout->setSpacing(6); 1
m_downloadManager->m_downloads.takeAt(i)->deleteLater(); 1
hack_fix(di.dirWatch); 1
Core 1
theActualMessage.addDetail( 1
pb_rename->setEnabled(FALSE); 1
LEGOPTP.gcHighlighting 1
GlobalShortcutManager::~GlobalShortcutManager() 1
ePos 1
connect(account()->psi()->iconSelectPopup(), 1
DrawIconEx(lpdi->hDC, 1
connect(client_,SIGNAL(xmlIncoming(const 1
reload(def); 1
accounts->loadCustomNetworks(); 1
e.appendChild(doc.createTextNode(QString::number(error_.value()))); 1
m_Type=Type; 1
g_graphicsContext.SetWindowTransform(m_transform); 1
ProxyDlg::ProxyDlg(const 1
pb_vcard->setEnabled(false); 1
DiscoConnector(QObject 1
if(Tuple 5
in_clientInit 1
if(!m.urlList().isEmpty()) 1
wElement.appendChild(doc.createTextNode(QString::number(rect.width()))); 1
m_smooth_movement 1
te->setText(u.makeDesc()); 1
COrigin 1
gpg.doPublicKeyringFile(); 1
List 12
:	m_maze(maze), 1
set_syserr(EUSERS, 1
from.clear(); 2
statusXa->setWhatsThis 1
QList<long> 3
KeyLength 4
selectStatusPreset(id); 1
resume_offset 1
v.setNickName( 2
hw->resize((hist->width() 1
d->le_from 1
d->te_edited 10
LONG 3
InterruptableCalls::close(fd); 1
conn->setProxy(p); 1
checkStl.runSimplifiedChecks(&tokenizer, 1
for(segment_iter 1
QPixmap::grabWidget(this).save(fn, 1
Bag 4
pieces[piecenum]->GetEmitDirPos(pos, 1
SpacerAction::~SpacerAction() 1
CombinedTuneController::CombinedTuneController() 1
status.entry.favorited 1
gd.open 4
QApplication::clipboard()->setText( 2
attr.c_cc[VTIME] 1
ObjectArray 1
scene_->removeItem(this); 1
set_int(obj); 1
nil->setAccountName(acname); 1
obj->moveToThread(Anim::mainThread()); 1
CertificateInfoType::CertificateInfoType() 1
queuedMessages_.append(m); 1
t->get(); 3
connect 19
PsiOptionsEditor::PsiOptionsEditor(QWidget 1
children.at(i).toElement().setAttribute( 1
shortDescription 3
if(!x509_supported) 1
pb_addBlock->hide(); 1
Flag 1
QSettings().remove(); 2
aHttpConfirm(d->httpAuthRequest); 1
TextOutputter::write() 1
if(d->sendLeft.isEmpty()) 2
widget.loadUrl(url2); 1
am->insertItem(tr(),15); 1
p.setSocks(pi.settings.host, 1
\internal 14
game_->receiveData(data); 1
connect(d->pm_settings, 1
d->attachView->urlAdd(text, 1
QTimer::singleShot(1000, 2
capsSpecs_[jid.full()] 1
tree->setSelectionBehavior(QAbstractItemView::SelectRows); 2
CFRelease(baseURL); 1
if(LLFloaterWindLight::isOpen()) 1
root->setData(0, 1
if(e->ascii() 1
d->cert_sec 2
nb_getdiscoinfo_called_ 1
index.data(BookmarksModel::UrlRole).toUrl(), 1
entryId 1
LEGOPTP.use_asAway 1
f.setValue( 1
if(!linkify_okEmail(link)) 2
QCA::KeyStore 2
QAction::setVisible( 1
CertificateAuthority 1
CPPUNIT_ASSERT(cs[0] 1
p->frameGeometry().left() 2
pm_settings_ 2
instance_ 28
textp->updateSize(); 2
statusList->action().toBool()); 3
AccountRemoveDlg::AccountRemoveDlg(ProxyManager 1
self->setStatus(resource->getStatus()); 1
hb1->addWidget(pb_info); 1
ui_.cb_type->addItem(tr()); 1
TuneControllerManager 2
qa_clearAvatar->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
lock_mem(ptr, 1
if(NULL 1
d->oldstate 2
GameBoard::sockTest() 1
setCurrentIndex(currentTab); 1
m_cookieJar->setBlockedCookies(m_blockedCookies); 1
showOffline_ 1
d->textVisible 1
++skip; 1
ui_.toolbar->setWindowTitle(tr()); 1
label->installEventFilter(d); 2
CFRelease(context[2]); 1
AHCServerManager 1
m_navigationBar 1
DataLexer 1
if(rl.isEmpty()) 1
setTabOrder(d->le_host, 1
QWebHitTestResult 1
quint32 16
connect(view, 1
redistribute(state, 2
XDataField_JidMulti(XData::Field 1
if(stream.flags() 1
TabbableWidget::activated(); 2
stun_addr_ 1
if(sxeElement.hasAttribute()) 8
ActiveProfiles::~ActiveProfiles() 3
if(!PsiOptions::instance()->getOption().toBool()) 6
m_board->saveGame(); 4
d->busy 16
ui_.gb_server->hide(); 1
session_->insertNodeAfter(selectedwbitem->node(), 2
that->setMouseTracking(mouse_tracking); 1
if(conf.isEmpty()) 5
goConn(); 1
pk 1
item.setJid(user.bare()); 1
acc.ssl 2
insertNodeAfter(domattr, 1
proc.reset(); 1
EDBItem::EDBItem(PsiEvent 1
SymbolTable 2
themes_button_layout->addWidget(add_button); 1
data.append(unit->GetPackGUID()); 1
HistoryView 1
JT_VCard 11
if(node 2
items_.removeAll(wbitem); 1
localStatus 1
ActionList 9
QListWidget 1
if(op 10
LLFloaterBuildOptions::LLFloaterBuildOptions( 1
TRACE(); 4
insertTab(toIndex, 1
lb_example->hide(); 1
if(ok 2
LEGOPTP.raise 1
d->data.removeAt( 1
pos.rx()++; 1
set_syserr(EHOSTDOWN, 1
label->setToolTip(f.desc()); 5
containers.push_back( 1
c1.rtrim 1
setSuccess(); 15
vbox->addWidget(messageLabel); 1
channel.write(toString(server.pool.getSpawnServerPid()).c_str(), 1
i.encoded 2
KeyStoreManager::KeyStoreManager(QObject 1
onig_region_free(region, 2
QList<BookmarkNode 2
metacontact->setAvatar(contact->getAvatar()); 2
TEST_CASE(class10); 1
Q_EXPORT_PLUGIN(URLWatcherPlugin); 1
URLObject::getInstance()->popupAction(url()); 1
set_tuple(as<Tuple>(obj)); 1
XmlDocument::rootElement() 1
m_controls_up 1
NeoHardware::NeoHardware() 1
TLSContext 1
actAbout->setMenuRole(QAction::AboutRole); 1
state[3] 1
ev_signal_start(loop->base, 1
sha1_update(&_context, 1
BakerGC::Heap::~Heap() 1
d->eventNotifier->hide(); 1
BookmarkNode 35
c->_serialized 1
charFormat.setFont(font); 1
copy_mem(reg.begin(), 2
if(d->lastMousePos 1
UserResourceList 4
toolbar->setToolButtonStyle(Qt::ToolButtonTextUnderIcon); 1
GCHeap 1
keys 4
loaders_.remove(file); 1
setWindowIcon(PsiIconset::instance()->transportStatus(, 1
childNode->expanded 2
pixmap.fill(newColor); 2
QCOMPARE(model->rowCount(), 2
key_ 2
StatusModel::StatusState 3
ttable->transtable[ 1
i.setPixmap(IconsetFactory::icon().impix(), 4
flags 17
TEST_CASE(nullpointer1); 1
item.setType(PrivacyListItem::FallthroughType); 1
about->show(); 1
if(!p) 9
BrowserApplication::cookieJar()->loadSettings(); 1
if(!a->contains(s)) 1
set_syserr(ENOPROTOOPT, 1
checkOther.postIncrement(); 1
HttpAuthListener(XMPP::Task 1
setup(); 8
0x6E, 2
d->pb_http_confirm->setMinimumWidth(96); 1
set_syserr(ENOMSG, 1
favouritesAction->setCheckable(true); 1
glMultiTexCoord2f(GL_TEXTURE1, 4
bin 6
d->loadIconset(oldis, 1
le_name->setText(newJid.domain()); 1
QAction::setChecked(b); 1
widget.loadUrl(QUrl()); 3
connect(data.tasks, 2
d->pre_command_close 2
act_jump_.append(action); 1
if(val.isEmpty()) 1
d->le_user->setText(s.user); 1
piece->save(xml); 1
showScreen(QX::ScreenRunning); 4
d->pa->dialogUnregister(this); 9
LEGOPTP.alertOpenChats 1
if(arg 4
connect(&writeTrigger, 1
d->ck_docklet->setWhatsThis( 1
server 4
memcpy(&dw, 1
i->setRenameEnabled(0, 2
settings.addAccount( 2
d->indexed 2
gGL.end(); 2
dataBox->addWidget(textLabel); 1
account->modify(); 1
dirtyPresets.clear(); 1
mature.free_entries 2
trayMenu->addSeparator(); 1
\param 42
setPos(renderer()->boundsOnElement(id()).topLeft()); 1
con_maxSSF 1
connect(d->pb_sysDetails, 1
documentEnd.setAttribute(]); 2
items.appendChild(item); 1
d->eventNotifier->show(); 1
X11KeyTriggerManager::Qt_XK_Keymap 1
featureList 1
errmap[QProcess::WriteError] 2
manager_->addServer(this); 2
(e->key() 1
if(node_.toProcessingInstruction().target() 1
if(!sz) 1
q.fill 1
combined->clear(); 1
le_jid_->setSizePolicy(QSizePolicy(QSizePolicy::Expanding, 1
ui_.te_desc->setText( 2
winampLength 1
ksm.waitForBusyFinished(); 2
d->make_act(VerifyDetached); 1
d->setWindowText(); 1
d->ck_smallChats->setChecked( 2
restoreColor(d->pb_cAway, 1
if(d->cb_type->currentItem() 1
actualError.release() 1
last[at++] 1
add_entropy_source(sources[j]); 1
if(!(--d->ocountdown 1
d->list.append(i); 1
if(!seckeys.isEmpty()) 1
m_status_time_message->setContentsMargins(10, 1
if(d->tray) 2
cb_address->insertStringList(pa->psi()->recentBrowseList()); 1
map[1] 2
metacontact->setStatus(contact->getStatus()); 1
switch(stub->ret_type) 1
account_->dialogUnregister(this); 3
if(str2.length() 2
out_left 2
QAbstractItemView::keyPressEvent(event); 1
if(!linkify_isOneOf(out.at(x1), 2
BusyWidgetPlugin( 1
PsiOptions::instance()->setOption(optionKey,value); 1
if(ns.address.protocol() 1
announceCall(); 1
old_trayicon_ 4
TestResultCollector::startTest 1
m_historyTreeModel 1
vb->addWidget(lb_instructions); 1
indexFirst 1
fprintf(fvibro, 3
XMPP::Status::Type 4
Q3ListViewItem::paintCell(p, 4
if(delegate_) 1
vbox->addWidget(tab); 2
go(tr()); 1
if(forceNotify) 1
if(hSystemStore) 1
compare_start 2
MUCManager::Action 2
Cipher 1
:	QDialog(parent) 2
TEST_CASE(free_member_in_sub_func); 1
ai->sec 2
d.setReason(reason); 1
d->ck_chatSoftReturn->setChecked(ShortcutManager::instance()->shortcuts().contains(QKeySequence(Qt::Key_Return))); 2
last_click_ 1
group->setVisible(true); 1
accountsModel->removeRow( 1
jdns->setNameServers(QList<QJDns::NameServer>() 1
G(hash)->instance_type 1
LLMatrix4 2
SendMessageA(hwnd, 1
if(m.body().contains((word), 1
proxy.setPort( 1
setIcon(xpm); 1
buff[len-1]=0; 1
errmap[GpgOp::ErrorUnknown] 1
:	LLFloater(std::string()), 1
UserList::~UserList() 1
time[zoneIndex 1
tr(Scalable 2
d->items 1
charging(0), 2
m_notifier(0) 1
zoom(scale_level); 1
actionAgentSetStatus(i->u()->jid(), 1
RestoreControlStates(); 1
m_ui->listWidget->insertItem(idx, 1
body 2
QWhatsThis::add(d->ck_raiseChatWindow, 2
list.append(fi); 1
state_str 1
BrowserApplication::instance()->newMainWindow(); 3
themes.insert( 5
if((at 1
pb_prev->setDefault(true); 1
RUBY_METHOD_FUNC 1
volume_params.setShear	( 13
ui_.tv_affiliations->setUpdatesEnabled(true); 1
haveMods 1
tokenizer.tokenize(istr, 16
obj->d->published 1
BrowserApplication::downloadManager()->download(currentTab()->url(), 1
ck_reg->setWhatsThis( 1
opt_noagent 1
XDataField_ListMulti(XData::Field 1
sectmp.setAutoRemove(false); 1
map[48] 2
QNetworkProxy 2
QWhatsThis::add(d->ck_messageevents, 1
setTextSizeMultiplier(qreal(m_currentZoom) 2
EDB::EDB() 1
item.setAttribute(); 5
Q_UNUSED( 7
applyRotations(); 4
set_username 2
TrayIcon 2
ev_signal_init(&ev, 1
ui_.listView->edit(item->index()); 1
QBrush 7
ProxySettings 2
m_finished(false), 1
manager()->account()->setStatus(s,true); 1
accountToRemove 1
if(d->status 2
statusIcon 1
cert_sec 2
if(!t.load(str, 1
qa_hist 1
GameBoard::FigureType	myking, 1
mood.setAttribute(http: 1
StringTools::Strings 2
if(event->key() 1
while(iobj) 1
m.setTo(Jid( 1
sep->setFrameShape(QFrame::VLine); 2
context[1] 1
if(prealloc 1
if(base 4
ABC 3
scene->addItem(this); 1
lb_ident->setShowJid(false); 1
passphraseDlg_ 2
keystores_.clear(); 1
++n; 20
ParseNext(pChildReg); 2
d->setToolTip(tip); 1
tree_.toXml(doc, 2
QLatin1String()).toByteArray(); 1
keep_looking: 1
ti->state 1
p.translate(width() 1
QCOMPARE(anim->numFrames(), 3
lines 3
if(alert) 3
ui.retranslateUi( 1
pb_info->setEnabled(true); 2
lateMigrationData.serviceRosterIconset[i.attribute(); 1
Q3PtrList<ContactViewItem> 2
PsiTrayIcon::PsiTrayIcon(const 2
NeoServiceNumbers::NeoServiceNumbers( 1
JingleClientSlots(JingleVoiceCaller 1
ui_.avatar->show(); 1
m_requestCount 3
SPDIF_SAMPLERATE, 1
m_browsingHistory->setChecked(true); 2
< 1
d->make_act(DeleteKey); 1
lodDispLists[i] 1
account()->invokeGCInfo(jid().withResource(nick)); 1
BasicContext::~BasicContext() 1
Exception::Exception( 3
setRootNode(); 1
if(e->u.isAvailable()) 1
p.setX(screen.x()); 1
identifier 1
form.fromXml(iq); 2
buildCompletionList(); 1
w->move(newGeometry_.topLeft()); 1
toolBar->hide(); 1
error_code==500 1
if(!ign_sigpipe) 1
eventReady(GpgOp::Event::ReadyRead); 1
m_startedSaving 2
ignoreNonRoster_ 1
(char 1
RCInterval::RCInterval(RCInterval::RCReservedInterval 1
errmap[GpgOp::ErrorEncryptExpired] 1
if(referenceNode.isNull() 1
currentTab(), 1
d->le_host->setText(s); 1
fig[4] 1
ui_.le_jid->hide(); 1
if(obj->young_object_p()) 3
AHCError::AHCError(ErrorType 1
d->pb_form_submit->setText(tr()); 1
matrix.translate(points[0], 2
Hash::~Hash() 1
TEST_CASE(varScope3); 1
TestPath::splitPathString( 1
m_factories.erase( 1
rect.left 1
LLParcelSelectionHandle 1
d->cv->qa_ren->setEnabled(false); 3
paint(&pixPainter, 1
setSupportsVibrateNow( 1
m_theme->drawCorner(painter, 10
queueOutgoingEdit(edit); 4
Q_ASSERT(webView); 1
if(!ri.fromXml(i)) 1
addHeader(headers, 19
m_frameRect 2
bytesWrittenTrigger.stop(); 2
KNotificationInterface::~KNotificationInterface() 1
ui.shortenerInfoLabel->setFont( 1
d->id_prev 3
plain.replace(); 4
Botan::byte 3
d->psi->dialogRegister(this); 4
setModal(QApplication::activeModalWidget() 1
mbox->addButton( 1
m_bumpmap_size 1
32, 3
connect(h, 2
istr 6
calls_.remove(j.full()); 3
m_bookmarksToolbar->setAutoFillBackground(true); 1
rect.top 1
saveToolbarsState(); 2
resource->getClientName() 1
frame->setFrameShape(QFrame::StyledPanel); 1
connect(act_mailto, 1
if((entry 1
ensure() 1
ensure(, 51
btn->setMenu(menu()); 2
titleText->setSizePolicy(QSizePolicy::Expanding, 2
setImage(vcard->photo()); 3
queueNodeInspection(node.toElement()); 1
if(d) 5
vLay->addItem(proxy); 1
callbacks[3].id 1
d->twitterapi->destroyFavorite( 1
doc.documentElement().removeChild(element); 1
text 84
--sock_tout; 1
d->act_send->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
BriefTestProgressListener::~BriefTestProgressListener() 1
negotiationTimer_.start(); 3
ui_.le_ext->setReadOnly(x); 2
chat->hide(); 1
am->setItemEnabled(17, 1
connect(grep, 1
QWhatsThis::add(d->pb_cAnimBack, 1
menu->addMenu(statusMenu); 1
d->edb 2
Self::Self(const 1
copyItem( 1
close(m_fd); 1
change(0); 1
chat->reparent(0,QPoint()); 1
PsiMacStyle() 1
ui_.pb_refresh->setEnabled(true); 2
XmlOutputter::setStandalone( 1
strResult.Replace(); 1
toggleJoinedAccountsAct_->setChecked(false); 1
SetError(PR_INVALID_ARGUMENT_ERROR, 2
acc->avatarFactory(), 1
data(); 1
connect(m_navigationBar->toggleViewAction(), 1
ck_custom_auth->setWhatsThis( 1
Q_UNUSED(newPos); 1
progress 4
glColor4f(1.0f, 1
PrivacyList 4
supportedContainers 1
d->removeInterface(addr); 1
errorGateway(cb_service->currentText(), 2
S 3
tog_away 1
TestPath::getChildTest() 1
exist, 1
locale.chop(3); 1
bind(kg.sym[n], 1
if(val) 1
build(); 1
te_log()->verticalScrollBar()->setValue(scrollbarValue); 1
SyncThreadAgent(QObject 1
if(failed) 1
lastCommand.setType( 1
connect(pb_save, 3
v_showOffline 2
global->manager->setDefault(create_default_provider()); 1
printf(,f.name().latin1()); 1
gGL.getTexUnit(0)->bind(imagep->getImage()); 1
d->dir 1
m_listeners.push_back( 1
set_sign(y.sign()); 1
m_vecControls.push_back(pControl); 1
if(a->sign 1
c1.ltrim 1
ignore_sigpipe(); 1
P_DEBUG()); 1
glActiveTexture 1
timer.start(); 1
mimeData->setUrls(urls); 2
std::ifstream 3
i.fileName 1
r.set_sign(BigInt::Positive); 1
c->setConstraints(con_minSSF, 1
TextOutputter::TextOutputter( 1
QList<KeyStoreTracker::Item> 2
jsdtrace_filename(dfp), 1
connect(d->iss_system, 1
plain 2
restoreSelection(cursor, 1
if(!account) 3
++rows; 1
ui_.lb_status->setText(tr()); 9
QWhatsThis::add(d->ck_askOnline, 1
d->optionsButton->addTo(d->trayMenu); 1
catch(std::exception 11
if(writeText) 2
actionsService_->openWhiteboard(contact); 1
bigint_add3(z.get_reg(), 6
IconActionGroup 4
readEntry(tb_prefs, 1
tryAgainButton->setVisible(true); 1
!(fun->flags 1
ui_.toolbar->addAction(act_icon_); 1
action->setData(QVariant(WbWidget::Scale)); 1
b_hit_land, 1
setTimeStamp 1
own_con 4
SxeSession::~SxeSession() 1
channel.write(, 5
spacing->setBackground(back); 2
position 1
textEdit_ 1
_failedSuites 1
QCA_logTextMessage(QString().arg(c->provider()->name()), 3
_roots_file 1
finishedTrigger.setSingleShot(true); 2
if(isNull() 1
PrivacyRuleDlg 3
enableImages->setChecked(defaultSettings->testAttribute(QWebSettings::AutoLoadImages)); 1
voltage 4
canWrite 3
qLog(PowerManagement)<<; 10
ui_.le_street->setText( 2
G(tuple)->instance_type 1
lb_comment 1
set_syserr(EMSGSIZE, 1
ui_.pb_open->setEnabled(x); 2
closeButton_->setIcon(icon); 1
sTime 3
QList<PrivacyListItem>::ConstIterator 1
recipIds 1
init_done 2
checkOther.nullPointer(); 1
promptPassphrase(id,event); 1
handleUnsupportedContent(m_manager->get(request), 1
getManagingTabDlg()->tabOnTop(this) 1
connect(&icon, 1
SyncThread::start(); 1
foreach(StatusPreset 1
state->probe 1
updateChat('>' 1
m_history->setHistory(lst); 1
entry->put(state, 4
setOption(path 2
SearchSymbol(QWidget 1
QWidget::resizeEvent(event); 1
HistoryViewItem 7
bOk->setText(tr()); 1
hb1->addWidget(d->cb_ident); 1
item.caps 4
SelectGame 1
viewport()->setCursor(anchor.isEmpty() 1
pageAction(QWebPage::OpenLinkInNewWindow)->trigger(); 2
m_tabBar->setTabData(index, 1
LLWString 5
hb2->addWidget(pb_close); 1
y[j-1] 1
append(icon->name(), 1
app.loadConfig(); 1
newSize 3
pms->abcd[2] 2
readTrigger.stop(); 1
ui_.te_status->setReadOnly(true); 2
childp->mDrawable->getFace(face_num)->clearState(LLFace::HUD_RENDER); 1
host 11
foreach(const 23
0x64, 1
chr->SetUInt32Value(updateIndex,value); 1
clearSelection(); 4
atError 2
if(firstMeta) 1
ui_.le_phone->setEnabled(x); 2
d->help->setText 1
migrateStringList(base, 2
Resource::Resource(const 1
Anim::~Anim() 1
ret.append(str.at(n)); 1
p.setUserPass(pi.settings.user, 1
check_spelling_ 1
mouseMoveEvent( 1
URLWatcherPlugin::~URLWatcherPlugin() 1
d->le_customRoster->setEnabled( 1
if(askQuit()) 1
(const_cast<CookieJar 5
QTextCursor	tc 2
QApplication::postEvent(parent, 1
toolbar->addAction(zoom_in_action); 1
v.setBdayStr( 2
colCtrl->set(col); 1
CGContextShowTextAtPoint(context, 2
dump_count++; 1
if(!isPrivate) 5
menu->mousePressEvent(&me); 1
QTEST_MAIN(tst_TabWidget) 1
ts.date().month(), 1
m_mirrorItem->dispose(); 1
layout->addWidget(m_cache); 2
j 17
restoreColor(d->pb_cAnimBack, 1
subjectInfoMap 4
Internal_Error( 1
menu->addAction(tr(),this,SLOT(info_clicked())); 1
asm(); 1
OptAppearanceMiscUI() 1
d->pb_quote->show(); 3
btn_save 1
~IconSelectButton() 1
(!mSourceObject 1
if(base.at(base.length()-1) 1
add_method(recv->metaclass(state), 1
Q3MimeSourceFactory 2
EditTreeView::EditTreeView(QWidget 1
QApplication::globalStrut().width()); 1
setSuccess(true); 1
QLabel 67
d->pb_form_submit->setMinimumWidth(96); 1
enqueue( 1
SASL::Params::Params() 1
if(!started) 1
if(selectedItems.count() 5
m_bPause 4
ui_.lv_rules->setCurrentIndex(model_.index(row+1,0)); 1
Exception::setMessage( 1
if(d->pipeAux.writeEnd().isValid()) 2
Private 5
m_fromHttpApi 4
ac3encoder_init(&m_ac3encoder, 1
<string>http: 1
if(valid) 1
tabWidget_->setCloseIcon(IconsetFactory::icon().icon()); 1
sounds_ 1
clearFocus(); 2
menu_->clear(); 1
if(!pubring.isEmpty()) 1
if(mod.is_zero()) 2
services_[account->getAccountName()]->modify(); 1
write_conv 2
if(busy->isActive()) 3
_l->failedAssert( 1
GAdvancedWidget::setStickToWindows( 2
m_siteIcon->setWebView(webView); 1
if(obj->reference_p() 1
if(angle 1
buttonLine->addWidget(pb_new); 1
d->recalculateSizeTimer 1
TextTestResult::startTest( 1
migrateBoolEntry(base, 1
d->flist.append(i); 1
Iconset::~Iconset() 1
r.ltrim 3
list.append(defaultProvider()); 2
addr.home 2
if(!blocked) 1
tb_browse->setEnabled(true); 1
setp(start 1
d->pb_spDelete->setEnabled(enabled); 1
ui_.le_street->setEnabled(x); 2
ProxyItemList::Iterator 1
Q_SIGNALS: 2
pm.setItemEnabled(24, 1
to->getRgb 1
change(type, 1
QMetaEnum 10
foreach(RosterItem 2
channel->call(state->current_thread()); 1
closeButton_->setMinimumSize(3,3); 1
CScraperParser::CScraperParser() 1
setObjectName(name); 2
d->reset(ResetSession); 3
d->searchWidget->setVisible(false); 2
isUrl 16
fileMenu->addAction(tr(), 10
QDBusConnectionInterface 3
tracker().failedAssertThrowsNot( 1
AccountsController::AccountsController( 1
{0, 2
that->parentObj->removeChild( 1
pthread_t 1
h->edb_writeFinished(b); 1
pControl->DynamicResourceAlloc(bOnOff); 1
d->aaaa 2
while(i 4
memcpy(out->data() 1
while(n 3
fromArray(a); 1
le_font[3] 1
while(r 2
beginRemoveRows(parent, 6
forwardHistory.append( 1
VMMethod::~VMMethod() 1
selectBrowserEdit->setText( 2
Connector::~Connector() 1
model_->clear(); 1
connect(m_findPrevious, 1
CPPUNIT_ASSERT(!item.message()); 3
QVibrateAccessoryProvider::setVibrateNow( 1
services_[account->getAccountName()]->changeStatus(status); 1
if(text.isEmpty()) 3
if(px) 2
bounceRec.nmMark 1
Q_DECLARE_METATYPE(QCA::CRL) 1
mlen 33
polish(); 1
phone 2
d->le_subj->setToolTip(QString()); 1
rb_remove->setChecked(true); 1
SxeManager::SxeManager(Client 1
DefaultKeyStoreEntry(const 2
mutableThis->m_whatMessage 1
delta.scale(1 1
btn->setIcon(d->icon, 1
bigint_mul(z.get_reg(), 2
d->trayMessage( 4
SecureVector<word> 6
closeTab(tab, 1
d->lw_selectedActions->insertItem(row, 2
d->w_http_id->show(); 1
parentWidget_ 1
foreach(ActionList 6
TEST_CASE(if10); 1
PasswordAsker::~PasswordAsker() 1
CFDataGetBytes(data, 5
client->close(); 1
spell_menu.exec(QCursor::pos()); 1
m->addAction(d->act_join_groupchat); 1
model->setAccounts( 1
rosterIconsets 4
r->len 4
if(kind_of<String>(key)) 1
m_notifier 2
tbDef.locked 1
if(str.isEmpty()) 7
View::View() 1
ui_.label_photo->setText(tr()); 2
tabWidget_->setTabBarShown(false); 1
is.d 1
_iq 4
setTabOrder(d->le_subj, 1
if(openExisting) 1
toggleAvatarsAct_->setChecked(true); 1
lb_dtProxy->hide(); 1
cursor.setPosition(selection.end, 1
if(!dirty) 2
d->proxy 3
s[1] 2
x.set_sign(Positive); 1
hash_ 3
while(obj 5
obj->age 1
hSystemStore 2
destroyed 1
Ui::TwitPicNewPhoto 1
nelem 1
emptyWidget->setAutoFillBackground(true); 1
divide(copy, 1
s.unread 1
incoming.edit 1
textReady(str); 1
historyActions.append(m_historyHome); 1
Transport 2
StatusModel::StatusModel( 1
setWindowTitle(CAP(caption())); 14
FileEvent::~FileEvent() 1
if(c->createRequest(opts, 1
DiscoInfo 1
v_pass 1
QTreeWidget 1
setContactChatState(XMPP::StateComposing); 1
p.settings.port 1
toolbar_ 1
d->roster.remove(e); 1
p.end(); 7
toolbars 2
FRECT 4
QObject::connect(hst, 1
out_left.clear(); 2
connect(&pipe, 1
image.fill(Qt::transparent); 1
free 1
m_twitPic(0) 1
countAdjustment 1
LLUI::translate(label_offset.mV[VX], 1
if(!configIsValid(pconf)) 2
setp((char 1
if(!first_scan) 1
setParent(parent); 1
customizeAction_ 1
server_task_ 1
JAVASCRIPT_EXECUTE_DONE( 1
blockWidgets(); 2
LLPreviewSound::LLPreviewSound(const 1
Entry() 1
qWarning(qPrintable(QString().arg(key))); 2
d->le_toolbarName->setEnabled(enable); 1
curInput.erase(0,i+iLen>(int)curInput.size()?curInput.size():i+iLen); 1
m_cookies->setChecked(true); 4
phone_client_->SetFocus(call); 1
memcpy(&x, 1
actRegister->setEnabled( 1
server.pool.clear(); 1
sInstance->setRect(our_rect); 1
ray_target_id.setNull(); 2
Q3PtrListIterator<FileTransItem> 1
val--; 1
y++; 1
if((int)in.length() 1
QCA::Validity 1
m_closeTabAction->setShortcuts(QKeySequence::Close); 1
thr 2
if(other_val 1
PsiPopup::deleteAll(); 1
if(asker_at 2
LLWLParamManager::instance()->mAnimator.update( 1
if(d->late_read 1
xform_obj.setPosition(x, 1
static_cast<QLineEdit 1
Q3PtrListIterator<Iconset> 4
CPPUNIT_ASSERT(c.version() 1
if(d->qdns) 1
QWhatsThis::add(d->ck_popupHeadlines, 1
d->setup(service, 2
updateCurrentItem(); 1
if(index==-1) 2
s.waitForShutdown(instances); 1
if(negotiationElement.childNodes().at(k).nodeName() 1
this->CanStoreIvars 1
tb[2].locked 1
Its 1
if(event->button() 2
m_mirrorItem->setZValue(zValue()); 1
if(d->s5bServer->isActive()) 1
connect(m_newTabAction, 1
Vehicle 1
doStartSuite( 1
DesktopUtil::openUrl(link); 1
LocationBarSiteIcon::LocationBarSiteIcon(QWidget 1
QWidgetList 1
common_smallFontSize 3
dexc(ReturnException, 1
d->whois 1
Q3Dict<IconAction> 1
lim.rlim_max 1
v_host 3
togglePiecesUnderCursor(); 2
d->h1 1
d->h2 1
d->h3 1
while(!ifs.eof()) 1
LoadControl(pControl, 2
jsdtrace_frame_linenumber(JSContext 1
tb.keys.clear(); 1
XDeleteProperty( 1
executable->execute(state, 1
invitationCallbacks_ 1
switch(type.known()) 1
Asserter::fail( 2
AboutDlg 1
QList<PsiIcon::IconText> 1
p->fillRect(xoff, 1
Q_ASSERT(model->hasIndex(r, 2
lastWasEncrypted_ 2
tv_->setColumnHidden(3, 1
TextIconFormat::TextIconFormat(const 1
generateSuccessImage(); 1
if(!validDomain(s, 1
painter->setRenderHint(QPainter::Antialiasing, 2
secList.remove(it); 1
if(caps.contains('a')) 1
Q_ASSERT(parent); 2
setWordWrapMode(QTextOption::WordWrap); 1
connect(d->lw_nickColors,	 1
G(floatpoint)->instance_type 1
status.setType(el.attribute()); 1
Executable 2
ui_.le_role->setText( 2
ui_.mle->chatEdit()->setEnabled(true); 1
QPushButton::setText(); 1
d->pb_prev->setEnabled(!d->id_prev.isEmpty()); 1
lb_pass->setEnabled(true); 1
di.setNode( 1
effectp->setPositionGlobal(regionp->getPosGlobalFromRegion(ray_end_region)); 1
doc.setContent(file.readAll(), 1
catch 67
Q_UNUSED(withUI); 1
webViewSearch(i)->clear(); 1
le_pwnew->setFocus(); 1
resetMatrix(); 1
grid->addWidget(combo, 1
task->push(val); 1
_props.creationDate 1
aspell_config_replace(config_, 4
if(_dir 5
downloadsView->setShowGrid(false); 1
toolbarSelectionChanged( 1
gameplay_layout->addWidget(m_gameplay_time, 1
if(!jid.isValid()) 3
menuActions_[]->setEnabled(true); 1
i->widget 1
autoSaveTimer_ 1
tmr->start(1000); 1
ui_.le_orgName->setEdited(x); 1
m_xml->setStyleSheet( 1
cb_service->setEnabled(true); 1
QWhatsThis::add(le_font[1], 1
painter->drawText(textRect, 1
ui.countdownLabel->clear(); 2
client_->connectToServer(server_, 1
PsiContactList::~PsiContactList() 1
QMetaObject::invokeMethod(KeyStoreTracker::instance(), 3
widget->setState( 5
s_networkAccessManager->setCookieJar(new 1
connect(act_scrolldown_, 1
baseURI 6
d->set_realm 1
baseURL 2
connect(session, 1
sockRead(data); 1
connect(account, 4
set_syserr(ESTRPIPE, 1
comp_starts 2
QTest::addColumn<int>(); 18
CertificateAuthority::~CertificateAuthority() 1
pictureMenu->addAction(menuActions_[]); 2
JAVASCRIPT_FUNCTION_RETURN( 1
statusRect.setLeft(rect.left() 1
method_data() 1
SyncThread::stop(); 1
i.take(r, 1
++platform_ref; 1
cls->set_name(state, 1
st.wDay 1
LEGOPTP.eventPriorityFile 2
if(sending) 2
f.setValue(field.value().at(0)); 1
F32 59
handler_add(d); 1
IconToolButton::~IconToolButton() 1
chargeFile 6
ui->passwordsCheckBox->setChecked( 1
Board::Board(QWidget 1
setInactiveText(QLatin1String()); 1
ChatEditProxy::ChatEditProxy(QWidget 1
setLabel(utf8str_to_wstring(label)); 1
d->mle->show(); 1
~JingleIQResponder(); 1
ani->setDuration(300); 1
cnt 2
createInterface(); 1
resort(resource); 1
settings.remove(key 3
if(gt 1
Replaces 1
connect(&lateTrigger, 1
pre_stdin_close 2
mValid 1
d->cb_type->insertItem(tr()); 2
typeAtom 1
Bignum 15
if(d->active) 5
Converts 1
ev.xclient.type 1
srand(time(0)); 2
if(in_useClientInit) 1
m_row_delta 1
Provider 28
if(str.isEmpty() 1
std::lower_bound(blocks.begin(), 1
columnCount(); 1
home.mkdir(); 5
free_object( 2
QHelpEvent 2
CQueryParams 1
sxe.removeChild(response); 2
PsiCon 17
d->su 1
rect.adjust(0, 3
connect(&pipeCommand.writeEnd(), 4
version_ 4
if(max 4
mPrefsVoice 1
trayicon_->show(); 2
QMediaDecoder 1
LRESULT 3
clone.setNodeValue(); 1
connect(notification2, 1
ap_hook_child_init(init_child, 1
list.sort(); 2
v.setEmailList( 2
doc->setPlainText(theText_); 1
settingsOpen( 1
Typing_TabPressed, 1
check 1
if(left 2
toolbar_->addAction(act_color_); 1
QMap<QString, 14
LEGOPTP.notifyAuth 1
ClearBuffers(); 1
if(len 4
generate(seed); 1
tip 16
p->fillRect(xoff 1
d->checkTimer.start(1000); 1
auto_offline_field.setVar(); 1
deleteContents(); 1
if(isinf(this->val) 1
classhint.res_class 3
std::vector<EntropySource 3
m_navigationBar->setIconSize(QSize(18, 1
marshal(ary->get(state, 1
CGContextBeginPath(context); 2
if(!Q3TextDrag::canDecode(m)) 1
GO(floatpoint).set(new_class(, 1
if(node.isAttr()) 2
MUCConfigDlg::~MUCConfigDlg() 1
c0.tolower 1
items_[index].setOrder(order); 1
Q_UNUSED(nonfile); 1
foreach(Instance 7
if(sizeof(qreal) 1
++total; 5
if(err->error_code 1
cert_pub 2
tree2.loadOptions(http: 1
geom.setHeight(r.height() 1
GlobalShortcutManager::clear(); 2
if(!obj) 1
QModemCallProvider::abortDial( 1
session_->Decline(); 1
OptShortcutsUI() 1
setMultiLinesEnabled(true); 2
if(load(doc.toByteArray())) 3
c2m->addResource(r, 1
v_clientVersion 1
UserStatus() 1
onig_free(REG(data)); 1
service->primaryAtChat()->registerNotificationType 5
contact->setStatus(STATUS_OFFLINE); 1
result.resize((at 1
static_cast<RemovePolicy>(removePolicyEnum.keyToValue(value)); 1
if(d->pipeStatus.readEnd().isValid()) 2
CPPUNIT_TEST_SUITE(IODeviceOpenerTest); 1
d->profile 4
if(remainder) 3
AccountRemoveDlg::~AccountRemoveDlg() 1
lb_ident_->setShowJid(false); 1
pb_detach->setToolTip(tr()); 1
changes_[ReplaceFrom] 1
QWidget::paintEvent(e); 1
int			x, 1
reply 2
frame->setFrameShadow( 1
app.setOrganizationName(); 1
sp.setPriority(PsiOptions::instance()->getOption(base+).toInt()); 1
cds.dwData 1
if(PGPUtil::instance().pgpAvailable() 1
d->ck_allowUnlistedPopup->setChecked( 1
connect(d->cb_preset, 2
(F32)bottom 1
setWindowTitle(d->jid.full()); 3
specialized 1
ui_.cb_value->setCurrentIndex(ui_.cb_value->findText(tr())); 4
model()->setData(indexAt(e->pos()),QVariant(mapToGlobal(e->pos())),ContactListModel::ContextMenuRole); 1
passphrases_[currentEntryId_] 1
LEGOPTP.lastPath 1
if(d->done) 3
d->le_host->setMinimumWidth(128); 1
mle()->viewport()->update(); 1
num_names 1
nickJid.jid 1
d->tabWidget3->setEnabled(false); 1
d->treeShortcuts->setColumnWidth(0, 1
strDir.Format(, 1
Property 1
translation.translate(-pos().x(), 1
pixmap.convertFromImage(real); 2
feature.setAttribute(, 1
while(next) 1
update(QByteArray::fromRawData(data, 1
insert(); 2
_asString[0] 1
mWebPanel->apply(); 1
Mood::Type 3
TEST_CASE(mismatch3); 1
d->pm_settings 1
c->setToolTip(tr(Drag 1
session_ 5
modified 5
CBStringList 8
d->le_fChat->setFont(PsiOptions::instance()->getOption().toString()); 1
stream 108
CGContextFlush(context); 1
~History() 1
QMimeData 13
composingTimer_->deleteLater(); 1
if(!lvi->s.mucItem().jid().isEmpty() 1
layout_->addWidget(child); 1
connect(tv_,SIGNAL(expanded(const 1
nicknumber++; 1
p->drawText(0, 1
resetAffiliationList(MUCItem::Outcast); 1
d->cv->qa_chat->addTo(&pm); 1
cursor.movePosition(QTextCursor::Start, 1
m_move_animation->setUpdateInterval(25); 1
QVERIFY(messageHeadline 1
if((curLang.isEmpty() 1
graphicMime 6
m_logLevel 2
exceptionTable->setSelectionBehavior(QAbstractItemView::SelectRows); 1
XSetErrorHandler(savedErrorHandler); 1
if(d->servers.isEmpty()) 2
reset(); 44
connect(d->pa->psi(), 1
addNeededContactItems(e); 3
msg->addUUIDFast(_PREHASH_TransactionID, 1
key=node.left(idx); 1
size_t 83
WRITE(char, 1
up_state, 1
ui_.le_country->setEdited(x); 1
hideTimer 2
connect(ui_.cb_lists,SIGNAL(currentIndexChanged(int)),SLOT(list_changed(int))); 1
corner2 2
corner3 2
corner1 2
corner4 2
ReleaseMutex(changesMutex); 1
GameBoard::FigureType)), 2
proxySupport->setChecked(settings.value(QLatin1String(), 1
if(i->type() 17
QFile::copy(optionsFile(), 1
map[9] 2
if(!in.isSecure()) 2
tmr->stop(); 3
stream->setUsername(j.user()); 1
d->cb_bounce->setItemData(1, 1
0.5f); 1
model_.add(); 1
VarList 2
QGLWidget::keyPressEvent(event); 1
RCInterval 1
Metacontact::Metacontact(const 1
if(bigint_cmp(z 1
if(in.width() 2
resumeApp(); 4
queuedIncomingEdits_.removeFirst(); 1
UnregisterEventHotKey(hotKey_); 1
checkNullPointer(void 14
p.drawRect(0, 3
if(fm.width(oldtext, 1
Exception::message() 1
dock_xerror 2
q.trunc 2
setWindowTitle(tr().arg(JIDUtil::nickOrJid(u.name(), 1
act->setChecked(tabManager_->preferredTabsForKind('C') 1
m_nCurrentVolume 2
d->ck_useEmoticons->unsetPalette(); 1
connect(d->contactList, 5
d->jt->set(Jid(d->services[cb_service->currentItem()-1]), 1
SetWindowPos(winId(),HWND_TOP,0,0,0,0, 1
lastStatusString 1
quoted.replace(QRegExp(); 3
if(sname 1
StatusModel::instance()->setMaxStatusCount( 1
t->getByAffiliation(affiliation); 1
ToolTipPosition::ToolTipPosition(const 1
m_max_zoom 1
for(QList<QHostAddress>::ConstIterator 2
BEGIN_MESSAGE_MAP(CPicCtrl, 1
DiscoListView::DiscoListView(QWidget 1
selectedEvent.Fire(message); 1
Private(FileTransDlg 1
identity.setAttribute(); 2
pControl 2
updateHistory(str, 1
d->make_act(Sign); 1
call->SignalSessionState.connect(this, 1
metacontact->setStatusMessage(); 1
pa->openNextEvent(UserAction); 1
lastPopup 1
emoticons.clear(); 1
QList<CertificateInfoOrdered> 2
vsoNeoHardware.sync(); 1
topLevelItem->addChild(shortcutItem); 1
ringMutex.lock(); 5
CertificateRequest::CertificateRequest(const 3
kCFAllocatorDefault, 3
if(d->bs 1
ProfileManager 1
_loader->moveToThread(0); 1
i->resetName(); 3
d->lv->ensureItemVisible(fi); 1
if(!d->alerting) 1
tb->setUpdatesEnabled(true); 1
d->start 1
readBoolAttribute(stick, 1
:MessageEvent(acc), 1
x_pixel_vec 2
failNotEqual( 1
model->setHeaderData(0, 1
d->c->setCertificate(cert, 1
hadSelectionOnMousePress 1
encChanged 1
ui_.pb_accept->setEnabled(true); 1
LLPreview( 1
Q_ASSERT(g_event); 3
array.insert(array.begin(), 2
set_syserr(EOVERFLOW, 1
Hooks(apr_pool_t 1
SxeRemoveEdit::SxeRemoveEdit(const 2
IdleUIGetLastInputTime 1
iq.appendChild(error); 1
if(d->pa) 2
TextFilter::TextFilter(Direction 1
LEGOPTP.sizeTabDlg 1
if(y.sign() 1
keyItemsCount 3
CapsManager 7
SecureArray::SecureArray(const 4
_storeName 2
affiliations_proxy_model_->setSourceModel(affiliations_model_); 1
btArray->at(i) 3
qint64 3
d->contactList->createAccount(name, 1
searchLayout->setMargin(0); 1
alertIconUpdateAlertStyle(); 1
pp->popup()->restartHideTimer(); 1
tabTitle 1
if(g_event->handlers.isEmpty()) 1
clear_mem(workspace, 2
if(message.type() 2
connect(d->pa,SIGNAL(updateContact(const 2
ssl 8
LEGOPTP.onevent[eFTComplete] 1
ContactListGroup 3
QTransform 3
ASSERT_EQUALS(std::string(), 2
ui_.setupUi(this); 18
currentIndex 8
c.change(csr); 3
if((node_.isElement() 1
zoom_out_icon.addPixmap(QPixmap()); 1
emote 1
LLGLEnable 1
mutableThis->findTestPath( 1
if(minutes 1
ui_.le_nickname->setModified(x); 1
QList<HandlerItem> 1
size.setHeight(rect.y() 1
d->cvi->setGroupInfo(QString().arg(totalOnline).arg(d->roster.count())); 1
m_blockedCookies.removeAt(row); 1
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 10
TEST_CASE(varScope4); 1
d->jt->setXForm( 1
updateTransport(xitem, 2
ui_.log->setMimeSourceFactory(PsiIconset::instance()->emoticons.generateFactory()); 1
painter.translate(-m_unit, 1
actionsService_->removeContact(contact); 1
talk_base::NetworkManager 1
PsiTabBar::PsiTabBar(PsiTabWidget 1
groupName_ 3
ksm_available(storeId); 1
PlugInManager::PlugInManager() 1
setVisible((count()) 1
painter->drawText(statusRect, 1
v_showHidden 2
setContactChatState(XMPP::StatePaused); 2
set(a); 2
TestPath::TestPath() 1
manager->disableCaps(); 1
services_[contact->getAccountName()]->actionAuth(contact->getJid()); 1
Q_INTERFACES(QDesignerCustomWidgetCollectionInterface) 1
d->cv->qa_wb->setIconSet(IconsetFactory::iconPixmap()); 1
itSeparator 2
gMessageSystem->setHandlerFunc(, 2
IconAction 76
drawablep->setState(LLDrawable::USE_BACKLIGHT); 1
TestSuite::addTest( 1
deinitialize(); 1
NodeType= 1
if(str1.at(n+at).lower() 1
d->w_http_id 1
ba.append(list[0].toUtf8()); 1
childSetPrevalidate(, 1
d(new 1
Q_ASSERT(p 1
d->iss_customRoster->setEnabled( 1
s.setPriority(priority); 1
Q_ASSERT(a 2
Q_ASSERT(i 3
readBoolAttribute(e, 3
le_pwver->setEnabled(enabled); 1
QSocketNotifier 1
Q_EXPORT_PLUGIN(ChessPlugin); 1
toggleStatusAct_->setCheckable(true); 1
GO(exception).set(exc); 1
KeyStoreEntryContext 8
sassert(status 1
dtext 6
#undef 16
ttable->transtable[i] 1
IO 2
pb_stop->setEnabled(true); 1
i->logSent(); 1
newValue 4
chb_kbd 1
DLLEXPORT 3
mSpawnPointPos[i].mV[VZ]); 1
CPPUNIT_ASSERT_EQUAL(3, 1
It 3
d->connect_peerCertificateAvailable 2
TEST_CASE(pushback2); 1
If 2
OnDeinitWindow(message.GetParam1()); 1
SendSysMessage(ss.str().c_str()); 1
busy->update(); 1
d->pb_next->setEnabled(!d->id_next.isEmpty()); 1
BrowserMainWindow::BrowserMainWindow(QWidget 1
connect(tlsHandler, 1
CacheFilename 1
atom_KdeNetUserTime, 1
QX::QX(QWidget 2
NeoPinManager::NeoPinManager( 1
BrowserApplication::clipboard()->setText(action->data().toString()); 1
Change 1
acc.security_level 1
qcaEventHandler_->reject(currentEventId_); 1
TEST_CASE(class11); 1
sButtons[sButtonsAdded] 1
c.change(cc); 5
addItem(group, 1
if(loop) 1
_sd 3
d->pb_next->setEnabled(true); 1
total_objects++; 1
closeButton_->show(); 1
if(negotiation->session) 3
NeoSimToolkit::NeoSimToolkit( 1
Library_State::Library_State(Mutex_Factory 1
LVITEM 1
info.setAttribute(,lastSeen_.toString(Qt::ISODate)); 1
free(data); 2
tb[2].stretchable 1
if(bitmap 1
EventGlobal::AskerItem 1
bold_labels 6
nbytes, 2
ConsoleWorker(QObject 1
add_allocator(mod_allocs[j]); 1
painter->fillRect(frameRect, 1
tbGroup 2
hb3->addWidget(d->lb_count); 1
status.entry 1
cb_ssl->setCurrentIndex(cb_ssl->findData(UserAccount::SSL_Auto)); 3
if(v_showOffline 1
d->pb_chat->show(); 5
setNetworkAccessManager(BrowserApplication::networkAccessManager()); 1
d->prefilterShowAway 1
act_prev_->setShortcuts(ShortcutManager::instance()->shortcuts()); 1
sm->insertItem(PsiIconset::instance()->status(STATUS_OFFLINE).icon(),	status2txt(STATUS_OFFLINE),	STATUS_OFFLINE		+ 1
XMPP::Features 3
widthaction 2
session_manager_->SignalRequestSignaling.connect(listener_, 1
updateLastMsgTime(t); 1
context->state[4] 1
setMessage(el.text()); 2
manager_->addGroup(group, 1
m_theme->scale(m_unit); 1
SecureArray 47
mbox->setText( 1
reply->close(); 3
UnZipPrivate() 1
_warnings 2
QWebHistoryInterface::setDefaultInterface(this); 1
LEGOPTP.useTabs 1
gpg.doDecrypt(); 2
toolbar->title 1
WRITE(unsigned 9
buildToolbars(); 1
if(fixerChildren[n]->target 1
connect(d->le_toolbarName, 1
ev.xfocus.window 1
addAction(d->act_scrolldown); 1
d->getAction()->addTo(mainMenu); 4
hw->setSelectionMode(Q3ListBox::NoSelection); 2
d->groupName 3
mouseReleaseEvent( 1
(xform_obj.getWorldRotation()).isIdentity() 1
s.arg(tr())); 5
LLFrameStats::LLFrameStats() 1
recentList.remove(recentList.fromLast()); 2
KeyDerivationFunction::~KeyDerivationFunction() 1
Retranslates 1
tabs.setAutoDelete(true); 1
reg->setForm(server_,fields); 1
QAbstractEventDispatcher::instance()->processEvents(QEventLoop::AllEvents); 1
index--; 1
connect(d->pb_http_deny, 1
painter.setPen(Qt::white); 1
setControlsVisible(true); 1
selection.start 2
drw->makeMove(s); 1
sprintf(temp,,iOptional); 1
SET_CONTROL_FOCUS(nextControl, 1
bigint_sub3(z.get_reg(), 8
d->c->setupSign(d->from, 4
if(out.isValid()) 2
xdata.setInstructions(tr()); 1
account->setAccountName(acname); 1
account->setDM( 1
updateItemsFinished(jt->items()); 1
task->make_active(ctx); 2
i->contactProfile()->scSendMessage(i); 1
transport->setExpanded(expanded); 1
:QDialog(parent) 9
d->pb_next->forceSetPsiIcon(d->nextAnim()); 2
:QDialog(parent, 1
replaceWidget(ui_.lb_proxychooser, 1
w->processIncomingSxeElement(message.sxe(), 1
showScreen(QX::ScreenStarting); 2
if(referencewbitem 2
TestResult::addError( 1
top2->setFixedHeight(1); 2
~IconsetFactoryPrivate() 1
opt.startsWith() 1
rerender(); 2
tabs_.removeAll(static_cast<TabDlg 1
PsiDataService::~PsiDataService() 1
jsdtrace_filename(JSStackFrame 1
dialog.setMargin(12); 2
updateIdentity(pa); 4
if(kind_of<MetaClass>(klass)) 1
varianttype 5
FileUtil::setLastUsedSavePath(fi.dirPath()); 1
Q_GLOBAL_STATIC(QMutex, 6
m_toggle_borders_action->setEnabled(false); 1
ActionNames 7
d->name 8
d->list.append(h); 1
if(!d->pb_send->isEnabled()) 1
QCAPlugin 2
MetaClass::attach(this, 6
connect(sourceModel(), 11
setAutoDelete(autoDeleteNot); 1
GpgAction 1
model->index(0, 1
memset(ptr, 2
KeyViewItem(const 1
UnixSystemWatch::UnixSystemWatch() 1
d->s5bServer->stop(); 1
thread->cancelled 3
generateNewNode(children.at(i), 2
setModel(m_bookmarksManager->bookmarksModel()); 1
CGContextSetTextDrawingMode(context, 2
ProxyEdit::ProxyEdit(QWidget 1
Certificate 23
currentAbortTestOnFail 1
act_end_ 1
Q_ASSERT(model->hasIndex(0, 2
Py_Initialize(); 1
d->mainwin->decorateButton(STATUS_OFFLINE); 1
if(d->f.at(d->offset)) 2
MyMessageContext(MyOpenPGPContext 1
d->pb_servicesDetails->setEnabled( 1
ap_custom_response(r, 1
PythonPlugin::PythonPlugin() 1
m_tabWidget->addWebAction(m_stop, 1
replaceWidget(lb_accountlabel, 2
fields_->setEnabled(false); 1
attach(piece); 1
d->cv->qa_hist->addTo(&pm); 1
QMovie 2
negotiation->features 3
CachedAvatar(AvatarFactory 1
p.setPen( 2
if(charMode) 1
headerView->setResizeMode(ContactListModel::StatusIconColumn,QHeaderView::Custom); 1
diagnostic); 1
twitterapi->setLogin( 5
if((unsigned 1
SignatureAlgorithm 3
setStatus(Accepting); 1
g_infoManager.ResetCache(); 1
bg_defAct->setButton(bg_defAct->id((Q3Button 1
d->pb_reg->show(); 1
JDnsSharedDebug 2
d->pb_auth->setPsiIcon(IconsetFactory::iconPtr()); 1
i.handler_pos 2
setFlag(QGraphicsItem::ItemClipsChildrenToShape, 1
QPointer<GCFindDlg> 1
chatView()->setStaticBackground(true); 1
state(state), 2
StatusModel::instance()->retranslateUi(); 1
if(sizeof(long) 4
c->startServer(server_realm, 1
Player 2
if(parts_compare.isEmpty()) 1
dlg->cb_node->insertStringList(data.pa->psi()->recentNodeList()); 1
QList<URLBookmark> 2
NotificationContext(PsiAccount 1
parent->remove(item); 2
if(have.realm) 1
done(10); 1
d->updateProgress(i); 1
tb[0].on 1
installTranslator(dataDirectory() 1
if(QSvgRenderer::load(contents)) 1
pm.setItemEnabled(2, 2
toolTipFontInstalled 1
GlobalShortcutManager::KeyTrigger::~KeyTrigger() 3
updatePosition(); 2
TestPlugInDefaultImpl::addListener( 1
ui_.lb_status->show(); 1
edit->setText(text); 2
g_event->handlers.insert(pos, 1
return 5920
widget.loadUrl(url, 2
glBlendFunc(GL_SRC_ALPHA, 2
QtopiaServiceRequest 4
tbDef.stretchable 1
negotiationElement.toElement().attribute()); 1
trayicon_ 4
menu.exec(e->globalPos()); 1
if(group.nodeName() 2
lb_logo->setSizePolicy(QSizePolicy(QSizePolicy::Fixed, 1
m_downloadTime.start(); 1
d->pe_settings->setType(); 3
m_historyBack->activate(QAction::Trigger); 1
Private(EventDlg 1
out2<<; 1
x.setType(XData::Data_Submit); 1
d->ck_toolbarLocked->setEnabled(enable 1
largeIcons_ 1
ui_.lb_status->hide(); 1
PubSubItem 1
connect(PsiOptions::instance(),SIGNAL(optionChanged(const 1
ICodec 4
controls_layout->addWidget(controls[4], 1
JAVASCRIPT_OBJECT_CREATE_DONE(jsdtrace_filename(fp), 1
ui_.pb_close->setEnabled(false); 2
ProfileNewDlg::ProfileNewDlg(QWidget 1
w.wakeOne(); 14
QList<KeyStoreEntry> 6
painter->drawPixmap(QPoint(10 1
G(string)->setup(this, 1
helpMenu->insertSeparator(); 1
XmlElement::escape( 1
QCoreApplication::setOrganizationDomain(QLatin1String()); 2
if(!d.cdUp()) 2
list->addList( 1
thread 18
m_tabBar->mouseDoubleClickEvent(event); 1
CGContextFillPath(context); 1
tune.setTime((unsigned 1
:young(this, 1
GoogleFTManager::GoogleFTManager(Client 1
connect(tv_,SIGNAL(activated(const 1
MyClass 1
lb_keyname->setText(s); 1
resetState(); 3
errmap[QProcess::UnknownError] 2
removeNode(node.toElement().attributeNode(attribute)); 1
CPPUNIT_TEST(testFromXml_IQChild); 1
c.change(crl_list[n]); 1
JT_Search::onGo(); 1
view->expandAll(); 1
TLS 1
option 6
d->doDisco(host, 1
powerFile.close(); 2
vsoNeoHardware() 1
exportHistory(str); 1
TEST_CASE(realloc1); 1
updateInfo(root); 2
tls->setTrustedCertificates(CertUtil::allCertificates()); 1
double 35
InfoDialog 1
mimeData->setData(MIMETYPE, 1
maxarea 2
if(!f.open(QIODevice::ReadOnly)) 1
accounts->setModel( 1
priority_field.setLabel(QObject::tr()); 1
menu->addActionGroup(group); 2
d->lb_count->setNum(0); 1
std::istream 1
getLastErrorDetail(), 1
d->tb_url->setToolTip(tr()); 1
manager_(manager), 1
this); 2
g_TextureManager.EndPreLoad(); 1
buff 1
foreach(iconset, 1
bg_se->insert(d->tb_seSystem); 1
setTreeStepSize(0); 1
if(secdirty) 1
d->lb_status->setToolTip(u->makeTip(true, 1
mGeneralPanel->setDefaultBtn(default_btn); 1
QGLWidget::mousePressEvent(event); 1
bootstrap_symbol(); 1
d->sl_chatdlgop->setValue(PsiOptions::instance()->getOption().toInt()); 1
s.useAuth 1
lb_host->setEnabled(false); 1
session_->insertNodeAfter(children.at(i), 2
Q3PtrListIterator<TransferMapping> 4
iconObject 1
BigInt::Sign 1
TEST_CASE(alloc_alloc_1); 1
s.user 1
bg_se->insert(d->tb_seChat1); 1
Q_IMPORT_PLUGIN(xmmsplugin); 1
pub_changed(); 1
doc->setTextWidth(documentWidth); 1
Display 11
hb2->addWidget(d->tb_history); 1
LLFloaterBuildOptions::~LLFloaterBuildOptions() 1
~Result() 1
connect(qa_vcard, 1
ac(0), 2
tb[0].dock 1
pixmap.fill(Qt::transparent); 1
arg 1
if(process 2
message.m_details.end() 1
mGeneralPanel(NULL), 1
sh.setHeight(fontMetrics().height() 1
dumpOut[rot] 1
m_renderer->render(&painter, 1
connect(&d->idle, 1
game->insertSeparator(); 1
QMessageBox::Yes 10
dc.SetViewportOrg(0, 1
bar( 1
QWidget::setAttribute(Qt::WA_DeleteOnClose); 2
std::for_each(locks.begin(), 1
updateContactProps(xitem, 4
c 62
newgroup 2
G(array)->setup(this, 1
acc.opt_reconn 1
gpg.doDeleteKey(fingerprint); 1
QtopiaIpcAdaptor::connect(adaptor, 2
removeNode(meta1->node()); 1
foreach(SxeRecord 3
while(bigint_divcore(q[j-t-1], 1
do_connect(); 4
quitaction->setShortcut( 1
vsoPortableHandsfree.setAttribute(, 2
entryList 1
w->setWindowTitle(CAP(tr())); 4
for(QList<QDialog 1
act->input.opt_alwaystrust 1
if(qt_buggy_fsw()) 1
protocol->sendMove(sock, 1
PollingTuneController::PollingTuneController() 1
d->ck_toolbarOn->setEnabled(enable); 1
ui_.le_fullname->setEdited(x); 1
setWindowTitle(CAP(tr())); 1
if(WIFEXITED(status)) 1
connect(qa_wb, 1
frameLayout->addWidget( 1
GO(sym_nequal).set(symbol()); 1
QAbstractEventDispatcher 2
if(!gpg.success()) 9
QMenu 50
auto_open_field.setLabel(QObject::tr()); 1
s.setWidth( 2
if(!charMode) 1
if(out 1
IconsetSystemUI() 1
if(cmode 1
connect(historyMenu, 1
graphicsitem_.setBrush(QBrush(fillColor)); 1
d->photo 6
fileNames.sort(); 1
Logger 2
qlv_contextPopup(lcto_item, 1
if(use_uni) 1
m_page->m_pressedButtons 1
connect(d->recalculateSizeTimer, 1
doc.documentElement().insertAfter(children.item(i), 2
m.setSubject(str); 1
m_pParent=NULL; 1
if(count 3
mColor 2
StatusShowDlg 1
connect(d->pb_spNew, 1
manager_->updateState(metacontact, 1
d->attachView->setFixedHeight(80); 1
doRecvNextEvent(); 2
d->tb_icon->setToolTip(tr()); 1
XbelWriter 3
f.setPointSize(common_smallFontSize); 2
if(shutting_down) 1
Q_UNUSED(t); 1
connect(d->pb_reg, 1
popupType 1
CPPUNIT_TEST(testFromXml_NoChildren); 1
snl.nl_family 1
message+=QString().arg(s.status()); 1
if(phase 1
PFNGLACTIVETEXTUREARBPROC 1
QWebView 1
d->pipeStatus.readEnd().enable(); 2
printRequested(currentTab()->page()->mainFrame()); 1
d->layer.specifyEncoded(a.size(), 2
accounts->retranslateUi(); 1
if(d->onTop) 1
grabbedKey.mod 1
xa_option.label 1
handler_remove(d); 1
d->list.remove(it); 1
m_player 2
mPrefsVoice->apply(); 1
le_jid->setCursorPosition(0); 1
d->ck_gcHighlights->setChecked( 2
titleFont.setBold(true); 2
setText(theText_); 1
active->cm->scope->module->set_const(state, 1
infoLine->addWidget(lb_type); 1
exceptionTable->setAlternatingRowColors(true); 1
QCoreApplication::instance()->sendPostedEvents(0, 1
v_private 2
Translate, 1
if(!optionsPath.isEmpty()) 1
disconnect(d->le_newHighlightWord, 1
TabDlg 10
shortcutItem->child(keyItemIndex)->setText(0, 1
lastResponseWasExit 3
widget->initialize(); 3
Channel 3
InsertBookmarksCommand::InsertBookmarksCommand(BookmarksManager 1
left.version 1
m_fd 3
SxeManager::SxeNegotiation 3
p.setRenderHint(QPainter::Antialiasing, 2
proc 4
iconStart(); 2
addWidget(m_clearButton, 2
StatusComboBox 1
d->started 1
show(); 18
TEST_CASE(ret6); 1
switch(s[1]) 1
connect(disco, 1
text->setSizePolicy( 1
qsrand(t); 1
completionModel.setSourceModel(&model); 1
tbDef.nl 1
readText 13
popupAction(link); 1
Q_UNUSED(state); 1
ui_.lb_host->setEnabled(false); 1
AdvancedWidget<QWidget>::doFlash(on); 1
detachedSig 2
vecRoot.push_back(g_localizeStrings.Get(10505)); 1
setAttribute(Qt::WA_AlwaysShowToolTips); 1
~IconsetDisplayItem() 1
l->addLayout( 1
retarg 1
if(!g->server_init) 1
d->tb_left->setEnabled(enable 1
d->connect( 1
KeyStoreTracker 2
setMovable(!o->getOption(base_ 1
connect(d->proc, 12
z 2
Allocator 3
shortcuts 1
emoticons_list 1
so->characters 1
d->actionType 4
ui_.label_photo->setPixmap(QPixmap(img_scaled)); 1
d->port 7
if(base.tagName() 2
ck_reconn->setChecked(acc.opt_reconn); 1
if(ui_.le_fullname->edited()) 1
foreach(KeyStoreListContext 2
BookmarksManager::~BookmarksManager() 1
RCInterval::~RCInterval() 1
glVertex3f(x1, 2
set_authzid 2
contactChatState_ 3
eventId_ 1
m_cause( 1
account->openChat(from, 1
G(task)->set_object_type(Task::type); 1
StatusModel::instance()->resizeData( 1
QTimer::singleShot(FAKEDELAY, 6
AbstractDisposeable::dispose(); 1
PlugInManager::~PlugInManager() 1
SET(cm.get()->scope, 1
setPalette(p); 1
value--; 1
d->pixmap 2
v_inList 2
qlv_selectionChanged(0); 1
submitCommand(); 2
connect(search, 4
exec(); 1
IconLabel 7
setRootIndex(m_bookmarksManager->bookmarksModel()->index(1, 1
d->opt_noagent 1
chatEdit()->setEnabled(true); 2
Botan::SecureVector<Botan::byte> 2
piece->m_children.clear(); 1
sLog.outDebug(GetMangosString(LANG_SET_UINT), 1
d->n.set_sign(Botan::BigInt::Negative); 2
if(items.size() 2
m_player_total_time(0), 1
if(r.status().timeStamp().isValid() 1
d->roster.append(e); 1
canonicalizePath(mapper.getPublicDirectory() 1
ui_.pb_close->setFocus(); 1
negotiationTimer_.setInterval(120000); 1
d->tabWidget3->setPalette(customPal); 1
if(_p 1
PsiConAdapter(PsiCon 1
ObjectCallback::ObjectCallback(STATE) 1
editor->setGeometry(nameRect(option, 1
act->setChecked(tabManager_->preferredTabsForKind('M') 1
entry_ 2
grabKeyboard(); 1
handle_request(request_rec 1
Link 16
connect(qa_rem, 1
cb_type->setCurrentItem(i); 1
if(ki.id 2
GoogleFTManager 1
DynamicLibraryManager::doReleaseLibrary() 4
dlg->setHosts(hosts); 1
CBString 103
to->setIcon( 1
QHash<QString, 4
d->tray->setIcon(PsiIconset::instance()->statusPtr(STATUS_OFFLINE)); 1
memcpy(ai.data, 1
setFocusPolicy(Qt::StrongFocus); 2
d->le_url 1
FileRequestDlg(j, 1
view->show(); 2
controls_layout->addWidget(controls[2], 1
HttpPoll 2
u->setLastUnavailableStatus(makeStatus(STATUS_OFFLINE,j->status())); 2
cb_node->insertStringList(pa->psi()->recentNodeList()); 1
}else 15
d->forceNotify 1
toolbar->setIconSize(QSize(22, 1
connect(VCardFactory::instance(),SIGNAL(vcardChanged(const 2
TypedRoot<Task 1
if(min 2
psiPopupList->clear(); 1
def->addToFactory(); 1
memcpy(data() 1
renderText(TRUE); 1
getManagingTabDlg()->removeTabWithNoChecks(this); 1
cp->removeSelf(); 1
updateSelection(); 1
m_windowLoaded 3
tv_->setCurrentIndex(tm_->index(0,0, 1
if(_onTop 1
if(!msg.current_self->kind_of_p(state, 1
sInstance 7
PsiToolTip::install(d->lb_status); 1
delta_from_center.normVec(); 1
if(!providerNames.contains(name)) 2
manager_->removeContact(lastContact); 1
handlePendingEvent 1
rm->setItemEnabled(12, 1
m_session->GetPlayer()->SendPushToPartyResponse(m_session->GetPlayer(), 1
button->setText(idx.data().toString()); 2
QWhatsThis::add(d->sb_asXa, 1
act_voice_ 1
m_player_angle(360), 1
tag 4
tab 2
statusList->setState(i, 1
R1(e,a,b,c,d,16); 1
if(node_.isAttr() 1
if(list[n]->name() 1
c1.repeat 2
sxe.appendChild(negotiationElement); 3
pipeAux.readEnd().reset(); 4
QTextEdit::keyPressEvent(e); 1
d->tb_pgp->setChecked(true); 1
battvolt.open(QIODevice::ReadOnly 2
collect_mature_now 1
toolbar_->addWidget(new 1
map1[p] 3
m.lock(); 17
waiting->append(state, 1
m_leftLayout->setSpacing(spacing); 1
PsiOptions::instance()->mapLookup().toString()); 3
LEGOPTP.use_asXa 1
d->pb_deleteToolbar->setEnabled(enable); 1
LEGOPTP.scrollTo 1
z[2] 6
GO(klass).set(cls); 1
Message::detailAt( 1
ui.searchLineEdit->setText(QString()); 1
QString	s(), 1
Q_PIPE_ID 12
ic->activated(false); 1
qSort(selected.begin(), 2
model->index(i, 1
ts.time().minute(), 1
PsiEvent::PsiEvent(const 1
Q_ASSERT(mainWindow); 1
MUCItem 5
cert_files 1
m_open_action->setEnabled(true); 1
XScreenSaverInfo 1
bDelete->setToolTip(tr()); 1
contactList()->createAccount(w.jid().node(),w.jid(),w.pass(),w.useHost(),w.host(),w.port(),w.legacySSLProbe(),w.ssl(),w.proxy(),false); 1
sLog.outDetail(, 1
pending 4
services_[account->getAccountName()]->showXmlConsole(); 1
Task 5
backgroundPalette.setBrush(QPalette::Background, 2
SyncThreadAgent 1
if(min_delta 2
headerView->resizeSection(ContactListModel::StatusIconColumn,iconSize().width()); 1
painter.setPen(QColor(32,32,32)); 1
newPos.setY(qBound(rect.top(), 1
cookiesTable->setTextElideMode(Qt::ElideMiddle); 1
proc.writeStdin(a); 3
if(!v_rt){ 1
info_el.setAttribute(,avatar_image.width()); 1
lv_results->setSelectionMode( 1
active++; 1
grid->addWidget(bOk,0,1); 1
ui_.tb_cert->setText(str); 1
IconSelect::IconSelect(IconSelectPopup 1
connect(qa_chat, 1
Q_ASSERT(piece 1
gFrameStats.setTrackStats(FALSE); 1
textp->setLOD(3); 1
e.type 3
contactList()->emitDataChanged(); 1
close(); 58
Q_UNUSED(configVersion); 2
m->exec( 1
set_syserr(EPROTONOSUPPORT, 1
main_dict_ 1
m_letterbox(false), 1
authid 2
CClientDC 1
QMessageBox::information(NULL, 1
OptPluginsUI 6
global->properties[name] 1
waitForAccounts 2
m_closeTabAction->setIconVisibleInMenu(false); 1
if(edit->nameSpace().isEmpty()) 2
out->resize(0); 1
~SnarlPlugin(); 1
LEGOPTP.rosterGroupSortStyle 1
ThisThreadID 1
d->ck_dockToolMW->setWhatsThis( 1
translator.load( 1
voiceCaller_->accept(jid_); 1
m_autoSaver->saveIfNeccessary(); 2
tabManager_->setPreferredTabsForKind('C', 1
QList<int>::iterator 2
ui_.pb_topic->setEnabled(false); 2
TLSSession 3
cb_type->setWhatsThis( 1
setTabOrder(d->cb_ident, 1
if(!pre_stdin.isEmpty()) 2
beginInsertRows(index, 1
ui_.le_title->setModified(x); 1
URLLabel::URLLabel(QWidget 1
globals.special_classes[(uintptr_t)Qundef] 1
HttpAuthEvent 1
TestSuiteBuilderContextBase::~TestSuiteBuilderContextBase() 1
force_ssl 2
exceptionTable->setTextElideMode(Qt::ElideMiddle); 1
d->cb_toolbars->setCurrentIndex( 1
font.setPointSize(1); 1
b[at++] 1
set_syserr(ESRCH, 1
d->le_to 1
edit->setEchoMode(QLineEdit::Password); 1
hSystemStore, 1
block(); 3
.arg(remaining); 1
shared_ptr<TempFile> 3
SecureMessage::Format 5
connect(&writeErrorTrigger, 1
userStyleSheet->setText(settings.value(QLatin1String()).toUrl().toString()); 1
item.setMessage(message); 1
qRegisterMetaType< 2
AccountAddDlg::~AccountAddDlg() 1
e.appendChild(XMPP::HttpAuthRequest::denyError.toXml( 1
Private(QPipeDevice 1
x_j0, 1
bScummvm->setVisible(scr 1
MessageEvent::MessageEvent(const 2
i->jdns->setNameServers(ns_v6); 1
Q_DECLARE_METATYPE(QCA::KeyStoreEntry) 1
one2 1
d->iss_emoticons->setItemSelected(d->iss_emoticons->lastItem(), 1
session_->setAttribute(node_, 2
true, 2
m_action_button 2
tbl->setup(state, 3
ev->loop 1
QStyleOptionFocusRect 1
XbelReader 3
TestPlugInSignature 1
connect(bDelete, 1
pm->insertItem(tr(),10); 1
c2.rtrim 1
words 2
g_audioContext.SetActiveDevice(CAudioContext::DIRECTSOUND_DEVICE); 1
d->make_act(SecretKeys); 1
pipeAux.writeEnd().write(pre_aux); 2
cb_ssl->setWhatsThis( 1
auto_offline_field.setType(XData::Field::Field_Boolean); 1
bCatCstr 1
metacontact->setIncomingEvent(subContact->getIncomingEvent()); 1
view 3
TestPlugInDefaultImpl::initialize( 1
d->vb_main->addSpacing(4); 1
XmlOutputter::addFailureLocation( 1
layout->addWidget(buttons); 2
close_ 1
unz_file_info 2
engines.insert(engines.begin(), 1
TLS::Error 1
Q_DISABLE_COPY(FileWatch2) 1
closeTab(static_cast<TabbableWidget 1
voiceCaller_->call(jid_); 1
if(ui_.le_bday->edited()) 1
m_move_animation->start(); 1
m_historyForwardMenu->clear(); 1
GameBoard::~GameBoard() 1
setParent(&w); 1
core->applySettings(); 1
rootItem()->updateParents(); 2
GameSocket::~GameSocket() 1
--x; 1
i++; 13
account()->pepManager()->publish(http: 3
closeTabButton->setToolButtonStyle(Qt::ToolButtonIconOnly); 1
bSecureDestroy 4
act_icon_ 1
bg_color->insert(d->pb_cGroupBack); 1
if(d->lv->firstChild()) 1
cursor.setPosition(position, 1
createGroupchat(); 1
altv[altc++] 1
m_fRepeat 3
connect(j,SIGNAL(finished()),SLOT(sessionStart_finished())); 1
ssl_ 2
if(ui_.le_country->isModified()) 1
if(online) 12
a->resize(newsize); 2
GameSocket::GameSocket(QWidget 1
QWhatsThis::add(d->te_asMessage, 1
grid->addWidget( 1
exceptionTable->horizontalHeader()->resizeSection(i, 1
cb_node->setCurrentText(node); 1
Growl_SetDelegate(&delegate_); 1
twitpicUpload->deleteLater(); 2
LLWaterParamManager 1
setModel(m_historyMenuModel); 1
cursor 6
if((x.sign() 2
middlehbox->addSpacing(5); 4
dataServices_.remove(acname); 1
gGL.getTexUnit(0)->unbind(LLTexUnit::TT_TEXTURE); 2
if((sign() 1
graphicsitem_.setPos(startPos); 1
QVERIFY(edit.textMargin(LineEdit::LeftSide) 2
if(success) 2
state->om->set_class(dup, 2
disco->get(jid, 1
aspell_speller_save_all_word_lists(speller_); 1
SET(ss, 6
dataBox->addSpacing(5); 1
connect(this,SIGNAL(listsError()),SLOT(getDefault_listsError())); 1
Resource 6
if(!d->proc 6
sbuf.resize((6 1
sbuf.resize((7 1
add_sym(object_id); 2
QLibrary 2
if(out_id 1
mActions.reset(); 1
d->act_configure 1
datastr 2
ui.hostEdit->setEnabled( 1
errorCode 15
addLine(utf8str_to_wstring(str), 1
NMInstall(&bounceRec); 1
drawRadiusBox(&painter); 1
d->le_fMessage->setFont(PsiOptions::instance()->getOption().toString()); 1
unsigned 93
setWindowTitle(o->getOption(base_ 1
if(node_.isNull()) 1
if(negotiation->ownJid.isEmpty()) 1
Object(rb_eArgError), 2
piece->moveBy(cursor 1
sconfig 1
setChecked(b); 1
growlNotifier 1
m.setType(); 13
w2tab[w].initialized 1
connect(act_save_, 1
group->OnMessage(message); 1
appendRow( 1
option.ppIsOn 1
passphraseDlg_->deleteLater(); 1
PsiOptions::instance()->setOption(toolbarsStateOptionPath, 1
demandsAttention 1
result.resize(at 1
gMessageSystem->sendReliable(regionp->getHost()); 1
Regexp::init(this); 1
Q_EXPORT_PLUGIN2(itunesplugin, 1
pa->openAddUserDlg(); 1
startIcon(); 1
KeyLoaderThread::Out 1
newUrl=out; 1
actionsService_->unassignKey(contact); 1
proxyDialog.introLabel->setText(introMessage); 1
access_model_value.appendChild(doc()->createTextNode()); 2
InitializationVector::InitializationVector() 1
msgbox.exec(); 1
d->con_ssfMode 3
if(e.rid() 1
bg_delChats->setExclusive( 2
enum 30
groupState.clear(); 2
if(pending_ 3
d->mle->setUndoRedoEnabled(true); 1
t->setDefault(name); 1
ui_.log->setText(); 1
SpellHighlighter::SpellHighlighter(QTextDocument 1
mHeight(0.f), 1
MacKeyTriggerManager::qt_keymap[] 1
pms->count[0] 2
appStartup 1
removeNode(meta2->node()); 1
di.setJid( 1
childp->mText->setOnHUDAttachment(TRUE); 1
memset(&snl, 1
Type_erase 1
LLPanelLogin::setAlwaysRefresh(false); 1
Inactive, 1
LLVOAvatar 1
LEGOPTP.noGCSound 1
VM::~VM() 1
item.setAttribute(, 4
CertificateInfoPair::CertificateInfoPair(const 2
switch(mLOD) 1
if(hc.isEmpty()) 1
Q3PtrList<PopupActionButton> 1
MUCItem::Affiliation 4
Q3ListView::setFont(f); 1
out_buf 4
widget.addWebAction(action, 1
le_pass->setText(pw); 1
XDataField(XData::Field 1
_client->start(j.host(), 1
textp->updateVisibility(); 1
if(ui_.cb_action->currentText() 1
psiPopupList->append( 1
send(iq_); 12
:type(TypeKeyBundle), 1
d->profiles.append(cp); 1
url.addQueryItem(QLatin1String(), 2
m_closeTabAction->setIcon(QIcon(QLatin1String())); 1
connect(pb_removeBlock, 1
connect(pa->privacyManager(),SIGNAL(defaultListAvailable(const 1
dragsEnabled_ 1
LEGOPTP.useEmoticons 1
bool 1525
main(int 1
item->setDragEnabled(true); 1
if(!record(node)) 1
void	LLToolPlacerPanel::setObjectType( 1
if(!forcenew 1
QTEST_MAIN(tst_TabBar) 1
d->lw_selectedActions->setCurrentItem(item); 2
removeTabWithNoChecks(chat); 1
that->setWState( 1
mCurrentAction++; 1
d->vb_main->setMargin(layoutMargin); 1
ui_.tb_pgp->setVisible(account()->hasPGP() 1
s.setXSigned(); 1
text.setCodec(); 2
connect(act_add_to_roster, 1
FicLinuxInputEventHandler::FicLinuxInputEventHandler(QObject 1
addContact(contact, 2
