Args(Locale 1
bs.setChar(Character.toUpperCase(c)); 1
result.initialize(args, 1
if(!stamp.isRecurring()) 1
if(prefix!=null)dest.append(prefix); 1
staleAt 2
result.defineConstant(,runtime.newFixnum(6)); 1
yellow 1
factory 1
r[240]=48; 1
nil.init(); 1
assertFalse(ss.isEndOfString()); 1
ByteBuffer 17
rt.setUSec(((Integer)value[1])); 1
.toString())); 1
s-=BLOCK_SIZE; 1
runtime.getGlobalVariables().get(, 1
internalPut(JavaUtil.convertJavaToRuby(runtime, 1
undefinedMethods.put(methodName, 1
inspect(((ReturnNode)node).getValueNode()); 1
cnt=repeat(data,i,out1<out2? 1
Args(IRubyObject 1
if(ts 1
if(tp 1
javaUtils.defineFastModuleFunction(,IRubyObject.class,IRubyObject.class)); 1
list 7
init(args[0], 2
inspect(ifNode.getElseBody()); 1
if(tc 1
Node[] 3
sender.setOpaque(false); 1
dValue 3
mods.add(mod); 1
fflush(getWriteStream()); 1
ConditionalExpr(Lookbehind 1
entry[0] 5
ADD_INSN3(ret, 1
update( 2
value.getMetaClass().marshal(value, 2
super(in); 1
timeMetaClass.defineMethod(, 1
posix.chmod(theFile.getPath(), 1
free-=c; 1
getRuntime().getWarnings().warn( 2
callerBuffer.setValue(buf); 1
methods.put(mk, 1
pushRubyClass(executeUnderClass); 1
method); 1
noteMod.setModifies((NoteItem) 1
ArrayList 9
System.arraycopy(names, 1
assertEquals(HttpServletResponse.SC_NOT_FOUND, 1
parseStack.push(P_BLOCK_MAPPING_START); 1
config.getOutput().print(config.getPropertyHelp()); 1
this.closed 4
converters['n'] 1
gbc.anchor=GridBagConstraints.EAST; 2
if(exceptionStamp==null) 2
withParameterTypes( 1
event.addStamp(evs); 1
this.indentationSteps 2
method.getVisibility().is(visibility) 1
mv.ldc(switchValue); 1
if(last==first) 2
allowBlockPlain 1
second 3
sender.setBackground(background); 1
splice(RubyNumeric.num2long(args[0]), 1
RubyInstanceConfig 4
parseStack.push(P_ALIAS); 3
modEvent.setStatus(); 1
-.562681717632940809299928521323e-18, 1
push(runtime.getNil()); 2
null; 1
switch(back.type){ 1
klass.deleteConstant(internedName); 1
super(null,null); 1
intern_crc 1
assertEquals(ReWriteVisitor.unescapeChar('n'), 1
if(args[0] 2
falseObject 1
null, 20
if(provider 2
mv.tableswitch(1, 1
while(!ibc.haveValue() 1
Arity.checkArgumentCount(recv.getRuntime(),args,1,3); 2
cache.putMethod(this, 1
this.cal 2
if(nodeCheck 2
if((bits2=bs2.block0)!=null){ 1
element.add(adapterName); 1
APPEND_LIST(ret, 1
r[16]=61; 1
reported 1
mp.setUseCompoundFile(false); 2
&& 25
r[8]=40; 1
while(this.buffer.realSize 1
this.contentService 1
if(masterParents==null) 1
proxy_class.setAccessible(true); 1
table.setLinesVisible(true); 1
mv.ifne(doNotLoadClass); 1
k 1
grp(FS_G,fsClass)+ 1
join(); 1
HEXA_VALUES['1'] 1
this.server 2
range.init(); 1
checkPrintable(rawData,converted); 1
buf.replace(0, 1
re.printStackTrace(new 2
NOT 1
grow(); 1
term.memreg=id; 1
tokens++; 1
argn 1
JarEntry 3
_true.init(); 1
warnings.warning(node.getPosition(), 2
coll1.addStamp(new 1
firstZero 1
if(!(env.whitespace 1
signature.append().append(ci(retval)); 1
test1Val.add(); 1
getFlipConditionNode(((DotNode) 2
@SuppressWarnings() 11
child.remove(key, 2
txt 2
recv.getRuntime().parse(content.toString(), 1
r[72]=194; 1
headers.put(); 5
this.metaClass 1
DavPropertyName.create(PROPERTY_ACL_ACL, 1
r[88]=48; 1
sub.getDisplayName() 2
content.setNeedsReply(Boolean.FALSE); 1
message.append(']'); 1
this.removePossibleSimpleKey(); 2
_flags 3
}finally{ 1
if(!hasAlarm) 1
gzfile.defineClassUnder(,gzError, 3
close(rs); 1
'C' 1
vars[DEPTH]++; 11
src.unread(d); 1
this.systemFun 1
rb_cUNIXSocket.getMetaClass().defineFastMethod(, 1
Text 2
if(e.getRescue().token 1
ISourcePosition 17
push(pop().callMethod(context,MethodIndex.OP_LE, 1
this.explicit 1
area.getDocument().insertString(area.getDocument().getLength(), 1
mv.visitInsn(DUP2); 1
first.prev 1
chunks.append(lineBreak); 4
RubyClass 176
beginNodes.add(node); 1
this.table 4
type, 1
term=term.next; 61
mv.label(okCall); 1
getPrintStream().write(b); 2
digit 2
val.append(); 3
puts(((RubyArray) 1
2936675148L, 1
test1.put(); 1
dumpVariables(variables); 1
createSysErr(IErrno.EBUSY, 1
Composer 1
addToJavaPackageModule(interfaceModule,javaClass); 1
eventStamp.setEventCalendar(masterCalendar); 1
defaultSyntax.mimicsWithoutCheck(origin); 1
Array.set(getValue(), 1
channel.write(ByteBuffer.wrap(buf.unsafeBytes(), 1
store(last, 1
dst.position(dst.position()+v); 1
origin.setResourceBundle(msg); 2
this.bean 1
loadedFeaturesInternal.add(loadName); 1
newFrame.updateFrame(this); 1
removeItemFromCollectionInternal(item, 1
super.init(); 2
args.addAll(parse(rawArgs[0])); 1
this.valueNode 7
this.currentDirectory 1
out.println(magnitude); 1
.getCalendarCollectionStamp(collection); 1
java.setFailonerror(true); 1
types 9
compile(node); 1
-.12820039911738186343372127359268e+0, 1
c.setClassVar(,arg1); 1
List<NoteItem> 1
packageModule.addClassProvider(JAVA_PACKAGE_CLASS_PROVIDER); 1
getCurrentFrame().setJumpTarget(target); 1
activationContext.getHostname(), 1
stamp.setEventCalendar(new 2
infl.finish(); 1
cFiber.getMetaClass().defineFastMethod(, 1
this.javaName 1
this.stackTraces 1
addPage(parametersPage); 1
tooBig(arg, 1
runtime.setCurrentDirectory(oldCwd); 1
runtime.getWarnings().warn(message); 1
context.preRubyMethodFull(implementer, 1
jrubyModule.getMetaClass().defineAlias(); 1
TreeMap<String, 1
(s_op0 1
TRUE 1
if(no==null)throw 1
fis 5
context.preNodeEval(objectClass, 2
mv.ifne(topJmp); 1
visitAndPrintWithSeparator(iVisited.getExpressionNodes().childNodes().iterator()); 1
table[ClassIndex.SYMBOL][MethodIndex.INSPECT] 1
retval.append(); 8
(!DOSISH 1
IntHashMap.this.clear(); 3
fr.setOpaque(false); 2
list.add(p.getNonIncludedClass()); 1
raiseArgumentError(args,); 5
System.err.println(result); 1
arr.append(runtime.getNil()); 1
boards[S][i][j] 1
printUsage(); 2
if(prop 1
this.elseBody 1
buf.append(SLASH); 2
if(proc 2
weight=0; 1
context.setLine(-1); 1
test1.put(,test2Val); 1
StampUtils.getEventExceptionStamp(mod); 1
conditionState.reset(); 1
rb_sys_fail(fpath); 1
fastSetInternalVariable(, 2
mv.visitMaxs(arg0, 1
if(sb==null) 1
if(text.realSize 2
r[8]=3; 1
isLarge=true; 1
timeout 2
createSysErr(IErrno.ENOTDIR, 1
DavResourceLocator 2
print(sourceRangeContains(iVisited.getPosition(), 2
term.inverse=!bs.positive; 1
obj.mimicsWithoutCheck(this.pair); 1
checked=false; 3
i=parseGroupId(data,p,end,br,gmap); 1
buf.append(b); 1
mv.athrow(); 5
((JavaObject) 2
if(tz!=null) 5
NGramProfile 6
buf2.prepend((byte)ungotc); 2
table.setSelectionBackground(background);// 1
StyleConstants.setForeground(inputStyle, 1
mv.lookupswitch(tryDefault, 1
cv.visitField(ACC_PRIVATE|ACC_STATIC, 1
CalendarOutputter 2
resp.setStatus(202); 2
self, 4
table.setForeground(foreground); 1
isOpen 23
sb.append('\\').append('t'); 1
rs 3
buf[destByte] 1
SearchResult 2
Representer 2
instanceCallbacks.put(name,new 1
fileChannel.position(offset); 1
print(printSpaceInsteadOfDot(iVisited) 1
config.getOutput().print(config.getCopyrightString()); 1
labels.put(elm, 1
preparedTag 6
table[ClassIndex.FIXNUM][MethodIndex.OP_MINUS] 1
if(first[0] 1
weight+=addImpl(this,bs,!bs.positive^inverse); 1
text.getChars(start,len,mychars,0); 1
this.precisionModule 1
callbackFactory 1
values[p2--] 1
.isTrue()) 1
initializeClass(javaClass); 1
luceneGlobalAttributes.put(AttributeUtils.getKey(SimpleFieldMapper.class, 2
print('`'); 2
chunks.append(prefix.substring(start,ending)); 1
l2[i] 1
b.append(+maxCount); 4
clazz.inherit(superClass); 1
assertEquals(6, 3
sco.setVariables(bytecodes[ip].iseq_op.locals); 1
RubyObject.createObjectClass(this, 1
seq.format_type 1
realloc(newLength); 1
super(posix); 1
value.add(representData(iter.next())); 1
((List)node.getValue()).add(composeNode(node,new 1
gbc.insets 4
loadPath 1
i2Grow.append(iPads.substring(0, 1
setError(new 4
RubyJRuby.createJRuby(runtime); 1
printExceptionNode(iVisited); 1
Dur 5
init_unixsock(path, 1
possibleMoves.add(possibleMoves.get(j).copy().addD(l).addM(k)); 1
LOGGER.warn(e); 1
Type[] 3
.calculateEntityTag()); 6
masterNote.addModification(noteMod); 1
remove(element); 1
result.append(RubyString.bytesToString(buf)); 1
Insets 2
if(!this.getTagHandles().containsKey(handle)) 1
fileNames.add(name.replace('\\', 1
realKey.setFrozen(true); 1
attributesMap.remove(self); 1
this.servletContext 1
JRegexRegexpMatcher(Matcher 1
this(wrap,index,len,true); 1
arities.push(arity); 1
b.branchOut=null; 6
getMethodAdapter().ldc(oldName); 1
if(tag 11
super.startNewBranch(); 1
NAMESPACE_URI, 1
currentLineNumber++; 1
Args(Ruby 1
struct.callInit(args, 1
push(self.getMetaClass().fastGetClassVar(name)); 1
getRuntime().getString()); 2
NAMES[TO_INT] 1
QuickStringBuffer(String 1
tree 1
if(zlen) 1
visitNode(iVisited.getOptRescueNode()); 1
classWriter.visit(V1_4, 1
project 1
table[ClassIndex.STRING][MethodIndex.OP_TIMES] 1
arr_true.append(arg); 1
frameStack[++frameIndex].updateFrame(clazz, 1
runtime.getObject().setConstant(,rb_cIPSocket); 1
SCOPE_AWARE_METHODS.add(); 5
StaticScope 19
result.append(JavaClass.get(getRuntime(), 3
JavaProxyConstructor.createJavaProxyConstructorClass(runtime, 1
inspect(orNode.getSecondNode()); 1
runner 2
item.setTriageStatus(ts); 1
b.append(list[i]); 1
this.data=data; 1
DynamicScope[] 1
mv.visitMaxs(4, 4
if(hex>0xffff) 2
super(metaClass); 1
StandardYARVCompiler 2
push(receiver.callMethod(context, 3
mv.invokevirtual(cg.p(DynamicMethod.class), 3
mv.dup_x1(); 1
ReWriterContext 1
trueBranch.branch(this); 1
Ewinning 1
setReadable.invoke(file, 2
while(((db 1
Component 5
encode(startkey), 1
execute.addActionListener(new 1
seqBuf.append(sequence); 1
i=le.index; 1
completePopup.show(area, 1
block.setLight(light); 1
object 3
iseqval.locals 1
showCopyright(); 1
NON_ALPHA_OR_NUM['\r'] 1
mv.newarray(T_BYTE); 1
sharedArray.begin 1
runtime.setBignum(bignum); 1
javaMethods.put(arity,methodsForArity); 1
mv.invokevirtual(cg.p(PrintStream.class), 1
this.add(loginbox); 1
iter.next(); 5
multmin 1
gbl.setConstraints(tokenbox, 1
if(checkSimpleKey()) 1
if(validateSchema==true) 1
middleRegionIndex 1
getSession().update(col); 1
currentReader.close(); 1
hasMore=find(options); 1
incomplete 6
453092731L, 1
if(checkResolverPrefix(depth,path,(Class)obj[1],currentNode,currentIndex)) 1
assertTrue(server.isStarted()); 1
for(double 1
context.postNodeEval(); 2
utf8Decoder.onMalformedInput(CodingErrorAction.REPORT); 1
context.getCurrentScope().setValue( 1
bytes[buflen] 1
output.dumpObject((IRubyObject) 1
fieldsTable.setLinesVisible(true); 1
proc.call(new 1
all.addAll(yamlMultiRegexps.keySet()); 2
System.arraycopy(buf.bytes, 1
assertFalse(RubyBigDecimal.formatHasLeadingPlus()); 2
methodCompiler.method.dup2(); 1
response.setStatus(status); 1
tmp.append(elt(i)); 2
inspect(((YieldNode)node).getArgsNode()); 1
outerLoop: 1
.getMethod(JavaProxyClass.class.getName() 1
brokenContentDirectory.toURI().toURL().toExternalForm(), 1
((this.buffer.bytes[this.pointer] 1
mv.aload(DISPATCHER_BLOCK_INDEX); 2
input.close(); 1
context.exit(status); 1
r[48]=0; 3
out=new 4
addUnassignedAlias(getRubyCasedName(name),assignedNames,callback); 1
fieldsSection.setLayoutData(new 1
makeTree(t,data,vars,flags,lb,iterators,groupNames); 1
en.setCursor(hand); 2
internalEnd(); 1
ceil 2
runtime.getObject().fastSetConstant(, 1
level++; 1
name1, 2
mv.visitVarInsn(arg0, 1
if((jf 1
obj.setConstant(name, 1
r[48]=22; 1
this.getContentPane().setBackground(Color.decode()); 3
HibBaseEventStamp 2
result.scores[0] 3
dividend.callMethod(context, 2
ttype=PLAIN_GROUP; 2
e.next 1
i.i_op1 2
setChar('\r'); 1
src.unreadMany(lastLine); 2
control.dispose(); 1
if(!dbl 1
scopeStack[scopeIndex--] 1
getSession().delete(item); 2
((IokeSystem)IokeObject.data(system)).pushCurrentFile(filename); 1
if(offset<0 1
floatNode.setValue(-floatNode.getValue()); 1
valuesAndCriteria[i++][1] 1
if(vv 1
result 115
if(next==null){ 2
lastLine.append('\n'); 1
visitAndPrintWithSeparator(iVisited.getArgsNode().childNodes().iterator()); 2
other.getMetaClass().getName() 4
r[224]=75; 1
best 4
unmarshalStream.defaultVariablesUnmarshal(result); 1
javaModule.defineClassUnder(, 2
this.tokens.add(Token.STREAM_START); 1
fixnumNode.setValue(-fixnumNode.getValue()); 1
(base.length 2
body.compile(this); 2
moduleClass 1
qpencode(result, 1
iterLevel--; 1
btn.setOpaque(false); 1
pop(); 3
loadedFeatures.append(runtime.newString(loadName)); 1
score 2
pName 1
RubyUnboundMethod.newUnboundMethod(implementationModule, 1
limits[0]=0; 1
S4['\n'] 1
edit(); 1
chain.doFilter(request, 1
rb_cBasicSocket.getMetaClass().defineFastMethod()); 1
super(_name); 1
this.requiredArgsCount 1
type=NLOOKAHEAD_IN; 1
btn.setFont(font); 1
values.append(entry.value); 1
removeContent((ContentItem) 3
lines.append(super.toString()); 4
if(!this.closed 1
reader.parse( 1
args.length 2
if(v1 1
term=term.failNext; 3
info.put(, 11
ix++; 2
BSFManager.registerScriptingEngine(, 1
UNTIL 1
MockCollectionItemDetails 1
((RubyFixnum)step).getLongValue(), 2
visibility, 1
assertTrue(entrySet.contains(next2)); 1
System.exit(1); 8
addAccessor(args[0].asSymbol(), 1
emailIdx.remove(user.getOldEmail()); 1
NAMES[LAST] 1
result.turnLost[0] 1
if(tmp.type==END 1
parseStack.push(P_FLOW_SEQUENCE_START); 1
System.arraycopy(bytes,0,newbytes,vlen,buflen); 1
assertTrue(e.next().getClass() 1
getSession().update(parent); 3
delete_if(block); 1
ArrayList<Component> 2
arrayc.defineAnnotatedMethods(RubyArray.class); 1
findFields(context, 3
optionsPage.setSizeLimit(sizeLimit); 1
output.writeInt(hash.size); 1
if((library 1
prev=-1; 2
this.limit 3
NodeCompilerFactory.getCompiler(constDeclNode.getConstNode()).compile(constDeclNode.getValueNode(), 1
Utils.LOG.fatal( 2
nargs[i]); 1
mv.visitInsn(ICONST_0); 1
hunk[1] 1
b.replace(1, 3
io2Append.append('\n'); 3
response.setContentLength(item.getContentLength().intValue()); 1
scannerClass.defineMethod()); 1
System.arraycopy(value,0,bytes,pos,vlen); 2
javaProxy.includeModule(runtime.fastGetModule()); 1
i.s_op0 4
this.col 1
result.x++; 3
errorColumn 1
addUnassignedAlias(javaPropertyName 1
-.576876469976748476508270255092e-3, 1
if(cl==null) 1
rb_cTCPSocket.includeModule(runtime.fastGetClass()); 1
lock.lock(); 2
newMethod.invokevirtual(cg.p(DynamicScope.class), 2
loginbox 1
x-=3; 2
Utils.out(Utils.error(503, 2
scroll.setOpaque(false); 1
if(prefix!=null) 2
visitNode(iVisited.getNextCase()); 1
while(next_p(self).isTrue()) 1
Assert.assertEquals(2, 10
output.writeInt(members.size()); 1
module.defineAlias(newName, 1
filename2 1
player 1
modify(); 27
100000000L, 1
if(dir[0] 1
array.append(values[i]); 1
Assert.assertNotNull(attribute); 1
ASTCompiler.compile(body, 1
size=new 1
InputContext 1
NAMES[OP_LSHIFT] 1
STRANGE_CHAR['@'] 1
env.expectBlockMappingKey(false); 1
links[1].setActionCommand(); 1
print(getSecondRegexpEnclosure(iVisited)); 2
write('{'); 1
assertThat(ret.length, 6
set(value); 1
if(match.isNil()) 3
currentSequence 1
catchStack 1
internalClose(); 1
addUnassignedAlias(rubyName 1
if(this.column 2
Branch(int 1
(pat 1
if(!(arr 1
visitNode(n); 7
LoadServiceCreator 1
RubyNil.createNilClass(this); 1
cal.set(Calendar.MINUTE,Integer.parseInt(min_s)); 1
System.out.flush(); 1
blockArg.getBlock().isLambda 1
bufferedIO 1
write('i'); 1
.3505062030889134845966834886200e-6, 1
fixnum.dispatcher 1
this.nextNode 2
isLarge=false; 1
ensureWrite(); 4
assertNotNull( 7
+(toHexDigit(data[i++])<<4) 1
ga.visitInsn(Opcodes.ATHROW); 1
callbackFactory.getFastMethod(, 5
if(event!=null) 1
callback, 3
traceReturn(context, 4
dumpDefaultObjectHeader(value.getMetaClass()); 2
finName.append(all[i].toLowerCase()).append(); 1
if(!closed 1
envs.put(runtime.newString(entry.getKey().toString()),runtime.newString(entry.getValue().toString())); 1
Mutex.setup(runtime); 1
THAI 2
Set<String> 2
symbolClass.kindOf 1
((Message)IokeObject.data(atExit.message)).evaluateCompleteWithoutExplicitReceiver(atExit.message, 1
RubySymbol.createSymbolClass(this); 1
calendar.getProperties().add(CalScale.GREGORIAN); 1
StaticFieldGetter(){} 1
fis.close(); 3
this.statClass 1
if(!inRange){ 1
assertEquals(ReWriteVisitor.unescapeChar('\f'), 1
config.getIndentor().indent(); 10
IRubyObject 450
condition.branch(this); 2
mv.visitLdcInsn(arg0); 2
createSysErr(IErrno.EDEADLOCK, 1
mv.visitInsn(DUP_X1); 1
rb_cUDPSocket.getMetaClass().defineMethod()); 1
db.append(parentConfig.getDn()); 1
result.setScope(scope); 1
variableNames 3
st_mode 6
iVisited.get(i).accept(this); 2
srcList 3
R_FLOWNONZERO['\n'] 1
for(CallAdapter 1
offset=mr.in; 1
entry.value 2
this.defaultYamlVersion 1
inspect(attrAssignNode.getReceiverNode()); 1
doc.add(text(DC 1
this.format 1
clazzInit 2
result.y++; 3
to[tbase] 4
getMethodAdapter().aload(THREADCONTEXT_INDEX); 1
super(PREFIX_DISPLAY_ALARM, 1
context.getRuntime().getWarnings().warn(ID.MULTIPLE_VALUES_FOR_BLOCK, 3
response.flushBuffer(); 3
YamlMultiConstructor 2
c=(char)((toHexDigit(c)<<24)+ 1
old 1
if(INSTANCE.getpeername(fd, 1
synchronized(classProviders) 2
c.setSuperClass(new 1
this.isSync 2
hibQuery.setFlushMode(FlushMode.MANUAL); 3
this.indent 2
for 824
haveLocalMethod 1
this.next 4
RubyNumeric 6
modUid 1
visitNode(n.getCondition()); 2
arr.alloc(args.length); 1
javaClass.unlockProxy(); 3
validateInstanceVariable(name); 4
str.setTaint(true); 1
finalIter.remove(); 1
SocketChannel 1
items.add(convertTaskCalendar(cc.calendar)); 1
if(!finished) 1
nextLine 2
unlock(); 1
if(iVisited.getReceiverNode() 1
table[ClassIndex.HASH][MethodIndex.LENGTH] 1
end--; 2
if(p+1 1
createSysErr(IErrno.E2BIG, 1
insert(new 2
this.index=index; 1
this.skip=skip; 1
fileStatClass.defineAnnotatedMethods(RubyFileStat.class); 1
setLayout(new 1
assertEquals(reader.readLine(), 1
this(runtime); 1
if(vfb.getUid()!=null) 1
if(src!=null){ 1
StreamPumper 3
floatc.getMetaClass().defineFastMethod(, 1
table[ClassIndex.ARRAY][MethodIndex.TO_S] 1
type=Term.BACKTRACK_FINDREG_MIN; 1
if(otherClass.equals(Character.class)) 1
modules[i].callMethod(context, 2
if(!style.isNil()) 1
mv.visitInsn(arg0); 1
synchronized(attrs) 2
converters['F'] 1
-.133238673575811957928775442057e-11, 1
outBuffer.flip(); 4
ByteArrayOutputStream 13
record.addFields(generateUnknownFields()); 3
request.setDn(baseDn); 1
getRuntime().getCurrentContext().getCurrentFrame().setBackRef(result); 2
if(bs.isLarge){ 1
(x.callMethod(context, 1
if(c2>=256 1
Insn 3
block.yield(context, 48
this.integerClass 1
mv.aload(SELF_INDEX 1
block.shared=false; 1
Map.Entry 20
b.append(new 2
StyleConstants.setForeground(outputStyle, 1
attr.setValue(newValue); 1
if(r.isDoNotReverseLookupEnabled()) 1
boardW[i][j]=0; 1
this.env.bestWidth 1
if(file.isDirectory()) 1
val.put(obj, 1
StaticFieldSetter(String 1
if(r.isNil()) 2
Wwinning 1
visitAndPrintWithSeparator(visited.getArgsNode().childNodes().iterator()); 1
encode(dbname), 4
RubyModule 108
bytesRead 1
reject_bang(block); 1
AssignedName(String 1
System.arraycopy(scopeStack, 1
makeLazyQMark(vars,current); 1
'u' 2
regexpString 2
assertEquals(0, 28
if(!((Class)nodeCheck).isInstance(currentNode)) 1
actual.term=term.failNext; 10
CURRENT.wait(interval); 1
resetByModes(subsetModes); 1
x+=3; 2
mv.ifne(okCall); 2
while(Character.isDigit(data[i])){ 1
stat.setup(descriptor); 1
list.append(input, 1
FixnumNode 2
moveTally.get(3*3+1).score 1
this.object 1
if(aliasedTzId!=null) 2
this.randomSeed 1
mr.in=mr.out=-1; 2
EventStamp 13
iVisited.getCondition().accept(this); 1
myHead.setForeground(foreground); 1
JavaUtil.convertJavaToRuby(runtime, 1
if(ctor 2
mailSender.send(new 1
NAMES[OP_GE] 1
installField(context, 1
encodeLongBigEndian(result, 1
chomp(buffer); 1
newModes 1
!attrs.isEmpty()) 1
while(s 2
setWritable 1
if(!str.isNil()) 1
this.delegate 2
assertEquals(,c.getScriptFileName()); 1
pushFrame(currentFrame); 1
clzz.callMethod(context, 2
newConstructorParameterTypes[superConstructorParameterTypes.length] 1
buttonPane.add(eval, 1
result.getMetaClass().defineAlias(); 1
if(valLower.equals()) 1
this.id=id; 1
ensure(2,false); 2
this.useVersion 1
if(exactPaths.containsKey(null)) 1
log.error( 1
gbc.ipady=10; 1
intern_crc.setInt(intern,val); 1
variable 1
buildStaticScopeNames(mv, 1
if(localHost 1
output.dumpObject(struct.values[i]); 1
sc.setValue(i,args[i],0); 1
appenderConfig 1
result.add(path); 1
init__resolver_scanner_index_offsets_0( 1
System.arraycopy(y.values, 1
holders.put(viewSignature, 1
term.type=(flags&DOTALL)>0? 1
if((i+rLen)>end) 2
addToJavaPackageModule(proxyClass, 2
callback.install(proxy); 2
time 4
result.defineMethod()); 9
runtime.callEventHooks(context, 12
node=la.in; 1
output.write(buf.bytes, 2
systemCallError 1
SIMPLE 2
ICalendarUtils.setDuration(exceptionEvent, 1
osr 1
Object.class, 1
Desktop 2
Assert.assertTrue(report.calls.contains(coll1.getDisplayName())); 1
renderingConfiguration.getCurrentFopFontStatus(), 2
mv.visitMaxs(2, 5
ees.setIcalUid(newSeries.getIcalUid()); 1
this.ifNoneMatch 3
environmentReader.handleException(e); 2
Digester 1
this.quit 1
out.writeObject(log); 1
mv.label(tryCatch); 3
if((colz 1
if(j>=offset){ 2
Document[] 6
closeStreams(); 2
cc.dataWrapStruct(block); 1
byte[]strBytes 1
createConstructor(); 1
if((0 1
default: 181
while((last 1
next.prev=term; 1
print(iVisited.getNewName()); 2
defineFastPrivateMethod(name, 1
req.element(, 3
method.start(); 1
fastStoreValue(internedName, 7
proxyClass.callMethod(recv.getRuntime().getCurrentContext(), 2
obj.mimicsWithoutCheck(this.javaWrapper); 1
BOOL_VALUES.put(into(),Boolean.TRUE); 9
top.add(melipone); 1
VERSION 1
newTable[idx] 2
ICalendarUtils.setUid(note.getIcalUid(), 1
build.append(s); 1
frameStack[i] 1
((MetaClass) 3
result.append(largs.length 1
buf.write(digits,0,intDigits); 2
getRuntime().newString(sender.getHostName()), 1
IokeObject.setCell(rr, 6
trueClass.getMetaClass().undefineMethod(); 1
int[] 16
addConstructor(,new 27
this.jumpTarget 3
pos.setErrorIndex(0); 1
memregNo=gno.intValue(); 1
bitbuf 2
condition.out1=null; 1
sign 8
i-=regLen; 1
Utils.LOG.warn(); 6
this.id1 1
this.id0 1
sb.append(entry.value.callMethod(context, 1
method.label(tryEnd); 1
file.truncate(newLength); 1
visitNodeInIndentation(iVisited.getBodyNode()); 8
System.arraycopy(l1,0,l2,argNames.size(),l1.length); 1
mv.visitCode(); 14
push(instruction.callAdapter.call(context, 1
syncExceptions(exceptions, 1
current 3
result.callMethod(getRuntime().getCurrentContext(),, 1
hex=(CharacterClass.toHexDigit(d)<<4)+ 1
b.append('x'); 1
decZeroes 5
instanceCallbacks.put(setName,new 1
ServerProperty.PROP_SCHEMA_VERSION, 1
this.nameNode 1
context.getRubyClass(), 5
if(shared) 1
update_seq 3
while(len-- 1
classInstance 1
io2Append.append((char)lTranslationTable[077 9
this.anchorTemplate 1
mv.label(endJmp); 1
assertNull(ss.group(4)); 1
((RubyException) 1
while(true){ 2
frame.getPosition().getFile().equals(previousFrame.getPosition().getFile()) 1
argumentTypes[i 1
sizeLimit 2
if(max<0){ 1
Origin.init(origin); 1
bt 2
fiber.result 1
internalCleanupSafe(); 1
getPrintStream().print(l); 1
System.out.println(namedClasses.containsKey(args[i])? 1
FULL_LINEBR['\n'] 1
collection.toArray(arr.values); 1
bean1.setAge(24); 1
ensure(i+2,false); 1
lineBreaks 1
this.browseCollectionView 1
globalVariables.put(name, 4
newBlock.isLambda 3
process.destroy(); 1
PrintWriter 4
if(pe 1
encode.get(potential); 3
la.prev=in; 1
RUBY1_9_VERSION 1
result.turnLost[2] 1
regexpClass.defineFastMethod(, 2
i+=sampleLen; 1
8192 1
st_mtime 1
//		jth.setOpaque(false); 1
finalizers 1
pane.add(scroll); 1
context.defineAlias(alias.getNewName(),alias.getOldName()); 1
ADD_ELEM(seq, 7
d.setProc(self.getRuntime().newProc(false, 1
getPrintStream().print(d); 1
actual.regLen=bitset; 2
(period 2
out.print(indentationChar); 1
scope 4
//assert 6
while(!available 1
runtime.getRandom().nextInt(Math.max(1, 1
argu[i] 1
writeLineBreak(ByteList.create(+cha)); 4
rlen 2
frameStack[++frameIndex] 1
floatStep(context, 1
mv.visitLineNumber(position.getStartLine() 1
System.arraycopy(bytes,0,newbytes,0,pos); 4
setAll(in); 1
value.add(new 1
Iterator<String> 20
dynamicScope.cloneScope(), 1
falseClass.getMetaClass().undefineMethod(); 1
if(currObj==null 1
weight+=subtractImpl(this,bs,!bs.positive^inverse); 1
expressionLoop: 1
dumpObject(value); 1
tc.getCurrentScope().getStaticScope().setModule(objectClass); 1
visitor.visitNode(bodyNode); 1
ItemPath 1
descriptor 1
++first 1
for(Object 2
TestJavaBean 1
parseStack.push(P_FLOW_NODE); 6
assertTrue(new 1
Constructor[] 2
descriptor); 1
table[ClassIndex.REGEXP][MethodIndex.OP_EQQ] 1
ctor.addFixer((Node)(((LinkNode)val).getValue()), 1
if(jump<0) 2
zlen 1
cSizedQueue.defineFastMethod()); 3
while(v2.charAt(ix) 1
term.newBranch(); 1
FieldPosition 1
b.append(next.instanceNum); 1
methods.add(jpm); 1
super.start(); 2
field.set(null, 1
this.tOutside=offset; 1
args.call(methodCompiler); 3
while((d=data[i++])!='}'){ 1
bs.setCategory(cats[i]); 1
serializeNode(node,null,null); 1
title.setText(msg.getString(); 2
this.parameters.put(parameter.getName(), 1
switch(cond.nodeId) 1
fileList.add(1, 2
top=(actual=top).sub; 2
enm.defineMethod(, 1
if(lb.isPositive){ 1
table[ClassIndex.ARRAY][MethodIndex.OP_SPACESHIP] 1
s0 2
atEOF 3
if(marks==null 1
hasOptArgs 1
direct[Dnum] 1
scanner.append(obj.convertToString().getValue()); 1
this(); 4
mv.putfield(cg.p(Dispatcher.class), 1
invokeDynamic(name, 2
getInstance().stop(0); 1
if(RubiniusInstructions.ONE_INT[code]) 1
term.type=Term.BITSET; 1
(RubyDir) 1
dirClass.defineAnnotatedMethods(RubyDir.class); 2
this.pointer++; 1
arity().checkArity(context.getRuntime(), 1
table[ClassIndex.STRING][MethodIndex.OP_LSHIFT] 1
CHOMPING['3'] 1
md.update(viewFunction.replaceAll()); 1
cache.writeLink(this, 1
this.parameterValues.clear(); 1
nativeThread.start(); 1
partitionClient.store(); 1
r[176]=74; 1
STATES[NOTHING] 1
r.run(); 3
ss 6
unsafeReplace(beg, 2
counters[cs.index]=cs.value; 1
parameterValues.put(JDBC.URL, 1
st 8
lPadding 2
this.sourcesNode 1
sm 1
ioError 1
LoadServiceResource 2
factory.createIgnoreCommentsReWriteVisitor().visitNode(n); 1
Assert.assertEquals(4, 1
se 1
1000000L, 1
mv.go_to(normalBreak); 1
QuickStringBuffer(char[] 1
r[24]=1; 2
r[104]=337; 1
records.add(record); 3
if((c 1
this.blockArgNode 1
obj.registerMethod(obj.runtime.newNativeMethod(, 2
parseStack.push(P_PROPERTIES); 4
getRuntime().getWarnings().warn(); 2
how 1
masterParents 1
mv.visitJumpInsn(IFLE, 1
runtime.callbackFactory(JavaProxyClass.ProxyMethodImpl.class); 1
mep.put(key,self.callMethod(context,MethodIndex.AREF, 1
callAdapter 1
RubyBigDecimal.createBigDecimal(runtime); 1
exc.set_backtrace((IRubyObject)exc.removeAttribute()); 1
assertEquals(,val1,outp2[0]); 1
TopDocCollector 1
MaxFieldLength.UNLIMITED); 1
gbc.gridwidth=2; 5
System.out.print(); 16
matcher 11
'O' 1
allArgs.addAll(Arrays.asList(args.split())); 1
toRemove.add(vtz); 1
addUnassignedAlias(rubyName+'?',assignedNames,callback); 1
streams.set(streamForCurrentThread); 1
r[80]=15; 1
ELSIF 1
result.append(constructors[i]); 1
sorted 3
checkForDuplicateUid(content); 2
& 1
sub.setCollectionUid(newsub.getCollectionUid()); 1
iVars.put(, 2
while(-1 1
config.getPrintQuotesInString().revert(); 6
this.add(content); 1
argsTypeHash 2
while(iter.hasNext()) 1
this.idGenerator 1
dirp.add(je); 1
if(length 4
createSysErr(IErrno.EADDRINUSE, 1
if(name.equals()) 2
server.bind(new 1
wizard.setSizeLimit(sizeLimit); 1
r[168]=1; 1
r[344]=0; 1
NormalizedFile 4
this.callAdapter 3
proxyClass.makeMetaClass(interfaceJavaProxy.getMetaClass()); 1
instances.addComponent(event, 1
sender.setActionCommand(); 1
cntrl.setRange((char)0,(char)0x1f); 1
System.out.println(String.copyValueOf(stuff)); 1
result[0].append(largs[0]); 1
newCal.add(Calendar.SECOND,1); 1
if(!first 2
if(len.getValue()>0) 1
Runtime.initRuntime(runtime); 1
tOffset+=skip; 1
SubscriptionTarget 3
client.executeMethod(get); 6
RecurrenceExpander 2
addEventHook(callTraceFuncHook); 1
actual=new 16
if(dir[i] 1
while(_pat[pat] 1
printCallReceiverNode(iVisited); 1
bs.setChar('-'); 1
while(Character.isDigit(peek(length))) 1
Lookahead 1
getArity().checkArity(runtime, 2
method.astore(SCOPE_INDEX); 1
monitor.worked(1); 2
DavPropertyName 1
byte 39
remainder 3
newProfile.analyze(text); 1
if(note.getParents().size()==0) 1
table[ClassIndex.MODULE][MethodIndex.INSPECT] 1
note.setTriageStatus(ts); 1
IllegalAccessException, 3
((RubyMatchData)new 2
Restart.JavaRestart 1
MAC_ROMAN.name() 1
separator 1
falseClass.defineFastMethod(, 3
checkSchemaVersion(); 1
for(int 122
EntrySourceConfig 1
startDate 1
super.initialize_copy(originalModule); 1
sum.intersect(bs); 1
spoolEvent(StampUtils.getEventStamp(item), 1
nativeThread.join(); 1
alloc(ARRAY_DEFAULT_SIZE); 3
chgrpResult 1
tokenBuffer.append(BEGIN_DOC_MARKER); 1
interfaceNames[i] 1
open 1
mv.if_acmpne(notBlockBreak); 1
DynamicScope 9
proc.getBlock().getFrame().setKlazz(this); 1
sb.append('x'); 1
this.tokensTaken++; 1
INVOCATION_HANDLER_TYPE.getDescriptor(), 1
term.append(makeTree(t,data,vars,t.flags(flags),new 1
2 1
params 1
noMethodErrorClass.defineMethod()); 1
switchValue++; 1
sb.append('$'); 1
(RubyClass) 1
bits 8
HEXA_VALUES['D'] 1
assertTrue(valuesIterator.hasNext()); 1
if(!(_cl 1
regexpClass.getMetaClass().defineFastMethod()); 4
JavaUtil.convertRubyToJava((IRubyObject) 1
prop.setValue(value); 1
STRANGE_CHAR['!'] 1
thisClass.isAssignableFrom(otherClass)) 1
result.defineFastMethod( 2
Adler32Ext 1
STATES[FLOW_MAPPING_SIMPLE_VALUE] 1
paramValue.add(new 1
ga.newInstance(udt); 1
if(newMatch 1
push(runtime.newString(concatter.toString())); 1
push(context.getCurrentScope().getValue((int) 1
infl 1
target.add(o3); 1
if(dateProp.getDate() 1
Dates.getInstance(recurrenceId, 1
raiseArgumentError(); 4
__FILE__(, 1
new_title=title.getText(); 1
method.go_to(readyForCall); 1
future 1
min=0; 1
numCache.put(number, 1
close(insertCollectionItemStmt); 1
((this.buffer.bytes[this.pointer+3] 1
'0' 3
descriptor.checkOpen(); 2
clear(3); 1
IAutoloadMethod 2
JavaObject.wrap(runtime, 1
this.adler=adler; 1
update(args[0]); 1
Field 10
if(firstLineLoadedFeatures.contains(file)) 1
topgbl.setConstraints(real, 1
System.arraycopy(bytes,index,bytes,index+1,realSize-index); 1
newStruct.makeMetaClass(superClass.getMetaClass()); 1
super(name,STATIC_METHOD); 1
assertEquals()); 42
this.row 1
LuceneGateway(final 1
.199467059020199763505231486771e-5, 1
getRuntime().checkSafeString(args[0]); 1
System.out.println(+e.nextElement()); 1
if(c=='='){ 1
if(current==null) 4
modDtStart.getParameters().add(getAnyTimeXParam()); 1
push(stack[stackTop 1
note 2
gzfile.defineFastMethod(, 1
ConnectionConfig 1
us.s[bytesToMove] 1
s-=count(target.bits,0,BLOCK_SIZE-1); 1
if(data[i]==first 1
if(data[i]!=c) 1
e.getMessage() 1
table[ClassIndex.STRING] 1
enm.defineFastMethod(, 2
@JoinColumn(name 1
buffer 4
this.comparableModule 1
contentService 1
instanceNames.putAll(INSTANCE_RESERVED_NAMES); 1
buf[--charPos] 20
calendar.set(Calendar.YEAR, 1
R_FLOWNONZERO[','] 1
current.in=mr.in; 1
this.indentationChar 2
q.add(Config.QP.parse(query.getString()), 1
(first 1
loadRuntime(); 29
if(i==offset){ 2
parseStack.push(P_BLOCK_CONTENT); 2
model.put(}); 2
BufferedReader 12
request.addHeader( 1
table[ClassIndex.HASH][MethodIndex.TO_S] 1
assertEquals(2, 8
while(System.currentTimeMillis() 1
PartitionClient 3
decodeIntUnsignedBigEndian(enc)); 1
token=new 2
cal.set(Calendar.ZONE_OFFSET,sign 1
this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 1
storedFixnums.add(o1); 1
this.marshalModule 1
length--; 1
packageModule.setInstanceVariable(,runtime.newString( 1
if(occurrence 1
connection.setAllowUserInteraction(true); 1
inlineSpaces 1
mv.label(breakLabel); 1
System.arraycopy(catchStack, 2
if(addIndent(this.column)) 2
this.lastLine 1
slot 3
obj.setData(Decimal.decimal(number.getValue())); 1
mv.ldc(name); 14
this.baseDir 1
if(inv) 2
chars[1] 1
chunks.append(spaces); 1
dict.init(); 1
generateProxyMethods(superClass, 1
ti.setText(0, 1
s+=Block.subtract(bs1.blocks,bs2.blocks,0,BLOCK_COUNT-1,inv); 1
build.append().append(after); 1
sharedArray.values 1
addRecordsNonEvent(records); 1
module.defineAnnotatedMethods(RubyMarshal.class); 1
for(List<String> 1
MODULE 1
initialCapacity 2
this.writer 1
arity.init(); 1
createSysErr(IErrno.EMLINK, 1
pushCallFrame(clazz, 2
Utils.urlEncode(dbname), 1
resultStyle 1
try{ 33
minIndent 1
key+=rid.toString(); 1
result.defineConstant(,runtime.newFixnum(13)); 1
z.realLength 1
javaClass, 5
DynamicMethod 32
servletContext.setAttribute(CosmoConstants.SC_ATTR_SERVER_ADMIN, 1
entries.clear(); 1
bombs 2
decDigits 11
le.actual=actual; 6
uu_table 1
contentDao.createContent(calendar, 2
this.crc=crc; 1
if(clazz 1
DEFAULT_TAGS_1_0.put(); 2
cContinuation.defineAlias(); 1
infectBy(module); 1
(CharacterClass.toHexDigit(data[i++])<<12)+ 1
key.add(superClass); 1
hash.defineFastMethod()); 1
rootName); 1
method.getstatic(p(Block.class), 1
re.root=optimized; 1
if(stillStarting) 1
push(bytecodes[ip].o_op0); 3
if(bv==null) 1
buf.length(0); 7
r[104]=15; 1
user.removeSubscription(subName); 1
super.setContentHandler( 1
this.socket 2
BSFManager.registerScriptingEngine( 2
invokeDynamic(operator, 1
alloc(ARRAY_DEFAULT_SIZE 1
_match: 1
this.endSeen 1
setBaseName(name); 1
rubyObj 21
if(block.isGiven()) 2
url.append().append(request.getServerPort()); 1
super.initialize_copy(original); 1
this.column++; 2
envVarName 1
if(!env.whitespace) 1
nilObject 1
b.next=term; 2
checkPermissionsSubsetOf(subsetModes); 1
.getServerProperty(ServerProperty.PROP_SCHEMA_VERSION); 1
registerSelect(selector, 1
methodCompiler.createObjectArray(1); 1
System.arraycopy(add, 1
s 26
cMutex.getMetaClass().defineMethod()); 1
//		jth.setForeground(foreground); 1
/*lostTurnScore 1
JOptionPane.showMessageDialog(Smash.getFrames()[0], 17
if(!(ceh 1
this.servlet 1
suspect 1
recv.getRuntime().checkSafeString(src); 1
message.append().append(methodName); 1
realloc(p); 1
obj.mimicsWithoutCheck(javaArray); 1
curr 1
recv.getRuntime().getJavaSupport().handleNativeException(e.getTargetException()); 1
while(arr[c]){ 1
defaultSyntax.init(); 1
item.setImage(PenroseStudio.getImage(fieldConfig.isPrimaryKey() 1
zstream.defineFastMethod(,RubyKernel.IRUBY_OBJECT)); 1
collected.append(obj); 2
this.endNode 2
-.14844276972043770830246658365696e-11, 1
if(str.charAt(i) 4
chmod(recv, 1
!(originModule.isModule() 1
parameterTypeCache.put(method, 1
resp.setContentType(); 2
if(rid!=null) 1
out[op] 2
if(cnt>term.minCount){ 2
prototype 1
buf.realSize 4
print(getFirstRegexpEnclosure(iVisited)); 2
method.if_acmpeq(variableCallType); 1
version.freeze(); 1
assertTrue(rubyObject.isTrue()); 1
calendar.setTime(date); 1
MethodCallback(String 1
finalize(runtime, 1
result.dispatcher 1
popFrameReal(); 1
1684777152L, 1
httpResponse.setStatus(404); 1
engineering 2
output.writeString(strValue); 1
reference.remove(); 1
result.getDocumentTree() 5
.5370503749311002163881434587772e-11, 1
melipone.setOpaque(false); 1
moduleClass.defineFastPrivateMethod(, 7
((AttributesMap)attrs).putNoIntern(name, 7
if(rb 1
current=la; 1
es.setEndDate(new 1
this.parameters.clear(); 1
Runnable 1
this.totalPadding 1
if(dir!=null)rootf=dir; 2
invoke( 1
event.setName(name); 2
reset.branchOut=b; 1
Profile 5
convertedArgs[len] 1
atLeastOneDescriptor 3
encodeShortBigEndian(result, 2
calendar.get(Calendar.MONTH) 1
manager_.exec(, 1
openFile.setMainStream(new 1
mv.visitInsn(IADD); 1
IntRefHandler(String 1
Buffer(int 1
table[ClassIndex.REGEXP][MethodIndex.OP_MATCH] 1
post(context, 1
unregisterRestarts(rrs); 2
j--; 3
this.node 2
ClosureCallback 1
event.setOwner(getUser(userDao, 2
createSysErr(IErrno.EBADF, 1
lt.next=term.in; 2
fail( 1
links[2] 1
args.add(gemNames[i]); 1
if(ees==null) 1
initNamedCategory(,Sk); 1
noteMod.setUid(NOTE_UID 1
time.defineFastMethod()); 1
pgbc.fill=GridBagConstraints.HORIZONTAL; 1
task.setTaskCalendar(calendar); 1
back=1; 1
term.bitset=bs.block0==null? 1
ReadLoop: 1
writeString(marshaled.getByteList()); 1
SyncEngine 1
if(library 3
endDate 3
verifyExit(RubyFixnum.one(runtime), 2
.callbackFactory(JavaProxyReflectionObject.class); 1
if(f.exists() 1
mess.setArguments(args); 1
mv.if_icmpeq(arityOk); 1
visitNewlineInParentheses(iVisited.getConditionNode()); 2
runtime.setHash(hashc); 1
Completed 1
str.get(outp); 1
argumentType); 1
table[ClassIndex.ARRAY][MethodIndex.LAST] 1
autoloadMap.put(name, 1
runtime.getObject(),ObjectAllocator.NOT_ALLOCATABLE_ALLOCATOR); 1
mine.addAll(((RubyClass)i).subclasses(includeDescendants)); 1
this.messageID 1
this.enumerableModule 1
table[ClassIndex.REGEXP][MethodIndex.HASH] 1
result.kindOf 1
CharacterClass.makeSpace(term,inv,(flags&UNICODE)>0); 1
MethodCache 1
ss.unscan(); 6
BindIndex 2
lns.add(gets(arg)); 1
pos 26
Token 7
symbol.defineFastMethod(,IRubyObject.class)); 1
newPath.add(new 1
this.methodID 2
simpleKeyContext 1
getRuntime().getIoHandlers().put(new 1
suite.addTestSuite(YARVMachineTest.class); 1
expandCatchIfNecessary(); 1
ClassReader 1
createDaemonParameters( 1
expunge 2
noteMod.addStamp(exceptionStamp); 1
emitter.writeStreamStart(); 1
io.write(bytes.unsafeBytes(), 1
term.type=(flags&IGNORE_CASE)>0? 1
this.lastline 3
infl.getMetaClass().defineFastMethod(,RubyKernel.IRUBY_OBJECT)); 1
ESCAPE_REPLACEMENTS['N'] 1
LinkedHashSet<NoteItem> 2
inter 5
falseClass.index 1
printCommentsInArgs(n, 1
arity.checkArity(runtime, 1
this.env.bestIndent 1
sb.append('\\').append('e'); 1
rows.getJSONObject(i).put()); 3
fontFileNameDefault1, 1
method.dup2(); 2
suite.addTest(SourceRewriteTester.suite()); 1
switch(begin) 1
identitiesByObject.put(object, 1
ServletHolder 1
flowLevel--; 4
if(emptyOk){ 1
1.0e11, 1
if(m.start()>0) 1
assertEquals(ReWriteVisitor.getLocalVarIndex(new 2
if(profile.allowClass(name)) 1
ps.executeQuery(); 1
put.setEntity(new 3
PartitionManagerClient 3
INSTANCE.listen(fd, 1
.getName()); 2
httpResponse.setStatus(401); 2
config.getLocalVariables().addLocalVariable(scope); 1
BSFManager 1
Ruby 175
super.populateItem(inputContext); 1
clone.putMethod(entry.getKey(), 1
Term 56
setId(getClass().getName()); 1
Buffer() 1
noteMod.setUid(new 1
IS_ESCAPE_REPLACEMENT['e'] 1
loadArguments(mv, 16
'I' 1
debug 2
alnum.add(digit); 1
acc 1
this.isTrue 1
sockaddr.sun_family 1
filesPlusDotFiles[1] 1
op_lt(runtime, 1
if(kind.equals(ScalarNode.class)) 1
obj.mimicsWithoutCheck(registry.wrap(i)); 2
start(); 2
System.arraycopy(val.toString().toCharArray(),0,arr,off,val.length()); 1
notModuleCallback.branch(this); 1
env.expectFirstBlockMappingKey(); 1
if(!(target 1
switch(state) 3
mutex.wait(); 3
javaWrapper.mimicsWithoutCheck(origin); 1
this.content 4
FileUtils.cleanDirectory(dir); 1
assertEquals(content, 1
chunks.append(SPACE); 3
this.useTags 1
ensure(length,false); 11
image 1
while(Character.isJavaIdentifierPart(data[i])){ 1
switch(op) 1
buf.write(digits); 1
directorySection.setText(); 1
manager.exec(, 2
jitCompiledScript 1
checkOffset(args,offset,length,ERR_MALFORMED_STAR_NUM); 2
Collection 4
.2102593522455432763479327331752e-2, 1
converters['s'] 1
module.setBaseName(name); 1
if(id>=0){ 1
this.flowLevel++; 1
handler.waitUntilReady(); 1
lb.in.type=LOOKBEHIND_CONDITION_IN; 1
topgbc.anchor=GridBagConstraints.NORTHWEST; 1
if(updateItemStmt.executeUpdate()!=1) 2
pushScope(scope); 1
newHandler.seek(pos(), 1
mantissa 1
this.depthLimit 1
encodeFloatBigEndian(result, 1
r[152]=1; 1
event.setUid( 1
NGramEntry[] 3
byte[] 142
lhs.setPosition(union(lhs, 1
panel.setPreferredSize(dim); 1
if(exceptionStamp!=null) 2
visitNodeInIndentation(n.getBodyNode()); 1
r[64]=1; 1
db.Unlock(); 1
DavResource 1
defineClass_method.setAccessible(true); 1
this.when 4
dup.stringValue 1
pubScore[goalConsidered]/=2; 2
bits[c]=true; 2
STUPID_CHAR[']'] 1
w.setVisible(true); 1
BlockBody 1
list[list.length 1
actual.sub=top; 16
StringBuffer 65
System.out.println(3*10+ourTurn); 1
event.setStartDate(newStartDate); 1
buffer.put((byte) 2
obj.mimicsWithoutCheck(tp); 3
inspect(((RootNode)node).getBodyNode()); 1
RootNode 1
setAST(n); 1
cancel.setActionCommand(); 1
allocator 2
getRuntime().newString(sender.getAddress().getHostAddress()) 1
note.setClientModifiedDate(task.getDateStamp().getDate()); 1
r[24]=77; 1
print(config.getFormatHelper().getListSeparator()); 3
freeBusy.setUid(entityFactory.generateUid()); 1
i-=exceed; 2
entries=rmask.elements(f,matcher); 1
this.expressionNodes 1
table[ClassIndex.BIGNUM][MethodIndex.EQUALEQUAL] 1
m_oSyncEngine.login(oLoginCmd.m_strName, 1
exporter.setAlwaysCreateRegistry(true); 1
i+=bitset; 2
format.setTrimText(false); 1
v.setValue(jrubyHome); 1
r[104]=0; 1
identities.remove(new 1
.getOptMethod()); 1
systemExitClass.defineMethod()); 3
setCategory(Lo); 1
System.arraycopy(bytes,newpos,newbytes,pos,buflen-newpos); 1
suite.addTestSuite(TestKernel.class); 2
SUPER 1
grp(NONROOT_G,)+ 1
currObj=f; 1
this.traceFunc 1
i.iseq_op 2
env.getTagHandles().put(key,baseTags.get(key)); 1
if(records.getHue()!=null) 2
future.get(millis, 1
setCategory(Lu); 1
head.setPosition(union(head, 2
token.serialize()); 1
S4['\0'] 1
BUILDER_FACTORY.setNamespaceAware(true); 1
4279200368L, 1
scn 8
server.join(); 1
if(!this.allowSimpleKey) 2
JavaSupport 1
initNamedCategory(,Lu); 1
if(scalar 1
assertTrue(parser.isShowVersion()); 2
continue; 179
attrs 1
myHead.add(title); 1
toAppendTo.append(' 1
while((ch=peek()) 1
r.addAll(pending); 1
.4919843705578615947200034576668e-1, 1
tz 1
result.defineFastMethod(, 56
errorLine 1
firstLineLoadedFeatures.add(file); 1
layout.marginHeight 5
ts 1
inBuffer.flip(); 1
stream.close(); 3
to 2
tail 1
structClass.includeModule(runtime.getEnumerable()); 1
methodCompiler.method.label(end); 2
result.append(entry(j 1
gzwriter.getMetaClass().defineMethod()); 2
td 8
tc 3
this.yaccValue 1
createSysErr(IErrno.EPERM, 1
runtime.symbolLastId++; 1
Bitset.unify(sum,term); 1
closedRead 5
validateClassVariable(internedName); 3
systemId, 1
NULL_OR_LINEBR['\r'] 1
prepareAppend(); 1
IOException 2
result.defineFastMethod()); 76
desk.setPreferredSize(dim); 1
out[i] 1
//lucene 1
method.checkcast(cg.p(RubyArray.class)); 1
bits1=bs1.block0; 1
switch(oSyncCmd.m_nCmdCode) 1
newpath 1
ok.setBackground(this.getContentPane().getBackground()); 3
super(filename); 3
checkClosed(runtime); 2
ngrams.put(cs, 1
this.fileClass 1
method.dup(); 16
2394877945L, 1
gbl.setConstraints(titlelab, 1
response.setHeader( 1
if(prefix 1
table[ClassIndex.STRING][MethodIndex.EQUALEQUAL] 1
this(pattern, 1
System.out.println(Utils.error(500, 1
obj.getRuntime().getCurrentContext(), 2
if(parentIndex 1
UNLESS 1
while(i<out){ 6
scope.setVariables(iseq.locals); 1
(toHexDigit(data[i++])<<8)+ 1
rewritten_q.extractTerms(terms); 3
method.ifne(isTrue); 1
createSysErr(IErrno.EDEADLK, 1
toHexDigit(data[i++])); 1
panel.setSize(dim); 1
replace(pattern.matcher(text),substitution,out); 1
method 10
if(!(lineBreak.length 2
current=replaceCurrent(tmp); 4
mLoop: 1
hash 7
DateTime 49
FileFilter 1
assertTrue(set.contains(s2)); 1
write(tp); 1
methodNames 1
System.out.println(e); 1
Assert.assertFalse( 2
result.addM(getM(i)); 1
initNamedCategory(,No); 1
KCode 3
runtime.getRegistry().setConstant(module, 1
if(t.ttype!=')') 1
NULL_BL_T_LINEBR['\0'] 1
connection.setRequestProperty( 2
STUPID_CHAR['!'] 1
if(DOSISH 1
pushRubyClass(klazz); 1
parameters.put(parameter.getName(), 1
.715179310202924774503697709496e-1, 1
chunk[i] 1
getMethodAdapter().aload(RUNTIME_INDEX); 1
Action.DISPLAY)) 1
HEXA_VALUES['0'] 1
s+=next.toStringAll(v); 1
if(r_lt(obj,end)) 1
if(((DocumentEndEvent)event).getExplicit()) 1
if(ctor.checkData()) 1
out.type=INDEPENDENT_OUT; 1
verbose 1
if(contentService.findItemByUid(uid)!=null) 1
singleton.addReadWriteAttribute(context, 1
ss.setString(); 1
ASTCompiler.compileArgs(argsNode, 1
rewriter.visitNode(node); 1
generateConstructors(superClass, 1
wizard.setSourceConfig(sourceConfig); 1
mergeCalendarProperties(exceptionEvent, 1
push(runtime.newFixnum(42)); 1
iVisited.getSecondNode().accept(this); 4
pane.add(sender); 1
if(path==null 3
db.setUnlockDB(false); 2
g.drawImage(back, 1
otherValue 24
r[80]=0; 1
table.setColumnSelectionAllowed(false);//no 1
r[32]=111; 1
setConstant(name, 1
this.lightweight 1
to_add 2
-.13903543858708333608616472258886e-6, 1
emitter.writeLiteral(analysis.scalar); 1
mainStream.fclose(); 1
flowLevel++; 2
rows.add(obj); 1
r[128]=61; 1
mv.label(alreadyCreated); 1
unboundMethod.infectBy(this); 1
args.push(rawArgs[i]); 1
request.setServletPath(getServletPath()); 1
noMethod 1
doRecursionFix(node,data); 1
collection.setDisplayName(uid); 1
refresh(); 1
current=node; 1
.694437261000501258993127721463e-7, 1
exception.defineFastMethod()); 1
shouldEscapeEntity 1
logger.debug( 3
assertEquals(HttpServletResponse.SC_OK, 2
sstrcat(s, 1
condition.out=condition; 1
list=model.getImages(); 1
assertFalse( 6
rubyDateFormat.setCalendar(cal); 1
canWrite.delete(); 4
dumpObject(classname); 1
updateDatabase(writer, 2
mode=SUBTRACT; 1
result.append(RubyString.newString(runtime, 10
this.multiline 1
array.append(e.symbol); 1
b.append((byte[])null, 1
runtime.loadFile(, 2
if(data.getMetaClass().searchMethod().isNative()) 1
cDigestBase.defineAnnotatedMethods(Base.class); 1
if(!positive) 1
ret.strcpy(this); 1
pgbc.gridy=5; 1
block.arity().checkArity(getRuntime(), 1
conditionState.restart(); 3
for(;;) 4
shrink(result, 2
publicId, 1
RaiseException 8
ga.throwException(); 1
b.out1=term.out; 1
include.getSingletonClass().defineMethod(, 1
this.endsWithDelimeter 1
searcher.close(); 1
setValue((Set<String>) 1
push(h); 1
ensureGem(); 1
n.setValue(node); 1
while(compareRegions(data,i,sampleOffset,bitset,end)){ 1
CHOMPING['7'] 1
if(isFixed()) 1
push_braces(cwd, 1
encode.get(toUnpack); 1
module.defineConstant(, 2
this.restarts.get().remove(restarts); 1
finalizers.remove(finalizer); 1
R_FLOWNONZERO['?'] 1
IS_ESCAPE_REPLACEMENT['n'] 1
BOOK, 8
first.reset(minQueueLength); 1
superCallback.compile(this); 1
if(through) 1
securityManager.setUpMockSecurityContext(new 2
append(message, 1
pane 1
if(ll 3
StringOnlyRubyHash 1
IdentitySet 1
eval(script); 3
this.userService 3
grp(QMARK_G,)+ 1
cDigest_SHA2_256.setInternalModuleVariable()); 1
.715747900137703638076089414183e-4, 1
print(config.getFormatHelper().beforeHashContent()); 1
((AttributesMap)attrs).containsInstanceVariables(); 1
pane.setViewportView(text); 2
NULL_BL_T_LINEBR['\t'] 1
java.setProject(project); 1
ptmp 1
processThread.start(); 1
dateTime.init(); 1
ttype=CLASS_GROUP; 1
ErrorDialog.open(e); 10
test1Val.add(Boolean.TRUE); 1
links[0] 1
URL 9
instances.setTimezone(tz); 5
MatchingElementEnumerator(RegularMask 1
getSingletonClass().addMethod(name, 3
System.arraycopy(bytes,beg+len,bytes,beg+count,realSize 1
k.l_op0 1
RubyHashEntry[]iterTable; 1
jitCallConfig 3
method.getDeclaringClass().getName() 1
Character.isUpperCase(field.getName().charAt(0)); 1
ga.returnValue(); 3
resultLength 2
user.getUsername()); 1
argsAry[i] 1
mapAllDesignDocuments(); 1
if(args.charAt(i) 1
getObject().defineConstant(, 1
firstEntry 1
if(size 1
getSingletonClass().defineMethod(name, 2
i.l_op0 4
testServer.delayed(TWO_SECONDS, 2
if(env.getTagHandles().containsKey(handle)) 1
f.delete(); 1
assertTrue(map.values().containsAll(values)); 1
context.setLastCallStatus(callType); 2
gbc.fill=GridBagConstraints.VERTICAL; 1
if((ev.getStyle() 2
parserSupport.getResult().setEndOffset(src.getOffset()); 1
table[ClassIndex.BIGNUM][MethodIndex.OP_SPACESHIP] 1
CompiledMethod 1
buf.append(getMetaClass().getRealClass().getName()); 1
oldTable[j] 2
this.model=model; 1
completePopup.setVisible(false); 2
if(argo 1
super(r); 1
mv.aload(6); 2
.6698674738165069539715526882986e-17, 1
System.arraycopy(variableNames, 1
entry[1] 5
rb_cUDPSocket.defineFastMethod()); 3
init__resolver_scanner_range_lengths_0( 1
((RubyString)cmdArg).getByteList().length() 1
expectFlowMapping(); 1
editButton.setText(); 1
list.append(); 1
InstanceList 21
this.add(ok); 2
ArgsNode 3
System.arraycopy(bytes,pos,newbytes,pos+vlen,buflen-pos); 1
.1508407105944793044874229067558e-14, 1
this(format, 1
l.setLayoutData(new 1
allowFlowPlain 7
RecurrenceId 1
GregorianCalendar 2
unwindIndent(-1); 3
table[ClassIndex.STRING][MethodIndex.OP_GT] 1
System.arraycopy(bytes,pos,newbytes,pos+1,buflen-pos); 1
this.restart 1
init__resolver_scanner_single_lengths_0( 1
runtime.mimicsWithoutCheck(ground); 1
this.existingScope 1
inc.cntreg=cntreg; 2
sb.append(values[i].callMethod(getRuntime().getCurrentContext(), 1
topSelf.getSingletonClass().defineFastPrivateMethod(, 3
output.dumpObject(entry.key); 1
xdigit.setRange('a','f'); 1
RubiniusMethod 1
super(name,INSTANCE_METHOD); 1
int_loop: 1
IRubyObject[].class, 2
settingsButton.setLayoutData(new 1
parseStack.push(P_BLOCK_SEQUENCE_START); 1
JavaAccessibleObject.registerRubyMethods(runtime, 2
w 2
this.trueClass 1
this.rootLoginUrl 1
((IokeSystem)IokeObject.data(system)).addArgument(arg); 1
this.uc=uc; 2
runtime.setGC(result); 1
major 1
((RubyMatchData.JavaString)oldMatchData).original 1
context.preYieldSpecificBlock(this, 3
this.bytes 2
if(player 4
commandState 1
char[] 23
if((lastIndex+1) 2
intZeroes 2
writeInt(vars.size()); 1
this.proxyConstructor 1
r[192]=1; 1
WhileNode 1
((RecursiveFixer)iter.next()).replace(node, 1
handle_escape: 1
internal.getByteList().append(c); 2
freshAt 2
this.fileTestModule 1
IRubyObject.NULL_ARRAY, 1
chunks.append(scanFlowScalarNonSpaces(dbl)); 2
this.sync 1
makeLazyLimits(vars,current,limits); 1
methodsForArity 1
wait(nWait); 1
commandLine.isSplit(), 1
StringScanner 23
result.dataWrapStruct(new 1
this.parameterTypes 6
runtime.checkSafeString(args[0]); 2
this.caseBody 1
space.setChars(); 1
runtime.mimicsWithoutCheck(defaultBehavior); 1
pname 2
buf.append(bs, 2
((this.value 1
.getAbsolutePath(); 1
modes 24
NodeType 2
sourceRangeEquals(getStartOffset(n), 1
str.chop_bang(); 1
write('T'); 1
this.useExplicitStart 1
interface1.method1(); 1
c.setTime(data); 1
result.setConstant(,RubyNumeric.int2fix(runtime,-3)); 1
YARVMachine.InstructionSequence 2
ga.ifNonNull(ok); 1
parseStack.push(P_FLOW_INTERNAL_MAPPING_START); 1
RubyFileStat 3
runnable.getJavaThread().interrupt(); 1
fileChannel.write(ByteBuffer.allocate(difference)); 1
for(;i<out;){ 1
Mutex 1
if(isNoteModification(content)) 2
returnValue 3
//something 1
noMore 1
seek(0, 4
eventHook.event(context, 1
buf.write(digits,1,decDigits); 2
output.writeInt(_flags); 1
bignumNode.setValue(bignumNode.getValue().negate()); 1
states.add(0,new 14
self 24
this(0); 1
this.out 3
ic.setArity(Arity.fixed(3)); 4
internal 5
reader.decRef(); 2
this.tokens.add(Token.BLOCK_MAPPING_START); 1
cp.add(provider); 1
addUnassignedAlias(javaPropertyName+'?',assignedNames,callback); 1
CLASS 1
result.turnLost[player] 4
getBaseModelObject(parent).getId()).setParameter(, 2
popFrameReal(block.oldFrame); 2
sb.append(')'); 1
resolverExactPaths.remove(0); 1
if(internal.size() 1
if(!note.getParents().contains(collection)) 1
JavaObject.wrap(getRuntime(), 1
if(str.isNil()) 1
moveTally.get(m.getM(ourTurn)).score 3
value.getRuntime().getWarnings().warn(ID.BIGNUM_FROM_FLOAT_RANGE, 1
popArray(args); 1
exporter.destroy(); 1
addInterface(allClasses, 1
if(fnmatch(magic,0,magic.length,bs,0,len,flags) 1
if(event 15
RubyFile 4
functions.put(viewName, 1
exc 3
this.adler 2
this.gen 1
argArray[2] 1
Boolean 4
runtime.printError(raisedException); 1
this.getContentPane().setForeground(Color.WHITE); 3
Class<?> 4
q2 4
tokenBuffer.append('$'); 3
gbl.setConstraints(size, 1
createSysErr(IErrno.EACCES, 1
mv.aload(9); 1
sublist 1
this.securityManager 2
ttype=POS_LOOKAHEAD; 1
enmr.includeModule(enm); 1
inc.next=term; 1
assertEquals(, 116
printDoWhileStatement(iVisited); 1
re.pattern 1
super(emitter,resolver,opts); 1
writer 1
.2284549509603433015524024119722e-13, 1
mv.invokevirtual(cg.p(Class.class), 1
failed 3
Base 1
if(target==theFirst){ 1
this(pattern,substitution,true); 1
rubyArgs[0] 2
@Test( 1
pat_pos 2
set_pos(newPos); 2
emitter.writeIndicator(ByteList.create(),true,true,false); 3
log.debug( 25
if(fnmatch(STAR,0,1,bs,0,len,flags) 1
samples.addAll(SAMPLES.keySet()); 1
(int) 1
HashIterator() 1
getMethods().remove(name); 1
javaObjectClass 1
env.expectFlowMappingSimpleValue(); 1
graph.add(punct); 1
if(.equals(str)) 1
STATES[BLOCK_SEQUENCE_ITEM] 1
url.append(: 1
JOptionPane.showMessageDialog(null, 2
openInternal(path, 1
ga.getField(selfType, 1
c=(char)dec; 2
searcher.search(weight, 1
type=NLOOKBEHIND_IN; 1
doRecursionFix(node, 1
memo.pop(); 1
bytes 14
if(node.getValue() 2
mag[Mnum] 1
sep 8
if((end-start)>=(tLen/3)){ 1
stream.flush(); 1
System.out.println(entry.getKey() 2
fileClass.defineFastMethod(, 4
traceFunc.call(new 1
if(skipspaces) 2
ENGLISH 2
visitNode(iVisited.getFirstWhenNode()); 1
vars[DEPTH]--; 1
mv.ifne(isTrue); 1
singleton.callMethod(getRuntime().getCurrentContext(), 1
NAMESPACE.getPrefix()); 1
Optimizer 2
if(!f.isBindingFrame() 1
overlord.setAdmin(Boolean.TRUE); 1
setTarget(text,start,len,true); 1
matchingFiles 1
r[40]=129; 1
limits[ind]=v; 1
Assert.assertNotNull( 12
available 2
text.setCaretColor(new 2
CallbackFactory 88
out.write(Constants.MARSHAL_MINOR); 1
pushArity(null); 1
printIterVarNode(iVisited); 1
arg_types.add(aargs[i].getClass()); 1
Server 2
fileToTouch.setLastModified(mtime); 1
unregisterRescues(rescues); 1
interface 8
if(block0==null){ 1
this.key_hash 1
ObjectAllocator.NOT_ALLOCATABLE_ALLOCATOR); 5
switch(strategy){ 2
this.type 7
last 14
if('\n' 4
loadVisibility(); 1
(length 2
if(names==null) 1
VJournal 2
this.scanner 1
getCurrentFrame().setSelf(runtime.getTopSelf()); 1
converters['g'] 1
Query 8
for(;;i++){ 1
whole 1
mv.invokestatic(cg.p(RubyRange.class), 1
); 34
setValue(read((Reader) 1
this.debug 6
r[24]=92; 1
setReadable 1
)) 1
factory.createHereDocReWriteVisitor().visitNode((Node) 1
-.126972960236455533637241552778e-16, 1
), 8
i=actual.index; 2
compile_array(ret, 1
S4['}'] 1
defaultMethod.mimicsWithoutCheck(method); 1
node=lb.out; 1
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_UP)); 1
cContinuation.defineMethod()); 1
wEnd=-1; 3
while(peek() 8
1000000000000L, 1
System.out.println(line); 1
values[realLength++] 1
channel.read(buf); 1
if(columnIndex==0 1
upper.setRange('A','Z'); 1
warning(args,); 1
RubyNoMethodError.createNoMethodErrorClass(this, 1
GeneratorAdapter 7
if(!canonical 2
FieldCallback(){} 1
null).visitEnd(); 1
mine 6
ss.skip(WORD_CHARS); 1
getCurrentFrame().setVisibility(block.getVisibility()); 4
loadPath.add(runtime.newString(path.replace('\\', 1
func 5
range.defineFastMethod()); 1
ContentItem 8
pre(context, 5
callCount 2
visitAndPrintWithSeparator(iVisited.childNodes().iterator()); 1
method.setRequestEntity(new 1
Stream 2
ga.invokeConstructor(udt, 1
cGen.defineMethod()); 5
table[ClassIndex.CLASS][MethodIndex.INSPECT] 1
error 1
this.anchors.clear(); 1
fieldMap.clear(); 1
real 1
RubyClass.marshalTo((RubyClass)value, 1
contexts.add(webAppContext); 1
increment 2
mapped[i] 1
result.append(); 4
verifyItemInSet(done,); 9
newMethod.label(defaultLabel); 1
Method 24
System.out.println(System.getProperty()); 1
Arity.checkArgumentCount(recv.getRuntime(),args,0,0); 2
if(name.startsWith()) 1
ASTInterpreter.eval(this, 1
floatc.defineAnnotatedMethods(RubyFloat.class); 1
recv.getRuntime().setDoNotReverseLookupEnabled(flag.isTrue()); 1
add(i, 1
table[ClassIndex.HASH][MethodIndex.EQL_P] 1
realIo 2
currentDirectory 4
r[16]=2; 1
top.add(upshot); 1
id=vars[MEMREG_COUNT]++; 1
read 13
if(version[0] 1
FileOutputStream 6
retval.append(ch); 1
scheduler.awaitTermination(Long.MAX_VALUE, 1
newbytes[buflen] 1
MockIntegerAttribute.setValue(this, 1
btn.setFocusable(false); 1
IRubyObject[] 80
openFile.setPath(fpath); 1
3, 1
NAMES[EQUALEQUAL] 1
paramNames.toArray(names); 1
TriageStatus 3
area.setCaretPosition(area.getDocument().getLength()); 1
expected.getTreeAtDistance( 1
stack 7
arg.setValue(); 1
if(!Character.isDigit(ch)) 1
lUtf8 1
this(file.getAbsolutePath()); 1
loadNil(); 4
moveTally.get(1).score 4
this.add(pane); 1
elen 1
855842277L, 1
buf.write(digits[0]); 2
scroll.getViewport().setOpaque(false); 1
table[ClassIndex.ARRAY][MethodIndex.UNSHIFT] 1
!Character.isWhitespace(c)) 1
entries=mask.elements(f); 1
createSysErr(IErrno.ENOTEMPTY, 1
replaceText(start, 1
cal.setTimeInMillis(withoutMillis); 1
masterCalendar.getComponents().remove(entry.getValue()); 1
slot.setValue(value); 1
resp.setContentType(Constants.CONTENT_TYPE); 1
valueCallback.call(methodCompiler); 6
rightControl.setLayoutData(gd); 3
calendar.get(Calendar.HOUR_OF_DAY); 1
this.operatorCallAdapter 1
moveTally.add(new 3
(last 1
selector.selectNow(); 2
MimeMessageHelper 1
(CharacterClass.toHexDigit(data[i++])<<16)+ 1
block.oldFrame 3
for(JarEntry 1
lock(); 2
pgbc.gridy=3; 2
r[80]=2; 1
propValue 1
this.leftNode 1
if(first<Character.MIN_VALUE 1
titlelab.setText(msg.getString(); 1
input 5
if(nc==null) 1
method.getstatic(classname, 2
parseStack.push(P_BLOCK_SEQUENCE); 1
mv.label(notBlockBreak); 1
warnings.warn(node.getPosition(), 3
format 6
if(untilDate 1
m.value 1
seq.name 1
mv.invokestatic(cg.p(RubyRegexp.class), 2
untilDateCalendar.setTime(lastRecurrenceId); 1
content.setLastModification(ContentItem.Action.EDITED); 1
super(arity, 1
interfaceNames[interfaces.length] 1
d 14
super(rm); 1
this.requiredArgs 2
((BasicLibraryService)theClass.newInstance()).basicLoad(runtime); 1
trailingSpaces 1
continue 49
if(!hasToken) 1
reader, 1
this.groupDeclared=isDecl; 1
output.registerLinkTarget(struct); 1
OR 1
setCRCRef(this.crc); 2
methods 4
pipeStream 1
assertEquals(10, 2
saxTransformerFactory.newTransformerHandler( 1
HashNode 2
recompileIfNeeded(); 1
PenroseClient 5
note.getModifies().updateTimestamp(); 3
b0 2
b1 2
b2 2
modEvent.setRecurrenceId(EimValueConverter.toICalDate().getDate()); 1
ga.invokeConstructor(Type.getType(constructor.getDeclaringClass()), 1
matchStart 10
DEF 1
if(kind.equals(ScalarNode.class) 1
if(nX 4
realName 1
config.getSource().charAt(getStartOffset(n)) 1
this.falseClass 1
object.syncVariables(attrs); 1
if(breaks.length() 1
securityManager.checkPermission(item, 5
alloc(length); 1
assertEquals(ReWriteVisitor.getLocalVarIndex(null), 1
seq.args_rest 1
HEXA_VALUES['c'] 1
if((c1=arr[p1])!=Character.toLowerCase(c2=arr[p2]) 1
c=(char)((toHexDigit(c)<<12) 1
suite.addTestSuite(TestRubyNil.class); 1
fileClass.defineConstant(, 5
buf.fill('0',precision); 4
result.append(input.unmarshalObject()); 1
if(ch==0 1
calendar.getProperties().add(new 1
EventApplicator 5
DavPropertyName.create(PROPERTY_ACL_GROUP_MEMBERSHIP, 1
next=theFirst; 1
log.info( 2
method, 1
System.exit(status); 1
JarFile 5
symbolClass.index 1
3401237130L, 1
while(ms!=null){ 1
ruby.printError(exception); 2
super(msg); 6
this.setUndecorated(true); 1
if(this.serializedNodes.containsKey(node) 1
classBytes[i+j] 1
this.template 1
registerBuiltin(, 26
LogFactory.getLog(EmailAccountActivator.class); 1
PathElementEnumerator(){} 1
gbc.gridx=2; 3
get.releaseConnection(); 3
GridLayout 7
r[8]=106; 1
message.setFont(font); 1
suite.addTestSuite(TestJavaUtil.class); 1
if(contentStart 2
rangeError 1
next 20
localVariables.append(runtime.newString(names[i])); 1
if(isLarge) 2
HEXA_VALUES['A'] 1
end.equal(otherRange.end).isTrue() 1
rubyClass.fastSetClassVar(bytecodes[ip].s_op0, 1
optionsPage.setDescription(); 1
inputStyle 1
result.append(parameterTypes[i].getName()); 3
Field[] 3
while(milliseconds 1
User 15
Pretokenizer 1
valueRemoved(ent.value); 1
if(cid!=null) 1
: 4
sub.setTicketKey(newsub.getTicketKey()); 1
switch(type){ 5
this.klass 2
if(translatedTz!=null) 4
ctor.doRecursionFix(node, 2
table.removeAll(); 2
ary2.realLength 1
assertEquals(url, 1
FieldVisitor 1
helper.setActionCommand(); 1
reset.out=b; 2
line 12
methodCompiler.loadBlock(); 4
result[pos++] 1
result.append(nameOnInspection()); 3
BadDescriptorException, 1
cache=null; 1
receiver.call(methodCompiler); 3
java.addSysproperty(v); 1
in.next=lb; 1
parseStack.push(P_IMPLICIT_DOCUMENT); 1
cmpString 1
visitAndPrintWithSeparator(iVisited.getFirstNode().childNodes().iterator()); 1
break; 1089
doc 3
append(sep); 1
AFTER_NEWLINE.matcher(self.toString()).find()) 1
ix--; 1
uc 1
if(eat){ 1
ImageIcon 7
untilDateCalendar.add(java.util.Calendar.DAY_OF_MONTH, 1
XMLWriter 1
m 1
emitter.writeIndicator(ByteList.create(),true,true,true); 1
parser 2
char 111
method.ifne(done); 1
tokenbox.setActionCommand(); 1
this.s_op0 3
setInstanceVariables(new 1
@Table(name=, 1
while(inter) 4
setCategory(Ll); 1
buf.append(base); 3
hasToken=true; 2
src.limit(oldLimit); 1
other.last.next 1
if(iterLevel 1
if((answer=uc.getId())<=0){ 1
method.ifnonnull(alreadyCreated); 1
if(match) 1
mv.ldc(value.toString()); 2
method.ldc(scope.getVariables()[i]); 1
cause.printStackTrace(errorStream); 1
this(initialCapacity, 1
GridBagConstraints 7
if(sampleOffset>=0 1
table[ClassIndex.STRING][MethodIndex.OP_LT] 1
e.frequency 1
ss.reset(); 2
EimRecord 14
values[i] 3
removeMethod(args[i].asSymbol()); 1
for(;;){ 9
lang 1
is.close(); 1
progress.save(writer); 3
table[ClassIndex.STRING][MethodIndex.OP_PLUS] 1
if(!anchors.containsKey(anchor)) 1
IRubyObject[]exArgs 2
enm.defineFastMethod()); 3
System.arraycopy(original.values, 2
inv=true; 6
if(types.equals(arg_types)) 1
if(inp 1
code 8
converters['i'] 1
flater.setInput(buf.bytes, 2
this.input 2
write('0'); 1
this.next=next; 1
request.setCharacterEncoding(); 1
Visibility 16
b.out1=null; 9
b.append(failNext.instanceNum); 10
alpha.add(upper); 1
gbl.setConstraints(loginbox, 1
newArray[array.length] 1
setFresh(); 2
s.append(wOffset); 1
buf.fill(leadChar,precision-len); 1
this.implicit 1
loadTrue(); 1
runtime.getObject(), 1
NAMES[PUSH] 1
wait(); 4
if(top==null){ 4
static{ 4
context.postRubyMethodFull(); 1
nextId++; 1
if(!(c<=255 1
this.setSize(new 1
nil.mimicsWithoutCheck(origin); 1
AssignedName 6
RhoRuby.raise_RhoError(RhoRuby.ERR_RUNTIME); 2
spCharPattern, 1
ending 2
.323342158260509096464029309534e-10, 1
magic 1
calendar.setTimeInMillis(p 1
HEXA_VALUES['7'] 1
DomUtil.getQualifiedName(ELEMENT_ACL_PRINCIPAL_PROPERTY, 1
super(new 2
try 682
op_minus(runtime, 1
queryProcessor.setContentDao(contentDao); 1
argArray[0] 1
methodName); 2
if(exceptionStamp.isAnyTime()==null) 1
mv.swap(); 24
rb_cTCPSocket.getMetaClass().defineFastMethod(, 1
aliases.add(alias); 1
server.setSendServerVersion(false); 1
mv.visitJumpInsn(IF_ACMPNE, 1
print(iVisited.getValue().toString()); 5
this.isLambda 1
cache.register(newObject); 1
encode.position(encode.position() 3
result.x--; 3
PROXY_CLASS_TYPE, 1
inBuffer 1
index 23
System.arraycopy(wrap, 1
gbl.setConstraints(message, 1
scroll.setForeground(foreground); 1
table[ClassIndex.FIXNUM][MethodIndex.TO_S] 1
PathElementEnumerator 3
STUPID_CHAR['-'] 1
b.append(']'); 2
this.getContentPane().setLayout(gbl); 4
StyleConstants.setForeground(resultStyle, 1
.getResourceAsStream()); 1
assertEquals(port, 1
switch(ofKind) 1
sourcesPage.setServer(server); 1
-.2164006195089607347809812047e-15, 1
testServer.stop(); 1
sender.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1
scheduler.execute(new 1
STRANGE_CHAR['\''] 1
len 40
result.setConstant(,RubyNumeric.int2fix(runtime,3)); 1
bs.setChar(Character.toLowerCase(c1)); 2
this.serializer.serialize(node); 1
this.rubyArray 1
docs[j].add(token(Constants.ID, 1
packageModule.const_set(runtime.newSymbol(className),proxyClass); 1
@JoinTable( 1
.198712935005520364995974806758e-4, 1
List<WebAppContext> 1
if(compareRegions(data,i,regOff,regLen,out)) 1
if(task==null) 1
visitor.visitNode((Node) 1
if(io.respondsTo()) 2
set(top.callMethod(context, 1
assertEquals('1', 1
contexts.add(cc); 1
testServer.sleeping().start(); 1
r[320]=68; 1
digits[0] 1
gbl.setConstraints(links[i], 1
result.eltInternalSet(i, 1
{ 162
visitNode(visited.getReceiverNode()); 2
if((options 2
if(arr[i]==value) 1
item.setData(new 1
@Column(name=, 1
mutex.notifyAll(); 5
table[ClassIndex.STRING][MethodIndex.HASH] 1
mappingContext 1
method.invokeinterface(p(IRubyObject.class), 1
expectBlockMappingKey(true); 1
grp(STAR_G,\\ 1
assertEquals(expectedStatus, 1
ngramcounts[len] 1
setText(); 1
re.namedGroupMap=groupNames; 1
this.rangeClass 1
getHibItem(collection).addTombstone(new 1
writeInt((int) 1
sHexDigits 1
parseStack.push(P_FLOW_INTERNAL_CONTENT); 1
ungetc(c); 3
fv.visitEnd(); 1
matchEnd 10
state.httpClient.execute(new 1
s+=subtract(bits1,bits2,0,BLOCK_SIZE-1,false); 1
if(restQueue>0) 1
if(v2 1
runtime.getLoadService().require(); 6
arg_types.add(((JavaClass)((JavaObject)aargs[i]).java_class()).getValue()); 1
ADD_LABEL(ret, 9
this.mailSender 1
insertCollectionItemStmt.setLong(1, 1
super(position, 92
this.methodCompiler 1
attributePage 1
true, 7
parameterTypes 1
if(fromAsBytes.length 1
setBinmodeIfPossible(out); 1
v=-1; 1
event.setStartDate(dtStart); 1
mp.setMaxMergeMB(1000); 3
proxy.getInstanceVariables().fastSetInstanceVariable(, 1
writer.write(n); 1
microsecs 2
Library 4
initNamedCategory(,Cn); 1
constantFields.add(new 2
assertTrue(c.isAssumeLoop()); 1
this.rubyNames 1
while(!SPACES_AND_STUFF[peek(length)]) 1
STATES[FIRST_BLOCK_MAPPING_KEY] 1
lexicalBlock.init(); 1
src.unread(c); 66
CLIENT.getState().setCredentials(AuthScope.ANY, 1
process 1
System.out.println(scopeStack[i]); 1
delete(dbname, 1
addParameter(new 4
this.stream 4
loadThreadContext(); 27
serializeNode(val,node,key); 1
realLength 16
super(tag,value,flowStyle); 2
if(block.set(i))s++; 1
Preference 1
iVisited.getNextNode().accept(this); 1
convertArguments(arguments, 2
out.lookaheadId=id; 2
!internal.getByteList().subSequence(lastPossibleNewlineIndex, 1
trueClass.index 1
mv.visitInsn(ARETURN); 24
sb.append('\\').append('n'); 1
SAMPLES.put(name, 1
i2Grow.append(iPads); 1
if(duration!=null) 1
cal.set(Calendar.YEAR,Integer.parseInt(year_s)); 2
if(columnIndex==1) 1
.getDate()).toString()); 1
writer.write(CMD_NO_MORE 1
fileChannel.position(fileChannel.position() 3
en.setActionCommand(); 2
fill(bytes,newlen,buflen-newlen,(byte)0); 1
result.setLength(result.length() 4
ImmutableMethodAndType 10
inspect(hashNode.getListNode().get(i)); 1
Modifier.isPublic(method.getClass().getModifiers()) 1
inspect(andNode.getFirstNode()); 1
element 3
stack[stackTop 3
obj.mimicsWithoutCheck(this.integer); 1
if(term==null) 1
top.add(real); 1
r[96]=337; 1
handler.unimplementedError(); 15
element.next=makeQueue(refMatcher); 1
encodeIntLittleEndian(result, 4
io.finish(); 1
ArrayNode 2
shared=false; 5
callMethodMissingIfNecessary(mv, 1
newMethod.astore(RUNTIME_INDEX); 1
tokenBuffer.append('.'); 1
table[ClassIndex.FIXNUM][MethodIndex.INSPECT] 1
tb.append(data,in=mr.in,mr.out-in); 1
registerClass(name,bs,unicodeBlocks); 1
content.setText(txt); 1
bs=new 2
flagbc.anchor=GridBagConstraints.NORTHWEST; 1
this.dirClass 1
mv.iload(DISPATCHER_METHOD_INDEX); 2
r[16]=0; 3
object.addFinalizer(proc); 1
gbl.setConstraints(top, 1
term.text()); 1
raiseArgumentError(args,ERR_MALFORMED_FORMAT); 1
arr.append(ss); 1
this.crc 2
runtime.pushExitBlock(runtime.newProc(true, 1
if(pos.equalsLoc(sq) 3
entry.cCurrent=current; 1
if(!(currentFile 2
visitNode(((NewlineNode) 2
List<Variable<IRubyObject>> 5
value.isNil() 1
if(getStartLine(n) 2
ttype=NEG_LOOKBEHIND; 1
factory.createShortIfNodeReWriteVisitor().visitNewlineInParentheses(n.getElseBody()); 1
R_FLOWZERO1[':'] 1
callback.addAlias(name); 3
openFile.setPath(unixpath(addr, 1
}catch(Exception 17
gbc.anchor=GridBagConstraints.SOUTHEAST; 2
while(!NULL_BL_T_LINEBR[ch]) 1
b.append(instanceNum); 1
exceptionClass.defineMethod(, 1
NodeCompilerFactory.getCompiler(node).compile(node, 1
exceptionClass.defineAnnotatedMethods(RubySystemCallError.class); 1
ImageFile 1
r[96]=32; 1
marshalStream.registerLinkTarget(exc); 1
result.append(runtime.newArray(entry.key, 1
item.removeAttribute(qname); 2
currentState[i] 1
root=startAnchor; 1
if(!realm.contains(name))realm.addElement(name); 1
support.setDropAction(COPY); 1
.createTriageStatus()); 1
gbc.gridy=links.length+2; 1
this.inChannel 1
replace(pattern.matcher(text),substitution,tb); 1
print('#'); 1
w.pack(); 1
disable(); 4
for(CalendarContext 1
static 292
if(start>end){ 2
buf.fill(' 14
encodeLongLittleEndian(result, 1
r[32]=0; 3
InstanceFieldSetter(){} 1
stack.push(dir); 1
SkinnyMethodAdapter 74
includeDocs))); 1
valuesAndCriteria[i][1] 1
args[0] 3
push(module.fastGetClassVar(name)); 1
System.arraycopy(bytes,pos,bytes,pos+1,buflen-pos-1); 1
getRuntime().getWarnings().warn(in 2
if(escape 3
r[80]=4; 1
if(d>='0' 5
switch(node.nodeId) 3
.isEmpty()) 1
pgbc.gridy=1; 1
converters['V'] 1
writer.startDocument(); 1
ground.mimicsWithoutCheck(javaGround); 1
methodWriteLock.lock(); 1
synchronized(loadPath) 1
SimpleSampler.runSampling(); 1
NormalizedFile[] 5
result.setMergeFactor(5); 1
result.defineConstant(,runtime.newFixnum(4)); 2
this.src 1
switch(pos.player) 2
if(.equals(name)) 1
LAEntry[] 2
flagbc.fill=GridBagConstraints.NONE; 2
leadChar 5
cg.params(ThreadContext.class, 2
if(ret 3
if(res 1
if(rep 1
updateNoteModification(mod, 1
flagbc.insets=new 4
length 18
args.add(); 2
method.label(isTrue); 1
logInvalidStateException(ise); 6
JavaProxyReflectionObject.registerRubyMethods(runtime, 3
IS_ESCAPE_REPLACEMENT['t'] 1
runtime.evalScriptlet(script); 1
System.exit(-1); 1
this.proxyClass 1
if(hi 1
iVisited.accept(this); 1
selfType.getRuntime().getCacheMap().add(method, 1
owner 2
withReturnType( 1
resize(newCapacity); 1
HEXA[c] 3
NAMES[DEFAULT] 1
Runner[] 1
((IokeSystem)IokeObject.data(system)).setCurrentWorkingDirectory(cwd); 1
str.getChars(0, 1
@Cache(usage 2
element=new 4
this.defaultYamlVersion[1] 1
init__resolver_scanner_trans_targs_wi_0( 1
JavaConstructor.createJavaConstructorClass(runtime, 1
buf.append(Character.toUpperCase(packageString.charAt(start))) 1
MemReg 20
methodNameMap 1
e1.printStackTrace(); 1
top.setBackground(Color.decode()); 1
ga.invokeConstructor(superType, 1
if(vtz.equals(tz.getVTimeZone())) 1
storeValue(name, 7
setPosition(frame.getPosition()); 3
compile(); 1
map.put(e.name, 1
int_args[i] 1
System.err.println(s); 1
rubyObject.setTaint(true); 1
gbc.gridx=0; 8
search.addFilter(new 1
t.start(); 2
replace(pattern.matcher(in,length),substitution,out); 1
r[264]=35; 1
this.stringClass 1
field.setAccessible(true); 1
if(start+1 3
actual.index=i; 16
System.arraycopy(values, 10
twox 1
RUSSIAN 2
toAppendTo.append(formatSymbols.getWeekdays()[calendar.get(Calendar.DAY_OF_WEEK)]); 1
sb.append('u'); 1
request.setContent(out.toByteArray());; 1
LogFactory.getLog(ServletContextConfigurer.class); 1
ICalendarUtils.setDtStamp(note.getModifiedDate(), 3
suite.addTestSuite(TestRequire.class); 1
synchronized(varMap) 1
noteItem.addStamp(es); 1
XMLSerializer 1
'5', 2
super(icase? 1
SourceConfig 1
runtime.defineGlobalConstant(, 19
newStruct.setAllocator(STRUCT_INSTANCE_ALLOCATOR); 1
singleton.callMethod(runtime.getCurrentContext(), 1
ITest 2
if(mapping[0].containsKey()) 1
RubyDir 4
u.strcpy(this); 1
SyncCommand(int 4
yaccValue 102
r.represent(iter.next()); 1
appenderName 1
this.on=null; 1
if(getBaseModelObject(item).getId()==-1) 1
setChar('_'); 2
resp.setCharacterEncoding(); 1
LogFactory.getLog(BaseSecurityContext.class); 1
createSysErr(IErrno.ENFILE, 1
moduleClass.defineFastMethod()); 12
buf.write(PREFIX_NEGATIVE); 2
in.close(); 15
cc.type 1
arg_types.add(((JavaClass)((JavaObject)args[i]).java_class()).getValue()); 1
*/ 7
pubScore[S]=gS.scores[2]; 1
Arrays.fill(HEXA_VALUES,(byte)-1); 1
sb.append(c); 6
build.append(signum 2
factory.createDRegxReWriteVisitor().visitIter(iVisited.childNodes().iterator()); 1
bs.setSpace(unicode); 1
context.preExecuteUnder(this, 1
//FALLTHROUGH 1
dumpObject(RubySymbol.newSymbol(runtime, 3
if(preparedTag 1
parentPath 2
emitter.writeVersionDirective(prepareVersion(ev.getVersion())); 1
mp.setMergeFactor(5); 3
index=ind; 2
switch(c=data[i++]){ 2
dest.put(src); 2
if(dir==null 1
System.arraycopy(bytes,0,bytes,1,nDigits); 2
index++; 2
forward(3); 1
terminate 1
modEvent.createCalendar(); 1
jar 2
tzMap.put(tzid, 4
time.defineFastMethod(,IRubyObject.class)); 1
recv.callMethod(tc,javaProxyClass, 1
writer.deleteDocuments(docQuery(viewname, 4
evs.setEventCalendar(CalendarUtils.parseCalendar(helper.getBytes(file))); 1
r[200]=75; 1
if(icalUid==null) 2
out.writeObject(e.value); 1
handle 5
m_oSyncEngine.getNotify().setSyncStatusListener(listener); 1
mv.ldc(regexpString); 2
iVisited.getOptArgs().accept(this); 1
suite.addTestSuite(TestIdentitySet.class); 1
links.put(data,ll); 1
b.set(0, 2
CharSequence 5
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_HALF_UP)); 1
trueClass.defineFastMethod()); 4
block.getFrame().setIsBindingFrame(false); 1
encodeDoubleBigEndian(result, 1
gbc 1
table[ClassIndex.ARRAY][MethodIndex.AT] 1
CHOMPING['\r'] 1
getRuntime().newFixnum(sender.getPort()), 1
gbl 1
obj.defineFastMethod(,IRubyObject.class)); 1
push(bytecodes[ip].o_op0.dup()); 1
S4[' 1
if(increment 3
this.ast 1
/*current 1
100000000000000L, 1
instanceMethods.put(name, 1
assertTrue(!map.isEmpty()); 1
toAppendTo.append('0'); 12
moduleClass.defineMethod(, 2
this.resource 4
-.489262140694577615436841552532e-17, 1
mv.start(); 4
scope.determineModule(); 2
set.mimicsWithoutCheck(origin); 1
singleton.callMethod(context, 1
loadPath.add(); 2
r[88]=287; 1
if(masterStamp!=null) 1
serverBuilder 1
checkDirIsTwoSlashesOnWindows(getRuntime(), 2
bignum.defineFastMethod( 2
newCal.setTimeZone(TimeZone.getTimeZone(UTC)); 1
bean1.setSurName(); 1
invokeUtilityMethod(,cg.sig(Pattern.class,cg.params(Ruby.class,String.class,Integer.TYPE))); 1
this.arrayClass 1
i=++wOffset; 1
if(logged 2
ic.setArity(Arity.twoArguments()); 4
writeIndicator(ByteList.create(),false,false,false); 2
stillStarting 1
!(this.buffer.realSize<=(this.pointer+4) 1
IS_ESCAPE_REPLACEMENT[''] 1
builder.append(); 2
result.defineFastModuleFunction()); 9
table.repaint(); 2
b.append('-'); 4
target.bits=null; 6
defl.close(); 1
configure( 1
MethodData 2
sublist.clear(); 1
if(!ignoreAlias) 2
commandStart 5
r[296]=56; 1
format.setText(); 2
ESCAPE_CODES.put(new 3
if(timezoneh_s 2
System.arraycopy(superConstructorParameterTypes, 1
this(wc,true); 1
table[ClassIndex.STRING][MethodIndex.EMPTY_P] 1
possibleMoves.add(possibleMoves.get(j).copy().addD(moves.get(i)).addM(k)); 2
System.arraycopy(value, 1
b.append('['); 3
this.emitter 1
lines.append(this.note).append(); 4
dispatchWithoutSTI(mv, 1
gbl.setConstraints(cancel, 1
streams 1
ESCAPE_REPLACEMENTS['a'] 1
addUnassignedAlias(rubyName,assignedNames,callback); 1
inspect(orNode.getFirstNode()); 1
context.setOptimizationLevel(0); 1
ch 10
i._tmp 1
cl 1
sourcesPage 1
deleteDatabase(dbname, 2
ce 1
processThread.join(); 1
super(request); 1
list.mimicsWithoutCheck(origin); 1
time.setUSec(microsecs); 1
cs 5
rubyNil 1
cw 2
this.required 1
result.setInfoStream(System.err); 2
byte[]ta 1
setInput(System.in); 2
Java.createJavaModule(runtime); 1
fileClass.fastSetConstant(, 19
this.lineNumber 1
this.filter 2
initNamedCategory(,Pf); 1
@JRubyMethod(meta 5
mv.label(falseJmp); 4
lastPos 9
unmarshalStream.defaultVariablesUnmarshal(exc); 1
callMethod(getRuntime().getCurrentContext(), 3
parseStack.push(P_FLOW_MAPPING_ENTRY); 3
entrySet.remove(next1); 1
setChannel(channel); 2
IS_ESCAPE_REPLACEMENT['0'] 1
ASTCompiler.compileRoot(node, 1
area.addKeyListener(this); 1
JScrollPane 2
System.out.println(Utils.error(400, 4
BaseEventStamp 2
c= 8
ClassVarNode 1
c2 6
c1 2
b.failNext=term.in; 4
this(_x, 1
if(n>=0){ 3
mv.aload(THREADCONTEXT_INDEX 1
assertFalse(e.hasNext()); 1
sourcename 1
if(!stack[stackTop--].isTrue()) 1
depth--; 1
this.timeoutMillis 3
staticMethods 1
System.arraycopy(list, 3
btn.setBorderPainted(false); 1
lastPosition 3
writeUserClass(value, 1
ve 1
allFiles.add(RubyString.newString(runtime, 2
s.close(); 1
r[176]=108; 1
javaUtilitiesModule 1
context.assignConstantInModule(constDeclNode.getName()); 1
rawArgs[0] 1
d.setEnum(args[0]); 1
distance=0; 2
setObjectSpaceEnabled(false); 3
y-=3; 2
CacheEntry 4
mv.aload(ARGS_INDEX 1
add(pane); 1
RubySymbol 9
ICalendarUtils.setUid(note.getModifies().getIcalUid(), 1
bignum.defineFastMethod(,IRubyObject.class)); 1
runtime.getRandom().nextBytes(bytes); 1
fixnum 4
otherHash.preIter(); 2
slashCount--; 1
Indentor 1
FontStructure.Fonts.dir 1
printErr.close(); 1
steal_method(recv, 1
ALIAS 1
v2 4
RubyComparable.createComparable(this); 1
digester.setClassLoader(cl); 1
wOffset++; 2
setChar('\f'); 1
if(f==null) 2
v= 1
identity 1
.384887554203450369499613114982e-7, 1
invokeIRuby(, 17
t.append('\\'); 1
IndexReader 4
AbstractHibernateDaoTestCase 1
gbl.setConstraints(content, 1
actual.term=term; 6
patterns 1
title.setForeground(foreground); 1
command 9
locale); 3
it.next().close(); 1
expectNode(false,false,true,true); 3
addToInstanceList(calendar, 20
if(tag.charAt(0) 1
while(rs.next()) 1
curState.y 2
curState.x 2
objList.add(current); 1
isFloating 2
output.writeInt(registeredIndex(value)); 1
offset--; 1
output.write(0); 2
Nwinning 1
list.append(ungotc); 1
obj.setData(JavaIntegrationWrapper.wrapWithMethods(clz, 1
mychars=newchars; 1
sender.setEnabled(true); 3
StaticMethodInvoker(String 1
memo.values 1
mOff=i+2; 1
freeBusy.setFreeBusyCalendar(calendar); 1
ret[1] 5
this.flags 3
System.out.printf(, 4
for(Iterator<Property> 1
newMethod.label(start); 1
lastRun 2
assertTrue(b1.equals(b2)); 1
Hits 1
initialize(javaClass); 1
count++; 8
r[160]=60; 1
integer.kindOf 1
context.assignClassVariable(classVarAsgnNode.getName()); 1
super(title); 1
depthLimit 2
desk 1
if(SPECIAL_INDIC.indexOf(ceh) 1
stream.write(data.bytes,0,data.realSize); 14
loader 1
mv.astore(SELF_INDEX); 2
assertTrue(si.isNilListNil()); 1
runtime.getWarnings().warning(message); 1
this.add(remember); 1
d.doWait(); 1
myHead.add(size); 1
buffer.append(pattern.toString().replaceAll()); 1
if((flags&IGNORE_SPACES)>0) 1
calendar.addStamp(ccs); 1
commandString 2
staticNames.put(name,new 3
setBaseContentAttributes(noteMod); 1
lastModified 2
GlobalVariable.variableName(bean.name), 2
variable.trace(value); 1
print(subcluster); 1
la.out.type=LOOKAHEAD_CONDITION_OUT; 1
replacement 1
handler.rewind(); 1
STRANGE_CHAR[')'] 1
setTarget(mychars,0,count,shared); 2
(pathLength 1
evaluateString(, 28
flush 2
nest++; 1
attr.setQName(getQName().copy()); 2
this.reader.incRef(); 1
Vector<CalendarContext> 1
newPath.append(mangleStringForCleanJavaIdentifier(element)); 1
merge 2
VEvent 8
StampUtils.getEventExceptionStamp(copy); 1
createJavaMethods(self.getRuntime()); 2
m_statusListener.createStatusPopup(); 3
nativeThread 1
this.dbname 4
getSyncEngine().logout(); 2
-.766376292032038552400956671481e-18, 1
set(b); 1
proxy.const_set(getRuntime().newString(simpleName), 2
isExpression(((IfNode) 1
interns.put(u, 1
if(cnt>0){ 1
mv.visitInsn(POP); 1
mv.iconst_1(); 1
defaultMacro.mimicsWithoutCheck(origin); 1
this(iterNode, 1
setExecutable.invoke(file, 2
treepath 2
if(pd>=0){ 1
parentStack 1
if(jobj 1
assertFalse(valuesIterator.hasNext()); 1
uidIdx.put(user.getUid(), 1
mv.invokeinterface(cg.p(IRubyObject.class), 2
result.put(, 22
t2.start(); 4
objectClass 1
if(i>=match.pattern().groupCount()) 1
result.store(j, 1
table[ClassIndex.FIXNUM][MethodIndex.OP_GT] 1
implicit[0] 1
method.ldc(closureMethodName); 1
WHILE 1
io.puts(new 1
searcher.search(query, 2
newMethod.methodName 2
mr=suffixBounds; 1
inspect(opAsgnNode.getReceiverNode()); 1
System.arraycopy(bytes,1,newbytes,0,newlen); 1
runtime.setProc(procClass); 1
.createRenderingConfiguration( 4
out[size] 1
m_nCmdCode 4
registerClass(,ascii,posixClasses); 1
s[0] 1
queryProcessor 1
.42672965467159937953457514995907e-9, 1
assertTrue(c.isShowVersion()); 1
if(modParents.contains(parent)) 1
result.defineConstant(,runtime.newFixnum(1)); 4
result.defineConstant()); 2
setCategory(Zs); 1
COMPILE_POPED(ret, 1
this.tokens.add(key.getTokenNumber()-this.tokensTaken,Token.BLOCK_MAPPING_START); 1
DEFAULT_TAGS_1_1.put(); 2
seq.body 1
result.scores[player] 1
topgbl.setConstraints(upshot, 1
this.contextRoot 1
r[88]=15; 1
count 4
os.write(().getBytes()); 1
switch(data[i]) 3
tar.hookIntoRuntime(runtime); 2
this.condition 1
Store.put(, 4
abouter.setFocusPainted(false); 1
this.dark 1
print(needsParentheses(iVisited.getArgsNode()) 1
delete_all 2
if(frames 1
resp.setHeader(); 1
javaField 4
InetSocketAddress 5
nullToNil(); 4
GridData 7
channel.force(false); 1
desk.requestFocus(); 1
int 1505
firstLineLoadedFeatures.remove(file); 1
ResultSet 2
getProcEnvironment 1
compile_branch_condition(cond_seq, 1
staticNames 2
exArgs[2] 1
push(self.getInstanceVariables().fastGetInstanceVariable(bytecodes[ip].s_op0)); 1
table.setBackground(background);// 1
digester.pop(); 1
ind 3
if(ems[i].getName().equals(mName) 1
if(prefix.charAt(0) 1
since, 1
if(ch1 1
StaticMethodInvoker(){} 1
millisecs 2
name=, 1
proc.getBlock().isLambda 1
buf.append(getBytesInUTF8(dirp[i])); 2
ClassVariables<BaseObjectType>, 1
InetAddress[] 1
mv.invokevirtual(classname, 1
val.add(obj); 1
@Event 1
visitNode(iVisited.getValueNode()); 5
this.item 1
class 49
System.out.println(5*10+ourTurn); 1
config.getLocalVariables().addLocalVariable(((LocalAsgnNode) 1
in( 1
modToMove.setIsActive(false); 1
report.runQuery(); 1
table.setHeaderVisible(true); 1
tree.removeAll(); 1
searcher 9
eof 16
if(first) 1
IRubyObject.class)); 4
table[ClassIndex.HASH][MethodIndex.EMPTY_P] 1
value[0] 1
element.add(parameterElement); 1
result.defineConstant(, 2
searched 1
emitter.writeIndicator(ByteList.create(preparedTag),true,false,true); 1
offset=0; 1
updateDocument(writer, 1
item.addAttribute(attr); 2
methodCompiler.endMethod(); 1
methodCompiler.invokeIRubyObject(, 6
ic.setArity(Arity.fromAnnotation(methodAnno)); 1
assertEquals(,val2,outp2[1]); 1
child 5
this.restore 1
jrubyClassLoader 1
module.callMethod(context, 1
@Override 219
map.clear(); 2
aliases 3
charset, 1
unimplemented(bytecodes[ip].bytecode); 1
buf.append(DOUBLE_STAR); 2
b.append('('); 4
IOUtils.copy(reader, 1
FreeBusyItem 1
arg_ambiguous(); 1
block0=null; 1
sb.append('s'); 1
resp.sendError(400); 1
TriageStatusUtil.getRank(completed.getDate().getTime())); 1
while(BLANK_T[peek()]) 1
3495958263L, 1
registerClass(,digit,posixClasses); 1
completePopup 1
entry.mCurrent=current; 1
System.arraycopy(bytes,start+len,bytes,start,realSize); 1
r[80]=58; 1
Transferable 1
obj.mimicsWithoutCheck(this.dateTime); 1
Pipe 1
params[0] 1
map.put(value, 1
runtime.getGlobalVariables().set(, 8
line++; 1
result[0] 7
this.methodName 3
appendChar(c, 2
cw.visitEnd(); 5
outp.addAll((List)ctor.constructSequence(node)); 1
handler.mimicsWithoutCheck(origin); 1
nWait 1
lenObj 2
buf.append(frame.getPosition().getFile()).append(':').append(frame.getPosition().getEndLine() 1
lt.cntreg=cntreg; 2
memreg=term.memreg; 3
cmd 3
Assert.assertTrue(addedMaster); 1
visible.addAll(item.getTickets()); 1
if(distance!=pd) 1
mode=ADD; 1
Entry<BaseObjectType>[] 3
trueClass.defineFastMethod(, 3
DavPropertyName.create(PROPERTY_ACL_PRINCIPAL_COLLECTION_SET, 1
cmp 2
traceFrames[traceSize] 1
javaClassCache.put(clazz.javaClass(), 1
sb.append(Sprintf.sprintf(getRuntime(),,c)); 1
this.asBlock 1
print('&'); 2
appendersNode 1
ESCAPE_REPLACEMENTS[''; 1
if(d.isNil()) 1
buf.fill('0', 1
NAMES[ASET] 1
env.expectFirstFlowMappingKey(); 1
if(composer.checkNode()) 1
arr_false.append(arg); 1
registerClass(,bs,unicodeCategories); 2
for(Square 4
RhoConf.getInstance().saveToFile(); 1
unmarshalStream.defaultInstanceVarsUnmarshal(exc); 1
this.representedObjects.put(data,null); 1
Mixins.init(mixins); 1
ProxyMethodImpl.createJavaProxyMethodClass(runtime, 1
RubyFloat 8
result.defineConstant(,runtime.newFixnum(9)); 3
chunks.append(parseHexa(length)); 1
if(b.bytes[0] 1
regexpClass.defineFastMethod(,RubyKernel.IRUBY_OBJECT)); 1
runtime.getGlobalVariables().set(bytecodes[ip].s_op0, 1
wl.unlock(); 1
sock.fd 1
add(word.append(SEPARATOR)); 2
r[120]=43; 1
anchors.put(anchor,node); 3
context.createNewArray(arrayNode.isLightweight()); 1
updateItemStmt.setLong(1, 2
prev_branch.failNext=next; 1
r[200]=48; 1
runtime.getGlobalVariables().setDefaultSeparator(defaultRS); 1
MethodKey 2
makeContentDisposition(item)); 1
print(n.getContent()); 3
append(obj.convertToString().getByteList()); 2
runtime.getLoadService().init(loadPath); 1
methodCompiler.variableCompiler.setTempLocal(tempLocal); 1
ix 4
closedWrite 5
AttrAssignNode 2
regexpClass.defineConstant(, 3
table[idx] 4
super(uri); 1
total 2
note.getTriageStatus().setCode(TriageStatus.CODE_LATER); 1
blockIndicators 6
sb.append(getWeight()); 1
mv.visitJumpInsn(arg0, 1
updateTable[index] 2
this.objectSpaceEnabled 2
call_flags 1
String[] 63
-.100481621442573113272170176283e-10, 1
negative 3
RubyModule.marshalTo((RubyModule)value, 1
this.hash 3
if(!io.respondsTo()) 2
call.init(); 1
src.unread(h1); 1
r[88]=43; 1
super(object, 1
hash.put(key2, 2
setupInterfaceProxy(proxy); 1
Bitset.unify(wordChar,term); 1
this.mv 1
spoolCalendar(StampUtils.getCalendarCollectionStamp(item), 1
getRuntime().getJavaSupport().handleNativeException(ite.getTargetException()); 3
arrayNode.add(anotherConstNode); 1
flater.setDictionary(str.convertToString().getBytes()); 2
this(pattern.matcher(chars,off,len),false); 1
StampUtils.getEventExceptionStamp(noteMod); 1
b.prepend(bytes[i]); 1
flt.defineFastMethod(,IRubyObject.class)); 1
print(':'); 2
ttype=COMMENT; 1
klass, 1
blocking 2
mv.visitLabel(label); 1
if(handle 4
substitution= 1
expansion.add(pattern); 1
err 6
switch(ival 24
Point 1
nilClass.defineFastMethod(, 3
super(directory); 1
SPACES_AND_STUFF['\''] 1
this.oldMethod 1
TreeItem 6
fileMetaClass.defineFastMethod()); 10
runtime.tearDown(); 2
GlobFunc 1
tmsStruct 1
gt.maxCount=m; 3
if(p1>=out 2
initErrnoErrors(); 1
parseStack.push(P_FLOW_MAPPING_INTERNAL_VALUE); 1
boardE[i][j]=0; 1
print('('); 2
values[(int) 1
result.add(value); 1
mv.invokevirtual(cg.p(JumpException.class), 4
synchronized(this) 3
factory.createShortIfNodeReWriteVisitor().visitNode(n.getThenBody()); 1
if(endReached){ 1
visitNode(iVisited.getRescueNode()); 1
lo--; 1
sort_fields[i] 6
tagPrefixes.put(prefix,handle); 1
compilePattern(pattern); 1
strcpy(new 1
traceCall(context, 3
if(source==null 1
foundAt 2
mv.visitLabel(l0); 1
result.defineModuleFunction()); 1
JavaClass 9
reader.setContentHandler( 1
Restart.init(restart); 1
fetchMoreTokens(); 3
firstNode 3
if(event.getUid()!=null) 1
if 4690
list.add(new 6
exception.set_backtrace(RubyArray.newArray(interpreter, 1
HashSet<String> 1
args.add(str.substring(contentStart,i)); 2
xdigit.setRange('0','9'); 1
after 1
checkUselessStatement(currentNode); 1
buf.append().append(previousFrame.getName()).append('\''); 1
this.channel 2
mv.label(tryBegin); 3
PRIMITIVE_CLASSES.put(, 8
collectMethods(superClass, 1
VAlarm 5
mainStream 1
RubyRange 4
((BlockPassNode) 1
topgbc.gridwidth=1; 1
obj.setData(JavaWrapper.wrapWithMethods(clz, 2
org.jruby.RubyDigest.createDigestMD5(runtime); 1
ScrolledForm 2
@JRubyClass(name=) 4
cmdArgumentState.restart(); 3
cal.clear(); 3
if(login.isEmpty() 1
setSuperClass(originalModule.getSuperClass()); 1
topgbc.gridx=0; 1
System.err.println(searchable.maxDoc()); 1
handler.putc(c); 1
addLocalVariable(i, 1
b64_xtable[i] 1
r[256]=30; 1
NoSuchMethodException; 1
should_block 1
decodeShortUnsignedLittleEndian(enc)); 1
mv.ifeq(endJmp); 1
matchingMethods.put(argsTypeHash, 1
makeCalendarContentDisposition(stamp.getItem())); 1
if(term.inverse) 2
setBackTrace(18); 1
config.getSource().charAt(getStartOffset(n)+1) 1
autoloadMap.remove(name); 1
props.put(em.getKey(),em.getValue()); 1
checkBuffered(); 2
checkDir(); 13
((ConstantField)iter.next()).install(proxy); 2
runtime.getWarnings().warn(); 8
this.bits=bits; 1
c.compile(((DefnNode)node).getBodyNode()); 1
objectSpaceModule.defineModuleFunction()); 1
c='\n'; 2
mv.swap2(); 1
current.out=mr.out; 1
updateDatabase(databaseName); 1
break 131
term.next=b; 2
.274199312521960610344221607915e-4, 1
this.retValues 2
emitter.writeFolded(analysis.scalar); 1
this.ngrams 1
message.setTaint(isTaint()); 1
warnings.warn(ID.INVALID_CHAR_SEQUENCE, 1
Control 4
dialog.setPageSize(600, 2
.getNamedQuery(,uid); 1
mv.newobj(cg.p(JumpException.class)); 1
this.regexpNode 1
(RubyString) 2
term.append(clg); 1
ic.setJavaName(method); 20
binding.getFrame().setVisibility(oldVis); 1
clear(Math.max(3, 1
table[ClassIndex.FIXNUM][MethodIndex.OP_SPACESHIP] 1
occurrences 31
ScriptableObject.defineClass(scope, 2
switch(j) 21
defaultVariablesUnmarshal(rubyObj); 1
dir.each(context, 1
Rhino 1
arity.mimicsWithoutCheck(origin); 1
skip=4; 2
context.pollThreadEvents(); 5
newMethod.aload(LOCAL_VARS_INDEX); 1
Type 5
this.entityEscapeSelector 1
BEGIN 1
assertSame(o2, 1
content.getParent().addContent(content, 1
print(iVisited.getOldName()); 2
locale=rb.getLocale(); 1
ret[3] 4
warnings.warning(ID.AMBIGUOUS_ARGUMENT, 1
bitcnt 2
append(RubyKernel.sprintf(this,args)); 1
while(in.length() 1
runtime.defineReadonlyVariable($ 1
createSysErr(IErrno.ENAMETOOLONG, 1
checkInt(arg, 5
s[s.length 1
SchedulerReader 1
fieldsSection.setText(); 1
if(preparedAnchor 1
standard 2
ConditionalExpr(Lookahead 1
struct.values[i] 1
assertTrue(true); 1
pushRubyClass(objectClass); 1
Keyword(String 1
if(destBit 2
callerBuffer 1
WrappedMethod(DynamicMethod 1
getRuntime().newArgumentError(); 1
helper.setOpaque(false); 1
type=PLOOKBEHIND_IN; 1
+; 1
SkinnyMethodAdapters.push(mv); 1
removeNoteItemFromCollectionInternal(mod, 1
this.isExclusive 1
addMissingTextField(FIELD_LOCATION, 1
gh.loadThis(); 1
if(type.isSingleton()) 1
FieldCallback(String 1
ConstNode 3
FontStructure.dir, 1
classClass.kindOf 1
if(debug) 1
getChars(i, 1
Arrays.fill(classes, 2
pushRubyClass(runtime.getObject()); 1
ByteList.plain(); 1
super(runtime); 7
MethodNode 4
pgbc.anchor=GridBagConstraints.SOUTHWEST; 1
super(editor, 2
m_oSyncEngine.doSyncSource(oSyncCmd.m_nCmdParam,,oSyncCmd.m_strCmdParam, 1
isShared 6
assertFalse(b.equals(b2)); 1
writeInt(value.length()); 2
io2.callMethod(context, 1
noteItem.setIsActive(false); 1
.createContentConfiguration( 1
ESCAPE_REPLACEMENTS['f'] 1
fileSystem.mimicsWithoutCheck(origin); 1
runtime.parseFromMain(in, 1
getMethodAdapter().dup(); 1
nestedCallDepth--; 1
runtime.getWarnings().warn(e.getMessage()); 2
assertTrue(rubyObject.toString().startsWith()); 1
outBuffer.put((byte) 1
-.163751663458517884163746404749e-3, 1
if(comp 1
Set 10
target 4
writer.deleteDocuments(new 6
myHead.setBackground(background); 1
DEFINED_P 1
rehash(); 3
key.interestOps(key.interestOps()|real_ops); 1
note.addStamp(task); 1
getMethodAdapter().invokeinterface(IRUBYOBJECT, 1
dup.values 1
arguments[i] 2
if(!(JavaClass.assignable((Class)types.get(j),(Class)arg_types.get(j)) 1
parseStack.push(P_PROPERTIES_END); 2
print(config.getFormatHelper().beforeIterVars()); 1
.10011693583558199265966192015812e-5, 1
this.resolver 2
runtime.setMarshal(module); 1
buf[charPos] 4
myHead.setFont(font); 1
digit.setRange('0','9'); 1
this.count 2
message.setFrom( 1
if(c>0xffff) 2
seq.magic 1
buffer.position(i 1
this.sizeLimit 1
obj.mimicsWithoutCheck(this.message); 1
limits[LIMITS_PARSE_RESULT_INDEX]=LIMITS_OK; 1
})); 3
if(peek() 6
if(content==null) 1
converters['L'] 1
seq.exception 1
if(match.isCaptured(i))match.getGroup(i,dest); 2
HashMap<Date, 1
this.buffer.append('\0'); 1
if(!bs2.isLarge) 2
composite.setLayout(sectionLayout); 1
sum.subtract(bs); 1
Button 4
runtime.callbackFactory(RubyClass.class); 1
mv.go_to(normalEnd); 1
re.initCause(e); 1
method.isub(); 2
ICalendarUtils.setCompleted(completeDate, 1
Table 2
userService.updateUser(user); 2
this.size 3
callType, 2
timezones.add(dt.getTimeZone().getVTimeZone()); 1
i=parseName(data,i,out,sb,skipspaces); 2
//		JTableHeader 1
if(opts.useVersion()) 1
moduleClass.definePrivateMethod(, 3
Arity.fixed(2), 1
if(entries==null 1
if(sampleOffset<0 4
while(wOffset<=end){ 1
arr.append(getRuntime().getNil()); 1
descriptor.close(); 2
bufstr 1
possibleMoves.add(cur.copy().addM(j)); 2
type=REPEAT_REG_MIN_MAX; 1
((RubyMatchData.RString)oldMatchData).set(); 1
sb.deleteCharAt(idx); 1
defineAlias(newId.asSymbol(), 1
assertFalse(ss.isBeginningOfLine()); 1
assertNotNull(failed); 1
RUBY_MAJOR_VERSION 1
if(INSTANCE.getsockname(fd, 2
r[296]=24; 1
this.getContentPane().add(panel); 1
r[280]=57; 1
moves.add(myMove); 2
digester.setValidating(true); 1
this.values 2
|| 16
cache=text; 1
toAppendTo.append(value); 13
do 25
rows.add(row); 3
newMethod.getstatic(cg.p(Visibility.class), 1
all.add(exx); 1
descriptor.write(buffer); 1
System.arraycopy(block.bits,0,bits,0,BLOCK_SIZE); 1
STRANGE_CHAR['%'] 1
newMethod.receiver 1
this.setModal(true); 1
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_HALF_EVEN)); 1
clearSession(); 3
scriptError 1
b2.set(0, 1
ttype=FLAGS; 1
dup.realLength 1
inBuffer.limit(0); 1
message.append().append(type.getName()); 1
loadName 2
if(fnmatch(magic,0,magic.length,bs,0, 1
sio.puts(args); 1
(isModule() 2
ProxyMethodImpl 1
b.next=term.in; 4
super(MethodIndex.getIndex(methodName), 2
profilename 2
response.setHeader(, 4
mv.label(normalEnd); 1
exArgs[0] 1
sub.setDisplayName(newsub.getDisplayName()); 1
this.regexpFactory 1
RubyKernel.require(runtime.getTopSelf(), 1
getMarshal().marshalTo(getRuntime(), 1
numeric.defineAnnotatedMethods(RubyNumeric.class); 2
buf.write(expChar); 2
verifyExit(new 1
setAlgorithm(type.searchInternalModuleVariable()); 1
if(sec_s 1
element.addAttribute(, 1
write(args[i]); 1
b.get(0); 1
infl.append(arg); 1
iokeGround.mimicsWithoutCheck(defaultBehavior); 1
context.createObjectArray(arrayNode.childNodes().toArray(), 1
request.setScope(SearchRequest.SCOPE_ONE); 1
r[40]=1; 1
converters['f'] 1
sb.append('\\').append('f'); 1
mv.visitFieldInsn(PUTSTATIC, 3
preceededBySpace 1
obj.mimicsWithoutCheck(this.symbol); 1
while(index<list.length){ 1
append(JavaUtil.convertJavaToRuby(getRuntime(), 1
if(profile.allowBuiltin(nm)) 1
-.21916688282900363984955142264149e-16, 1
runtime.evalScriptlet(expr.toString()); 1
RubyHashEntry 23
while(this.column 3
receiver 1
frameStack[++frameIndex].updateFrame(currentFrame); 1
inherit(superClazz); 1
fileChannel.truncate(newLength); 1
newTime.cal 2
ga.loadArgs(); 1
makeLazyStar(vars,current); 1
table.setSelectionForeground(foreground); 1
if(!f.exists() 1
if(beg 3
DateProperty 1
mr.out=i; 1
r[120]=57; 1
refMatcher.setTarget(s); 1
r[96]=17; 1
raiseNoMatchingMethodError(self,convertedArgs,0); 1
synchronized(attributesMap) 15
init__resolver_scanner_indicies_0( 1
type=PLOOKAHEAD_IN; 1
java.io.Serializable, 3
v++; 1
RubyHash 28
mv.invokestatic(cg.p(RuntimeHelpers.class), 1
decoder.decode(buf); 1
masterEvent.setEndDate(EimValueConverter.toICalDate().getDate()); 1
LanguageTools.rethrowUnchecked( 1
ByteList[] 1
request.setPathInfo(pathInfo); 1
java.setDir(launchDirectory); 1
close(updateItemStmt); 1
IndexWriter.unlock(dir); 3
user.removeSubscription(sub); 1
((AttributesMap)attrs).containsKeyNoIntern(name); 4
setMetaClass(originalModule.getSingletonClassClone()); 1
config.getCallDepth().enterCall(); 1
inChannel.close(); 2
delete(entry.key, 1
10000000000000L, 1
newMethod.ldc(new 2
launcher 1
if(attr==null 2
callMethod(runtime.getCurrentContext(), 1
removeEntry(e); 1
sb.append(pattern.charAt(i)); 1
addTitleParam(request, 2
cacheLength=m.cacheLength; 1
@NotNull 3
HttpClient 7
parseStack.push(P_STREAM_START); 1
errorStream.print(); 3
if((flags&IGNORE_CASE)==0){ 1
if(em.getKey().toString().startsWith()) 1
cName 1
1.0e21, 1
conf 1
tokenBuffer.append('0'); 1
reopenReader(); 1
conn 1
obj.setData(impl); 3
a[lo] 2
this.conditionNode 3
DefaultBehavior.init(defaultBehavior); 1
s.append(memregs.length); 1
getSession().save(prop); 1
while(10 1
if(iVisited.getValue().equals()) 1
spoolItem((FileItem) 1
mv.getstatic(cg.p(System.class), 1
IS_ESCAPE_REPLACEMENT['a'] 1
print(')'); 2
currObj=currEn.nextElement(); 1
stack.add(entry); 1
for(Iterator 25
mv.invokestatic(cg.p(RubyBignum.class) 1
super(anchor,tag,implicit,flowStyle); 2
DavResponse 2
obj.setDocumentation(doc, 3
100000000000L, 1
in.read(first); 1
DNBuilder 1
this.arityValue 1
this.instanceCallbacks 1
if(value) 1
FileSystem.init(fileSystem); 1
assertEquals(value, 1
term=re.root0; 2
tmp=new 1
moveTally.get(m.getM(ourTurn)).auxscore 1
if((c=data[i-1])=='\n'){ 1
if(dirsOnly 3
RESERVED_NAMES.put(, 9
method.label(tryCatch); 1
QuickStringBuffer 3
out.println(direction); 1
config.setOutput(oldOut); 1
s+=subtract(target,subtrahend,inv); 1
e.value 6
sb.append(data,in=mr.in,mr.out-in); 1
assertNull(ss.group(1)); 1
board 1
while(!nextPEE.hasMoreElements()){ 1
value.put(representData(entry.getKey()),representData(entry.getValue())); 1
sourcesPage.setDescription(); 1
super(DavPropertyName.GETETAG, 1
ImmutableList.<FragmentIdentifier>of() 1
s=count(target.bits,0,BLOCK_SIZE-1); 2
if(specials.indexOf(c)>=0) 1
System.arraycopy(path.bytes, 1
result.includeModule(runtime.getModule()); 2
Arity.noArguments(), 2
this.sourcename 1
suite.addTestSuite(TestRubyArray.class); 1
if(cnt>(minCnt=term.minCount)){ 2
spotFind.createPositions(); 1
callerBuffer.setValue(); 1
xdata 1
getInstance().addSyncCommand(new 5
column.setPreferredWidth(60); 1
this.descriptor 3
this.constantFields 2
VToDo 2
testFrozen(); 12
real.setOpaque(false); 1
runtime.getObject().setConstant(,rb_cUDPSocket); 1
if(no==null){ 1
cache.register(value); 1
writeContent((BlockNode) 1
createSysErr(IErrno.ENOMEM, 1
RubyJRuby.createJRubyExt(runtime); 1
c=(char)hex; 2
if(path==null) 2
floatc.dispatcher 1
JavaProxyClass 5
longId 1
converters['D'] 1
Reader 5
val.set(ix, 1
INameNode 1
pos_space 1
print('{'); 1
if(e.getMessage() 1
printStackTraceLine(errorStream, 1
testBadCode(); 1
mysql.defineAnnotatedMethods(JdbcMySQLSpec.class); 1
AlternateLoader 1
analyzeLength 1
iVisited.getBodyNode().accept(this); 6
buf[size+len] 1
file.setLength(newLength); 1
/ 3109
library.load(runtime); 2
masterEvent.setStartDate(EimValueConverter.toICalDate().getDate()); 1
seen_e 1
superClass 5
if(tzid!=null 4
infl.defineFastMethod()); 2
addPath( 1
entry.setProfile(profile); 1
.100355821875997955757546767129e-1, 1
handleModificationItem((NoteItem) 1
masterEvent.getAlarms().remove(masterAlarm); 1
defineGlobalEnvConstants(runtime); 1
stopWatch.lap(); 8
1000000000000000L, 1
Property 2
server.start(); 4
LOG.info(list.toString()); 1
obj 15
generateBoard(); 1
obj.mimicsWithoutCheck(orig); 1
module.const_set(getRuntime().newString(simpleName), 1
this(pattern.matcher(text),false); 1
channel.position(offset); 1
table[ClassIndex.STRING][MethodIndex.TO_SYM] 1
resourceInstaller.getTargetDirectory().toURI().toURL().toExternalForm(), 3
if(prev>c) 1
CollectionSubscription 6
!args[0].isKindOf(getRuntime().getString())) 2
this.env 2
floatc.defineFastMethod( 2
skip=2; 2
float 5
Entry(final 1
this.end 2
this.env.event 2
bufsiz 1
this.enm 2
context.preForBlock(binding, 1
fieldComposite 1
(c2 1
this.blocks=blocks; 1
pane.setOpaque(false); 1
logger.warn(, 2
assertSame(o4, 1
STUPID_CHAR['\t'] 1
Matcher 13
ioClass.dispatcher 1
callMethod(context, 9
.260827591330033380859341009439e-11, 1
mv.ldc(symbol); 1
io2Append.append('='); 4
1L, 1
r[232]=87; 1
expand(item); 1
!(value 1
if(getMIMEType(imf.getFile()).substring(0, 1
.391449586668962688156114370524e-2, 1
outputter.output(calendar.getCalendar(), 1
compile(spCharProcessor.replace(path),flags); 1
sb.append(position 1
.getMethod()); 1
encoder 1
log.warn( 1
r[248]=89; 1
newMethod.astore(VISIBILITY_INDEX); 1
if(!inv) 5
decoder 1
exception.defineFastMethod(,IRubyObject.class)); 1
MethodIndex.OP_SPACESHIP, 2
instances.setTimezone(TIMEZONE_REGISTRY.getTimeZone()); 3
this.setTitle(msg.getString()); 1
connectionConfig.setAdapterName(); 1
term.bitset2=Block.toBitset2(bs.blocks); 1
minor 1
floatc.defineFastMethod(, 14
tp.callMethod(runtime.getCurrentContext(),, 1
about.setResourceBundle(msg); 2
rb_cTCPSocket.defineFastMethod()); 2
nativeThread.join(timeoutMillis); 1
reason=io; 1
getPrintStream().close(); 1
cacheOffset=-start; 1
MockBooleanAttribute.setValue(this, 1
abstract 9
newArgs[0] 4
antlrResult.getClass(), 1
)); 4
assertTrue(map.keySet().contains()); 2
createClassInit(); 1
ConditionVariable 1
assertEquals(-1, 14
recv.getRuntime().setCurrentDirectory(oldCwd); 1
self.setInstanceVariable(,self.getRuntime().newArray()); 2
mergeCalendarProperties(task, 1
1483230225L, 1
if(type>=FIRST_TRANSPARENT 1
runtime.evalScriptlet(); 7
if(!(simpleKeyContext 1
method.getstatic(p(CallType.class), 1
STATES[STREAM_START] 1
reset.in=reset; 6
//assertTrue(list.size() 1
scroll.setBackground(background); 1
test 3
-.371863548781869263823168282095e-15, 1
createSysErr(IErrno.EFAULT, 1
getDisplayName())); 1
ss.getChar(); 2
pane.setBorder(BorderFactory.createLineBorder(Color.darkGray)); 2
numeric.dispatcher 1
IArgumentNode 1
if((end 1
this.tagHandles 1
hasClosure 2
blocks=null; 1
iVisited.getFirstNode().accept(this); 4
result.defineMethod(, 3
if(c.get(Calendar.MILLISECOND) 1
getSession().delete(collection); 1
exporter.setServiceInterface(Searchable.class); 1
scores 1
MultiValueStringAttribute 1
infl.getInflater().reset(); 1
scanDirectiveIgnoredLine(); 1
lineBreak 1
result.append(tmp); 1
info.addServlet(new 1
if(oldMatchData 1
moduleClass.index 1
exactPaths.put(obj[1],yamlPathResolvers.get(resPath)); 1
methodCompiler.loadThreadContext(); 19
assertTrue( 3
append(arg); 1
buf.fill('0',decZeroes); 2
record.addField(new 31
f.getParentFile().mkdirs(); 1
defl.getDeflater().reset(); 1
mv.visitJumpInsn(IFNONNULL, 1
mv.visitInsn(SWAP); 1
i.line_no 7
exceptions.add(exceptionStamp.getEvent()); 2
((AbstractDocument) 1
data=m.data; 1
if((ri 2
path.substring(1); 1
context.preScopedBody(scope); 1
length++; 12
mess.setFile(m.getFile()); 1
gbc.anchor=GridBagConstraints.WEST; 2
mv.label(isTrue); 1
if(!args[1].isNil()) 3
method.putstatic(classname, 1
createSysErr(IErrno.EROFS, 1
uriResolver 1
cFiber.getMetaClass().defineFastMethod()); 1
zone 2
INSTANCE.close(fd); 3
env.expectBlockSequenceItem(true); 1
for(List<HandlerInfo> 1
text 1
STATES[FIRST_DOCUMENT_START] 1
types[args.length] 1
this.specialCharacters 1
groupNames.put(t.groupName,new 1
result.op_aset(entry.value, 1
userMarshal(value); 1
fr.setBorder(BorderFactory.createEmptyBorder()); 2
pgbc.gridx=0; 1
this.symbolClass 1
runtime.registerInspecting(this); 1
HEXA_VALUES['6'] 1
entries 1
this.timeClass 1
timeClass.defineMethod()); 2
p.add((Path) 4
ga.getStatic(selfType, 1
i=parseClass(data,i,out,bs,icase,skipspaces,unicode,xml); 2
message.append(' 1
p 13
print(config.getFormatHelper().matchOperator()); 2
systemId 1
r[272]=57; 1
infectBy(superClass); 1
while(BLANK_T[peek(length)]) 1
assertNull(strings.next()); 1
pending.remove(key.attachment()); 1
if(dir==null) 4
this.exception 1
processTag(); 1
testServer.redirectingTo(url).start(); 1
this.entryConfig 1
inspect(((MatchNode)node).getRegexpNode()); 1
anchorNode((Node)me.getKey()); 1
ServersView 1
initialized 2
console.setSize(700, 1
format.setBackground(background); 1
receiverCallback.call(methodCompiler); 6
initNamedCategory(,Po); 1
JavaProxyInvocationHandler 3
curr.callMethod(context, 1
setInput(in); 1
bytes[newlen-1] 1
oldLine 2
}*/ 1
factory.createShortIfNodeReWriteVisitor().visitNode(n.getCondition()); 1
setChar('\n'); 1
bufferedWrite(c); 1
super(scLogin,callback); 1
table[ClassIndex.ARRAY][MethodIndex.OP_LSHIFT] 1
NULL_BL_LINEBR['\n'] 1
if(engineering) 1
doc.add(fieldObj); 2
if(ind>0) 1
RhoClassFactory 2
defaultEntry.reset(0); 1
ConditionalExpr(int 1
BigInteger 22
r[152]=58; 1
bs.setPositive(false); 2
flags=Pattern.parseFlags(data,mOff=(i+2),mLen=(p-mOff)); 1
RubyString.newString(runtime, 1
optEval.nextValue(this, 1
if(called) 3
RubiniusCMethod 1
table[ClassIndex.BIGNUM][MethodIndex.INSPECT] 1
if(start 6
((SelectableChannel) 4
map.put(key, 1
proxyClass.setAllocator(interfaceJavaProxy.getAllocator()); 1
mep.put(self.getRuntime().newString(),rt.newString(self.toString())); 1
initNamedCategory(,Lt); 1
setDescription(); 1
table[ClassIndex.ARRAY][MethodIndex.POP] 1
blockArg 2
instances.setUTC(true); 4
output.registerLinkTarget(bignum); 1
javaArrayClass 1
processAnchor(ByteList.create()); 1
int[][] 12
visitNode(iVisited.getThenBody()); 1
regex 18
if(pathname 1
map.put(path, 1
EimRecordSet 6
if(term.weight<=THRESHOLD) 1
e.printStackTrace(); 15
sb.append('\\').append('r'); 1
firstChild(argsNode) 1
DavPropertyName.create(PROPERTY_ACL_CURRENT_USER_PRIVILEGE_SET, 1
configHash.op_aset(runtime.newString(key), 1
desk.setBorder(BorderFactory.createEmptyBorder()); 1
variable.removeTraces(); 1
getCompiledClass(); 2
sb.append( 1
delete(term.text(), 1
end.setUtc(true); 1
if(!NON_ALPHA_OR_NUM[peek()]) 1
defout 1
masterCal.getComponents().add(0, 4
getSyncEngine().getNotify().setSyncNotification(source_id, 1
mv.label(labels[i]); 1
printAssignmentOperator(); 3
RubyStruct 7
writer.expungeDeletes(); 2
gbl.setConstraints(remember, 1
STRANGE_CHAR[' 1
if(err 3
expectBlockMapping(); 1
resp.sendError(400, 8
splice(beglen[0], 1
parents.add(rs.getLong(1)); 1
frameStack 1
method.getstatic(p(IRubyObject.class), 3
if(Character.toLowerCase((char)c) 1
ibc 1
List<RestartInfo> 2
fromAsBytes 1
if(fd 1
inspect(dotNode.getBeginNode()); 1
ENSURE 1
cal 4
table[ClassIndex.CLASS] 1
for(;possibleMoves.get(0).Dsize() 2
sourceConfig.addFieldConfig(fieldConfig); 1
IS_ESCAPE_REPLACEMENT['_'] 1
recv.getRuntime().getCurrentDirectory(), 1
configuration.getProducerConfiguration().getRenderingConfiguration().getDefaultCharset() 1
java.io.StringWriter 1
((AttributesMap)attrs).containsClassVariables(); 1
mep.put(self.getRuntime().newString(m.substring(1)), 5
bs.setCategory(Cn); 2
BufferedImage 1
substring 1
currentLineNumber 3
r[8]=1; 1
hadComment 1
ThreadContext 141
if(!NULL_BL_LINEBR[peek()]) 5
newString(file), 1
file.seek(new 1
CalendarContext 1
STUPID_CHAR['|'] 1
if(!types[x].equals(arg_types.get(x))) 1
seq.args_block 1
super.removeLiveProperty(name); 1
context.createNewString(strNode.getValue()); 1
List<HandlerInfo> 1
table[ClassIndex.STRING][MethodIndex.OP_SPACESHIP] 1
super(tag,value); 2
MetaClass 1
NON_ALPHA_OR_NUM['\0'] 1
moveTally.get(7*3+1).score 1
stackTop 4
pushCallFrame(frame.getKlazz(), 1
ADD_CALL_RECEIVER(recv, 1
convertedArgs[0] 1
this.messageSource 1
r[232]=65; 1
DEFAULT_INITIAL_CAPACITY)); 1
terms.close(); 3
server.setHandler(contexts); 1
Comparisson 2
proxyClass 6
Component.VEVENT); 3
strcpy(s, 3
hashc.dispatcher 1
this.pipeStream 1
topgbc.anchor 1
explicit 1
result.defineConstant(,runtime.newFixnum(10)); 1
super.initialize(block); 1
md.add(method); 1
-.490639565054897916128093545077e-3, 1
table.setAutoscrolls(true); 1
privateField 1
opts 2
raiseArgumentError(args,message); 1
interfaceList.add(interfaceClass); 1
colz 2
instanceMethods 1
validateConstant(internedName); 3
ended 1
gameState 4
add(word.subSequence(wlen 1
super.printBacktrace(errorStream); 1
body.setLayout(new 2
envs.put(envVarName, 1
topgbc.anchor=GridBagConstraints.EAST; 1
this.allowFlowPlain 1
val+=v2; 1
this.id 4
content.setLastModifiedBy(user 1
this.in 3
this.io 6
javax.swing.SwingUtilities.invokeLater(new 1
file.close(); 6
assertTrue(entry.getValue().getClass() 3
useHandle 1
.copyComponent(exceptionStamp.getExceptionEvent()); 1
methodCompiler.method.dup_x2(); 3
Matcher(Pattern 1
ListNode 3
registerRestarts(rrs); 2
lt.maxCount=n; 3
if(this.anchors.containsKey(node)) 1
matcher.setOffset(pos); 5
jrubyHome 2
runtime.getModule()); 3
this.localSessionFactory 1
not 1
System.arraycopy(body,0,nbody,0,real); 1
now 1
timeClass.defineAlias(); 12
if(bits==null){ 2
delegate.methodTableSync(methods); 1
warnings.warning(ID.ARGUMENT_AS_PREFIX, 2
buf.write(exponent 8
buf[charPos--] 4
SubRecords 2
gen.callMethod(gen.getRuntime().getCurrentContext(),,ibc.pop()); 1
dest.append(fsClass); 5
r[312]=99; 1
runtime.setMethod(methodClass); 1
values[p++] 1
h 8
overlord.setAdmin(true); 1
loseTurn 1
bEmpty 1
en 2
super.terminate(); 1
push(self); 1
iter.remove(); 3
out.println(); 1
this.message 2
context.invokeAttrAssign(attrAssignNode.getName()); 1
if(parser.peekEvent() 2
buffer.append(s.toString()); 1
@Column(name 2
m_oSyncEngine 1
DEC_TIMESTAMP, 1
decode(runtime, 1
space 1
io2Append.append((char)lTranslationTable[charCount]); 1
if(value.equals()) 1
oldReader.decRef(); 1
this(wrap,true); 1
y+=3; 2
end++; 1
pgbc.gridwidth=1; 1
ga.storeLocal(loc, 1
staticMethods.put(name, 1
adapterName.add(new 1
load(); 1
toAppendTo.append(formatSymbols.getShortMonths()[calendar.get(Calendar.MONTH)]); 1
if(wOffset==we){ 1
//connection.setRequestProperty(); 1
InstanceFieldSetter(String 1
if(opt==null) 1
args 32
floatc.includeModule(runtime.getModule()); 1
entityFactory.createPreference(UIConstants.PREF_KEY_LOGIN_URL, 1
HashSet<NoteItem> 2
attributesMap.put(self, 16
if(tzname.endsWith(id)) 1
staticCallbacks.put(name,new 1
argc 2
add(doc, 1
gbc.gridy=3; 2
SubscriptionFeedGenerator 4
createSysErr(IErrno.ECHILD, 1
moveTally.get(0).score 2
kernel.defineAnnotatedMethod(RubyEnumerator.class, 1
DocumentBuilderFactory.newInstance(); 1
formatWeekYear(Calendar.MONDAY, 1
out.type=NLOOKAHEAD_OUT; 1
node.addMethod(method); 4
setBaseItemProps(collection); 1
chain.doFilter(new 1
contentDao.createCollection(root, 1
synchronized(searchModule.getMethods()) 1
term.append(makeTree(t,data,vars,flags,fork,iterators,groupNames)); 1
note.setBody(journal.getDescription().getValue()); 1
subsetModes.checkSubsetOf(modes); 1
variables 2
newStruct.getSingletonClass().defineMethod()); 3
newConstructorParameterTypes, 1
message 2
if(opt!=null) 1
Bitset.unify(digit,term); 1
size 22
LINEBR['\n'] 1
newTime.cal.setTimeZone(cal.getTimeZone()); 2
width 24
task); 1
BufferedWriter 1
message.init(); 1
MethodData(Method 1
getMetaClass().setMethodVisibility(args, 2
getPrintStream().print(c); 1
suite.addTestSuite(TestJavaClass.class); 1
data=mychars=new 1
mv.visitInsn(DUP2_X1); 1
NAMES[NIL_P] 1
LinkedList	 1
mv.if_icmpgt(ok); 1
time.callInit(IRubyObject.NULL_ARRAY, 2
arity 3
this.parseStack 1
this.startSequence 1
this.validateSchema 1
((lex_state 4
mv.label(l); 1
ga2.loadArgs(); 1
RubyMethod 3
post(context); 4
resultCode 2
ServletResponse 1
_trans 6
flagbc.gridy=0; 2
mv.label(defaultLabel); 1
launchDirectory.mkdirs(); 1
'4', 2
fieldsTable.removeAll(); 1
result.defineAnnotatedMethods(RubyGC.class); 1
fork=new 3
buttonPane.add(execute, 1
rb_cUNIXSocket.getMetaClass().defineFastMethod()); 2
if((proxyClass 2
called=false; 4
setPosition(getPosition().union(getLast().getPosition())); 1
currEn=new 1
Main 2
assertEquals(,val1,outp[0]); 1
this.libraryName 1
variableNames[variableNames.length 1
r[88]=0; 1
limits[ind++]=v; 1
if(!args[3].isNil()) 1
self.callMethod(context, 3
if(match.length(grp)==0) 1
data.append('\\'); 1
field.set(javaObject, 1
getRuntime(), 1
this.pos 4
note.setClientModifiedDate(journal.getDateStamp().getDate()); 1
NodeCompilerFactory.getCompiler(notNode.getConditionNode()).compile(notNode.getConditionNode(), 1
width--; 9
build.append().append(exponent); 1
begin 10
AnyPath(boolean 1
this.tOffset=tOffset; 3
Package 1
logged=true; 1
this.parentConfig 2
if(ind==0) 1
writer.write(json.toString()); 1
ioObj 2
System.arraycopy(originalArgs, 2
flags=t.flags(flags); 1
threadContext.preBsfApply(names); 1
push(context.getConstant(bytecodes[ip].s_op0)); 1
list.init(); 1
matchingFiles.addAll(getMatchingFiles(matchArray[i], 1
script 4
helper.privateMethod(); 1
siteList.add(site); 1
c[3] 2
argTypes.add(((JavaClass)((JavaObject)args[i]).java_class()).getValue()); 1
-.35588395132732645159978942651310e-13, 1
this.opened 3
setInput(pipeIn); 3
if(((Class)v1).isPrimitive()) 1
if(completed!=null) 1
NodeCompilerFactory.getAssignmentCompiler(multipleAsgnNode).compile(multipleAsgnNode, 1
Assert.assertTrue(report.calls.contains(testHelper.getHomeCollection(). 1
System.out.println(iter.next()); 2
while( 4
this.viewsig 2
ret.append(consumeInBuffer(remaining)); 2
rb_sys_fail(getRuntime(), 1
methodCompiler.method.pop2(); 2
console.validate(); 1
rubyObject.setFrozen(true); 1
sum.add(bs); 1
HashMap<String, 3
doSyncSource(arg.toInt(), 1
ratio 1
instance.setMetaClass(klass); 6
RubyRegexp.marshalTo((RubyRegexp)value, 1
title 1
frameStack[++frameIndex].updateFrame(getPosition()); 1
descriptor.checkNewModes(modes); 2
createSysErr(IErrno.EISDIR, 1
event.setDisplayName(name); 2
createSysErr(IErrno.EILSEQ, 1
masterEvent.setLocation(); 1
calendar.setName(name); 1
mv.getstatic(cg.p(CallType.class), 1
encodeFloatLittleEndian(result, 1
mv.astore(DISPATCHER_RUNTIME_INDEX); 1
main: 1
this.formatHelper 1
synchronized(channel.blockingLock()) 1
writer.rollback(); 2
i2++; 2
table.setShowGrid(false); 1
amEditing.notify(); 1
breaks.append(scanLineBreak()); 1
write(b,0,b.length); 2
Utils.LOG.fatal(, 2
BaseConstructorImpl.addConstructor(,new 1
RubyFileStat.createFileStatClass(runtime); 1
boards[E][i][j] 1
mess.setLine(m.getLine()); 1
parser.getEvent(); 5
runtime.getThreadService().disposeCurrentThread(); 1
if(ev.getImplicit()[0] 1
map.remove(); 1
r[80]=251; 1
melipone 1
id=Integer.parseInt(s); 1
Throwable 9
newMethod.aload(THREADCONTEXT_INDEX); 1
this.wEnd=memregs[0].out=i; 1
timer.schedule(new 1
inspect(whileNode.getConditionNode()); 1
overlord.setCreationDate(new 1
result.setConstant(,RubyNumeric.int2fix(runtime,10000)); 1
if(childCalendar==null) 1
this(1); 2
init__resolver_scanner_key_offsets_0( 1
RubyThread 1
c=(char)((CharacterClass.toHexDigit(data[i++])<<24)+ 1
DavPropertyName.create(PROPERTY_ACL_ALTERNATE_URI_SET, 1
if(currentFile 13
reset.next=b; 3
if(isExclusive) 1
config.getOutput().print(config.getBasicUsageHelp()); 1
3 1
handler.truncate(newLength.getLongValue()); 1
helper.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1
buf.append(bytes, 6
response.setContentType(); 1
import 5999
@Test(expected 2
roundPos--; 1
super(testName); 1
channel.read(buffer); 1
this.q 3
this.r 1
memregs[memreg].tmp=i; 1
this.v 1
if(DIGIT[ch]) 1
-.799101594700454875816073747086e-12, 1
result.setConstant(,RubyNumeric.int2fix(runtime, 2
this.m 1
this.n 1
cache[i] 1
this.evaluateAtStart 2
runtime.setRandomSeed(System.currentTimeMillis() 1
if(folded 1
visitNode((Node) 4
newFloat(getRuntime(), 1
RegexpMatcher 2
((JavaArray)byteArray).getValue() 1
addOverlord(); 1
l.setText(parameter.getDefaultValue() 1
this(code, 2
range.mimicsWithoutCheck(origin); 1
mv.pop2(); 1
assertEquals(,2,c.getScriptArguments().length); 1
Group(int 1
ending++; 6
completeCombo.setSelectedIndex(selected); 2
AppenderConfig 1
recursiveObjects.clear(); 1
-.696664881494103258879586758895e-13, 1
gbl.setConstraints(panel, 1
ctx.getCalendar()); 1
target=term; 2
result.append(c); 2
ga.invokeInterface(INVOCATION_HANDLER_TYPE, 1
xslFileName 1
rb_sys_fail(); 4
offset=start; 1
assertTrue(map.isEmpty()); 1
pushRubyClass(type); 2
result.setConstant(,RubyNumeric.int2fix(runtime,-1)); 1
emailIdx.put(user.getEmail(), 2
positive=false; 2
minLength 3
visitNode(iVisited.getSuperNode()); 1
out=mr.out; 1
if(sc.length() 1
table[ClassIndex.HASH][MethodIndex.TO_HASH] 1
DomUtil.getQualifiedName(ELEMENT_ACL_PRINCIPAL_PROPERTY_SEARCH, 1
.158966330976269744839084032762e-13, 1
(lock 7
EXPR_BEG, 1
checkAssignmentInCondition(node); 1
className 7
if(skipLikelihood) 1
if(recordset.isDeleted()==false) 1
result.append(largs[0]); 1
noteMod 1
if(refMatcher.isCaptured(NAME_ID)){ 1
name, 1
this.handlers.get().remove(handlers); 1
mutex.unlock(); 1
setCategory(Zp); 1
S4['\r'] 1
re.callInit(args, 1
dec+=d-'0'; 2
site.removeCachedMethod(); 1
System.arraycopy(bytes,pos,bytes,displace,buflen-displace); 1
result.gameOver 12
removeItemInternal(note); 1
range.defineFastMethod(,IRubyObject.class)); 1
switch(pos.dir) 1
parentStack[++parentIndex] 1
RegularMask(String 1
m_mxStackCommands 1
chars[0] 3
RUBY_PATCHLEVEL 1
arr.alloc(ARRAY_DEFAULT_SIZE); 1
runtime.getWarnings().warn(ID.REDEFINING_DANGEROUS, 1
icalUid 2
self.getInstanceVariable(,value); 1
this.anchors.put(node,null); 1
output.writeInt(array.getList().size()); 1
map.remove(key); 2
config.getOutput().println(mee.getMessage()); 1
inspect(((NewlineNode)node).getNextNode()); 1
sb.append(':'); 1
ic.setArity(Arity.singleArgument()); 4
this.expressionNode 1
pane.add(abouter); 1
WARNING_ID(String 1
if(hour_s 1
hibQuery 2
Lookbehind(int 1
gzreader.defineFastMethod()); 13
if(Character.isDigit(data[i])){ 1
ReentrantLock 2
s+=add(target,addend,inv); 1
RubyClassPathVariable.createClassPathVariable(runtime); 1
list.addAll(sublist); 1
b.length(10); 1
context.getRuntime().getWarnings().warn(); 1
ceh 6
readArguments 2
if(lastIndex==-1) 2
condition.failNext=out; 1
inspect(match3Node.getValueNode()); 1
message.setText(); 2
if(event.getDateStamp()!=null) 1
this.delayMillis 1
if(val 8
isStar 1
result.setMetaClass(type); 1
canExecuteVar 1
monitor.subTask(); 2
table[ClassIndex.BIGNUM][MethodIndex.HASH] 1
//		g.drawImage(image, 1
this.constNode 1
visitNewlineInParentheses(iVisited.getCondition()); 1
visitNode(args); 1
entry.isState=false; 1
ADD_INSN1(anchor, 1
clazzInit.visitLdcInsn(selfType.getClassName()); 1
methodClass.defineMethod()); 4
gbc.anchor 9
frame.duplicate(), 1
out1=back; 2
if(last<Character.MIN_VALUE 1
createSysErr(IErrno.EINVAL, 1
dirs.add(beforeBrace 1
s.append(wEnd); 1
start(epLow); 1
if(Pattern.matches() 1
NAMES[EMPTY_P] 1
if(c.isArray()) 1
links[0].setActionCommand(); 1
nTrailingZeroes 6
SingleMove 2
this.lex_strterm 1
if(bytes[begin+i] 1
verify_list(); 4
env.expectDocumentStart(false); 1
item.getUid(), 2
Project 2
0); 1
EntryIterator() 1
bytes[i] 5
directorySection.setLayoutData(new 1
newTime.setUSec(micro); 2
ruby.init(); 1
BigDecimal 6
queueEntry=makeQueue(refMatcher); 1
componentMap.put(uid.getValue(), 1
method.arraylength(); 2
this.rescues.get().remove(rescues); 1
interfaces, 1
pushArity(arity); 1
buf[i] 1
t 2
output 5
term.type=CHAR; 2
RubyBasicSocket.createBasicSocket(runtime); 1
dirs.remove(i); 1
ps.setLong(index, 1
doSyncSource(arg0.toInt(), 1
r[240]=1; 1
trueObject 1
if(p.getCreationDate()==null) 1
super.setLiveProperty(property); 1
pgbc.fill=GridBagConstraints.BOTH; 1
determineExpressionState(); 10
RubySystemExit.createSystemExitClass(this, 1
matchingFiles.add(parent); 1
Fiber 2
stdIn.close(); 1
term.memreg=n; 1
mv.label(end); 2
ESCAPE_REPLACEMENTS['0'] 1
config.getLocalVariables().addLocalVariable(iVisited.getIndex(), 1
IndexSearcher 5
setCalendarAttributes(freeBusy, 1
parseStack.push(P_FLOW_MAPPING); 2
System.arraycopy(s, 1
Map.Entry<String,String> 1
table[ClassIndex.REGEXP][MethodIndex.TO_S] 1
originalString 1
STATES[FIRST_BLOCK_SEQUENCE_ITEM] 1
pushFrame(clazz, 1
mv.visitLookupSwitchInsn(arg0, 2
falseClass.defineFastMethod()); 4
generateConstructor(selfType, 1
ngram 1
EntityEscapeSelector 2
super.initialize(manager, 1
throw 1335
src 1
visitNode(iVisited.getEndNode()); 2
interface2.method2(); 1
if(block.isFull){ 1
inBuffer.get(ret, 1
getRuntime().newString(), 1
table[ClassIndex.REGEXP] 1
dumpObject(runtime.newSymbol(type.getName())); 1
if(choices[i].isInstance(this.currentEvent)) 1
proxy.defineFastMethod(, 1
buf.fill(leadChar,precision-len+1); 1
r[272]=94; 1
checkExpression(rhs); 1
setCategory(Zl); 1
singleton.defineAlias((String)iter.next(), 1
dest.append( 1
area.getDocument().insertString(start, 1
Document 4
startIndex 1
conds.add(this.condition); 1
if((cnt=repeat(data,i,end,term.target))<=0){ 1
getServletPath() 1
time.setJavaCalendar(cal); 1
this.skip 3
transformerHandler.setResult( 1
if(tmp<offset){ 2
log 2
maximumArgs 1
f.mkdir(); 1
assertTrue(ss.matched()); 1
nilClass.index 1
MUTEX.notify(); 1
str.syncVariables(this.getVariableList()); 1
term.type=(flags&MULTILINE)>0? 2
Integer 13
emitter.writeIndicator(ByteList.create(),true,false,true); 2
newMethod.tableswitch(expectedArgsCount, 1
doc.add(token(Config.DB, 1
RubyProc 13
table[ClassIndex.FIXNUM] 1
checkInheritable(superObject); 1
RubyFixnum.one(runtime) 1
POSIX 2
compiledScriptClass.defineFastMethod()); 3
createUser(overlord); 1
removeCollectionRecursive(collection); 1
expectAlias(); 1
alpha.add(lower); 1
nameError 1
System.arraycopy(value,0,newbytes,0,vlen); 1
HEXA_VALUES['f'] 1
this.pattern=pattern; 2
javaSupport 1
-.110431755073445076041353812959e-5, 1
default 6
for(Restart.JavaRestart 1
gbc.gridy=1; 4
STUPID_CHAR['['] 1
mergeCalendarProperties(journal, 1
LOG.fatal(e.toString(), 1
java.util.regex.Matcher 1
r.evalScriptlet(); 3
mess.setPosition(m.getPosition()); 1
runtime.checkSafeString(filename); 3
100L, 1
topscore 1
scanner 2
this.getTags().remove(0); 1
switchTable[index] 1
obj.mimicsWithoutCheck(this.list); 1
node.accept(visitor); 1
runtime.checkSafeString(cmdObj); 1
initialize(ByteList.create(regex), 1
b.append(); 107
esc=false; 1
moves 1
assertEquals(0x05, 2
continue;	/ 1
string, 1
ALPHA['_'] 1
method.label(isFalse); 1
md.use(); 1
if(useHandle) 1
label.setText(parameter.getDisplayName() 2
item.setData(fieldConfig); 1
if(args.length 12
newPath.delete(dotRbIndex, 1
createSysErr(IErrno.ESRCH, 1
matcher.appendTail( 1
MAP.put(name, 1
ga.mark(ok); 1
this.seq 2
moduleCallback.branch(this); 1
if(prev>=0) 1
Element 8
intersect(bs,false); 1
ArrayList<EimRecord> 2
Entry 36
if(child 1
ch2Meets= 4
cal.set(Calendar.HOUR_OF_DAY,Integer.parseInt(hour_s)); 1
ClassVisitor 8
tokenBuffer.append(); 1
this.cache 2
hashc.defineAnnotatedMethods(RubyHash.class); 1
ttype=INDEPENDENT_REGEX; 1
b.append(CharacterClass.stringValue2(bitset2)); 1
target.add(o4); 1
this.buffer.delete(0,this.pointer); 1
ASTInspector 3
setCurrentDirectory(pwd.toString()); 1
if(parents==null) 1
NAMES[OP_GT] 1
mv.visitTypeInsn(ANEWARRAY, 1
printCommentsIn(parent); 1
month 4
if(c=='&'){ 1
cancel.addActionListener(this); 1
assertFalse(RubyBigDecimal.formatHasFloatingPointNotation()); 2
if(allowIncomplete 1
this.position 7
instance.setJavaCalendar(cal); 1
Entry<BaseObjectType> 26
library.load(runtime, 1
addPage(optionsPage); 1
if(data[i]=='\n') 1
writeLine( 1
entries.addLast(value); 1
method.areturn(); 1
SearchEntry 9
if(self.getInstanceVariable().isTrue()) 2
docs[j].add(token(Constants.VIEW, 1
popFrame(); 10
index++ 1
if(target.shared) 2
state.scores[2] 3
setBaseContentAttributes(note); 2
JRubyFile 19
RESCUE 1
runtime.setUnboundMethod(newClass); 1
assertEquals(ReWriteVisitor.unescapeChar('\r'), 1
sb.append(); 7
insertionsort(a, 7
OpAsgnNode 1
initNamedCategory(,Co); 1
printCommentsAtEnd(parent); 1
c[1] 2
dynamicScope, 2
r.init(); 2
depth++; 1
NodeCompilerFactory.getCompiler(ifNode.getThenBody()).compile(ifNode.getThenBody(), 1
mv.ifne(defaultLabel); 1
this.finalizer 1
getThread().pollThreadEvents(); 1
setStamp(StampUtils.getBaseEventStamp(item)); 1
test2:{ 2
addUnassignedAlias(getRubyCasedName(name.substring(3)),assignedNames,callback); 1
makeWordChar(term,inverse,unicode); 1
realloc((int) 2
if(c>=0xff) 1
if(outp.isAssignableFrom(inClass)) 1
close(true); 1
syncException(entry.getValue(), 1
get_proxy_class(recv,runtime.newString(c.getSuperclass().getName())), 1
.getTime()); 1
method.arrayload(); 2
Iterator<Component> 1
r[72]=0; 3
newMethod.pop(); 1
assertTrue(map.containsKey()); 2
noteMod.setModifies(masterNote); 1
java.util.Calendar 1
r[128]=57; 1
Arity.checkArgumentCount(recv.getRuntime(), 7
(this.buffer.bytes[this.pointer+2] 4
if(.equals(className)) 2
currObj=null; 1
if(node.getPosition() 2
head.getPosition().adjustStartOffset(-1); 1
la.in.type=LOOKAHEAD_CONDITION_IN; 1
if(same) 1
assertTrue(RubyBigDecimal.formatHasFloatingPointNotation()); 1
System.arraycopy(args,0,narr,0,real); 1
ahead 2
doc.add(token(Config.ID, 1
update(len, 1
fpath 1
alnum.add(alpha); 1
addPage(new 1
NAMES[NO_INDEX] 1
EOFException 2
state.scores[3] 3
inspect(match2Node.getReceiverNode()); 1
recv.getRuntime().getWarnings().warn(); 6
Readline.getHistory().moveToEnd(); 1
if(!note.getModifies().getParents().contains(parent)) 1
backAction(event); 1
super(null, 3
this.processModule 1
NAMES[METHOD_MISSING] 1
ga.loadArgs(0, 1
calendar.clear(); 1
setCategory(Nd); 2
cGen.defineAlias(); 1
inspector.inspect(argsNode); 1
dup.validHash 1
array.append(args[i]); 2
output.dumpDefaultObjectHeader('S', 1
NON_ALPHA_OR_NUM['@'] 1
runtimeTLS.set(save); 1
hasEventHooks 2
recv 6
attributePage.setEntrySourceConfigs(sourceMappings); 1
item.setSent(Boolean.FALSE); 1
table[ClassIndex.STRING][MethodIndex.OP_LE] 1
writer.addDocument(docs[j], 2
if(flowIndicators) 1
expandParentsIfNecessary(); 1
weight+=Block.add(this.blocks,catBits,0,BLOCK_COUNT-1,false); 1
off.append(c); 1
IOSEnvironmentReader 2
moduleClass.setMetaClass(classClass); 1
3272380065L, 1
RubyKernel.IRUBY_OBJECT)); 1
exceptionStamp.getEventCalendar().getComponents().add(0, 2
rescue.mimicsWithoutCheck(origin); 1
table.setFont(font); 1
indents.add(0,new 1
.getUid()); 1
alloc((int)length); 3
System.out.println(ourTurn); 2
org.jruby.util.SimpleSampler.report(); 1
this(, 1
content.setTriageStatus(TriageStatusUtil.initialize(content 1
db.setUnlockDB(true); 3
toAppendTo.append(dur.toString()); 1
this(area, 1
((RubyModule) 2
calendar.set(Calendar.SECOND, 1
request.execute(searcher, 1
setArgsNode(argsNode); 2
timer.cancel(); 1
Charset 7
handles.addAll(ev.getTags().keySet()); 1
newMethod.ifeq(noArgs); 1
ga.putField(selfType, 1
sb.append(name); 2
m.put(kv[0], 1
this.getAnchors().remove(0); 1
removeInstanceVariable(name); 1
editCellEditor.setResourceBundle(msg); 2
instruction.bytecode 1
addFixer((Node)(((LinkNode)obj).getValue()), 1
singleton.defineFastMethod(this.name,this,this.visibility); 1
assertTrue(map.keySet().contains(key)); 1
m.print(); 2
s()}; 1
mv.invokevirtual(cg.p(RubyModule.class), 4
RhoConf.getInstance().loadConf(); 1
i=tmp; 3
version[1] 1
nkfModule.defineModuleFunction(, 4
fr 2
table[ClassIndex.STRING][MethodIndex.OP_EQQ] 1
tc.postMproc(); 1
arr.callInit(IRubyObject.NULL_ARRAY, 1
objectSpaceModule.defineFastModuleFunction(, 1
handler.sync(); 1
links[3].setActionCommand(); 1
this.add(top); 1
this(20, 1
fd 1
this.javaNames 1
NotNode 1
a 3
System.out.println(d.get()); 1
YARVMachine 2
log.warn(event.getMessage()); 1
fr.setCursor(hand); 2
Fiber.setup(runtime); 1
array.append(arg); 2
File 43
this.argArray 1
bodyCallback.compile(this); 2
internalPut((IRubyObject)e.getKey(), 1
runtime.checkSafeString(pathString); 1
skip++; 6
sequenceContext 1
boards[N][i][j] 1
if(move.direct 2
open++;	/ 1
-.380993446525049199987691305773e-14, 1
documentMetadata.getCharset().name() 1
runtime.getJavaSupport().handleNativeException(e); 2
scanner.setString(str.getValue()); 1
moduleMetaClass.defineMethod()); 1
closeAdapter.call(io.getRuntime().getCurrentContext(), 1
labels[switchValue 1
callCount++; 1
io2Append.append(lCurChar); 3
if( 9
decodeShortUnsignedBigEndian(enc)); 1
STATES[BLOCK_MAPPING_VALUE] 1
mv.go_to(end); 1
protectedHasPublicMethod.doSomething(); 2
addPage(ocPage); 1
ObjectVariables<BaseObjectType>, 1
r[256]=57; 1
this.locals 1
classClass.undefineMethod(); 3
mv.invokevirtual(cg.p(RubyString.class), 1
floatc.kindOf 1
outputter.output(stamp.getCalendar(), 1
this.locale 1
matchingMethods 1
fieldComposite.setLayoutData(new 1
doc.add(new 2
this.thenBody 1
exception.set_backtrace(backtrace); 1
operatorSet.add(operators[i]); 1
Arrays.fill(values, 3
assertEquals(new 12
this.structClass 1
if(getRuntime().getDebug().isTrue()) 2
javaClass.length); 1
mv 9
if(val.indexOf('E') 1
put.setHeader(, 1
runtime.setMatchData(matchDataClass); 1
javaProxy.getMetaClass().defineFastMethod()); 1
event 1
if(entry.value 1
dirClass.dispatcher 1
this.thread.setDaemon(true); 1
method.init(); 1
boards[W][i][j] 1
countBack--; 1
if(inClass 4
flush(); 6
since 1
newMethod.originModule 2
sender.setFont(fontBig); 1
.904048781597883114936897101298e-15, 1
calendar.set(Calendar.MONTH, 1
nkfDate.freeze(); 1
if(!internal.isAbsolute()) 2
httpResponse.addHeader(, 1
emitter.writeDoubleQuoted(analysis.scalar,split); 1
dirs 8
if(.equalsIgnoreCase(utc)) 1
ga.unbox(m.getReturnType()); 1
catch(NumberFormatException 2
runtime.defineClass().getAllocator()); 1
seek(0L, 2
if(!checked) 5
base 16
DavPropertyName.create(PROPERTY_ACL_PRINCIPAL_URL, 1
MarshalStream 5
newMethod.aload(ARGS_INDEX); 6
arefArgs[0] 1
div 3
JavaArrayUtilities.createJavaArrayUtilitiesModule(runtime); 1
tc.setWidth(200); 2
ms 2
this.ins_op 1
mv.getstatic(cg.p(Visibility.class), 2
results[1] 1
mv.visitFieldInsn(GETSTATIC, 3
SyncThread(RhoClassFactory 1
System.arraycopy(b,off,buf,size,len); 1
contentService.findItemByUid(recordset.getUuid()); 1
context.setLastVisibility(method.getVisibility()); 2
encoding 4
if(first 2
misc 1
this.value 52
args[i+2] 1
m_statusListener 1
authException.getAuthentication() 1
os.flush(); 1
mv.aload(0); 4
map.put(name, 1
bs.setChar(Character.toTitleCase(c)); 1
timeRangeIndex.setIsRecurring(isRecurring); 1
context.getIndentor().outdent(); 1
StyleConstants.setForeground(promptStyle, 1
if(sClass 1
if(mLen>0){ 1
if(!thisClass.isPrimitive() 1
struct_type 2
if(startDate==null) 1
url.append(path); 1
generate(); 1
if(insertCollectionItemStmt.executeUpdate()!=1) 1
numbered 1
}	} 1
buffer.append(':'); 1
setRange('a','z'); 1
r[368]=22; 1
if(args.length>1) 3
regexp.defineFastMethod(,IRubyObject.class)); 1
loadService.registerBuiltin(nm,lib); 1
if(inRange){ 1
Label 79
visitNodeInIndentation(iVisited.getEnsureNode()); 1
Log.errlog(); 1
environmentReader.handleException(new 1
if(in<0 1
initNamedCategory(,Zl); 1
argsNode.getBlockArgNode().getCount(), 1
this.tokens.add(key.getTokenNumber()-this.tokensTaken,Token.KEY); 1
RandomAccessFile 2
Ground.init(iokeGround, 1
this.marshal 1
str 17
DataFlavor 1
rawData 1
outBuffer 1
serverBuilder.with(webAppContext().with(servlet(new 5
scopeStack[++scopeIndex] 1
constructors 1
super(out); 1
table[ClassIndex.STRING][MethodIndex.AREF] 1
if(!(args[i+2] 1
mv.iconst_0(); 1
byte[].class, 1
((IOHandlerNio) 1
openFile.getMainStream().setSync(true); 1
pane.add(myHead); 1
synchronized(loadedFeatures) 2
NULL_BL_LINEBR[' 1
dup2_x2(); 1
inspect(listNode.get(i)); 1
blocks[0]=new 1
lim 1
'-','9','2','2','3','3','7','2','0','3','6','8','5','4','7','7','5','8','0','8' 2
BlockPassNode 1
Assert.assertNull(modEvent.getStatus()); 1
STRANGE_CHAR['$'] 1
loadService.addAutoload(nm, 1
Dnum++; 1
line.append(RubyString.stringToBytes(add)); 1
entryConfig.addSourceConfig(sourceMapping); 1
context.performBooleanBranch(trueCallback, 1
if(st.isDirectory() 1
setWritable.invoke(file, 2
method.invokevirtual(cg.p(CallbackFactory.class), 1
r[304]=58; 1
r[56]=34; 1
PlainElement(String 2
assertNull(, 8
obj.mimicsWithoutCheck(registry.wrap(Class.class)); 2
this(row, 1
atExitBlocks.push(proc); 1
table[i] 3
writer.commit(); 1
createSysErr(IErrno.EIO, 1
this.buffer 4
node.out=null; 1
this.formatSymbols 1
m.setTarget(m,MatchResult.SUFFIX); 2
adapter.removeCachedMethod(); 1
m[i] 1
sourcePosition 1
block.isLambda 1
HashMap 6
this.browseItemView 1
result.sort_bang(block); 1
assertTrue(!rubyObject.isNil()); 1
RubyTime 12
pushRubyClass(rubyClass); 1
assertEquals(0x03, 6
r[328]=30; 1
k.i.l_op0 1
createObjectArray(1); 1
ready=false; 1
this.flowStyle 1
WeakReferenceListNode 3
if(d.isEnd()) 1
top=le.top; 3
verifyExit(RubyFixnum.zero(runtime), 1
if(pName 1
.310914550427619758383622741295e-17, 1
structClass.index 1
((i+1)==end 1
objectClass.defineConstant(name, 1
output.writeString(aFloat.marshalDump()); 1
if(!req 1
if(!ret 5
MethodCallback 1
buf.append(); 7
USPACE.setSpace(true); 1
mv.newobj(classname); 1
mv.aload(DISPATCHER_NAME_INDEX); 4
moveDepth 4
result[i]=FULL_BITS; 1
methodCompiler.getVariableCompiler().getTempLocal(receiverLocal); 2
imf.setSent(); 1
appendChar(i); 1
other.prev 2
printHashNodeContent(hashNode); 1
mv.visitTypeInsn(CHECKCAST, 8
write('l'); 1
if(value!=null) 2
makeMetaClass(superClazz.getMetaClass()); 1
jitEnabled 2
contentService.removeTicket(item, 1
setItem(item); 2
schedulerReader.read(schedulerFile, 1
Random 1
fetchStreamStart(); 3
imagesList=new 1
registerClass(,xdigit,posixClasses); 1
COMPILE(list_anchor, 1
moduleClass.defineMethod()); 2
synchronized(CURRENT) 2
scannerClass.defineFastMethod()); 26
RETokenizer 1
.invoke(loader, 1
compiler.endScript(); 1
sb.append(member.eltInternal(i).asJavaString()).append(); 1
addConstructor(null,new 2
locale 4
backtrace 4
nextPEE.setDir(f); 1
defaultFontsDirectory 1
r[88]=252; 1
mv.getfield(cg.p(Dispatcher.class), 2
runtime.unregisterInspecting(this); 1
RubyKernel.IRUBY_OBJECT, 2
mv.ifnonnull(notNull); 1
activationContext.getActivationLink( 1
if(leading) 3
this.current=term; 3
pushScopeStart(start); 1
r[40]=70; 1
lElem[lCurByte] 4
grp(SPCHAR_G,) 1
r[88]=4; 1
isNoCommands() 1
ICalendarUtils.setDtStamp(note.getClientModifiedDate(), 3
this.handler 3
parentItem 2
cleanIdentities(); 2
Map<ByteList,ByteList> 3
i.o_op0 2
pair.init(); 1
converters['e'] 1
rb_cUNIXSocket.defineFastMethod(, 2
if(opt_p) 1
oSyncCmd 1
relativePath 1
assertEquals(HttpServletResponse.SC_MOVED_TEMPORARILY, 1
size.setBackground(background); 1
.96991686089064704147878293131179e-11, 1
IokeSystem.AtExitInfo 1
httpResponse.addHeader(); 1
synchronized(symbolTable) 1
gbc.fill 7
print('.'); 3
RubyYAML.createYAMLModule(runtime); 1
buf.write(c); 3
server.addHandler(context); 1
buf.append(string); 1
if(bt.isNil()) 1
defaultVariablesUnmarshal(object); 1
TIKA.parse(get.getResponseBodyAsStream(), 1
assertSame(javaClass, 1
ESCAPE_REPLACEMENTS['\\'] 1
push(peek().isTrue() 1
desk.setOpaque(false); 1
getPrintStream().write(buf, 1
StaticFieldSetter(){} 1
appendChar(val); 1
JavaMethod 4
object.removeFinalizers(); 1
this.eat=true; 1
IfNode 2
bytes[index] 1
nLastSyncInterval 1
config.getOutput().print(s); 1
switch(argn.nodeId) 1
noChapterFile.toURI().toURL().toExternalForm(), 1
LogFactory.getLog(AccountBrowsingController.class); 1
getRuntime().getLoadService().removeAutoLoadFor(getName() 2
runtime.newString(), 1
collected 4
shared.realSize 1
this.cfg 1
StringReader 1
visitor.flushStream(); 3
flagbl.setConstraints(en, 2
registerIOHandler(handler); 11
normalize(); 2
collection.setUid(uid); 1
echoSocket 1
else 268
this.backtraceFrames 1
checkDirIsTwoSlashesOnWindows(runtime, 3
-.87462509599624678045666593520162e-15, 1
genScore 1
thread.setDaemon(true); 4
runtime.getJavaSupport().putJavaClassIntoCache(javaClass); 1
cConditionVariable.getMetaClass().defineMethod()); 1
subclasses.add(subclass); 1
fetch_ids[i 3
result.append(aref(getRuntime().newFixnum(RubyNumeric.num2long(args[i])))); 1
methodCompiler.getVariableCompiler().setTempLocal(receiverLocal); 2
argsCallback.call(methodCompiler); 7
if(inlineBreaksSpaces) 1
while 246
runtime.getKernel().callMethod(runtime.getCurrentContext(),)); 5
if(prev==in){ 1
state.scores[1] 3
write(TYPE_USERDEF); 1
obj.callMethod(runtime.getCurrentContext(), 1
if((c=data[--i])>255 1
invokeIRubyObject(, 6
desktop.browse(new 2
result.setTaint(isTaint()); 1
profile.load(is); 1
getSession().refresh(collection); 1
IOUtils.copy(item.getContentInputStream(), 1
scheduler 1
content.setPreferredSize(new 1
fontDirNameAlternate 2
this.representedObjects.clear(); 1
if(FLOW_INDIC.indexOf(ceh) 1
this.contentType 4
if(bytecodes[ip].l_op1 2
LinkAnchor 10
term.append(t.tOffset,t.tOutside,data,vars,flags,iterators,groupNames); 1
struct.defineFastMethod()); 1
fnmatch(bytes, 1
rubyArgs[i 2
text.setForeground(new 2
_keys 2
this.env.emitter 1
md.set(Metadata.CONTENT_TYPE, 2
this.callType 2
ObjectAllocator 1
usec 4
generateGetInvocationHandler(selfType, 1
regexpClass.defineFastMethod()); 8
optionsPage 1
((RubyString)str).getByteList().length(0); 1
iseq_compile(null,node); 1
JavaCallable.registerRubyMethods(runtime, 2
user 2
Map<Object, 3
abouter.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1
result.defineConstant(,runtime.newFixnum(3)); 2
initialContext 2
console.getContentPane().add(pane); 1
super(registry); 1
JSONObject 1
ESCAPE_REPLACEMENTS['e'] 1
if(rp.restart 1
this.light 1
mv.label(tryDefault); 1
loadSelf(); 15
klass.getSingletonClass().defineMethod(, 17
new_instance.setInstanceVariable(,java_object); 1
output.dumpObject(entry.value); 1
direction 1
NAMES[OP_LE] 1
S4[']'] 1
dumpVariables(marshaled.getVariableList()); 1
getRuntime().getCurrentContext().getCurrentFrame().setLastLine(result); 3
bs.setChar(Character.toLowerCase(c)); 1
yieldLock.wait(); 3
RubyGzipFile 1
if(!runtime.getProfile().allowLoad(file)) 1
c='\f'; 2
checkForDuplicateICalUid(item, 1
obj.getSingletonClass().includeModule(this); 1
if(term.minCount>0){ 1
table[ClassIndex.HASH][MethodIndex.EQUALEQUAL] 1
staticNames.putAll(STATIC_RESERVED_NAMES); 1
weight+=set(block0,true,c1,c2); 1
config.depositHereDocument(writer.getBuffer().toString()); 1
struct.values 2
result.defineConstant(,runtime.newFixnum(12)); 1
System.arraycopy(frame.args, 1
ESCAPE_REPLACEMENTS['_'] 1
smartRoots[i] 2
prev.next 3
.594261435084791098244470968384e-11, 1
this.typePath 1
remaining 4
nextNode.prevNode 1
-.490461212346918080399845440334e-1, 1
table[ClassIndex.HASH][MethodIndex.HASH] 1
mv.visitIntInsn(arg0, 1
super(ruby); 1
baos.write(buf, 1
directoryClient.createEntry(entryConfig); 1
getRuntime().secure(4); 14
BLANK_OR_LINEBR['\n'] 1
mJRubyExt.defineFastPublicModuleFunction()); 1
-.28847468417848843612747272800317e-8, 1
last=(last.next=mask); 1
splice(pos, 3
method.ldc(new 10
if(i==null) 1
collection); 2
ParametersPage 1
instanceCallbacks.remove(name+'='); 1
Uid 1
increaseIndent(false, 1
Scanner 7
scanToNextToken(); 1
it.remove(); 2
frame.setSelf(topSelf); 1
insertCollectionItemStmt 1
recv.getRuntime().getCurrentContext().getPreviousFrame().setLastLine(dup); 1
runtime.loadScript(script); 1
mv.invokespecial(cg.p(HashMap.class), 1
DeleteCellEditor 1
converters['C'] 1
Pattern 6
set.remove(s2); 1
parseStack.push(P_FLOW_INTERNAL_VALUE); 1
fileChannel.position(position); 1
RubyNKF.createNKF(runtime); 1
re.code 3
if(counters[term.cntreg]>=term.maxCount){ 1
stack[++stackTop] 24
tree.setLayoutData(gd); 1
clazzInit.invokeStatic(PROXY_HELPER_TYPE, 1
runtime.defineVariable(new 32
NamedCallback 4
b.out=term; 1
if(bigInt.compareTo(new 1
seq.minor 1
this.top=top; 2
STRANGE_CHAR[','] 1
print(config.getFormatHelper().hashAssignment()); 1
n.next 1
catch(Exception 1
NONSPACE.setSpace(false); 1
parent.const_set(runtime.newSymbol(name), 1
lex_strterm 17
step 2
if(((NodeEvent)event).getAnchor() 1
args.add(getSymbol(argName)); 1
pane.add(logger); 1
.newTypeError(dimensionLength, 1
array.append(((RubyArray) 2
type=Term.FINDREG; 1
idx 10
this.allowBlock 1
mv.visitVarInsn(ALOAD, 43
RubyArray 120
chmod.waitFor(); 1
Utils.LOG.info( 4
cw.visit(Opcodes.V1_3, 1
if(stack.size()==0){ 1
methodCompiler.variableCompiler.getTempLocal(tempLocal); 1
target.bits=targetbits=emptyBits(null); 1
this(enclosingScope, 1
byte[]srcBytes; 1
user.setUid(idGenerator.nextIdentifier().toString()); 1
proxyClass.includeModule(get_interface_module(recv,ifc)); 1
if(newBranchStarted) 1
bs.setChar(Character.toTitleCase(c1)); 2
parentStack[parentIndex--] 1
LOG.fatal(e1.toString()); 1
ocPage 1
if(type 1
result.getMetaClass().defineMethod(,RubyKernel.IRUBY_OBJECT)); 1
Composite 18
NAMES[AREF] 1
table[ClassIndex.ARRAY][MethodIndex.PUSH] 1
title=new 1
this.arity 12
stream.read(bytes); 2
loginlab.setLabelFor(loginbox); 1
this.age 3
context.preDefMethodInternalCall(clazz, 1
while(Character.isWhitespace(c)){ 2
registered 1
interfaces); 1
if(compareRegionsI(data,sampleOffset,i,rLen,end)){ 1
this.context 3
visitIter(iterator); 1
this.admin 2
super(TargetType.TYPE_COLLECTION, 1
runtime.getJavaSupport().addToClasspath(jarFile); 1
(((RegexpNode) 1
superClazz.addSubclass(this); 2
info 1
super.setVisible(visible); 1
this.continuationClass 1
cnt++; 3
nkfModule.defineConstant(, 12
DavContent 1
Attribute 1
DataOutput 1
c=8; 1
out.write(value.unsafeBytes(), 1
if(this.event 1
out.type=GROUP_OUT; 1
getMethodAdapter().pop(); 1
indexCheck 3
ObjectInputStream 1
Collections.sort(methodKeys); 1
pushRubyClass(block.getKlass()); 1
sysread(buf, 1
mv.ifne(falseJmp); 1
c1!=Character.toTitleCase(c2)) 1
pushScope(block.getDynamicScope()); 2
AnyFile(boolean 1
switch(fchar 1
if((!name.startsWith() 1
obj.setData(Number.ratio((IntFraction)number)); 1
table[ClassIndex.FIXNUM][MethodIndex.TO_INT] 1
build.append(whole); 1
sharedArray.isShared 1
this.globalVariables 1
ParsePosition 1
arr[i]=value; 1
mapping[0].put(kk, 1
LoadService 1
writer.updateDocument(docTerm, 1
showEntry(item); 1
javaField.value(self.fastGetInstanceVariable()), 1
tokens.add(token.toString()); 2
allowSingleQuoted 1
items.add(convertFreeBusyCalendar(cc.calendar)); 1
rl.lock(); 26
this(null,path,icase? 1
n+=d; 1
this.master 1
validateConstant(name); 4
readSchedulerConfig(baseDir, 1
term.in.prev=in; 1
super(path); 1
item.setLastModification(ContentItem.Action.CREATED); 1
doc.appendChild(thing.toXml(doc)); 1
synchronized(RubyUNIXSocket.class) 1
assertEqualsNoMessage( 2
print(config.getFormatHelper().beforeMethodArguments()); 1
RubyRegexp 8
test1:{ 2
e 11
this.numOne 1
this.socketChannel 1
required 1
doc.add(field); 2
RubyUnboundMethod 2
scope.setValue(i, 1
secondNode 3
getCallbackFactory(); 1
expChar 3
FixedPathElement(String 1
super.close(); 2
sb.append(entry.key.callMethod(context, 1
recv.getRuntime().getLoadService().require(); 1
iseq.body 1
ourPosition 2
registered.add(entry); 1
fileChannel.position(fileChannel.size()); 2
calendar.setFirstDayOfWeek(firstDayOfWeek); 1
configuration, 3
this.namespace 1
inverse? 3
IokeObject 35
((LocalAsgnNode) 1
fontStructureDirectory 1
if(vars[DEPTH]<=0) 1
context.assignConstantInCurrent(constDeclNode.getName()); 1
suite 1
if(term!=startAnchor) 1
src.limit(src.position() 1
getModification(masterNote, 1
.getDoubleValue())); 3
newString(EVENT_NAMES[event]), 1
STRANGE_CHAR['^'] 1
cleanBuffer.append(); 15
buffer.append(attached.inspect()); 1
if(mr.isCaptured(FS_G)){ 1
basename(recv, 1
gzreader.defineMethod(, 1
where--; 1
search_loop: 1
allFiles.toArray(tempFileList); 2
bs.setDigit(unicode); 1
tree.addSelectionListener(new 1
topgbc.gridheight=1; 1
c=(char)oct; 2
sourceClient.search(request, 1
switch(fchar) 4
if(STUPID_CHAR[this.buffer.bytes[this.pointer]&0xFF] 1
n.join(); 1
variableNames[0] 1
this.pattern 6
result.setMergedSegmentWarmer(newWarmer()); 1
this(channel, 2
falseBranch.branch(this); 1
result.append(aref(args[i])); 1
System.out.println(hits.score(i)); 1
tree( 35
ClassVarAsgnNode 1
b.append(target); 4
while(currEn==null 1
list.set(1, 1
super(pathname); 1
chunks.append('\\'); 1
gbl.setConstraints(title, 1
allArgs.add(args[i]); 2
if(sock_stream) 1
callType 3
s[inbytes.length] 1
reader.close(); 25
NAMES[LENGTH] 1
close(false); 2
appendToBlock(result.getAST(), 1
volatile 4
while(!collection.getModifiedDate().equals(lastModified)) 2
serversView.open(sourcesNode); 1
if(_pat[pat] 1
values 7
; 35
visitNode(((AssignableNode) 1
prepareArguments(context, 2
this.add(flags); 2
pos.dir 40
BasicLibraryTestService.counter 1
idx++; 1
if(bits==null) 3
this.patternIsRelative 2
socket.bind(new 1
channel.write(buffer); 1
this.node1 1
this.node2 1
minQueueLength=regex.stringRepr.length()/2; 1
ary.append(aref(arefArgs)); 1
mv.visitTypeInsn(arg0, 1
this.beginNode 2
runtime.getRandom().setSeed(runtime.getRandomSeed()); 1
newCapacity 2
if(getItem() 1
if(!ANCHOR_FORMAT.matcher(anchor).matches()) 1
testRhino(); 1
checkReadable(); 27
flg 2
dumpValue[i] 2
table[ClassIndex.HASH][MethodIndex.NIL_P] 1
cg.sig(IRubyObject.class, 5
updateIndexes(); 1
ioClass.defineAnnotatedMethods(RubyIO.class); 1
DEFAULT_RENDITION_MIME_TYPE 1
super(entityFactory); 1
.34904658524827565638313923706880e-17 1
Utils.LOG.warn( 1
classClass.defineAnnotatedMethods(RubyClass.class); 1
boolean 291
admin.addServlet(new 1
someEmptyContentDirectory.getName() 1
assertTrue(RubyNil.op_or(rubyNil, 2
r[344]=59; 1
data.append(obj); 1
b.append(args[0].getBytes()); 1
'c' 2
addServerProperties(); 1
realLength--; 2
ser.close(); 1
.162085454105392296981289322763e-13, 1
out.defaultWriteObject(); 1
term.type=END_EOL; 1
staticCallbacks.put(setName,new 1
while(needMoreTokens()) 2
this.args_argc 1
BOOL_VALUES.put(into(),Boolean.FALSE); 9
this.getAnchors().add(0,anchor); 1
milliseconds 3
blank.setChars(); 1
NodeCompilerFactory.getCompiler(ifNode.getElseBody()).compile(ifNode.getElseBody(), 1
ti.setData(dn); 1
if(index 5
rb_cSocket.getMetaClass().defineFastMethod(, 1
visibility 2
serverBuilder.with(webAppContext().withContextRoot().withResourceBase(path)); 1
entry.next 6
super(masked_key, 1
if((null 1
node.out1=null; 1
mv.visitInsn(ATHROW); 1
frame.setVisible(true); 1
this.val1 1
this.val2 1
this.val3 1
if(isSingleton()) 1
this.methodClass 1
flushStream(); 1
write(TYPE_USRMARSHAL); 1
this.superNode 1
this.matchNumber 1
jumps.clear(); 1
if(Component.VTIMEZONE.equals(comp.getName())) 1
links 1
handle_special: 1
newArgs[args.length] 1
if(!runtime.getProfile().allowRequire(file)) 1
registerClass(,blank,posixClasses); 1
compile_branch_condition(ret, 7
super(classLoader); 1
this.formatter 1
setOutput(new 4
attr.setValue(value); 2
recurrenceId 1
if(child==null) 1
iterator.remove(); 1
moduleClass.defineFastMethod(, 19
logger.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1
this.write(p1); 1
this.refCounter 1
RestartInfo 2
canonicalPath 5
digester 1
str.setTaint(isTaint()); 1
lastVisibility 1
output.writeString(regexp.pattern.toString()); 1
restart.mimicsWithoutCheck(origin); 1
getRuntime().getIoHandlers().remove(new 1
if(((Map)node.getValue()).containsKey(itemKey)) 1
addPage(sourcesPage); 1
selector.select(); 1
init(); 5
parseStack.push(P_EXPLICIT_DOCUMENT); 2
zstream.finish(); 1
overlord.setLastName(); 2
graph.add(alnum); 1
.123892049175275318118016881795e-9, 1
year(), 1
parseStack.push(P_BLOCK_INDENTLESS_SEQUENCE_START); 1
printNameWithoutEqualSign(iVisited); 1
updateIndex(); 3
obj.setAllocator(allocator); 1
g.drawImage(image, 1
ss.terminate(); 2
.getType(JavaProxyMethod.class); 1
RubyFixnum[] 1
.140481088476823343737305537466e-15, 1
title.addActionListener(this); 1
initNamedCategory(,Cc); 1
if(c>='1' 1
Utils.out(info); 2
currentFrame.setJumpTarget(previousFrame.getJumpTarget() 1
result.callInit(args, 7
RUBY_VERSION 1
DUTCH 2
condition.branchOut=null; 1
frame.getContentPane().setLayout(new 1
lexicalMacro.mimicsWithoutCheck(origin); 1
EXCLUDE_METHODS.add(); 7
m_stackCommands.add(oSyncCmd); 1
Buffer 1
TreeFixture.assertEqualsNoSeparators( 1
RubyString 81
LogFactory.getLog(CalendarResourceProvider.class); 1
args[i] 3
r[56]=46; 1
write('f'); 1
obj.mimicsWithoutCheck(this.range); 1
dumpExtended(type); 1
si.setNilMap(null); 1
buffer.append(attached.anyToString()); 1
if(hash 1
ttype=END; 1
a[i] 2
setn((int) 1
node.branchOut=node; 1
Iterator 37
targetClassName 2
parseStack.push(P_EMPTY_SCALAR); 13
this.options 10
Loader 1
magnitude 1
mode 14
mv.visitEnd(); 10
| 2
while(m.find()){ 2
-.269063914530674343239042493789e-10, 1
getCurrentFrame().setVisibility(getPreviousFrame().getVisibility()); 2
if(!length.isNil()) 1
while(!arr[c]){ 1
call.mimicsWithoutCheck(origin); 1
result.defineConstant(,runtime.newFixnum(255)); 1
iVisited.getElseBody().accept(this); 1
changed 1
print('-'); 1
str.setValue(handler.sysread(len)); 1
ic.setArity(Arity.noArguments()); 4
mv.label(topJmp); 1
mv.visitLabel(l1); 1
ocPage.setServer(server); 1
getCurrentFrame().setVisibility(Visibility.PUBLIC); 2
newFirst 1
if(method 6
c++; 5
assertThat(tfd.totalHits, 1
Locals.init(locals); 1
this.profile 2
es.createCalendar(); 1
exportMethod(methods[i].asSymbol(), 1
nilClass.dispatcher 1
assignAliases((MethodCallback)callback,staticAssignedNames); 1
text.setLength(analyzeLength); 1
stack[stackTop+1] 1
this.digest().equals(b.digest()); 1
addInterfaces(allClasses, 3
org.jruby.RubyDigest.createDigestSHA1(runtime); 1
fileChannel.position(pos); 3
md.update((byte) 1
AssignmentVisitor.assign(runtime, 3
verifyItemInSet(now, 2
System.gc(); 1
timer 1
actual.getTreeAtDistance( 1
instances++; 1
if(.equals(jar) 1
if(exactPaths.containsKey(kind)) 1
System.err.println(node.getTag()); 1
fields.put(name, 6
.setParameter(, 5
this.nativeThread 1
registerClass(,alpha,posixClasses); 1
c=(char)(data[i++]&0x1f); 2
flagbc.gridx=0; 2
(roundDown 1
RubyTCPServer.createTCPServer(runtime); 1
classname 5
bindingClass.getMetaClass().defineMethod()); 1
clazzInit.dup(); 2
us.getChars(srcBegin, 1
suite.addTestSuite(TestVariableCreation.class); 1
search(true, 1
converters['v'] 1
searcher.setSimilarity(similarity); 2
toAppendTo.append(value 1
createSysErr(IErrno.ENXIO, 1
data 21
user.getUsername(); 1
-.444951056181735839417250062829e-15, 1
initRuby(runtime); 1
mv.visitMultiANewArrayInsn(arg0, 1
wrapper 4
masterEvent.createCalendar(); 1
result.setConstant(,RubyNumeric.int2fix(runtime,255)); 1
runtime.getObject().defineConstant(, 1
method.label(done); 4
YARVCompiledRunner 2
current_iseq 1
final 1438
hasDef 2
config.getOutput().print(); 1
obj.setKind(); 1
this.hashClass 1
assertNull(target.id2ref(4711)); 1
term.out.next=inc; 2
RubyInteger 13
for(RescueInfo 1
nextObj=nextPEE.nextElement(); 1
Sprintf.sprintf(buf, 2
tbase++; 2
switch(c1){ 2
this.repaint(); 1
print(iVisited.getType()); 1
STATES[FLOW_MAPPING_VALUE] 1
checkConstantsSettable(); 6
org.objectweb.asm.ClassReader 1
TARGET 1
stream.write(( 2
reflectionToString(this, 1
beg 9
this.born 3
-.699111056040402486557697812476e-12, 1
if(!inv){ 1
java.lang.reflect.Method[] 1
if(called){ 1
catchStack[++catchIndex] 1
IS_ESCAPE_REPLACEMENT['r'] 1
FileWriter 4
while(i<end) 1
if(year_s 2
if(m!=this){ 1
stackTop--; 1
FieldCache.DEFAULT.getLongs(reader, 1
arrayProxyClass 1
super(origin, 2
serversView.refresh(sourcesNode); 1
.179907251139614556119672454866e-13, 1
DomUtil.getQualifiedName(ELEMENT_ACL_SELF, 1
initNamedCategory(,Cf); 1
STATES[BLOCK_MAPPING_KEY] 1
pair.mimicsWithoutCheck(origin); 1
d.start(); 1
result.setClassVar(, 1
nilClass.defineFastMethod(,IRubyObject.class)); 1
io.callMethod(io.getRuntime().getCurrentContext(), 4
q 5
digesterUrl 1
if(desktop.isSupported(Desktop.Action.MAIL))// 1
to[tbase++] 4
methodCompiler.method.label(falseResult); 2
instance 65
entryConfig.addObjectClasses(ocPage.getSelectedObjectClasses()); 1
locals 2
printHashNodeContent(iVisited); 1
scanner.unscan(); 1
expectScalar(); 1
e.printStackTrace(System.err); 1
config.getOutput().flush(); 1
this.data 13
b.append(ints[i]); 1
this.date 1
es.setModifiedDate(es.getStartDate()); 1
context.getCurrentScope(), 2
regs 1
YIELD 1
MUTEX.wait(); 1
staticScope.setVariables(new 1
frame.pack(); 1
cref.setNext(p.getCRef()); 1
WeakIdentityHashMap.this.removeEntry(remove); 1
sb.append('n'); 1
desk.setRequestFocusEnabled(true); 1
if(ta==null) 1
parentMap.put(modifiesItemId, 1
.147452154104513307787018713262e-16, 1
unnumbered++; 1
IncludedModuleWrapper 2
this.partitionName 3
url 2
this.hasOptArgs 1
entry.mid 4
this.regexpClass 1
b.append(bytes[i]); 1
if(!ended) 1
snapshot 4
ensureRead(); 5
validateClassVariable(name); 4
cQueue.defineFastMethod()); 5
Assert.assertFalse(modEvent.getAnyTime()); 1
this.filename 6
.getComponentType(), 1
b.append('='); 1
ServerSocket 1
event.getProperties().add(new 1
frame.setVisibility(oldVis); 2
le.index=i; 4
StyleConstants.setBackground(messageStyle, 1
nge 1
assertEquals(5, 1
envs 7
this.groupName=new 1
callbackFactory.getFastSingletonMethod(, 5
encodeDoubleLittleEndian(result, 1
}catch(MalformedURLException 1
_resume: 1
hex=(toHexDigit(d)<<4)+toHexDigit(data[i++]); 1
verifyTranslation(, 12
Dispatcher 1
runWithGetsLoop(scriptNode, 1
this.memreg=memreg; 1
frame.getContentPane().add(buttonPane, 1
.13815248844526692155868802298129e-15, 1
RUBY1_8, 1
for(CollectionSubscription 2
if(bits[c]) 1
ALPHA['-'] 1
context.loadTrue(); 1
pathSeparator.freeze(); 1
newMethod.infectBy(this); 1
if(!env.getTagHandles().containsKey(key)) 1
RubyBignum 3
mainLoop: 2
writer.close(); 9
if(openFile.getPath() 1
cGen.defineFastMethod()); 3
@After 4
if(reflection) 2
rb_mConstants.fastSetConstant(, 29
r[56]=4; 1
quicksort_loop(a, 2
item.setText(1, 1
system.mimicsWithoutCheck(defaultBehavior); 1
matcher.setPosition(pos); 1
overlord.getEmail()); 1
this(pattern.matcher(r,len),false); 1
addElement(newMask(s,flags,hasMore)); 1
globalVariables.append(recv.getRuntime().newString(globalVariableName)); 1
docs[j].add(token(Config.DB, 1
getMethods().put(name, 1
buffer.clear(); 18
smap.addChild(this); 1
writeDirectly(value); 2
pgbc.gridwidth=2; 2
ps.close(); 1
IS_ESCAPE_REPLACEMENT['\\'] 1
config.getIndentor().printIndentation(config.getOutput()); 2
.getInternalName()); 1
resize(MRI_PRIMES[i]); 1
databaseName, 1
LogFactory.getLog(EventApplicatorTest.class); 1
state 165
-.49383631626536172101360174790273e-3, 1
((MockAuditableObject) 17
this.flowLevel--; 1
warnings.warn(ID.FLOAT_OUT_OF_RANGE, 1
factory.createMultipleAssignmentReWriteVisitor().visitAndPrintWithSeparator(iVisited.getHeadNode().childNodes().iterator()); 1
visitNodeInIndentation(iVisited.getNextCase()); 1
marshalStream.dumpVariables(attrs); 2
STRANGE_CHAR[c] 3
i2Shrink.setLength(iLength); 1
opt_p 1
setValue((String) 1
flushOutBuffer(); 4
io.callMethod(io.getRuntime().getCurrentContext(),, 1
method.dup_x2(); 3
key 72
infl.defineFastMethod(,RubyKernel.IRUBY_OBJECT)); 4
matchDataClass.dispatcher 1
zstream.close(); 2
BSFDeclaredBean 1
this.isOpen 1
block.yield(recv.getRuntime().getCurrentContext(), 1
assertTrue(rubyObject.rbClone().getType() 1
printCommentsIn(iVisited); 1
for(NoteItem 8
methodCompiler.getVariableCompiler().setTempLocal(argsLocal); 2
Thread.sleep(Config.COMMIT_MIN); 1
this.dynamicScope 2
gzfile.getMetaClass().defineMethod(, 1
extraScope 2
enableLargeMode(); 1
debugs(+idx2); 1
runtime.setFloat(floatc); 1
defineClass(, 16
end=mr.out; 1
rb_cBasicSocket.defineFastMethod()); 7
cSizedQueue.getMetaClass().defineMethod()); 1
Log 1
javaObject 10
emitter.writeIndicator(ByteList.create(),true,false,false); 3
Group(){ 1
constructorArguments[i] 1
result.scores[3] 3
if(((JavaClass)t1).primitive_p().isTrue()) 1
if(block==null){ 1
realPath 4
snapshotList.add(); 2
r[376]=94; 1
runtime.incGlobalState(); 2
for(RubyModule 1
visitNode(child); 2
libdir 3
entry.cCurrent=null; 1
NAMES[OP_EQQ] 1
Assert.assertEquals(eventStamp.getLocation(), 1
matchCache.put(methods, 2
org.jruby.RubyDigest.createDigest(runtime); 1
rmask=rm; 1
if(defaultEntry.isState)SearchEntry.popState(defaultEntry,memregs,counters); 1
assertTrue(, 11
children.add(content); 1
print(config.getFormatHelper().beforeIterBrackets()); 1
charCount 2
javaProxy.defineAnnotatedMethods(JavaProxy.class); 1
visible.add(t); 2
iseq.locals 1
assertTrue(! 5
cmperr(a, 1
ll.add(recv.getRuntime().newFixnum(crctab[i])); 1
if(child==null 1
dirs.addAll(Dir.push_glob(cwd, 2
ins 11
initNamedCategory(,Me); 1
if(instruction 3
visitNode(iVisited.getLeftNode()); 1
item.setChecked(fieldConfig.isPrimaryKey()); 1
((IokeSystem)IokeObject.data(system)).pushCurrentFile(f.getCanonicalPath()); 1
'6' 3
states.pop(); 1
userNewMarshal(value); 1
cleanBuffer.append(characters[i]); 1
this.algo 1
this(wrap.bytes, 2
ZlibDeflate 1
super(name); 17
pubScore[N]=gS.scores[0]; 1
r[216]=87; 1
mtime 4
context.postJavaMethodFull(); 1
result.getMetaClass().defineMethod()); 2
time.callInit(args,block); 1
bs.subtract(bs1); 1
if(!options.explicitTypes()) 1
arr.realLength 5
log.error(msg, 1
properties.load(Constants.class.getResourceAsStream()); 1
r[96]=0; 1
mr=memregs[id]; 1
setupInterpreter(runtime); 1
write('c'); 1
super.push(value); 1
bytes[0] 3
((FileChannel) 4
blNew.append(rep, 1
grow(moreBytes.length); 1
IDBResult 1
this.anchors 4
put.setHeader(); 1
m_strPassword 1
entityResolver 1
log.setResourceBundle(msg); 3
helper.setFocusPainted(false); 1
cGen.includeModule(runtime.getEnumerable()); 1
processAnchor(ByteList.create( 1
runtime.getGlobalVariables().set(GlobalVariable.variableName(bean.name), 1
if(cnt<term.maxCount){ 1
switch(target.type){ 2
bytes.write(buf, 1
__LINE__ 1
if(breaks) 2
PARAGRAPH_REGULAR, 3
imf.setSending(); 1
this.getContentPane().add(name); 1
// 537
currentFrame.setKlazz(previousFrame.getKlazz()); 1
reflection 4
i 41
replace(pattern.matcher(res,groupName),substitution,out); 1
if((!canonical 1
tp 1
defInit.put(); 2
COMPILE(recv, 1
this(bytelist.bytes, 1
child.setUid(recordset.getUuid()); 1
falseClass.defineFastMethod(,IRubyObject.class)); 1
inspect(((AssignableNode)node).getValueNode()); 1
CHOMPING['2'] 1
errorStream.print(tc.getSourceLine()); 1
n.start(); 1
this.lastAnchorId++; 1
origArr.isShared 1
FindBack(Term 1
visitNode(elseNode); 1
STATES[DOCUMENT_START] 1
onNewReader(reader); 4
untilDateCalendar.set(java.util.Calendar.SECOND, 1
usernameIdx.put(user.getUsername(), 2
add(new 1
this.target=target; 2
children.add(child); 1
maxLength).append().toString()); 1
JavaProxyClass(Class 1
this.tokens.add(Token.BLOCK_ENTRY); 1
short[] 2
defaultRegexpEngine 1
cFiber.getMetaClass().defineMethod()); 1
while(BLANK_OR_LINEBR[peek()]) 2
NONWORDCHAR.setWordChar(false); 1
separatorArgument 4
pushFrame(frame); 1
if(null 39
input.setText(String.valueOf(manager.eval(, 1
bytes[newlen] 1
test2Val.add(Boolean.FALSE); 1
merge.add(constructMapping(value_v)); 1
cr.accept(cv, 1
Assert.assertEquals(1, 2
SearchServlet(final 1
SubscriptionsTarget 2
r.add(key.attachment()); 1
MethodKey(Method 1
if(result.isNil()) 1
assertTrue(answer.booleanValue()); 5
noteMod.getTriageStatus().setCode(TriageStatus.CODE_NOW); 1
proxyClass.inherit(interfaceJavaProxy); 1
NAMES[TO_I] 1
hasFrameAwareMethods 2
Utils.LOG.debug(String.format(, 2
generateGetProxyClass(selfType, 1
parseStack.push(P_BLOCK_MAPPING); 1
NAMES[OP_SPACESHIP] 1
leaveContext(); 1
while((c=in.read(mychars,count,free))>=0){ 1
r[208]=98; 1
handleException(e); 2
jrubyModule.defineModuleFunction(, 4
internalReset(); 1
initNamedCategory(,Zs); 1
addBackTraceElement(backtrace, 1
STUPID_CHAR['@'] 1
encodeShortLittleEndian(result, 1
config.getCallDepth().leaveCall(); 1
while(node 2
initializeItem(note.getModifies()); 1
config.getLocalVariables().addLocalVariable(iVisited.getStaticScope()); 1
mv.invokevirtual(cg.p(DynamicScope.class), 7
module.defineModuleFunction()); 27
string.defineFastMethod()); 3
s[i] 3
home 7
r[8]=41; 1
callbackFactory.getOptSingletonMethod()); 4
this.argsNode 10
'-','2','1','4','7','4','8','3','6','4','8' 1
System.arraycopy(bytes,begin,alloc,0,len); 1
table[ClassIndex.BIGNUM][MethodIndex.OP_PLUS] 1
this.ctor 1
ESC_ID=refPtn.groupId().intValue(); 1
cal.getComponents().addAll(entry.getValue()); 1
visitNodeInIndentation(iVisited.getElseNode()); 1
cw.visitField(Opcodes.ACC_PRIVATE 1
.getLog(ServerPropertyDaoImpl.class); 1
? 1
if(memreg>0){ 2
this.usageError 1
flagbl.setConstraints(fr, 2
logger.addActionListener(this); 1
cs=cs.prev; 1
result.setRAMBufferSizeMB(Config.RAM_BUF); 2
ASTCompiler.getYARVCompiler().compile(node, 1
context.getCurrentScope().setValue((int) 1
if(mine 6
expansion 1
panel.setDoubleBuffered(true); 1
if(subtrahend==null){ 1
offset 19
if(this.pattern.isCaseInsensitive()) 1
while(!(bt 1
retrieveLocalVariable(index); 1
checkArity(mv, 1
errorStream.print(tail 1
if(flg.isNil()) 1
writer.deleteDocuments(docTerm); 1
unmarshalStream.registerLinkTarget(range); 1
if(args[1] 1
if(ee.isNil()) 1
classpath.setValue(p.toString()); 1
ioe.printStackTrace(System.err); 2
.getFastMethod()); 5
javaClass.setupInterfaceModule(interfaceModule); 1
seq.misc 2
BackReference 1
current=append(tmp); 1
overlord.setModifiedDate(new 1
if(timezonem_s 1
StyleConstants.setItalic(resultStyle, 1
flater.end(); 1
assertEquals(ReWriteVisitor.unwrapSingleArrayNode(constNode), 1
strategy 1
assertEquals(bytes.length, 1
limits[LIMITS_PARSE_RESULT_INDEX]=LIMITS_FAILURE; 1
echoSocket.close(); 1
this.cref 3
assertTrue(rubyObject.equals(rubyObject)); 1
Utils.LOG.error(, 2
increaseIndent(true,false); 3
table[ClassIndex.ARRAY] 1
MethodVisitor 33
node.next=out; 2
+toHexDigit(data[i++])); 1
en.setOpaque(false); 2
packageString.length() 1
result[i] 3
method.arraystore(); 2
File[] 7
if(!namesInitialized)initNames(); 2
start=end; 2
initNamedCategory(,Pi); 1
this.tmsStruct 1
block.yield(getRuntime().getCurrentContext(), 1
hi 1
smartFiles[i] 8
if(back<0) 2
verifyItemInSet(results, 1
setCalendarAttributes(masterNote, 1
socket.close(); 1
scroll.setBorder(BorderFactory.createEmptyBorder()); 1
ss.setPos(300); 1
handler.syswrite( 1
createSysErr(IErrno.ECONNREFUSED, 1
context.retrieveSelfClass(); 1
assertFalse(parser.isShouldRunInterpreter()); 4
masterParents.append(p.getUid() 1
Utils.out(Utils.error(400, 16
converted 1
isVersion10 1
initNamedCategory(,Ps); 1
gameOver 1
NON_ALPHA_OR_NUM[' 1
notify(); 5
if(gno==null) 1
if(before.startsWith()) 1
c[2] 2
super(, 7
values.put(pname, 2
writer.writeStartElement(NS_MC, 2
System.out.print((char)last); 1
buf.write(signChar); 4
if(endDate!=null) 1
bc, 1
term.type=LAST_MATCH_END; 1
frozenObjectType 1
RubyHashEntry[]ltable 20
javaProxyClass 1
super(resourceFactory, 1
flagsChanged=true; 2
distance+=length(t)-length(current); 1
DavInputContext 1
grow(newLength 1
ioClass 1
ConfigurationTools.createContentConfiguration( 2
.getType(JavaProxyClass.class); 1
lPadLength 1
stat 4
STUPID_CHAR[':'] 1
checkOffset(args,++offset,length,ERR_MALFORMED_STAR_NUM); 2
setWithinTrace(false); 1
Assert.assertTrue(report.calls.contains(coll2.getDisplayName())); 1
print(config.getFormatHelper().afterAssignment()); 6
-.411013393626208934898221208467e-1, 1
//Do 1
methods.add(method); 2
SearchEntry.saveCntState((top!=null)? 1
for(Preference 2
languages.add(profile); 1
eval( 2
if(i<=iMin) 7
.58506207058557412287494835259321e-4, 1
DOUBLE_ESC['\\'] 1
ttype='('; 1
.171115397792085588332699194606e-2, 1
JumpException.FlowControlException 1
flagbc.anchor=GridBagConstraints.WEST; 1
1258607687L, 1
JRubyClassLoader 1
val.append(strBytes, 6
lower.setRange('a','z'); 1
ngrams.clear(); 2
runtime.getThreadService().unregisterThread(rubyThread); 1
mv.visitJumpInsn(GOTO, 2
getSession().save(collection); 1
mv.visitJumpInsn(IFEQ, 2
pathCallback.compile(this); 2
LocalStaticScope 1
this.variableCallAdapter 1
classProviders.add(provider); 1
fontStructureDirectory, 1
context.preRunThread(currentFrame); 1
next.prev=current; 2
allArgs.add(); 4
token=m.target(); 1
this.include_docs 3
(CharacterClass.toHexDigit(data[i++])<<4)+ 2
LOG.ERROR(, 21
SimpleCallbackMethod 2
method.invokestatic(cg.p(EvaluationState.class), 2
synchronized(getMethods()) 2
this.buffer.append(rawData,0,converted); 1
dumpDefaultObjectHeader('o',type); 1
verifyTranslation(,false); 4
setWithinTrace(true); 1
contentService.removeItem(item); 1
matchDataClass.getMetaClass().undefineMethod(); 1
firstPlayer 4
void 113
arr.alloc(1); 1
this.fun 1
NodeCompilerFactory.getCompiler(multipleAsgnNode.getValueNode()).compile(multipleAsgnNode.getValueNode(), 1
staticScope.determineModule(); 3
if(propIndent>=2 1
keys.append(entry.key); 1
collection.setDisplayName(records.getName()); 2
defineFastMethod(name, 1
@JRubyMethod(frame 1
if(arr!=null 5
topgbc.insets 3
.55639694080056789953374539088554e-14, 1
System.out.println(name+); 1
ConversionMapEntry 1
if(conf.isDebug()) 9
LinkElement 5
if(object.respondsTo()) 1
mr=bounds(i); 1
memlevel 1
if(((!canonical 1
b.failNext=term; 3
links[2].setActionCommand(); 1
this.minCount=minCount; 1
if((text.bytes[start] 1
ary.append(kval); 1
dirClass.includeModule(runtime.getEnumerable()); 2
mv.astore(VISIBILITY_INDEX); 2
localVariablesMap.put(new 1
convertedArgs[i+1] 1
top=null; 2
this.substitution=substitution; 1
if(refMatcher.find()){ 1
StringTokenizer 1
this.resourceBase 1
memregs[i]=new 1
oldLength 2
method.invokevirtual(p(CallSite.class), 7
assertEquals(7, 1
resolverPrefixPaths.add(0,prefixPaths); 1
neg 4
o.setData(r); 1
sb.append('m'); 1
IRubyObject.class, 1
prevWasReplaced 2
((List)self.callMethod(context, 1
clazzInit.push(m.getName()); 1
this.declaringProxyClass 1
arr.add(value); 3
if(spaces 4
new 179
result.callMethod(self.getRuntime().getCurrentContext(), 1
this.buffer.bytes[this.pointer] 2
i.i_op3 2
c1!=Character.toUpperCase(c2) 1
vars.hasNext();) 1
invoker.setServiceInterface(Searchable.class); 1
if(nextObj==null 1
NoteItem 42
verifyItemInSet(done,NOTE_UID 4
t1.start(); 2
result.getMetaClass().defineFastMethod()); 2
this.mainStream 1
.5978267249293031478642787517872e-5, 1
doc.add(text(namespace 2
timeRangeIndex.setEndDate(HibEventStamp.TIME_INFINITY); 1
gh.getField(selfType, 1
ALPHA[c] 3
method.getArity().checkArity(getRuntime(), 1
getRuntime().getEnumerable().extend_object(this); 1
currentFile 8
initNamedCategory(,Nl); 1
assertTrue(ss.isBeginningOfLine()); 2
link.add(buf); 2
indentation 4
assertEquals(expectedTraceLine(RubyException.TRACE_HEAD 1
super(defaultPrintStream); 1
getRecentTombstones(token, 2
gzreader.includeModule(runtime.getEnumerable()); 1
if(vars[DEPTH]>0) 1
JavaClass.assignable(types[j],(Class)arg_types.get(j)) 1
ViewSignature 1
popRubyClass(); 10
switch(c){ 7
iae.getMessage()); 1
InstanceMethodInvoker(){} 1
append(args[i]); 1
parseStack.push(P_FLOW_MAPPING_START); 1
if(!env.indentation 1
bj.setBreakInKernelLoop(true); 1
pushCallFrame(null, 1
TableColumn 3
org.objectweb.asm.util.TraceClassVisitor 1
this.setLocationRelativeTo(Smash.getFrames()[0]); 1
DIGIT[c] 1
for(VTimeZone 1
while(c!=-1){ 2
count_ 1
realloc(len 1
type 62
TIKA.parse(in, 2
clonedMethod.setImplementationClass(clone); 1
invoker.setRefreshStubOnConnectFailure(true); 1
if(instance 1
if(read 8
matchingFiles.add(root); 2
mv.visitMaxs(5, 4
modNote.setModifies(masterNote); 1
this.restarts.get().add(0, 1
add(writer, 4
values[index] 1
.getType(getReturnType()), 1
attr.setValue(getValue()); 1
if(target.isFull){ 4
cal.setTimeZone(java.util.TimeZone.getTimeZone()); 2
suite.addTestSuite(TestRubyHash.class); 1
context.retrieveClassVariable(classVarNode.getName()); 1
Arrays.sort(values, 2
runtime.loadFile(resource.getName(), 1
narr[i] 1
if(this.pointer 1
mv.invokevirtual(cg.p(GlobalVariables.class), 3
print(iVisited.getValue()); 3
assertionError.setStackTrace( 1
ConfigurationTools.createProducerConfiguration( 1
root 3
if(bs==null){ 1
invalidateBuffer(); 5
iVisited.getIterNode().accept(this); 2
for(List<RescueInfo> 1
objectClass.includeModule(kernelModule); 1
r[16]=72; 1
result.scores[1] 3
if(NULL_OR_LINEBR[peek()]) 1
getPrintStream().print(i); 1
r[32]=116; 1
methodCompiler.method.ifeq(falseResult); 2
Logger 3
buffer.append().append(message).append('\n'); 1
this.originalModes 1
assertEquals(0x01, 5
callConfig.pre(context, 4
answer 4
add(iter.next()); 1
mv.invokestatic(cg.p(RubyHash.class), 2
push(context.getRuntime().newString(bytecodes[ip].s_op0)); 1
mfor: 2
EXCLUDE_MODULES.add(); 4
loadService.init(new 1
R_FLOWNONZERO[' 1
context.postDefMethodInternalCall(); 1
lookaheadId=id; 2
mv.invokestatic(cg.p(Class.class), 1
blNew.append(bl, 2
this.parent 1
ceh2 1
Tombstone 1
if(this.currentEvent 4
testServer 1
groups[i]=getString(in,out); 1
NAMES[HASH] 1
getSession().clear(); 17
getPrintStream().print(s); 2
mv.aload(ARGS_INDEX); 4
assertTrue(map.containsValue(new 1
b.append(+type); 1
if(self.callMethod(context, 3
tokenbox= 1
resPath.add(obj[1]); 1
i=parseClass(data,i,out,bs1,icase,skipspaces,unicode,xml); 1
r[48]=1; 1
model.add(imf); 1
.defineFastMethod(, 1
recv.getRuntime().setTraceFunction(null); 1
if(delta!=0) 1
mv.visitMethodInsn(arg0, 1
Collections.synchronizedMap(new 3
obj.mimicsWithoutCheck(this.text); 1
ioClass.kindOf 1
junit.textui.TestRunner.run(suite()); 1
eat=false; 1
s[b.length] 1
SwingUtilities.invokeLater(new 1
progress.update(dbname, 2
this.serializedNodes.put(node,null); 1
JavaProxyMethod 3
c='\t'; 2
log.error(, 2
'o' 2
, 30
this.pointer 1
jumpSquares 1
result.turnLost[1] 1
Path 3
iterLevel++; 1
cref 1
simpleDateFormat.applyPattern(); 3
iseq 2
cQueue.defineFastMethod(, 1
assertEquals(,val2,outp[1]); 1
oldFile.renameTo(JRubyFile.create(runtime.getCurrentDirectory(), 1
if(jar 1
callbackFactory.getSingletonMethod()); 1
sendXmlRequest(request, 1
DIGIT.setDigit(false); 1
size++; 7
append(items[i]); 1
decLength 5
for(ImageFile 1
super(parent, 2
initNamedCategory(,Pe); 1
this.applicableConditions 2
mv.invokespecial(classname, 1
sb.append('>'); 1
target.shared=true; 1
flater.setStrategy(strategy); 2
allArgs.add(rakefile); 1
test1.put(,test1Val); 1
setup(fname.convertToString().toString(), 1
s+=failNext.toStringAll(v); 1
result.setConstant(,RubyNumeric.int2fix(runtime,2)); 2
this.klazz 3
content 4
System.out.println(info); 1
message, 1
r[216]=58; 1
reader 18
wl.lock(); 1
Assert.assertEquals(3, 7
Assert.assertTrue(modDate!=eventStamp.getModifiedDate()); 1
suite.addTestSuite(TestRubyCollect.class); 1
.optString()); 1
b.append((byte[])null); 1
Cursor 2
setCalendarAttributes(noteMod, 2
ByteArrayInputStream 1
GlobArgs 1
dup.hash 1
if((anchors&ANCHOR_START)>0){ 1
b.replace(0, 4
isr 2
if(scale 1
iVisited.getLeftNode().accept(this); 1
signature 14
this.threadGroupClass 1
sleepForMilliseconds(10); 1
switch(i) 1
if(position 1
calendar.set(Calendar.MINUTE, 1
table[ClassIndex.ARRAY][MethodIndex.OP_PLUS] 1
suite.addTestSuite(TestRubySymbol.class); 1
if(blockIndicators) 1
this.isRestArgs 1
board[y][x].setBomb(true); 1
context.getIndentor().indent(); 1
io.close(); 6
proxyClass.setConstant(, 1
current=append(br); 1
i=CharacterClass.parseName(data,i,out,term,inv,(flags&IGNORE_SPACES)>0); 1
argNames.add(argumentNode.getName()); 1
r[352]=50; 1
Arity 2
newProfile2.normalize(); 1
this.shared=shared; 1
context.assignConstantInObject(constDeclNode.getName()); 1
((PageContext)getJspContext()).getServletContext(); 2
lookaheads[i]=new 1
fileStatClass.includeModule(runtime.fastGetModule()); 1
Converter 3
defl.defineFastMethod(,RubyKernel.IRUBY_OBJECT)); 2
resolveClass(cl); 1
mv.aload(LOCAL_VARS_INDEX); 4
bj.setTarget(this); 5
method.astore(RUNTIME_INDEX); 1
isDecl=false; 1
table[ClassIndex.FIXNUM][MethodIndex.TO_I] 1
visitNode(iVisited.getSecondNode()); 2
method.label(start); 1
FALSE 1
fflush(); 1
Servlet 1
nondigit 13
IdReference 2
t2.join(); 1
methodNames.add(runtime.newString(methodName)); 1
i--; 10
obj.mimicsWithoutCheck(registry.wrap(object.getClass())); 1
cCurrent=null; 1
calendar.set(Calendar.MILLISECOND, 1
rewind(); 2
encode.position(occurrences); 1
SlottedHashMap 4
term.type=unicode? 3
results.addAll(toAdd); 1
this.defaultValue 1
Term(int 1
flags.setBackground(Color.BLACK); 2
RubyClass.checkInheritable(baseType); 1
for(List<RestartInfo> 2
runtime.getWarnings().warn(ID.BLOCK_BEATS_DEFAULT_VALUE, 1
flushBeforeSeek(); 1
fastStoreInstanceVariable(name, 3
next=target.next; 1
writer.write(c); 1
TestSuite 6
if(tok 2
m_nPollInterval 3
ret[i] 1
padLength 4
maxCount=max; 2
makeLazyPlus(vars,current); 1
eventHooks.remove(hook); 1
this.tokens.add(Token.KEY); 1
panel.setMinimumSize(dim); 1
fields.add(new 7
newMap.put(); 1
if(theCls.respondsTo()) 1
RESOURCE_TYPES 1
LEND 1
SchedulerConfig 1
if(iVisited.getIterNode() 2
super(DavPropertyName.ISCOLLECTION, 1
addKeyFields(record); 2
assertThat(ret[0].getField(), 3
List<ContentItem> 1
translator 1
val.append().append(path); 1
chunks.append(suffix.substring(start,ending)); 1
UNONWORDCHAR.setWordChar(true); 1
st_blksize 1
init__resolver_scanner_trans_actions_wi_0( 1
event); 1
STUPID_CHAR[''] 1
if(id==null) 4
List<IRubyObject> 1
items.addAll(convertEventCalendar(cc.calendar)); 1
NON_ALPHA_OR_NUM['%'] 1
fe.setDir(rootf!=null? 1
Set<NoteItem> 7
argc++; 1
this.runtime 35
start.setUtc(true); 1
addElement(newMask(s,flags,tok.hasMore())); 1
'3', 2
getMethodAdapter().invokestatic(cg.p(CompilerHelpers.class), 1
fieldsTable 1
map.put(key.asString().toString(), 1
chunks.append(scanLineBreak()); 3
if(inlineBreaks) 1
loadFalse(); 1
pgbc.gridx=1; 1
methodCompiler.getVariableCompiler().getTempLocal(argsLocal); 2
if(prev_out!=null){ 1
converters['l'] 1
type=REPEAT_0_INF; 1
entrySection.setLayoutData(new 1
PubRecords 2
config.getOutput().print(d); 1
CharsetEncoder 1
ArrayList<ContentItem> 2
obj.marshal 1
gzreader.getMetaClass().defineMethod()); 1
org.jruby.util.SimpleSampler.registerThreadContext(threadService.getCurrentContext()); 1
setBaseContentAttributes(freeBusy); 1
fieldObj 12
i.optimize(); 1
n--; 1
digester.setEntityResolver(this); 1
@JRubyMethod(optional 1
arrayNode.add(constNode); 1
//		jth.enableInputMethods(false); 1
System.arraycopy(items, 1
module.defineModuleFunction(, 7
if(t.groupDeclared) 2
STRANGE_CHAR['['] 1
stop 5
while(!NULL_OR_LINEBR[peek(length)]) 2
date.defineFastMethod()); 1
Array.set(self, 1
i=wOffset; 1
visitNode(bodyNode); 1
.getDuration(masterEvent)); 1
msg=rb; 4
HEXA_VALUES['2'] 1
result.defineConstant(,runtime.newFixnum(5)); 1
if(goal[i][0] 8
fields 2
visitNode(iVisited.getArgsNode()); 3
ClientRegister.Create(factory); 1
.710359900371425297116899083947e-17, 1
topSelf 1
result.defineFastModuleFunction(, 3
esc=true; 1
AntlrTestHelper.createProblemList( 1
tokenlab.setLabelFor(tokenbox); 1
data.prepend((byte)' 1
rubyObject 1
stack[stackTop-1] 1
set.init(); 1
ss.setPos(5); 1
processingAttributes.put(AttributeNames.QUERY, 1
NAMES[OP_TIMES] 1
createSysErr(IErrno.ERANGE, 1
if(!(cc 1
bs.setWordChar(unicode); 1
mv.label(afterJmp); 2
pattern=new 1
this.tokenNumber 1
exponent 14
context.getRuntime().getWarnings().warn( 1
ESCAPE_REPLACEMENTS['r'] 1
Constants<BaseObjectType> 1
table[ClassIndex.STRING][MethodIndex.NIL_P] 1
moduleClass.defineAlias(); 1
filename 12
assert(!runtime.getObject().getConstant().isNil()); 1
createSysErr(IErrno.ENOSPC, 1
if(oct>0xffff) 2
if(recursiveObjects.containsKey(node)) 1
ByteList 116
0, 8
ASCIIEncoding 1
lo++; 5
range.init(begin, 1
config.setOutput(out); 1
methodsForArity.append(JavaMethod.create(runtime,method)); 1
options.put(, 14
testServer.happy(content).start(); 1
str=path; 1
Queue 1
for(String 4
MemReg[] 5
topgbc.gridheight=2; 1
assertTrue(map 1
table[ClassIndex.REGEXP][MethodIndex.NIL_P] 1
constantNames.add(getRuntime().newString(name)); 3
addAttribute(DC, 32
getRubyClass(); 1
switch(args.charAt(++i)) 1
mode=INTERSECT; 1
this.location 4
r[288]=96; 1
ICalendarUtils.setSummary(note.getDisplayName(), 3
add(bs,false); 1
visitIterAndSkipFirst(n.getBodyNode().childNodes().iterator()); 1
assertEquals('2', 1
target.add(o1); 1
outputStyle 1
3138078467L, 1
isTrue(); 6
pgbc.anchor=GridBagConstraints.NORTH; 1
valueNode 1
channel.finishConnect(); 1
method.go_to(normalEnd); 1
this.realLength 1
ary.flatten_bang(); 1
btn.addActionListener(this); 1
toAppendTo.append(formatSymbols.getMonths()[calendar.get(Calendar.MONTH)]); 1
config.setLastPosition(iVisited.getPosition()); 1
frame.getContentPane().add(input, 1
Log.outlog(); 2
en.setBorder(BorderFactory.createEmptyBorder()); 2
if(inverse)b.append(); 3
context.preScopedBody(new 1
console.getContentPane().setLayout(new 1
JPanel 2
out.printf(, 1
AppenderEditorInput 1
result.append(entry(RubyNumeric.num2long(args[i]))); 1
trigger 2
map.put(, 41
result.add(rp); 1
ADD_INSNL(ret, 6
XmlSerializable 1
assertEquals(s())); 7
SymbolEntry(int 1
if(!bs1.isLarge) 2
getNode( 1
table[ClassIndex.ARRAY][MethodIndex.AREF] 1
pubScore[goalConsidered]*=2; 1
handler.setIsSync(true); 1
leaveCall(); 20
DavHomeCollection 1
argfClass.defineAnnotatedMethods(RubyArgsFile.class); 1
r[56]=0; 3
exception 3
servletHolder.setInitParameters(initParams); 1
if(we<0) 1
HEXA_VALUES['3'] 1
allMatchedNames.addAll(pattern.getMatchedFiles()); 1
Process 8
Hook.init(this); 1
if(!isExclusive){ 1
System.out.println(value); 1
visitor.visitNodeInIndentation(bodyNode); 1
lookaheadId=out.lookaheadId=id; 1
verifyItemInSet(now,NOTE_UID 2
if(read.isNil() 1
initNamedBlock(,0,0xffff); 1
serverPropertyDao.setServerProperty(); 2
anchor 4
clearAllEntries(); 2
newMethod.implementationModule 2
push(rubyClass.fastGetClassVar(name)); 1
ArrayList<EimRecordField> 1
ip 25
this.method 14
scanner.reset(); 1
buf.write(args.getDecimalSeparator()); 6
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_CEILING)); 1
result.defineClassUnder(,zlibError, 7
staticCallbacks.remove(name); 1
ICalendarUtils.setDescription(note.getBody(), 3
runtime.getLoadService().init(loadPaths); 1
if(p==end) 2
io 2
in 8
initialize(pat, 1
if(server) 3
!Modifier.isFinal(method.getModifiers())) 1
if(((File)currObj).isDirectory()) 1
testDir 4
text.setText(value 1
assertTrue(rubyObject.dup().getType() 1
tp.extend_object(rubyObj); 1
buffer.append('\n'); 1
if(strict) 1
io.write(RubyNumeric.fix2int(p1)); 1
cnt=actual.cnt; 7
delegate.collect(doc, 1
visitNode(firstChild(n.getExceptionNodes())); 1
TagUtils.getBean(sc, 2
if(recv 1
runtime.defineReadonlyVariable(, 6
cDigest_MD5.setInternalModuleVariable()); 1
testServer.servingPath(file.getParentFile().getAbsolutePath()).start(); 1
matcher=m; 1
writeLineBreak(null); 11
i2 4
write(TYPE_IVAR); 2
this.rewrite_query 2
if(c!='}') 2
mv.visitMaxs(3, 4
if(failNext!=null) 1
this.inDefinition 1
NAME_QUALIFIER, 1
if(this 1
module.defineFastPublicModuleFunction()); 24
seq.args_argc 2
node.out=node; 1
log.debug(+fieldValues.get(name)); 1
visitNewlineInParentheses(iVisited.getReceiverNode()); 3
arity, 1
setReadableVar 1
RubyNumeric.str2inum(getRuntime(), 1
column.setCellRenderer(editCellRender); 1
calendar.setUid(CALENDAR_UID); 1
BlockCallback 1
fr.addActionListener(this); 2
if(!(item 2
protocol 2
settingsButton.setText(); 1
if(c.getProperty(Property.RECURRENCE_ID)==null) 1
obj.setData(JavaWrapper.wrapWithMethods((Class)object, 1
outputter.setValidating(false); 2
env.expectFlowMappingKey(); 1
ret.strcat(us); 1
arr.add((String) 3
Ruby.setSecurityRestricted(true); 1
mv.newobj(cg.p(HashMap.class)); 1
result.append(block.yield(context, 2
withoutMillis 1
term.out.next=b; 4
JumpException 1
this.tokens.add(Token.STREAM_END); 1
this.errorCode 1
env.expectDocumentRoot(); 1
regLen=actual.regLen; 2
if(note.getModifies()!=null) 6
buffer.append('#'); 1
d.generate(); 1
argsNodeId 2
array.unshift(string); 1
column.setPreferredWidth(10); 1
b.append((int)c); 1
Class[] 79
value.getRuntime().getWarnings().warn(); 1
if(INSTANCE 2
((RubyObject)st).instance_variable_set((IRubyObject)em.getKey(),(IRubyObject)em.getValue()); 1
result.append((char) 15
702138776L, 1
mv.getstatic(cg.p(IRubyObject.class), 5
len++; 4
pos.player 100
c=data[i]; 3
r[64]=43; 1
build.append(); 3
logManagerClient.store(); 1
this.add(tokenbox); 1
kcode 1
10000000L, 1
scratchDirectory 1
Set<ContentItem> 3
current=null; 1
registerClass(,punct,posixClasses); 1
while(ALPHA[peek(length)]) 1
if(!this.tokens.isEmpty()) 2
mv.invokevirtual(cg.p(JumpException.JumpType.class), 1
SymbolEntry 4
this.wOffset=wOffset; 1
cw.visitField(Opcodes.ACC_PRIVATE, 1
forward(1); 3
states: 3
assertTrue(storedFixnums.contains(item)); 1
for(char 9
mergeCalendarProperties(masterEvent, 1
headers.put(, 5
CosmoConstants.SCHEMA_VERSION); 1
this.ticket 1
library 8
registerClass(,graph,posixClasses); 2
if(sign 2
parentsStmt 1
setWindowTitle(); 2
'i' 2
result.turnLost[3] 1
Utils.LOG.warn(, 2
gbc.gridheight=2; 1
setInput(new 1
pane.add(helper); 1
values.append(op_aref(indices[i])); 1
vResult.add(packageName 1
r[72]=37; 1
seq.filename 1
if(limits.length!=LIMITS_LENGTH) 1
visitNode(n.getVarNode()); 1
recur.setUntil(untilDate); 1
servletContext 1
keys.add(id); 3
TRACES.add(trace); 1
buffer.append(); 6
StaticFieldGetter(String 1
SyncToken 2
this.creator 1
if(data[i]==c) 1
playerScore.add(pos); 68
registerClass(,cntrl,posixClasses); 1
Parser 2
getRuntime().getWarnings().warn(ID.DEPRECATED_METHOD, 1
pgbl.setConstraints(scroll, 1
marshalStream.dumpInstanceVars(iVars); 1
b.append(CharacterClass.stringValue(c)); 1
result.setConstant(,RubyNumeric.int2fix(runtime,1)); 4
commit 3
Calendar 44
this(request, 1
marshal 2
runtime.getWarnings().warning(); 1
setPosition(node.getPosition()); 1
for( 5
PropertyList 1
b.next=lt; 1
newArgs[i] 1
sender.setForeground(foreground); 1
net.fortuna.ical4j.model.Date[] 1
if((targetbits=target.bits)!=null){ 3
children.add(smap); 1
-.581416472433116155186479105032e-9, 1
methodCompiler.getScriptCompiler().getCacheCompiler().cacheCallSite(method, 21
@return 2
if(user==null) 1
cachedType 3
registerClass(,space,posixClasses); 1
manager_ 1
fileList.add(0, 2
topn((int) 1
out[o] 1
table[ClassIndex.ARRAY][MethodIndex.NIL_P] 1
b.append(memreg); 5
2647816111L, 1
ga.visitTryCatchBlock(before, 4
storedFixnums.add(o3); 1
java.setClassname(); 1
this.constructor 1
addAll(node); 2
gpc.getStatic(selfType, 1
mv.ldc(); 3
structClass.defineFastMethod(, 5
response.setContentType(ICALENDAR_MEDIA_TYPE); 2
if(!answer.isEmpty()) 1
checkOffset(args,++offset,length,ERR_MALFORMED_DOT_NUM); 1
assertNull(ss.preMatch()); 1
getMethodAdapter().swap(); 1
upshot.setOpaque(false); 1
this.matcher 2
env.column 12
if(v<0) 1
(bytes[i+1] 2
((ConstantField)iter.next()).install(module); 1
parseStack.push(P_SCALAR); 2
file.openInternal(path, 1
this.o_op0 1
System.arraycopy(values,0,newValues,0,this.values.length); 1
scanner.terminate(); 1
channel.close(); 3
pattern.flags 1
goalChoice 8
addFixer((Node)((LinkNode)vv).getValue(), 1
this.initParams.put(param, 1
NAMES[UNSHIFT] 1
r[144]=1; 1
m_nCmdParam 3
RETRY 1
org.jruby.yaml.JRubyRepresenter 1
if(journal.getUid()!=null) 1
STUPID_CHAR['&'] 1
Treepath< 2
buffer.put(buf.unsafeBytes(), 2
ip+=8; 1
super(libc, 1
table[ClassIndex.STRING][MethodIndex.LENGTH] 1
this.length 2
updateEventInternal(note, 1
word.clear().append(SEPARATOR); 2
usernameIdx.remove(user.getOldUsername()); 1
buf.append(pattern.bytes, 3
if(getEventCalendar()==null) 2
entryConfig.addAttributeConfigs(attributeMappings); 1
prefix=s; 2
SourceManagerClient 1
if(head==null) 2
_lower 2
config.processArguments(args); 1
calendar.setTimeZone(TimeZone.getTimeZone(RubyTime.UTC)); 1
value[count++] 1
message.append(':'); 1
Assert.assertEquals(5, 7
mv.visitFieldInsn(arg0, 1
CosmoConstants.PRODUCT_NAME 1
PROXY_CLASS_FIELD_NAME, 1
yamlMultiConstructors.put(tagPrefix,ctor); 4
exceptions.put(recurrenceIdDate, 1
runtime.getGlobalVariables().define( 2
runtime.getObject().includeModule(mJRubyExt); 1
System.err.println() 1
jumps.put(i, 1
lastIndex--; 1
.getType(Object[].class)); 1
recv.getRuntime().setCurrentDirectory(realPath); 2
this(ptn,icase? 1
this.varNode 1
flushWrite(); 13
checkExpression(left); 2
env.expectBlockMappingValue(); 1
if(msg 2
hunk[0] 1
unmarshalStream.defaultVariablesUnmarshal(range); 1
inspect(attrAssignNode.getArgsNode()); 1
proc.callInit(IRubyObject.NULL_ARRAY, 1
NULL_BL_LINEBR['\r'] 1
closureArg.compile(this); 1
copyToItem(copy); 1
HibEventTimeRangeIndex 3
if(((StrNode) 1
scannerClass.getMetaClass().defineFastMethod()); 1
addPath((String) 1
assertEquals(expectedTraceLine(1), 2
result.defineConstant(,runtime.newFixnum(2)); 4
ReflectionCallback 1
skip 2
assertEquals(str,YAML.load(s())); 10
if(entry.key 1
manager 2
emitter.writeSingleQuoted(analysis.scalar,split); 1
Collection<String> 1
prevNode.nextNode 1
printAsgnNode(iVisited); 7
dtdUrl 1
term.type=Term.BITSET2; 1
DavResourceFactory 1
CHINESE 2
251722036L, 1
resourceLoader.getInputStream( 1
0 1
finally 1
arr=collect(tok,arr,count+1); 1
lPrevChar 4
processThread 1
print(config.getFormatHelper().afterHashContent()); 1
string 2
runtime.getObject().fastSetConstant(internedName, 1
forward(2); 4
context.preYieldLightBlock(this, 1
text.init(); 1
registerRescues(rescues); 1
si.modifyNestedList(); 1
getRuntime().getCurrentContext().getCurrentFrame().setBackRef(newMatch); 1
calendar.getComponents().add(0, 1
NAMES[SHIFT] 1
LogFactory.getLog(BaseGenerator.class); 1
this.getContentPane().add(size); 1
initNamedCategory(,Lo); 1
iter 2
item 2
fieldComposite.setLayout(layout); 1
currentScope 4
collection.setHue(records.getHue()); 2
if(model.getRowCount()==0) 1
intLength 4
while(tok.hasMore()){ 1
dir 6
type=INDEPENDENT_IN; 1
output.flush(); 4
if(isEndOrStart()) 2
failNext=back; 2
Iterator<Move> 2
moduleClass.defineFastPrivateMethod()); 11
possibleMoves.add(possibleMoves.get(j).copy().addD(0).addM(0)); 1
postIter(); 2
-.822775302587920842057766536366e-7, 1
.append(packageString.substring(start+1, 1
addr 1
RubyGzipWriter 2
formatWeekYear(Calendar.SUNDAY, 1
arrayc.includeModule(runtime.getEnumerable()); 1
if(Arity.checkArgumentCount(recv.getRuntime(), 1
expSpec 1
HttpProtocolParams.setUserAgent(params, 1
if(Arity.checkArgumentCount(self.getRuntime(), 1
setDaemon(true); 1
calendar.set(Calendar.HOUR_OF_DAY, 1
src.unread('-'); 1
this.oldName 3
names.add(methodName); 2
resPath.add(path); 1
stmp++; 1
if(hasMore)throw 1
merge.add(mapping[0]); 1
stmp 2
System.out.println(result); 1
calendar.get(Calendar.DAY_OF_MONTH) 1
stmt 1
this.iterator 1
buf[size] 1
ok.addActionListener(this); 3
else{ 64
loginbox.setText(); 1
assertTrue(re.getException().toString().indexOf() 2
bs.reset(); 1
RubyFloat.marshalTo((RubyFloat)value, 1
shift 6
curState.scores[i] 1
sender.setEnabled(false); 2
this.iseq 3
print(iVisited.getOperatorName()); 2
result.taint(); 1
superObject 2
b.in=term; 1
staticScope.setVariables(names); 1
mv.aload(DISPATCHER_THREADCONTEXT_INDEX); 5
cMutex.defineMethod()); 1
Math.round((System.currentTimeMillis() 1
GlobalAsgnNode 1
IndexerOld(final 1
suite.addTestSuite(TestRuby.class); 1
tmp.add(i.next()); 1
if(number 1
this.hereDocument 1
DirectoryClient 1
List<File> 1
print(config.getFormatHelper().beforeCallArguments()); 1
scale=80; 1
Node 34
this.func 2
NodeCompilerFactory.getCompiler(attrAssignNode.getReceiverNode()).compile(attrAssignNode.getReceiverNode(), 1
Bitset.unify(bs,term); 3
stack[stackTop] 6
r[8]=0; 3
seq.locals 1
COMPILE(anchor, 1
reset.out=null; 1
config.setSkipNextNewline(true); 2
current.index=cntreg; 1
setupBufferedIO(); 7
m_strName 1
initializeItem(content); 1
excptnClass 2
result.insert(0, 1
callEach(runtime, 25
elapsed.put(name, 1
10000L, 1
previousCRefScope 2
_mid 2
type_int 18
this.string 3
assertTrue(Arrays.equals(bytes, 2
zstream.defineMethod()); 1
(RubyInteger) 1
getInstance().setPollInterval(nInterval); 1
-.47268939801975548392036958429e-14, 1
LogFactory.getLog(SubscriptionProvider.class); 1
allChildrenByUid.put(child.getUid(), 2
this.variableNames 1
cConditionVariable.defineFastMethod(, 1
lElem[index++] 7
array 1
if(data[--i]==c) 1
methodCompiler.method.pop(); 6
startSearchForLastChar: 1
filter.addTerm(new 2
TestHelper 1
2125561021L, 1
method.ifeq(isFalse); 1
out.writeObject(e.name); 1
if(pos.equalsLoc(sq)) 1
children.add(cid.getItem()); 1
super(superclass); 7
if(method.getImplementationClass() 1
loadedFeaturesInternal.remove(loadName); 1
recv.getRuntime().getLoadService().load(file.toString()); 1
handleStreams(aProcess,input,output,error); 1
if(!(indexCheck 1
masterEvent.setStatus(); 1
assertEquals(/. 1
runtime.getJavaSupport().setConcreteProxyCallback( 1
JumpTarget 1
op_aset(entry.key, 3
this.listNode 1
clear(); 1
Log.errlog(, 8
charset 1
printCommentsAfter(iVisited); 1
plist 1
parentCRef 1
collection.setName(uid); 1
print(config.getFormatHelper().afterCallArguments()); 1
this.begin 3
map 3
javaModule 1
java.addEnv(classpath); 1
sClass 1
append(obj[i]); 1
assignLocalVariableBlockArg(argIndex, 1
boardN[i][j]=0; 1
if(d<0 1
server.setStopAtShutdown(true); 1
mag 2
this(null,path,flags); 1
if(term.eat)i+=sampleLen; 1
Runtime 3
AndNode 1
raiseNoMatchingMethodError(self,convertedArgs,1); 1
this.runnable 1
EntryFieldConfig 1
NISSourceWizard 1
this.variableAsgnCallAdapter 1
if(dt.getTimeZone()!=null) 3
dumpingPath 1
if(ve.length() 1
JsonStreamReader 1
if(w>=scale){ 1
src.unread(c2); 3
this.allowDoubleQuoted 1
switch 129
this.rescueNode 1
checkAllFontsAreGood( 3
this.tokens.add(Token.VALUE); 1
this(dir,dir.list(),i); 1
mv.dup_x2(); 2
s+=; 2
m_oSyncEngine.setFactory(factory); 1
calendar.setOwner(getUser(userDao, 1
registerBuiltin(libraryName 1
-.69601346602309501127391508262e-1, 1
assertEquals(,c.getScriptArguments()[1]); 1
.invokeStatic(PROXY_HELPER_TYPE, 1
sock.init_sock(); 1
NON_ALPHA_OR_NUM[']'] 1
if(javaClassClass 1
arg_types.add(args[i].getClass()); 1
internalDeleteSafe(current.key); 1
this.scope 6
_false.mimicsWithoutCheck(origin); 1
sync(); 1
method.setVisibility(visibility); 1
number.init(); 1
if(isShared) 1
NAMES[TO_STR] 1
UnmarshalStream 5
main 2
VTimeZone 6
print('|'); 2
write(':'); 2
pane.add(desk); 1
composite.setLayout(new 3
runtime.moduleLastId++; 1
spaceSeen 5
lt.next=term; 1
switchTable 1
Queue.setup(runtime); 1
fileName 1
this.skipNextNewline 1
inspect(((NextNode)node).getValueNode()); 1
mv.visitMaxs(1, 11
validateSchema(); 1
tc.setWidth(250); 1
this.fileDescriptor 1
LOG.error(); 2
value.append(tail.getValue()); 1
bj.setBreakInKernelLoop(false); 1
callbackFactory.getFastMethod()); 23
generatedSource 1
print(config.getFormatHelper().beforeClosingIterBrackets()); 1
text.append(new 1
appendToBuffer(expectedResult, 1
System.arraycopy(bytes, 5
ioClass.includeModule(runtime.getEnumerable()); 1
setRange(c,c); 1
RubyStruct.marshalTo((RubyStruct)value, 1
refCounter.incrementAndGet(); 2
result.setMarshal(RANGE_MARSHAL); 1
Event 3
sb.append('\\').append('v'); 1
catch(WriteException 1
hasComment 1
write('/'); 1
completeCombo 1
this.eventView 1
message.setForeground(Color.decode()); 1
init_sock(); 1
iVisited.accept(_Payload); 94
}}); 1
runtime.getCurrentContext().getCurrentFrame().setLastLine(value); 1
rb.set(attributeMapping.getName(), 1
config.getOutput().print(l); 1
this.matchDataClass 1
s--; 1
if(merge 1
v.addElement(); 1
push(pop().callMethod(context,MethodIndex.OP_LSHIFT, 1
RubyNumeric.int2fix(recv.getRuntime(), 1
config.processArguments(context.getArgs()); 1
results.add(attributes); 1
globalAbortOnExceptionEnabled 1
if(followedBySpace) 2
if(lnode.childNodes().size()>0) 1
environmentVariableMap 2
this.mostSpecificParameterTypes 1
if(nums.length()>0) 1
ccs.setDescription(); 1
.doPrivileged(new 1
inspect(whileNode.getBodyNode()); 1
language 2
PreparedStatement 5
cal.setTime(new 2
NAMES[INSPECT] 1
if(!socktype.isNil()) 1
initPosixClasses(); 1
parameterElement.add(paramName); 1
first 7
table[ClassIndex.SYMBOL][MethodIndex.NIL_P] 1
loadClosure(); 3
assertTrue(ss.isEndOfString()); 1
module.defineFastPublicModuleFunction(, 11
response.setCharacterEncoding(item.getContentEncoding()); 1
if(major 1
isTainted 1
snapshotList.addAll(getContents(dir)); 1
fixnum.kindOf 1
text.mimicsWithoutCheck(origin); 1
updateContentInternal(item); 1
((Map)node.getValue()).put(itemKey,composeNode(node,itemKey)); 1
mv.aload(DISPATCHER_RUNTIME_INDEX); 2
while(!reported) 1
scanLineBreak(); 2
socket.connect(new 1
if(i<0 1
NAMES[OP_MINUS] 1
attributePage.setObjectClasses(objectClasses); 1
parseStack.push(P_FLOW_MAPPING_INTERNAL_CONTENT); 1
rb_clear(); 3
t.next(); 4
NAMES[OP_MATCH] 1
note.setClientModifiedDate(event.getDateStamp().getDate()); 1
memo 1
super(serializer,opts); 2
if(hasAlarm) 1
Variable 2
methodsWithName.add(jpm); 1
if(self.getRuntime().getDebug().isTrue()) 4
flags.setLayout(flagbl); 2
mv.ifne(methodMissing); 1
this.isBindingFrame 3
src.unread('\n'); 1
Reflector.init(this); 1
SPACES_AND_STUFF['\r'] 1
System.arraycopy(rplArr.values, 2
CollectionItemDetails 1
CHOMPING['6'] 1
processCommands(); 1
range.isExclusive 1
if(i>=end){ 3
HEXA_VALUES['b'] 1
protected 550
rb_warn( 1
context.preScopedBody(DynamicScope.newDynamicScope(scope)); 1
state.scores[0] 3
1, 12
DN 1
DO 1
directorySection.setClient(directoryControl); 1
if(recursive) 2
pos++; 4
javaWrapper.init(); 1
if(allComponents.contains(key)) 1
fieldComposite.layout(); 1
this.pEnv 2
JavaProxyClass.createJavaProxyClassClass(runtime, 1
if(!bs1[i]) 1
anchorNode((Node)iter.next()); 1
mv.ldc(new 26
this.l_op0 1
output.registerLinkTarget(array); 1
runtime.checkSafeString(_path); 1
safeGet(encode); 1
size.setForeground(foreground); 1
nameQualifier, 2
//Mirko 1
pop2(); 1
channel 4
regexp.defineFastMethod()); 1
localSessionFactory.createDatabaseSchema(); 1
if(thisClass.equals(Character.class)) 1
config.setSkipNextNewline(false); 2
oneWordFile.toURI().toURL().toExternalForm(), 4
.164761214141064673895301522827e-17, 1
entityEscapeSelector 1
cDigest_SHA2_512.setInternalModuleVariable()); 1
mv.go_to(afterJmp); 2
printDefNode(iVisited, 2
exceptionClass.setMarshal(SYSTEM_CALL_ERROR_MARSHAL); 1
cSizedQueue.defineAlias(); 3
RhinoDocument.state 1
this.fileStatClass 1
antlrResult 1
((IokeSystem)IokeObject.data(system)).pushCurrentFile(name); 1
rb_cUDPSocket.defineFastMethod(,IRubyObject.class,IRubyObject.class)); 2
mv.trycatch(tryBegin, 2
attributePage.setServer(server); 1
linkAsBranch=false; 2
assertTrue(map.keySet().containsAll(keys)); 1
//DateTime 2
usernameIdx 1
wakeupIndexer(); 2
this.javaClass 1
eventHooks.add(hook); 1
preparedAnchor 4
Utils.LOG.info(); 14
if(isPositive){ 2
scores.put(profile, 1
runtime.addFinalizer(this); 1
node=lb.in; 1
delta 1
tzIdx.put(tzId.getValue(), 1
buf.append(input, 1
r.represent(test1); 1
extraPositionInformation 2
Utils.out(Utils.error(500, 2
threshold 12
((Taintable)self).isTaint()) 1
subtract(bs,false); 1
mv.arrayload(); 7
Assert.assertEquals(, 197
text.setMargin(new 2
mv.visitLocalVariable(, 1
filesPlusDotFiles[0] 1
newName 1
System.arraycopy(mychars,0,newchars,0,count); 1
.2126374343765340350896219314431e-7, 1
this(500, 1
Assert.assertEquals(7, 1
serverNode 1
column.setPreferredWidth(180); 1
1.0e1, 1
beginMethod(methodName, 3
if(startDate 1
push(runtime.newArrayNoCopy(popArray(new 1
receivedObject.getMetaClass().getRealClass() 1
QuickStringBuffer(int 1
this.parseStack.push(P_STREAM); 1
Label[] 3
args.warning(message); 1
term.inverse=inverse; 1
cw.visitField(ACC_PRIVATE 1
bytes_read 1
element.prev 1
note.getTriageStatus().setCode(code); 1
hunk[2] 1
.defineClassUnder(this, 1
System.err.println('); 1
mr.out=end; 2
globalVariables.defineReadonly(name, 1
10000000000L, 1
fastStoreValue(name.intern(), 1
STRANGE_CHAR['?'] 1
this.checkState 1
alloc(realLength); 1
if(!JavaClass.assignable(types[j],(Class)arg_types.get(j)) 1
r[96]=1; 3
isCompilingClosure 2
cacheLength=tLen; 1
if(resolv 1
if(((ItemTombstone) 1
JavaArray.createJavaArrayClass(runtime, 1
r[0]=75; 1
NodeCompilerFactory.getArgumentsCompiler(attrAssignNode.getArgsNode()).compile(attrAssignNode.getArgsNode(), 1
gbc.gridwidth=1; 4
calendar 5
lexer.yaccValue 3
while(it.hasNext()) 1
((x.callMethod(context, 1
parent 3
this.procStatusClass 1
IntHashMap 2
if(i>=out) 3
r[24]=0; 3
out.type=NLOOKBEHIND_OUT; 1
result.y 15
result.x 15
helper.addActionListener(this); 1
getGlobalVariables().get(); 1
RubyTCPSocket 1
if(j<offset) 2
grow(length); 1
List<String> 13
runtime.printError(re.getException()); 1
WriteException(IOException 1
FOR 1
org.jruby.RubyDigest.createDigestRMD160(runtime); 1
if(value_v 1
setChar('\t'); 1
note.setUid(entityFactory.generateUid()); 3
getCurrentFrame().setVisibility(visibility); 1
strcpy(from); 1
objectSpaceModule.defineFastModuleFunction()); 1
mv.aload(DISPATCHER_SELF_INDEX); 2
runtime.getThreadService().registerNewThread(rubyThread); 1
assertEquals(RuntimeException.class, 1
jf 2
NON_ALPHA_OR_NUM['?'] 1
f_nzero 1
r[144]=44; 1
env.line++; 1
m_oSyncEngine.stopSync(); 1
BackReference(int 1
ArrayList<NoteItem> 1
savePossibleSimpleKey(); 6
if(env.column 1
SyncLoginCommand 1
shared.bytes 1
generateProxyMethod(selfType, 1
current.value=value; 1
if(je.isDirectory()) 2
registerClass(,upper,posixClasses); 1
}; 157
allMethods.put(entry.getKey(), 1
suite.addTestSuite(TestLoadService.class); 1
RubyUDPSocket 1
if(stamp.isAnyTime()) 1
((JSONArray) 3
cancel 1
}, 27
SPACES_AND_STUFF[''] 1
org.jruby.runtime.CallType.SUPER, 1
CASE 1
Block(boolean[] 1
messageSource.getMessage(MSG_ACTIVATION_HANDLE, 1
currentLock.release(); 6
unboundMethod.receiver 1
if(compareRegions(data,sampleOffset,i,rLen,end)){ 1
mark 4
ConnManagerParams.setMaxTotalConnections(params, 1
chars[i] 2
BigInteger[] 4
gbc.ipady=0; 1
writer.write(s); 1
if(isSingleton()){ 4
runtime.setMath(result); 1
SimpleConnectionProvider.setConnection(datasource.getConnection()); 1
ga2.endMethod(); 1
ttype=CONDITIONAL_GROUP; 1
newProfile.save(fos); 1
text.setFont(font); 2
this.mostSpecificMethod 1
this.displayLanguage(); 8
regLen--; 2
this.superClass 3
switch(t.ttype){ 2
v.setKey(); 1
column.setPreferredWidth(70); 1
method.ldc(name); 1
constants.fastSetConstant(, 18
calendar.getProperties().add(Version.VERSION_2_0); 1
if(path.size() 1
yamlMultiRegexps.put(tagPrefix,Pattern.compile(+tagPrefix)); 4
getSyncEngine().getNotify().cleanObjectNotifications(); 1
mv.invokevirtual(THREADCONTEXT, 1
login 1
event.setRecurrenceId(recurrenceId); 1
end=len; 1
obj.mimicsWithoutCheck(this.ratio); 1
store(len 1
nextObj=null; 1
if(len<0){ 1
RubyEnumerator.defineEnumerator(runtime); 1
containingClass.callMethod(context, 4
time.setUSec(int_args[4] 1
this.representedObjects.put(data,node); 1
states.push(Boolean.valueOf(b)); 1
rubyThread.sleep(milliseconds); 1
if(day_s 2
assertTrue(map.keySet().remove()); 1
mv.visitLineNumber(arg0, 1
getRuntime().newTypeError(args[0], 1
runtime.getObject().fastSetConstant(,rb_cTCPSocket); 1
same 2
IntByReference 4
if(m.start()>0){ 1
984961486L, 1
runtime.getJavaSupport().addToClasspath(((JarredScript)library).getResource().getURL()); 1
normalizedHome 2
args.compile(this); 2
RubyClass.createClassClass(this, 1
copy.setUtc(true); 1
suite.addTest(VisitorTestSuite.suite()); 1
this.manager 1
table[ClassIndex.ARRAY][MethodIndex.TO_ARY] 1
buf.append().append(frame.getName()).append('\''); 1
response.setCharacterEncoding(); 2
mv.invokespecial(cg.p(Object.class), 1
newbytes[pos] 1
id=Integer.parseInt(gname); 1
running 1
JavaProxyClass.createJavaProxyModule(runtime); 1
h1.getSingletonClass().defineFastMethod()); 1
ESCAPE_REPLACEMENTS['b'] 1
sleep(); 2
file2 4
CharacterClass.makeICase(term,c); 1
types[0] 1
chan.close(); 1
if(stop 2
rb_sys_fail(openFile.getPath()); 1
(IRubyObject)rubyArray.get(unnumbered); 1
super(composer); 3
node=la.out; 1
checkForDuplicateICalUid((ICalendarItem) 3
output.registerLinkTarget(aFloat); 1
checkLength(length); 5
holder.close(); 1
assertNotNull(o); 2
.194744338223207851429197867821e-18 1
if(m.end()==0 1
activeTasks.remove(databaseName); 1
CHOMPING['+'] 1
NONDIGIT.setDigit(false); 1
this.prefix 2
NULL_BL_T_LINEBR['\r'] 1
attributeScope 1
this.cmethod 1
runtime.setRespondToMethod(module.searchMethod()); 1
JavaField 2
this.iseq_op 1
if(sockaddr.sun_path.length 1
ungotc 11
testButton.addSelectionListener(new 1
out.println(identity 1
if(!(other 2
newProfile.normalize(); 1
getHibItem(parent).addTombstone(new 1
System.out.println(Utils.error(503, 1
newMethod.originName 2
4 1
TimeInterval 1
cw.visit(V1_4, 5
userEnd 1
Context.exit(); 2
scope.setVariables(new 2
writer.write(chars,off,len); 1
last_line 1
parameterValues.remove(name); 1
if(str!=null)dest.append(str); 1
delCellRender 1
ServerNode 1
target.shared=false; 8
addAccessor(args[i].asSymbol(), 3
format_type 1
if(parent==null) 2
nilClass.getMetaClass().undefineMethod(); 1
mod 6
decPos 3
sb.append(element.toString()); 1
sig(IRubyObject.class, 17
skip=mLen+3; 2
this.self 8
result.put(key, 1
table[ClassIndex.FIXNUM][MethodIndex.OP_LT] 1
prev=null; 1
server 5
this(value,plain,(char)0); 1
System.arraycopy(bytes,0,bytes,vlen,buflen-vlen); 1
context.lineNumber(node.getPosition()); 13
mv.visitInsn(RETURN); 6
STATES[DOCUMENT_END] 1
ti.setText(1, 1
StreamPumper(InputStream 1
parseStack.push(P_FLOW_INTERNAL_MAPPING_END); 1
this.callConfig 2
this.dumpPath 1
mv.aload(SCOPE_INDEX); 3
this.cwd 2
IProgressService 2
this.add(btn); 1
masterAlarm 1
List<RubyString> 4
messageSource.getMessage(MSG_ACTIVATION_SUBJECT, 1
fixedStr.setTaint(isTainted); 1
nativeThread.setPriority(priority); 1
RubyGlobal.createGlobals(this); 1
bExist 1
insn_set_specialized_instruction(inst, 3
outp 3
ip++; 1
lCurElemString 4
(EOFSeen 1
this.errorInfo 1
yarvloop: 1
exceptionClass.getMetaClass().defineMethod()); 1
Iterator<Integer> 1
fileClass.kindOf 1
getPrintStream().print(obj); 1
err.close(); 1
inspect(match2Node.getValueNode()); 1
.getDirectory()); 1
if(subtrahend.isFull){ 1
assertEquals(0x0f, 2
newProc.block 2
mv.visitJumpInsn(IFNE, 1
TaskStamp 2
getRuntime().newFixnum(result); 1
RubyString.newString(ruby, 2
super(scSearchOne,params,source_id); 1
if(match.matches()) 2
r[64]=2; 1
this.source 3
errorInfo 1
result.fastASet(key, 1
seq.type 1
obj.setData(Decimal.decimal(number)); 2
resourceInstaller.copyWithPath( 1
ifNone 3
amEditing.wait(); 1
iokeGround.mimicsWithoutCheck(base); 1
iVisited.getReceiverNode().accept(this); 3
setCalendarAttributes(note, 2
firstPass=false; 1
pos+=buf.length(); 1
intDigits 4
System.arraycopy(buf,charPos,out,0,len); 2
Assert.assertNull(modEvent.getLocation()); 1
excptn.printStackTrace(); 7
UWORDCHAR.setWordChar(true); 1
MockEventStamp 1
prepareOptOrRestArgs(context, 1
this.threshold 1
in=this; 6
calendar.setFirstDayOfWeek(Calendar.SUNDAY); 1
if(target==null) 1
if(!(scanner.peekToken() 8
result[argumentTypes.length 1
cal.set(Calendar.DAY_OF_MONTH,Integer.parseInt(day_s)); 2
context.postYield(this); 3
overlord.addPreference(loginUrlPref); 1
followedBySpace 1
JavaObject 1
DatagramChannel 1
counter++; 9
reset.out1=null; 6
this(str.length() 1
dumping 2
this.isStaticMethod 1
print(config.getFormatHelper().getLineDelimiter()); 1
registerClass(name,bs,unicodeCategories); 1
cQueue.getMetaClass().defineMethod()); 1
methodWriteLock.unlock(); 1
tree.addTreeListener(new 1
runtime.getGlobalVariables().defineReadonly(, 3
if(model.getImages().size()>0) 2
utf8Decoder.onUnmappableCharacter(CodingErrorAction.REPORT); 1
if(IS_ESCAPE_REPLACEMENT[ch]) 1
cal.setTimeZone(TimeZone.getTimeZone(UTC)); 1
destBit 1
digits[nDigits++] 4
this.bytecode 6
createNoteModification(masterNote, 1
return((AttributesMap)attrs).getNameArray(); 1
writeString(value.toString()); 1
LinkedHashSet<Item> 1
absolute_difference 2
translatedTz 2
DefaultCharset.RENDERING, 2
response); 2
if(String.class.equals(kind) 1
-.265324343376067157558893386681e-1, 1
clazz.defineFastMethod()); 1
if(bs1[i]) 1
'U' 1
InternalError 1
h.op_aset(k,v); 1
al.add(type); 1
this.instantiator=i; 1
defl.params(RubyNumeric.fix2int(level),RubyNumeric.fix2int(strategy)); 1
file 11
if(analysis.multiline 1
if(this.what 4
links[3] 1
runtime.getJavaSupport().getConcreteProxyClass(), 2
SPACES_AND_STUFF[' 1
WebAppContext 2
NO_ENTITY_ESCAPE 1
addMissingTextField(FIELD_DURATION, 1
Arrays.fill(ESCAPE_REPLACEMENTS,(byte)0); 1
TreeFixture.assertEquals( 1
ti.setText(+e.getMessage()); 1
freqs.put(term, 3
Java.get_proxy_class(JAVA_UTILITIES,get(getRuntime(),clazz))); 3
field 2
mv.aconst_null(); 2
addDublinCoreAttributes(md, 2
Resolver 2
visitNode(iVisited.getCPath()); 2
NAMES[TO_HASH] 1
ser.open(); 1
term.close(); 2
waitForUpdateNotification(); 1
encodeIntBigEndian(result, 5
runtime.getTopSelf().callMethod(runtime.getCurrentContext(),)); 1
fiber.yieldLock.notify(); 1
super(name,STATIC_FIELD,field); 2
HEXA_VALUES['F'] 1
delete_at(last); 1
moves.add(i); 1
Utils.LOG.trace( 2
seq.line 1
this.distance=distance; 3
writer.write(body); 1
.getClass()); 1
collection.addTicket(entityFactory.createTicket(type)); 1
this.empty 1
ret.add(RubyArray.newArray(runtime, 3
push(pop().callMethod(context,MethodIndex.AREF, 1
ss.scan(WORD_CHARS); 10
expSign 4
System.out.println( 7
CZECH 2
serializeNode((Node)iter.next(),node,new 1
u 2
hasClass 3
clzz.addMethod(name, 1
config.setCurrentDirectory(context.getWorkingDirectory()); 1
chars[offset++] 19
if(handler 1
R_FLOWNONZERO['\0'] 1
items.add(mod); 1
JavaObject.createJavaObjectClass(runtime, 1
connectionConfig.setParameters(parameterValues); 1
internal.getByteList().replace((int)pos,Math.min(val.getByteList().length(),left),val.getByteList()); 1
handler.flush(); 1
System.err.println(args[0]); 1
si.setNilList(null); 1
JavaObject.registerRubyMethods(runtime, 1
s=BLOCK_SIZE; 2
putInto(buf, 2
recv.hashCode() 1
hasPrintedUsage 1
method.ifeq(done); 1
mv.visitInsn(DUP2_X2); 1
jitLoggingVerbose 2
if(w>h){ 1
parseStack.push(P_BLOCK_MAPPING_END); 1
context.createObjectArray(new 1
trailingBreaks 1
@Entity 3
super.addItemToCollectionInternal(item, 1
childDetails.add(cid); 1
ary.append(p.getNonIncludedClass()); 1
if(indexCheck 3
MethodCache.CacheEntry 1
if(task!=null) 1
editCellEditor 1
if(ms 2
WORDCHAR.setWordChar(false); 1
toAdd.add(copy); 1
if(backref 1
GetMethod 9
gzfile.getMetaClass().defineMethod()); 1
this.ioClass 1
sock_dgram 1
difference 2
context.getCurrentScope()); 1
ss.scan(WHITESPACE); 3
unwindIndent(this.column); 1
isState=false; 1
httpServletResponse.setStatus(errorCode); 1
jitCallConfig.pre(context, 1
floatc.defineFastMethod()); 15
NAMES[TO_A] 1
emptyTokensEnabnled=emptyEnabled; 1
thisClass 1
JOptionPane.showMessageDialog(this, 1
InvocationCallback 13
this.counterCount=counterCount; 1
checkInitialized(); 4
if(start<0)throw 1
methodCompiler.invokeUtilityMethod(, 25
test2Val.add(new 1
part.append(); 1
newMethod.label(noArgs); 1
val2 1
out.write((value 1
this.possibleSimpleKeys 4
NAMES[POP] 1
integer.getSingletonClass().undefineMethod(); 2
newLength 4
super(msg, 1
addMethods(methods, 2
handler.close(); 2
m_ptrFactory 1
value.getType().getName() 1
LuceneHolder 2
lexicalBlock.mimicsWithoutCheck(origin); 1
if(i<args.length()) 1
public 9940
out[op++] 3
mv.ifeq(falseJmp); 3
AppendersNode 1
checkWritable(); 20
back=findBackReg(data,i+term.distance,sampleOff,sampleLen,cnt-minCnt,term.target,end); 1
untrack(); 1
@JRubyMethod(name 576
self.setInstanceVariable(,self.getRuntime().newFixnum(0)); 2
checkExpression(secondNode); 1
CommandlineParser 6
result.add(col); 4
parseStack.push(P_INDENTLESS_BLOCK_SEQUENCE_ENTRY); 3
Dimension 3
obj.setData(Regexp.create(pattern, 1
x.add(newPath); 1
STATES[BLOCK_MAPPING_SIMPLE_VALUE] 1
HttpProtocolParams.setVersion(params, 1
NON_ALPHA_OR_NUM[','] 1
buffer.append(element); 1
setRange('0','9'); 2
directory.close(); 2
(isSymbolName(symbol) 1
printOut.close(); 1
clazz.allocator 1
moveTally.get(m.getD(ourTurn)*3+m.getM(ourTurn)).auxscore 1
numPlayers 1
.19823169483172793547317360237148e-7, 1
context.setPosition(new 1
seq.major 1
if(task.getUid()!=null) 1
this.procClass 1
table[ClassIndex.MODULE] 1
cur.addD(moves.get(0)); 2
assertTrue(list.contains(new 1
self.getRuntime().getModule()); 1
toAppendTo.append(calendar.getTimeZone().getDisplayName(calendar.get(Calendar.DST_OFFSET) 1
exception.set_backtrace(interpreter.getNil()); 1
linkd(term,next.in); 1
heatmapNS[i][j] 1
testPrintErrorWithBacktrace(); 2
headers.put( 2
((RubyMatchData)match).use(); 3
if(i<end 1
bean1.setName(); 1
2097152 1
while(!atExits.isEmpty()) 1
switch(IdUtil.getVarType(name)) 3
if(queue==null){ 1
if(NON_PRINTABLE[((int)b[i] 1
Map<String,Text> 1
nestedCallDepth++; 1
if(sock_dgram) 1
@RunWith( 1
Match3Node 1
Instruction 1
pane.setLayout(pgbl); 1
docs[j].add(token(Config.VIEW, 1
returnReader(searcher.getIndexReader()); 1
buffer.append(')'); 1
testButton.setText(); 1
}catch(IOException 1
size--; 5
output.write(c); 3
if(IokeSystem.isAbsoluteFileName(filename)) 1
this.newName 2
ary.compact_bang(); 1
builtinLibraries.put(name, 1
calendar.setTimeInMillis(file1.lastModified()); 1
oo.setInstanceVariable(KEY,(IRubyObject)real); 1
if(!closed) 1
S4['{'] 1
appendToBuffer(source, 1
log.info(); 4
assertFalse(map.values().remove()); 1
reset.branchOut=null; 5
NON_ALPHA_OR_NUM['`'] 1
editButton.addSelectionListener(new 1
synchronized 68
r[328]=95; 1
processCommand(oSyncCmd); 1
note.setJournalCalendar(calendar); 1
runtime.getSafeLevel() 1
val.append(srcBytes, 3
recv.getRuntime().getWarnings().warning(); 1
flags=Pattern.parseFlags(data,mOff,mLen); 1
mv.visitInsn(AASTORE); 1
clazz.setBaseName(name); 1
overlord.setFirstName(); 2
gbl.setConstraints(flags, 2
! 2
Integer.parseInt(new 1
enm.defineAnnotatedMethod(RubyEnumerator.class, 5
System.arraycopy(buf,0,newBuf,0,size); 3
signature.append(ci(retval)); 1
CalendarCollectionStamp 4
this.mathModule 1
table.setLayoutData(gd); 1
r[64]=0; 3
shortLength++; 2
calendar.getComponents().add(comp); 1
if(getMetaClass() 1
block); 3
ary.append(getRuntime().newString(methodName)); 1
proxy.const_set(name,Java.java_to_ruby(proxy,javaField.static_value(),Block.NULL_BLOCK)); 1
aProcess 4
SymbolEntry[] 1
buffer.append('-').append(off); 1
m.getGroup(MatchResult.TARGET,dest); 1
if(Character.isDigit(data[t.tOffset])) 1
List 77
exporter.afterPropertiesSet(); 1
completeCombo.setRenderer(new 1
while(FULL_LINEBR[peek()]) 1
pat 1
currentFile.callMethod(context, 1
suite.addTestSuite(TestRubyObject.class); 1
STRANGE_CHAR[':'] 1
if((tok.getPlain() 1
login=loginbox.getText(); 1
writer.optimize(false); 1
activationIdIdx.put(user.getActivationId(), 1
this.intern 2
rb_cTCPSocket.getMetaClass().defineMethod()); 1
luceneGlobalAttributes.put(AttributeUtils.getKey(LuceneDocumentSource.class, 1
@CollectionOfElements 1
regexpClass.index 1
save(); 2
boolean[][] 7
TestHelper.staticPrivateMethod(); 1
STUPID_CHAR['\''] 1
this.imClass 1
r[104]=1; 2
through 1
branchOut=null; 2
registerClass(,lower,posixClasses); 1
entry.klass 1
cache[cacheIndex(c, 1
fileChannel.position(fileChannel.size() 1
term.next=inc; 2
buildObjectArray(IRUBYOBJECT, 1
this.firstNode 3
row.put(, 12
hashc.kindOf 1
if(masterAlarm!=null) 2
begin.equal(otherRange.begin).isTrue() 1
JavaUtil.convertJavaToRuby( 1
2, 2
setupBlockArgs(context, 3
logger 1
r[184]=114; 1
emitter.flushStream(); 1
fis.read(buffer); 1
verifyItemInSet(later,); 4
NAMES[TO_F] 1
response.getOutputStream()); 1
processPrincipal(); 1
mv.visitIincInsn(arg0, 1
arrayc.index 1
ResourceName 5
finalize: 1
this.context.putThreadLocal(, 2
entry.method 1
note.setBody(event.getDescription().getValue()); 1
ESCAPE_REPLACEMENTS['\t'] 1
module.fastSetConstant(bytecodes[ip].s_op0, 1
CharacterClass.toHexDigit(data[i++]); 1
MethodFactory 2
1000000000L, 1
token 3
WritableByteChannel 1
suite.addTest(JavaSupportTestSuite.suite()); 1
defaultEntry=new 1
if(!implicit) 1
push(RubyBignum.newBignum(runtime, 2
javaField.set_static_value(Java.ruby_to_java(self,args[0],Block.NULL_BLOCK)), 1
((RubyArgsFile) 1
createSysErr(IErrno.EWOULDBLOCK, 1
symbolTable.put(name, 1
chomping 2
if(!ch2Meets^inv) 2
method.label(alreadyCreated); 1
converters['G'] 1
PathElementMask 1
RhinoDocument 2
noteMod.setLastModifiedBy(noteMod.getModifies().getLastModifiedBy()); 1
mr.in=wEnd; 1
STRANGE_CHAR['('] 1
HttpServletResponse 10
config.setInput(in); 1
this.maxLength 1
result.getMetaClass().undefineMethod(); 4
getRuntime().getMethodCache().removeMethod(name); 3
table[ClassIndex.BIGNUM][MethodIndex.OP_MINUS] 1
STAMP_TYPES.add(); 2
).setParameter( 2
reportNativeException(e, 3
r[112]=53; 1
test2Val.add(); 1
tc.popRubyClass(); 1
if(current==null){ 3
if(Arity.checkArgumentCount(runtime, 1
Utils.out(result); 2
defineGlobalConstant(, 3
Constructor 11
mv.barrayload(); 1
LibCSocket.sockaddr_un 5
tombstones.add((ItemTombstone) 1
result.defineConstant(,runtime.newFixnum(8)); 2
if(tmp.isNil() 1
ServiceLocator 5
collection.addElement(this); 1
sb.append(rubyClass.getName()).append(); 1
assertTrue(map.values().contains(value)); 1
print(); 77
grow(count 1
item.setClientModifiedDate(item.getClientCreationDate()); 1
st.callMethod(runtime.getCurrentContext(), 1
BlockNode 1
recv.getRuntime().getGlobalVariables().untraceVar(var); 1
buffer.append(position.getFile()).append(':').append(position.getEndLine()).append(' 1
FilterChain 1
b.replace(null); 1
for(CollectionItemDetails 2
fieldsSection.setClient(fieldsControl); 1
fos.write(code); 1
getSession().update(note); 1
if(regs.beg[0] 1
synchronized(sourceAttrs) 1
cache=src=new 1
filer.copyContent( 1
context.getCurrentScope().setArgValues(args, 1
writeAdapter 2
inspect(((NotNode)node).getConditionNode()); 1
tagPrefixes 2
assertTrue(out.indexOf() 1
ConstantField(Field 1
out.append(ve); 1
SPACES_AND_STUFF['\n'] 1
this.owner 1
NULL_OR_LINEBR['\n'] 1
defl 1
module.addMethod(asName 1
conn.close(); 1
RubyKernel.autoload(topSelf, 1
collection.updateTimestamp(); 2
ret.append(consumeInBuffer(BLOCK_SIZE)); 3
if(result 1
NAMES[TO_S] 1
table[ClassIndex.FIXNUM][MethodIndex.OP_TIMES] 1
r[24]=88; 1
StringWriter 5
lineNumber++; 1
JavaGround.init(javaGround); 1
output.writeString(MarshalStream.getPathFromClass(clazz)); 1
DurationFormatUtils.formatDurationHMS(NANOSECONDS.toMillis(duration)))); 2
r[336]=1; 1
area.getDocument().remove(start, 1
upshot 1
if(reg.matcher(node.getTag()).find()) 1
this.arguments 3
classClass.index 1
composeNode(node,itemKey); 1
scanner.getToken(); 21
r[104]=373; 1
context.getOutput().print(context.getFormatHelper().classBodyElementsSeparator()); 1
b 7
parseStack.push(P_BLOCK_SEQUENCE_END); 1
-.74669983289313681354755069217188e-5, 1
b.append(')'); 6
ary.reject_bang(block); 1
assertEquals(expected,YAML.load(s())); 5
floatc.includeModule(runtime.getPrecision()); 1
this.callback 7
JavaField.createJavaFieldClass(runtime, 1
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_FLOOR)); 1
script.append().append('\n'); 4
st_ctime 2
mv.visitTableSwitchInsn(min, 1
R_FLOWNONZERO[']'] 1
instanceNum=instances; 1
@Deprecated 17
table[ClassIndex.ARRAY][MethodIndex.SHIFT] 1
o.mimicsWithoutCheck(method.runtime.runtime); 1
hash.fastASet(ary2.values[i], 1
java.util.Date 3
bs.setRange(Character.toUpperCase(c0),Character.toUpperCase(c)); 1
exceptionClass.setMarshal(EXCEPTION_MARSHAL); 1
db.append(rb.toRdn()); 1
RubySystemCallError 2
if(marks!=null 1
mapping[0].put(,constructObject(value_v)); 1
assertEquals(rubyRE 1
shortHand 2
CHOMPING['5'] 1
ConfigurationTools.createDaemonConfiguration( 1
cmperr(recv, 4
for(Item 4
switch(cmd) 2
classClass.setMetaClass(classClass); 1
MethodCompiler 1
tc.preMproc(); 1
calendar.set(Calendar.DAY_OF_MONTH, 1
table.setRowSelectionAllowed(false); 1
genScore.add(pos); 21
TextBuffer 5
if(!type.hasInternalModuleVariable()) 1
significand 14
en.addActionListener(this); 2
passwd 2
flags.add(en); 2
chars 4
}else{ 5
if((c=data[i])<=255 4
runtime.defineVariable(kcodeGV); 1
scroll.setPreferredSize(new 1
runtime.printError(((RaiseException)je).getException()); 1
Object[].class, 1
ClassWriter 32
parent.setConstant(name, 1
if(DOC_INDIC.matcher(scalar).matches()) 1
result.append((RubyModule)current.getValue()); 1
timeRangeIndex.setEndDate(fromDateToStringNoTimezone(endDate)); 1
assertFalse(entrySet.contains(next1)); 1
NAMES[OP_LT] 1
SelectionKey.OP_READ 1
visitNode(iVisited.getBeginNode()); 2
c=data[i++]; 2
RubyGzipReader 2
if(unicode){ 3
dir.each(block); 1
i+=rLen; 2
this.config.getOutput().close(); 1
links[1] 1
in.next=term.in; 1
if(scanLineBreak().length 1
context.popCatch(); 1
if(cnt<term.minCount) 4
updateFrame(null, 1
RubyZlib.createZlibModule(runtime); 1
if(ems[i].getParameterTypes().length 1
System.arraycopy(bytes,0,newbytes,0,buflen); 4
if(config.isSamplingEnabled()) 1
if(term.eat)i++; 2
assertEquals( 3
assertEquals(getExpectedResult(), 1
WizardDialog 2
if(this.flowLevel 7
R_FLOWNONZERO['\t'] 1
mv.invokevirtual(cg.p(String.class), 1
runtime.newString() 1
MethodCallback(){} 1
8 1
proxyClass.includeModule(interfaceModule); 1
result.y--; 3
writer.addDocument(doc); 2
HEXA_VALUES['5'] 1
mv.visitInsn(DUP_X2); 1
noMethodErrorClass.defineFastMethod()); 1
aMatcher.setPosition(startPos); 1
implementationClass 2
fileMetaClass.defineMethod()); 1
assertFalse(map.keySet().remove()); 1
push(context.getRuntime().getNil()); 1
regOff++; 2
user.getActivationId())}, 1
//		jth.setBackground(background); 1
push(pop().callMethod(context,MethodIndex.EQUALEQUAL, 1
this.optionalArgs 2
YARVMethod 1
buffer.position(buffer.position() 1
this(Channels.newChannel(baseInputStream), 1
this.isWithinDefined 1
getLog().debug( 1
controller.init(new 1
.replaceFirst(), 1
if(expander.isOccurrence(newEventCal, 1
((ArrayNode)argsNode).setLightweight(true); 3
assert(!runtime.getGlobalVariables().get($ 1
arities.put(integerValue, 1
if(o1 2
json.put()); 8
mv.ldc(cg.c(classname)); 1
unsafeReplace(beg,len,nbytes,index,count); 1
shouldFork 1
this.reader 1
newFixnum(line 1
emailIdx.remove(user.getEmail()); 2
mv.visitFieldInsn(GETFIELD, 1
if(st.isDirectory()) 1
System.arraycopy(parentStack, 1
window_bits 1
finName.append(); 1
env.column+=data.length(); 1
ioClass.fastSetConstant(, 3
.1321694535715527192129801723055e-8, 1
BufferedInputStream 1
runtime.getWarnings().warning(ID.ACCESSOR_NOT_INITIALIZED, 1
pathfile.mkdirs(); 1
RenderingConfiguration 5
term.c=c; 2
first=new 1
iLength 2
YARVMachine.Instruction 11
super.clear(); 1
s(), 2
logManagerClient.updateAppender(appenderName, 1
client.getHttpConnectionManager().getParams().setSoTimeout(timeout); 1
interfaces 1
out.add(token(key, 2
ok.setFocusPainted(false); 1
if(runtime.getDebug().isTrue()) 1
printErrorPos(errorStream); 2
writer.expungeDeletes(false); 1
data.append((byte)' 1
if(oo 1
self.getInstanceVariables().fastSetInstanceVariable(bytecodes[ip].s_op0, 1
event.consume(); 5
resp.setHeader(, 1
context.preJavaMethodFull(implementer, 1
lastTarget 1
emptyTokensEnabnled=b; 1
fos 1
minus 1
defaultMacro.init(); 1
this.restArg 4
proc.callInit(NULL_ARRAY, 1
method.invokevirtual(p(Block.class), 1
output.writeInt(shortLength); 2
floatc.defineConstant(, 22
echoSocket.getInputStream())); 1
method.label(noMoreArrayElements); 1
3965973030L, 1
this.bignumClass 1
createSysErr(IErrno.EFBIG, 1
TriageStatusUtil.initialize(ts); 1
modNote.addStamp(modEvent); 1
r[0]=32; 1
list.add(path); 1
tokenbox.addActionListener(this); 1
note.setDisplayName(StringUtils.substring(event.getSummary() 1
s+=add(bits,bs2.block0,0,BLOCK_SIZE-1,false); 1
s=tok.nextToken(); 1
getRuntime().getWarnings().warn(ID.MAY_BE_TOO_BIG, 4
if(n.hasComments()) 1
_upper 2
doSyncAllSources(true); 1
IOUtils.copy(in, 1
type=Term.BACKTRACK_FIND_MIN; 1
if(s==null 1
exactPaths.put(kind,yamlPathResolvers.get(key)); 1
if(counters[term.cntreg]<term.maxCount){ 1
ga.getStatic(JAVA_PROXY_TYPE, 1
.callbackFactory(JavaProxyConstructor.class); 1
jpm.hasSuperImplementation()) 1
current=condition; 1
writer.updateDocument(new 1
recv.getRuntime().getJavaSupport().defineExceptionHandler(name, 1
write(sio.string()); 1
channel.position(channel.position() 2
log.info(event.getMessage()); 2
fastStoreClassVariable(name, 3
b.append(maxCount); 2
sock2.fd 1
suite.addTestSuite(TestCommandlineParser.class); 1
while(Character.isWhitespace(data[i])){ 1
ga.loadArg(superConstructorParameterTypes.length); 1
if(!end 1
pgbl.setConstraints(helper, 1
lineNumber 2
this.capacity 1
while(find(options))c++; 1
IOOutputStream 1
((RubyMatchData.RString)oldMatchData).original 1
Feed 1
cDigest_RMD160.setInternalModuleVariable()); 1
checkCast(mv, 7
altSeparator.freeze(); 1
pattern.reset(); 1
if(event==null) 1
mv.visitLabel(arg0); 1
converted[i] 1
secure(4); 3
fun 4
.getType(InternalJavaProxyHelper.class); 1
uc.setModel(model); 1
pushRubyClass((klass 3
cancel.setOpaque(false); 1
objectAccessor 1
this.sort 7
visitNode(((BlockPassNode) 1
fiber.yieldLock.wait(); 1
Arity.checkArgumentCount(runtime, 9
bs.setCategory(cat); 1
structClass.defineFastMethod()); 9
intern_crc.setAccessible(true); 1
module.defineFastModuleFunction()); 21
CHOMPING['9'] 1
methodCompiler 3
Arrays.sort(valuesAndCriteria, 2
updateContentInternal(content); 1
pgbl.setConstraints(myHead, 1
globalState 1
if(server 1
obj.setData(Number.integer(number)); 1
this.currentLineNumber 1
endReached=true; 1
if(canonical) 3
id=no.intValue(); 2
if(!reported) 1
record.addKeyField(new 2
(flags 2
this.kernelModule 1
promptStyle 1
while((c 1
chownResult 1
tooSmall(arg, 1
type=Term.FIND; 1
this.target 3
format.setForeground(foreground); 1
in=out=this; 1
assertFalse(map.keySet().contains()); 2
v.addElement(new 1
accesibleObject().setAccessible(object.isTrue()); 1
assertFalse(entrySet.contains(next2)); 1
super(runtime, 128
s[base 1
imagesList.add(imf); 1
task 1
for(Element 2
abouter.addActionListener(this); 1
this.anchors.put(node,anchor); 1
result.setRAMBufferSizeMB(OldConfig.RAM_BUF); 1
cal.setTimeInMillis(dump); 1
block.bits=bits; 1
addUnassignedAlias(getRubyCasedName(javaPropertyName),assignedNames,callback); 1
called=true; 1
flags 61
method.label(normalEnd); 1
y 6
entry 21
System.arraycopy(buf,charPos,result,0,length); 2
secondNode.setArgsNode(firstNode); 1
AuthenticationException 1
r[96]=304; 1
this.safeLevel 1
this.allowSimpleKey 19
suite.addTestSuite(TestRegexpTranslator.class); 1
bean.bean 1
leftControl.setLayoutData(new 3
leadingBreaks 2
table[ClassIndex.SYMBOL] 1
switch(type) 1
System.err.println( 17
warn(runtime.getCurrentContext().getPosition(), 1
this.requiredArgCount 2
makeWordChar(term,false,unicode); 1
out.close(); 5
cache=m.cache; 1
setup(); 2
loadedFeatures.remove(runtime.newString(loadName)); 1
initNamedCategory(,Pc); 1
JTextComponent 1
lb.out.type=LOOKBEHIND_CONDITION_OUT; 1
if(System.getProperty() 1
if(Number.class.isAssignableFrom(thisClass)) 1
r[24]=49; 1
table[ClassIndex.ARRAY][MethodIndex.EQUALEQUAL] 1
if(servletHolder 1
this.type=type; 2
type=REPEAT_MIN_MAX; 1
CLIENT.getParams().setAuthenticationPreemptive(true); 1
packageOnly 1
javaModule.defineModuleFunction(, 4
out.write(RubyString.stringToBytes(value)); 2
gbc.fill=GridBagConstraints.BOTH; 1
context.setCurrentVisibility(Visibility.MODULE_FUNCTION); 1
if(FULL_LINEBR[val]) 1
if(addr.sun_path[i] 1
if(m.length(m.TARGET)==0 1
initNamedCategory(,Sc); 1
if(bits1==null) 1
@DiscriminatorValue() 2
serverPropertyService.setServerProperty( 1
connection.setDoInput(true); 1
result.aset(runtime.newFixnum(i), 1
}}; 21
decodeIntUnsignedLittleEndian(enc)); 1
result.append(buffer, 2
NodeCompilerFactory.compileRoot(node, 1
if(stamp.getDisplayAlarmTrigger()==null) 1
Map<String, 8
Assert.assertEquals(eventStamp.getStatus(), 1
Font 8
MemReg(int 1
EMPTY_ARRAY.getClass()); 1
SourcesNode 1
Java 4
parameterValues.put(name, 1
getRuntime().getSelectorTable().table[index][MethodIndex.getIndex((String)name)] 1
OSEnvironmentReaderFromJava5SystemGetenv 1
t++; 1
runtime.getObjectSpace().addFinalizer(obj, 1
this.name=name; 1
registerLinkTarget(result); 2
cal.setTimeInMillis(milliseconds); 1
bs.setRange(Character.toTitleCase(c0),Character.toTitleCase(c)); 1
punct.setChars(#$%&'() 1
COMPILE(else_seq, 1
while(e.hasMoreElements()) 1
isr.close(); 2
this.userFun 1
scale 1
SimpleInterface 11
this(position, 8
List<Recur> 1
ioClass.defineFastMethod()); 2
RubyEnumerable.createEnumerableModule(this); 1
//		jth.setReorderingAllowed(false); 1
this.elseNode 1
tzMap.put(vtz.getTimeZoneId().getValue(), 1
enterCall(); 20
Holder 1
if(anchor 1
this.entityFactory 3
schemeRegistry.register(new 1
rl.unlock(); 26
updateItemStmt 1
Entry[] 3
TriageStatusQueryContext 7
DEFAULT_TAG_PREFIXES_1_0 1
DEFAULT_TAG_PREFIXES_1_1 1
this.concreteProxyCallback 1
list.add(name); 3
resetMatchData(); 11
if(ch1Meets^inv) 2
this.posix 1
context.putThreadLocal(, 1
((RubyObject)obj).checkFrozen(); 1
rubyArgs[1] 2
if(profile.allowBuiltin(BUILTIN_LIBRARIES[i])) 1
mv.visitMethodInsn(INVOKESPECIAL, 6
RubyStringIO.createStringIOClass(runtime); 1
ArrayList<Integer> 1
untilDateCalendar.set(java.util.Calendar.MINUTE, 1
DUMMY_VALUE_USED(); 1
valuesAndCriteria[i][0] 2
counters[cntreg]=++cntvalue; 1
gzwriter.defineFastMethod(, 6
makeAndStoreDummyCollection(testHelper.getHomeCollection()); 2
assertEquals(9, 3
if(fract_s 1
this.tOffset=offset; 1
clazzInit.invokeStatic(JAVA_LANG_CLASS_TYPE, 1
if(i>=end) 5
createSysErr(IErrno.EINTR, 1
init__resolver_scanner_eof_actions_0( 1
createSysErr(IErrno.ENOTTY, 1
parameterElement.addAttribute(, 2
Instantiator 1
transformer.setParameter( 2
WrappedMethod 10
if(cnt<=minCnt) 2
errno 1
ary.uniq_bang(); 1
UNONSPACE.setSpace(true); 1
ic.setArity(Arity.optional()); 4
if(c.isNil()) 1
mv.end(); 5
initNamedBlock(name,first,last); 1
slashCount++; 2
ic.setSingleton(true); 10
addItemToCollectionInternal(item, 1
if(text 1
next.prev 1
super(config); 4
cnt-=back; 1
mv.anewarray(type); 1
frame, 1
recv.getRuntime().getObjectSpace().removeFinalizers(RubyNumeric.fix2long(args[0].id())); 1
(node 1
(m_strCmdParam 2
condition.memreg=memreg; 1
to_add.addMethod(name, 1
titlelab 1
this.fixnumClass 1
mapDesignDocument(doc); 1
Object[] 20
INVOCATION_HANDLER_TYPE, 1
IS_ESCAPE_REPLACEMENT['v'] 1
callbackFactory.getFastOptMethod()); 4
while(!this.env.needMoreEvents()) 1
childDetails.remove(cid); 1
searcher.search(q, 1
if(top!=null) 1
push(pop().callMethod(context,,other)); 1
GlobalVariable 10
append(, 2
modifyOldSeries(oldSeries, 1
applicator.applyRecord(record); 7
Dnum 1
top.on=actual; 16
out.type=PLOOKBEHIND_OUT; 1
if(sname.getByteList().length() 1
bytecodes[we].l_op1 1
inBuffer.position(0); 1
System.arraycopy(value,0,newbytes,buflen,vlen); 1
context.preTrace(); 1
getSession().update(prop); 1
loginlab 1
assertTrue(!rubyObject.isTaint()); 1
switch(columnIndex){ 1
serializer.setNamespaces(true); 1
getPrintStream().flush(); 1
if(failNext!=null){ 11
warning(runtime.getCurrentContext().getPosition(), 1
last.next 3
this.optArgs 1
r[184]=75; 1
push(bytecodes[ip].o_op0.callMethod(context, 1
Arrays.sort(fonts); 2
JOptionPane.showMessageDialog(frame, 2
addPage(layoutPage); 1
dest.append(fName); 2
mv.putstatic(classname, 2
child.setOwner(collection.getOwner()); 1
output.close(); 1
args.add(str.substring(contentStart)); 1
obj.setData(m); 1
passwordRecoveryIdx.remove(passwordRecovery.getKey()); 1
lastCallType 1
if(inRange 1
if(s.equals()){ 5
if(mixed) 1
digits[i] 2
if(events.size()==0) 2
S4['\t'] 1
difference_sign 2
mapping[0] 1
buf.write('0'); 2
result.defineAnnotatedMethods(RubyMath.class); 1
extensionsToSearch 4
ready=true; 1
r[32]=24; 1
gd.heightHint 2
proxies.put(key, 1
visitNode(iVisited.getFirstNode()); 2
DataInput 1
table[ClassIndex.ARRAY][MethodIndex.INSPECT] 1
initNamedCategory(,Lm); 1
pat++; 4
if(report 1
query 2
iVisited.getArgsNode().accept(this); 3
if(!p.isSingleton()) 1
byteList.append(read); 1
push(runtime.newBoolean(receiverValue 1
response.setStatus(HttpServletResponse.SC_OK); 3
System.out.println(1*10+ourTurn); 1
securityManager.getSecurityContext()); 1
self.setInstanceVariable(,self.getRuntime().newFixnum(1))); 1
if(shouldStart){ 1
Bitset 27
print('$'); 2
if(cmds[0].equals(CMD_TERM)) 1
this.holders 1
internalDeleteSafe(entry.key); 2
pushScope(block.getDynamicScope().cloneScope()); 1
oo.setInstanceVariable( 1
runtime.getObject().dispatcher 1
assertNull(getVisitor().visitPostExeNode(new 1
bubbleUp(a, 1
Region 1
resourceInstaller.copy( 2
this.env.canonical 1
token.append(c); 5
getSyncEngine().getNotify().addObjectNotify(nSrcID, 1
doc.add(text(fieldName, 1
parametersPage.setParameters(appenderConfig.getParameters()); 1
initNamedCategory(,Pd); 1
record.addField(generateMissingField(new 6
Configuration 2
Assert.assertEquals( 18
CState 5
env.setYamlVersion(new 1
exceptionEvent.getAlarms().remove(displayAlarm); 1
ICalendarUtils.setUid(icalUid, 2
getMethodAdapter().ldc(newName); 1
javaClass.setupProxy(proxyClass); 2
XhtmlSubscriptionFormat 1
if(last<first) 1
flater.setLevel(level); 1
Index.put(, 10
inspect(andNode.getSecondNode()); 1
pgbc.gridy=0; 1
newClass.defineMethod(, 1
sb.append(klazz 1
request.setContentType(); 1
print(matcher.replaceAll( 1
b.append(weight); 2
0x1 1
openFile.setPipeStream(openFile.getMainStream()); 1
Long 6
if(this.when 4
DBAdapter 4
appendSubstitution(mr,dest); 1
PageCriteria<SortType> 1
floatc.index 2
append 1
if(style 2
if(b 2
notifyAll(); 5
getRuntime().newArgumentError(args.length, 1
exArgs[1] 1
if(min_s 1
this.index 7
dynamicScope.cloneScope()); 1
result.append(RubyString.bytesToString(bytes)); 1
this.staticAssignedNames 2
Hashtable 2
INVOCATION_HANDLER_TYPE); 3
CLIENT.getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES); 1
body 6
savedNestedCallDepth 1
code.run(); 2
dec_loop: 1
if(p==end)throw 4
this.lookaheads=lookaheads; 1
ELSE 1
leadingSpace 1
System.arraycopy(value,0,bytes,0,vlen); 1
b.append(','); 3
str_pos 2
m_oSyncEngine.exitSync(); 1
implicit 3
this.anonymous 2
((RubyArray) 1
rb_sys_fail(null); 1
ObjectFactory.createInteger(1) 1
while(index 4
moveTally.get(i*3+j).score 3
addMissingIntegerField(FIELD_STATUS, 1
buffer.put((byte)c); 1
if(timezoneh_s.startsWith()) 1
readlineM.defineModuleFunction(, 1
if(bs==null) 1
runtime.getJavaSupport().putJavaObjectIntoCache(wrapper); 1
visitNode(unwrapNewlineNode(iVisited.getBody())); 1
Set<CallAdapter> 3
structClass.defineMethod()); 5
+ 201
table[ClassIndex.HASH][MethodIndex.ASET] 1
this.couch 1
t3.start(); 1
this.mask=mask; 1
map.putAll(newMap); 1
btn.setBackground(this.getContentPane().getBackground()); 1
markerValue.append(c); 2
private 3237
integer.includeModule(runtime.getModule()); 1
(value 1
newMethod.arraylength(); 4
config.setEnvironment(context.getEnv()); 1
gateway 1
RubyIconv.createIconv(runtime); 1
setFirst=true; 1
contentService.removeCollection((CollectionItem)item); 1
matcher.appendReplacement( 1
this.intern.update(b); 4
readable 2
Analyzer 1
dt.setTime(noteItem.getReminderTime().getTime()); 1
suite.addTestSuite(ByteListTest.class); 1
getSyncEngine().exitSync(); 1
if(ls.size() 1
mv.aload(DISPATCHER_ARGS_INDEX); 3
symbol.defineFastMethod()); 1
context.assertLoopbackClient(); 1
if(ix 4
if(is 1
init(null); 1
retry: 1
noteMod.setLastModifiedBy(masterNote.getLastModifiedBy()); 1
Connection 1
transient 2
if(io 4
-.118085825338754669696317518016e-8, 1
for(Entry 1
_again: 1
swap(a, 6
if(isTaint()) 1
table[ClassIndex.BIGNUM][MethodIndex.TO_I] 1
f 12
Frame 16
package 820
r[104]=57; 1
post.setRequestEntity(new 1
tag 15
t.append('.'); 1
properties.load(in); 1
if(!currentNode.getTag().equals(nodeCheck)) 1
arr.append((IRubyObject)oo); 1
Assert.assertTrue(es.getModifiedDate().after(es.getStartDate())); 1
this.what 4
labels[i] 1
tab 1
table[ClassIndex.MODULE][MethodIndex.OP_EQQ] 1
cachedMethod 2
values[begin] 1
runtime.getCurrentContext().setLastExitStatus(lastExitStatus); 1
table.setAutoCreateRowSorter(false);//no 1
//		jth.setFont(font); 1
userService.createUser(overlord); 1
ModeFlags 2
unmarshalStream.registerLinkTarget(exc); 2
enm.callMethod(context, 1
out=this; 2
assertTrue(map.values().remove(new 1
e.key 1
in.next=la; 1
InstanceMethodInvoker(String 1
mychars=new 2
javaClass.lockProxy(); 3
sharedArray.realLength 1
classes[0] 1
HasPublicMethod 1
plScore 1
profile 1
if(!hasMore) 2
checkOffset(args,offset,length,ERR_MALFORMED_NUM); 1
multicaster.add( 4
CHMOD_API_AVAILABLE 1
collection 7
sb.append(peek(length)); 1
b.out=term.out; 1
TreeInfo(){} 1
assertTrue(RubyNil.op_and(rubyNil, 1
parseStack.push(P_FLOW_CONTENT); 1
current=lb; 1
Message 1
digester.parse(partitionXml); 1
tmp=greedy? 4
symbol.mimicsWithoutCheck(origin); 1
cDigest_SHA1.setInternalModuleVariable()); 1
beginLong 1
indicator.append(preparedAnchor.getBytes()); 1
setVisibility(args, 3
fileCreated 1
p++; 2
hex=(hex<<4)+CharacterClass.toHexDigit(d); 1
switch(mode){ 1
table[ClassIndex.STRING][MethodIndex.INSPECT] 1
url.append(request.getContextPath()); 1
u.prepareNext(); 1
if(!(type 1
cGen.defineMethod(,IRubyObject.class)); 1
//		jth.setResizingAllowed(false); 1
this.memregCount=memregCount; 1
s.append(end); 1
table[ClassIndex.FIXNUM][MethodIndex.OP_PLUS] 1
printCallArguments(iVisited.getArgsNode(), 3
((RubyProc)proc).call(new 1
context.postExecuteUnder(); 1
retryForModule 1
-.115307163413123283380823284791e-4, 1
entry=next; 1
newStruct.inherit(superClass); 1
visitIter(iVisited.childNodes().iterator()); 2
containingClass.addMethod(mname, 1
output.write(digits[digits.length 2
this.path 4
result.append(get(runtime, 2
layout.numColumns 1
getSquareEffect(result, 1
compiledScript.callMethod(recv.getRuntime().getCurrentContext(), 4
out.write(buffer, 1
lo 1
ll 2
runtime.getModule().extend_object(fileClass); 1
System.arraycopy(bytes,newpos,bytes,pos,buflen-newpos); 1
Java.ruby_to_java(self,args[0],Block.NULL_BLOCK)), 1
this.result 4
ll.add(node); 1
obj.mimicsWithoutCheck(this.decimal); 3
argArray[1] 1
retValues.add(new 1
((ListNode) 1
this.databaseName 2
newClass.defineMethod()); 4
i+=jump; 2
createSysErr(IErrno.ENODEV, 1
k.i._tmp 1
splice(index, 1
r[64]=208; 1
listChanged 2
LogFactory.getLog(DisplayAlarmGenerator.class); 1
assertTrue(runtime.getObject().isInstance(rubyObject)); 1
RubyBoolean.createTrueClass(this); 1
inserted.begin 1
clazzInit.push(md.isImplemented()); 1
if(!isOpen()) 2
rb_cBasicSocket.getMetaClass().defineFastMethod(, 1
getSession().update(content); 1
Bitset.unify(space,term); 1
super.removeItem(item); 3
scriptNode 2
CallNode 1
super.addURL(url); 1
if(YAML.ESCAPE_REPLACEMENTS.containsKey(new 1
super(name,type); 2
STUPID_CHAR['\r'] 1
encode.order(ByteOrder.LITTLE_ENDIAN); 3
mv.ifnonnull(alreadyCreated); 1
list[0] 1
this.port 1
if(status 8
this.bodyNode 12
getRuntime().getGlobalVariables().set(, 2
parseStack.push(P_DOCUMENT_END); 2
for(Iterator<Component> 4
realArgs[args.length] 2
printException(runtime, 2
realloc(alen 1
res 2
if(!file.exists()) 1
if(tok.hasMore()){ 1
ret 11
gzreader.defineFastMethod(, 2
if(about==null){ 1
this.possibleSimpleKeys.remove(new 1
OPTIONPREFIX 3
writeLine(new 2
this.iterNode 9
cwd 4
LogFactory.getLog(NoteGenerator.class); 1
r[224]=55; 1
InfoServlet(final 1
exporter.setService(searcher); 1
if((memregCount=regex.memregs)>0){ 1
newTime.cal.setTime(new 2
ioe.printStackTrace(); 3
pos.yellow 84
if(choices[i].isInstance(first)) 1
method.iconst_1(); 2
recv.getRuntime().getGlobalVariables().get(,args[0]); 1
topSelf.getSingletonClass().defineFastMethod(, 1
cal.set(Calendar.MILLISECOND, 1
startkey))); 1
ModificationUid 1
r[280]=93; 1
indent 11
ttype=POS_LOOKBEHIND; 1
(this.buffer.bytes[this.pointer+4] 1
CompiledBlockCallback 4
this.add(cancel); 1
debugs(); 9
swap(); 1
doNotReverseLookupEnabled 1
if(matches){ 1
ngramcounts 3
printNewlineAndIndentation(); 26
List<RescueInfo> 1
rb_cSocket.includeModule(rb_mConstants); 1
suffix 6
map.put(line.substring(0, 1
latestTimeUpdated 1
if(obj 3
globPattern.setMatchedFiles(matchingFiles); 2
if(i==end) 5
bs.add(negatigeClass); 1
docs[j].add(token(Config.ID, 1
abouter.setBackground(background); 1
1000L, 1
pScore 1
threadContext.postBsfApply(); 1
parseStack.push(P_BLOCK_SEQUENCE_ENTRY); 3
zstream.undefineMethod(); 1
getUser().getUid() 1
gzreader.getMetaClass().defineMethod(, 1
this.links 1
method.aload(THREADCONTEXT_INDEX); 1
frameIndex--; 3
System.err.println(new 1
this.status 4
if(mixedBreaksSpaces 1
method.mimicsWithoutCheck(origin); 2
segments[i]); 2
(bytes[i] 2
lastValidOffset 11
text.addModifyListener(this); 1
note.getModifies().addModification(note); 2
mv.invokevirtual(cg.p(RubyRegexp.class), 3
io2Append.append((char)hex_table[lCurChar 2
HEXA_VALUES['e'] 1
cp); 1
synchronized(mutex) 4
RubyEnumerable.callEach(runtime, 2
result.append(runtime.newFixnum(lCurChar)); 1
this.files 1
debugs( 4
applyPattern(pattern); 1
names.add(methodName.asSymbol()); 1
Collections.sort(sorted); 1
this.bits=bits=new 1
if(i>end) 1
if(i==wEnd 1
ServerPropertyDao 1
pgbc.insets=new 1
setAdlerRef(this.adler); 2
proxyClass.getMetaClass().defineFastMethod(, 1
if(isJump(instruction)) 1
createSysErr(IErrno.ENOLCK, 1
inBuffer.clear(); 1
gbl.setConstraints(tokenlab, 1
this.fileno 4
progressService.busyCursorWhile(new 2
loadFactor 1
args[1].callMethod(getRuntime().getCurrentContext(),MethodIndex.OP_LSHIFT, 1
mixed 2
env.expectStreamStart(); 1
case 1925
newMethod.invokestatic(cg.p(Arity.class), 1
strio.close(); 1
timeClass.defineFastMethod(, 11
if(events.isEmpty()) 1
channel.position(channel.size() 1
TimeZone 12
assertSame(o1, 1
success.add(args[i]); 1
if(!(currentIndex 2
b.replace(new 1
context.evaluateString(scope, 2
d.callMethod(context,, 1
while(read 1
other.next 2
r[112]=57; 1
jitCallConfig.post(context); 1
this.tokens.add(tok); 10
mid 1
if(sampleOff<0 2
breakLoop: 1
Ticket 1
ic.setArgumentTypes(InvocationCallback.OPTIONAL_ARGS); 4
message.setForeground(Color.RED); 1
descriptor.write(ByteBuffer.wrap(buf.unsafeBytes(), 1
uselessLoop: 1
this.key 3
ADD_INSN(ret, 11
output.write(isTrue() 1
matchDataClass.kindOf 1
NKFCharset 1
overlord.setPassword(); 2
if(s.indexOf(' 1
level--; 1
this.column 3
hash.preIter(); 1
} 20745
print(((ArgumentNode) 2
parseStack.push(P_FLOW_MAPPING_END); 1
v.copyInto(files); 1
io2Append.append(lPadding); 3
print(']'); 2
result.defineConstant(,runtime.newFixnum(11)); 2
monitor.beginTask(, 2
values[0] 1
content.updateTimestamp(); 1
sortedMap.put(exceptionStamp.getRecurrenceId().toString(), 1
context.getCurrentFrame().duplicate(), 3
cQueue.defineAlias(); 5
pgbl.setConstraints(abouter, 1
makeCalendarContentDisposition(calendar.getItem())); 1
jarMatcher.find(); 1
result.defineConstant(,runtime.newFixnum(0)); 5
RubyString.newString(getRuntime(),new 1
this.representedObjects 1
storage.setRootUid(user.getUsername(), 1
actual=(top=actual).on; 16
rhino.close(); 3
if(copy 1
moveTally.get(5*3+1).score 1
b.in=null; 1
if(Arity.checkArgumentCount(getRuntime(), 3
((RubyHash) 1
values[p1++] 1
params[i] 1
setBackTrace(19); 1
HashSet<Ticket> 1
mv.voidreturn(); 3
exceptionClass.defineMethod()); 1
this.allowBlockPlain 1
if(type>=Term.FIRST_TRANSPARENT 1
objClass 5
config.getOutput().print(c); 1
javaField.set_value(self.fastGetInstanceVariable(), 1
dialects.add(); 3
count+=c; 2
((List) 1
JarInputStream 1
cnt--; 4
.setDoubleValue(Conversion.convert(args[0], 1
verifyItemInSet(now,); 1
cleanup(); 1
marshalStream.dumpVariables(object.getVariableList()); 1
if(note.getModifies()!=null 1
s.append(); 9
ret[0] 6
str.append(arguments[i].getClass().getName()); 1
context.setResourceBase(resourceBase); 1
assertEquals(HttpServletResponse.SC_FORBIDDEN, 1
this.user 3
RETURN 1
traceLines.add(RubyString.newString(interpreter, 1
result.append(op_aref(args[i])); 1
((NoteItem) 1
this.usec 1
copy.setIcalUid(null); 1
interpreter 1
internalPut(JavaUtil.convertJavaToRuby(getRuntime(), 1
iterTable 1
hasBlockArg 1
chunks.append(whitespaces); 2
pattern 6
if(limits[LIMITS_PARSE_RESULT_INDEX]==LIMITS_OK){ 1
frame.setSelf(self); 4
iVisited.getConditionNode().accept(this); 1
visitNode(n.getElseBody()); 1
lines.append(this.when).append(); 4
calendar.get(Calendar.SECOND) 1
c=data[++p]; 4
this.threadService 1
Set<CollectionItem> 1
suite.addTestSuite(TestObjectSpace.class); 1
method.dup_x1(); 2
log.error(reason, 6
r[32]=1; 1
-.137122090210436601953460514121e-7, 1
System.arraycopy(moreBytes, 2
fileno++; 1
Assert.assertEquals(10, 1
entrySection.setClient(entryControl); 1
string.defineFastMethod(,IRubyObject.class)); 1
validHash 2
instanceNames 2
if(prec2 1
other.channel 1
forward(); 39
RubyString.createStringClass(this); 1
rs.close(); 1
editButton.setLayoutData(new 1
Arrays.sort(dbnames); 3
if(!this.eof) 1
.1002418816804109126136995722837e-15, 1
staticScope.setModule(type); 1
NodeCompilerFactory.getCompiler(constDeclNode.getValueNode()).compile(constDeclNode.getValueNode(), 3
if(socketChannel 1
ArrayList<Node> 1
recv.getRuntime().setTraceFunction((RubyProc) 1
write('['); 1
lastRid 2
if(addend==null){ 2
context.invokeDynamic(, 1
expected.getChildCount() 1
-.547013118875433106490125085271e-13, 1
retval.append( 1
json 1
interfaceNames); 1
LayoutEditorPage 1
output.writeString(module.name().toString()); 1
config.getPrintQuotesInString().set(true); 1
raiseArgumentError(args, 1
scopeStarts.push(start); 1
this.skip=1; 1
StringRefHandler(String 1
Assert.assertTrue( 3
implicit[1] 1
result.append(converter.decode(runtime, 1
RenditionMimeType 4
memreg=no; 1
javaUtils.defineFastModuleFunction(, 7
cnt=repeat(data,i,end,term.target); 1
assert 138
finished 3
catch(ClassNotFoundException 1
build.append(sep).append(unscaled.substring(index,next)); 1
.22903737939027447988040184378983e-12, 1
mv.label(arityOk); 1
flagsChanged=false; 1
intern_adler.setAccessible(true); 1
mv.getstatic(classname, 2
returnConverter 1
this.bindingClass 1
'0', 22
args[1] 2
}// 3
if(prev>=0){ 1
printRealm(posixClasses,); 1
unmarshalStream.registerLinkTarget(result); 1
inspect(callNode.getReceiverNode()); 1
value 59
if(arr[p1]!=arr[p2]){ 1
subRecords 2
definePrivateMethod(name, 1
if(!hasMatch){ 1
defl.getMetaClass().defineFastMethod()); 1
collection.addStamp(ccs); 1
term.type=START; 1
tokenlab 1
helper 1
bytecodes[we].o_op0 1
if(!poped) 7
fixnumCache[(int) 1
ensure(index+1,false); 1
if(links[i].getActionCommand().equals()) 1
table[ClassIndex.ARRAY][MethodIndex.TO_A] 1
if(inRange) 6
regexString 4
siteList 1
getSingletonClass().defineFastMethod(name, 2
table[ClassIndex.BIGNUM] 1
checkForDuplicateUid(collection); 1
assertTrue(list 1
) 83
NULL_OR_LINEBR['\0'] 1
while(pat<pend) 1
topgbc.fill 1
RubyBoolean.createFalseClass(this); 1
buffer.setLength(lastIndex); 1
if(bs1==null) 1
b[offset 2
str.append(); 3
if(opt_p 1
this.token 4
Utils.LOG.debug( 1
iox 2
CHOMPING['4'] 1
EntityFactory 2
Arity.checkArgumentCount(getRuntime(), 21
table[ClassIndex.STRING][MethodIndex.TO_STR] 1
StaticMethodInvoker 1
gateway.close(); 1
console.setVisible(true); 1
createSinkContentHandler( 1
table[ClassIndex.HASH][MethodIndex.INSPECT] 1
mv.arraystore(); 2
this.tokens 3
@Journal 1
parseStack.push(P_DOCUMENT_START); 1
infl.getInflater().end(); 1
es.setStartDate(new 1
this.defaultYamlVersion[0] 1
this.resourceLoader 1
printRealm(unicodeCategories,); 1
position 1
this.inSingleton 1
assertEquals(,c.getScriptArguments()[0]); 1
obj.mimicsWithoutCheck(objWrap); 1
FRAME_AWARE_METHODS.add(); 10
methodNameMap.put(); 6
arguments.add(new 1
hashc.includeModule(runtime.getEnumerable()); 1
isRecurring 1
text.setBackground(new 2
Find(Term 1
table[ClassIndex.ARRAY][MethodIndex.HASH] 1
ensure(4,false); 3
parseStack.push(P_FLOW_SEQUENCE_END); 1
method.label(tryBegin); 1
r[72]=53; 1
if(.equals(key.getTag())) 1
if(vars[MEMREG_COUNT]<=id)vars[MEMREG_COUNT]=id+1; 1
newKind 4
r[40]=4; 1
b.out=b; 6
FRENCH 2
JavaMethod.createJavaMethodClass(runtime, 1
array[i] 1
backtrace.append(backtrace.getRuntime().newString(buf.toString())); 1
super(value); 1
inspect(((SValueNode)node).getValue()); 1
add 3
GREEDY_ACCUM: 1
if(data 6
if(date 2
match 5
b.in=term.in; 2
catchIndex--; 1
if(format.length() 2
this.eat=false; 1
Thread 7
ex.initCause(e); 5
deleteView(viewname, 2
.createDaemonConfiguration( 2
setValue(anchor); 1
printErr 1
javaUtils.defineFastModuleFunction(,IRubyObject.class)); 3
parserSupport.getResult().addComment(new 2
if(copy) 1
iseqval.args_argc 1
name.setText(msg.getString(+imf.getFile().getAbsolutePath()); 1
NGramEntry 12
table.setDoubleBuffered(true); 1
masterNote.addStamp(masterEvent); 1
if(!isLarge) 1
composite.setLayout(layout); 5
printRealm(unicodeBlocks,); 1
if(target.isNil()) 1
this.config 6
method.go_to(done); 2
compiledPattern 1
assertEqualsNoSeparators( 8
setPageComplete(validatePage()); 3
this.add(tokenlab); 1
removeCollection((CollectionItem) 3
if(!args[2].isNil()) 1
httpServletResponse.sendRedirect(url); 1
printRegexpOptions(iVisited.getOptions()); 2
expectNode(false,true,false,false); 3
(!superset.isWritable() 1
((RubyMatchData)result).use(); 1
NAMESPACE); 3
if(printIterVarNode(iVisited)) 1
System.arraycopy(argumentTypes, 1
b64_xtable[(int)b64_table[i]] 1
oldMatchData.matcher 1
minCount=back.minCount=min; 4
JavaProxyConstructor[] 1
b.set(1, 2
in.defaultReadObject(); 6
unregisterIOHandler(handler.getFileno()); 1
super(PREFIX_NOTE, 1
null); 1
ASTInterpreter.eval(runtime, 1
tmp 16
switch(lockMode) 1
sourcesPage.setPartitionName(partitionName); 1
if(target==null 1
result.defineModuleFunction(, 2
completeDate 1
Set<VTimeZone> 1
ADD_INSN1(ret, 8
(calendar.get(Calendar.YEAR)-1900) 1
floatc.getSingletonClass().undefineMethod(); 3
comparableModule.defineFastMethod(, 6
alloc(); 5
enmr.defineAnnotatedMethod(RubyEnumerator.class, 2
nilName 1
visitNode(iVisited.getConditionNode()); 2
primitive_match(types[j],arg_types.get(j)) 1
dateTime.mimicsWithoutCheck(origin); 1
modParents.append(p.getUid() 1
server.stop(); 2
errorStream.print(mesg); 1
mr.in=mr.tmp; 1
panel 1
about 1
scroll 1
runtimeError 1
accessibleObject().setAccessible(true); 1
result.op_aset(input.unmarshalObject(), 1
hash.put(key1, 3
title.setActionCommand(); 1
pos.size 129
stream.callMethod(context,, 1
assertEquals(ReWriteVisitor.unescapeChar('\t'), 1
module.definePublicModuleFunction()); 5
test1Val.add(new 1
lexicalMacro.init(); 1
this(DEFAULT_SIZE); 1
pushFrame(); 5
visitNode(iVisited.getExpressionNode()); 1
this.loadFactor 3
range 2
method.anewarray(cg.p(IRubyObject.class)); 1
log.setConnectionConfig(uc); 1
compactTimezones(eventStamp); 1
c[cIndex] 1
inspect(dotNode.getEndNode()); 1
addMethod(methods, 1
longBranch.branch(this); 2
children[ 1
result.add(runtime.newString(contents[i])); 2
newStruct 2
write('}'); 1
if(scanner.peekToken() 17
mv.invokevirtual(typePath, 1
this.browseModificationView 1
print(config.getFormatHelper().beforeAssignment()); 4
ArrayCallback 1
classLoader 1
separator.freeze(); 1
context.postTrace(); 1
Hibernate.initialize(note.getModifies()); 1
this.offset 1
buf 19
getWriteStream().fseek(offset, 1
Serializer 2
if(env.indent 1
usernameIdx.remove(username); 1
newBranchStarted=true; 1
if(!newStartDate.equals(lastRecurrenceId)) 1
theFile.createNewFile(); 1
r[48]=28; 1
super.createFormContent(managedForm); 2
NULL_BL_T_LINEBR[' 1
System.arraycopy(nargs, 1
while(!NULL_OR_LINEBR[peek()]) 4
KEYWORD 2
this.outChannel 1
subJavaClass 1
m_strCmdParam 2
this.database 1
switch(opt) 1
set.add(s2); 1
positive=b; 1
newTable[lastIdx] 2
mv.visitInsn(ISUB); 1
javaArrayUtils.defineFastModuleFunction(, 2
hasMultipleArgsHead, 2
rb_cIPSocket.defineFastMethod()); 2
dup.bytes 1
r[40]=136; 1
startNewBranch(); 1
cal.setTimeInMillis(seconds 1
messageSource.getMessage(MSG_ACTIVATION_TEXT, 1
r[0]=0; 8
mv.visitMethodInsn(INVOKEINTERFACE, 1
result.setConstant(,RubyNumeric.int2fix(runtime,256)); 1
JavaClass.createJavaClassClass(runtime, 1
4, 1
.getType(InternalJavaProxy.class); 1
Rescue.init(rescue); 1
mv.dup2_x1(); 1
rubyModule 1
getCharBytes(i, 6
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_DOWN)); 1
lCurLineLength++; 1
1.0e0, 1
for(Iterator<CallAdapter> 1
config.getOutput().println(); 2
pushRubyClass(implementationClass); 2
table[ClassIndex.ARRAY][MethodIndex.LENGTH] 1
s-=count(targetbits,0,BLOCK_SIZE-1); 3
executeCmd(args); 1
.numDocs(), 1
setQName(qname); 3
1373503546L, 1
masterCal.getComponents().addAll(sortedMap.values()); 1
this.storage 1
board[i][j] 1
rubyArgs[i] 1
Frame[] 3
c=(char)((CharacterClass.toHexDigit(data[i++])<<12)+ 1
if(this.allowSimpleKey) 1
ss.scanUntil(new 1
s++; 7
this.fiber 1
config.getCallDepth().disableCallDepth(); 1
element.append(match,dest); 1
extends 2
label.setLayoutData(gd); 2
if(dateProp.getDates().getTimeZone()!=null) 1
undef 1
if(i<end){ 5
this.caseNode 1
namedClasses.put(name,bs); 1
IOHandler 2
this.lastAnchorId 2
storedFixnums.add(o2); 1
if(((RubyString)str).getByteList().length() 1
c[6] 2
if((flags&IGNORE_SPACES)>0){ 1
recv.getRuntime().secure(4); 1
classpath.setKey(); 1
Keyword 1
super.tearDown(); 9
this.servletHolder 2
if(tag.startsWith() 1
handler.call(new 1
maxLength 3
buffer.flip(); 21
visitNewlineInParentheses(n.getValueNode()); 1
module.fastSetConstant(internedName, 2
result.addD(getD(i)); 1
fileClass.defineMethod()); 1
specialCharacters 1
FopTools.EXTRACT_EMBEDFONTINFO_FUNCTION 1
if(collection==null) 1
addReference(project, 2
limits[1]=-1; 1
if(groupNames.contains(new 1
toRemove.add(modToMove); 1
supportedLanguages.add(lang); 1
buffer[i++] 1
if(log.getAnswer()>0){ 2
super(source, 2
this.composer 1
if(stack[stackTop--].isTrue()) 1
pos_sign 2
printOut 1
GUIWindow 1
RhoConf.getInstance().setPropertyByName(, 1
System.out.print(args[i]); 1
direct 2
Enumeration 6
replace(pattern.matcher(text,length),substitution,tb); 1
this.title 1
methodCompiler.method.go_to(end); 2
writer.write(root); 1
cConditionVariable.defineFastMethod()); 2
ti.setData(value); 1
n 17
proxyClass.makeMetaClass(superClass.getMetaClass()); 1
this.identifier 2
objectSpaceModule.defineModuleFunction(, 2
newTable[k] 2
m_pInstance 3
compile(wc,wcClass,defaultSpecials,flags); 1
children 1
openFile.setMode(modes.getOpenFileFlags()); 1
includedModule.includeModule(getSuperClass()); 2
Base.init(base); 1
obj.callMethod(getRuntime().getCurrentContext(), 1
this.isSingleton 1
matcher=rm.pattern.matcher(); 1
if(ev.getStyle() 3
this.locator 1
json.put(, 56
canWrite.createNewFile(); 2
List<MethodInfo> 1
ServletContext 2
parseStack.push(P_FLOW_SEQUENCE_ENTRY); 3
regexp.mimicsWithoutCheck(origin); 1
r[16]=7; 1
path 14
bytes[pos] 2
DateListProperty 1
digits 3
.460616130896313036969379968464e-6, 1
str.append('\n'); 1
ttype=NEG_LOOKAHEAD; 1
Class<?>[] 1
ret[2] 5
bs1[i]=true; 1
if((spaces 1
while(this.indent 1
assertEquals(0x00, 2
m.shared=true; 1
checkOffset(args,offset,length,ERR_MALFORMED_DOT_NUM); 1
methodArgs 5
getRuntime().getJavaSupport().getObjectProxyCache().put(getObject(), 1
initNamedCategory(,new 7
fr.setFocusable(false); 2
mv.visitFieldInsn(PUTFIELD, 1
while(n 1
assertEquals(3, 16
RUBY1_9_MAJOR_VERSION 1
TicketAuthenticationToken) 1
@UniqueConstraint(columnNames={})}) 1
TextAttribute 4
xdigit.setRange('A','F'); 1
visitNode(firstChild(iVisited.getArgsNode())); 1
if(filename.indexOf() 1
parseStack.push(P_BLOCK_NODE_OR_INDENTLESS_SEQUENCE); 2
assertThat(count, 1
m1 2
MessageDialog.openInformation(getShell(), 1
m3 2
this.nextCase 1
table[ClassIndex.SYMBOL][MethodIndex.HASH] 1
this.datasource 1
assertNull(c.getScriptFileName()); 1
reset(); 3
subtract(bs,!inverse); 1
inspector.inspect(node); 2
result.append(arg); 1
makeTree(t,data,vars,flags,la,iterators,groupNames); 1
someEmptyContentDirectory 1
srcBegin--; 1
yamlPathResolvers.put(y,tag); 1
print( 2
symbolClass.dispatcher 1
methodMap.put(name,methodsWithName); 1
((Script)clazz.newInstance()).load(runtime.getCurrentContext(), 1
environmentVariableMap, 1
getMethodAdapter().ldc(name); 3
md 1
runtime.setStructClass(structClass); 1
eval()); 3
namesInitialized=true; 1
duckStep(context, 2
completePopup.getList().setVisibleRowCount(candidates.size()); 1
memo.append(id); 1
for(ContentItem 1
LogManagerClient 2
super(dirsOnly); 4
if(object 5
visitAndPrintWithSeparator(argsNode.childNodes().iterator()); 1
content.setSent(Boolean.FALSE); 1
table[ClassIndex.STRING][MethodIndex.OP_MATCH] 1
up.setVisible(true); 1
ok.setOpaque(false); 2
Set<Long> 2
SourceClient 2
result.append(runtime.getNil()); 1
mr=targetBounds; 1
bubbleDown(a, 1
abouter 1
defaultMessages.put(); 86
end 17
RubyHashEntry(int 1
value[1] 1
items.add(note); 1
emitter.writeIndent(); 14
this.possibleSimpleKeys.clear(); 2
method.invokevirtual(cg.p(DynamicScope.class), 1
cstart 1
reset.out=gt; 3
log.error(event.getMessage()); 1
objWrap.mimicsWithoutCheck(0, 1
initNamedCategory(,Cs); 1
compile(wc,defaultWcClass,defaultSpecials,flags); 1
ancestor 6
us.appendChar((c 1
addFieldsNonEvent(record); 1
removeCollectionRecursive((CollectionItem) 1
r[16]=65; 1
note.getTriageStatus().setRank( 1
description 6
this.removeViewBase 1
dumpObject(var.getValue()); 1
table[ClassIndex.STRING][MethodIndex.TO_S] 1
gbl.setConstraints(ok, 3
if(has_magic(bytes, 1
isExclusive 1
switch(code) 1
seen_point 1
if(mr==null) 8
this.output 4
this.baseInputStream 1
if(System.getProperty()) 1
Set<TicketType> 1
GlobPattern 2
visitNode(iVisited.getReceiverNode()); 8
handler.seek(offset, 2
loadArgument(mv, 1
strValue 2
mv.ldc(lang); 1
mapping[0].put(kk,vv); 1
.47274654322124815640725249756029e-2, 1
gzreader.defineMethod()); 2
REVISION 2
pipeStream.fclose(); 1
if(leadingSpaces 1
-.166485581339872959344695966886e-9, 1
if(attached 1
type=REPEAT_REG_MIN_INF; 1
NAMES[AT] 1
visitNode(iVisited.getIterNode()); 1
logger.setFocusPainted(false); 1
if(_str 1
((RubyString)str).append(tmp); 1
fail(message); 1
clazzInit.putStatic(selfType, 2
if(!buffer.toString().equals()) 1
prev_out.next=next; 1
b.append(CharacterClass.stringValue0(bitset)); 1
mr.in=offset; 2
greedy^=true; 4
if(sameLine) 1
c='\r'; 2
getSession().save(content); 2
if(ev 1
member.append(runtime.newSymbol(args[i].asJavaString())); 1
cal.set(Calendar.MILLISECOND,usec/1000); 1
str=s; 3
inc.next=b; 3
output.dumpObject(name); 1
recv.getRuntime().getCurrentContext().getPreviousFrame().setLastLine(str); 3
RubyStringIO 2
BLANK_T['\t'] 1
writer.write(CMD_START 1
endTest(a, 2
BRAZILIAN 2
allArgs.add(scriptFile.getPath()); 1
outputDirectory.mkdirs(); 1
rescues.add(new 1
write(TYPE_UCLASS); 1
writeAndRegister(runtime.newSymbol(var.getName())); 1
SinglyLinkedList 1
inlineBreaksSpaces 1
(toHexDigit(data[i++])<<4)+ 1
runtime.newRangeError(); 1
regexpClass.kindOf 1
if(hashNode.getListNode().childNodes().size() 1
alen 1
CRC32Ext 1
ga.loadThis(); 5
this.pwd 1
this.implementationClass 1
RubyException 10
((Message)IokeObject.data(errorMessage)).sendTo(errorMessage, 1
prettyOut.append(iter.next().toString()); 1
createGenerator(runtime); 1
tokenBuffer.append('@'); 2
i+=cnt; 3
if(prev<0){ 1
lex_state 63
this.setResizable(false); 4
r[72]=2; 1
project.addBuildListener(new 1
.8365875501178070364623604052959e-10, 1
writeIndicator(ByteList.create( 2
ErrorDialog.open(t); 1
100000L, 1
fixnum.defineAnnotatedMethods(RubyFixnum.class, 1
timeClass.includeModule(runtime.getModule()); 1
objectSpaceEnabled 2
setPosition(0); 1
STRANGE_CHAR['/'] 1
log.debug(); 11
message.append().append(recv.toString()); 1
this.rubyThread 4
cv.visitField(ACC_PRIVATE 1
blocks[i2]=block=new 1
this.parameterValues.putAll(parameterValues); 1
this.substitution= 1
Swinning 1
createSysErr(IErrno.ENOENT, 1
args.set(0,runtime.getJRubyHome() 1
PrintStream 4
namedClasses.put(name,cls); 1
builder.append(DOUBLE_QUOTE); 4
b.prepend((byte) 1
//subList.clear(); 1
bytes.append(Integer.parseInt(new 1
binding.getFrame().setSelf(self); 1
inRange=false; 3
write('m'); 1
this.indents 3
clazzInit.push(m.getDescriptor()); 1
addBuiltinScript(, 2
while(i<out 1
ip+=4; 1
//		font 1
if(esc){ 1
filter 2
newMethod.dup(); 2
src.unread('.'); 1
dec 2
setTarget(s); 1
Create(ptrFactory); 1
if(!(handler 1
jitThreshold 2
arrayc.kindOf 1
t.append(. 1
emitter.writeStreamEnd(); 1
this.ifNone 4
Branch(){ 1
assignLocalVariable(index); 1
interfaceModule.setInstanceVariable(,javaClass); 1
chunks.append(scanFlowScalarSpaces()); 2
response.setContentType(item.getContentType()); 1
in=out=-1; 1
sstrcpy(s, 1
switch(term.type){ 13
updateItemStmt.setLong(2, 2
user.getOldUsername() 1
if(cmds[1].equals(conf.getKey())) 1
top 3
settingsButton.addSelectionListener(new 1
err=0.5; 1
tok 2
getMethodAdapter().invokevirtual(cg.p(RubyModule.class), 1
arr=new 1
if(key_v.getTag().equals()) 1
if(len==0) 1
registerRubyMethods(runtime, 2
block.getBinding().setVisibility(Visibility.PUBLIC); 1
STUPID_CHAR['\n'] 1
if((ix 3
if(parents.size()==0) 1
invokeUtilityMethod(,cg.sig(Integer.TYPE,cg.params(Integer.TYPE))); 1
errorStream.print(tc.getSourceFile()); 1
this.principal 1
compiledPattern.add(new 51
factory.createReWriteVisitor().visitIter(n.getComments().iterator()); 1
putMethod(name, 2
context.postMethodCall(); 1
currentByte 16
mv.visitInsn(AALOAD); 2
a[hi] 2
if(((HibCollectionItem)parent).removeTombstone(content)==true) 2
assertTrue(,null 3
byteList.append(ret); 1
newSymbol()}, 1
newMethod.ifnull(noArgs); 1
BREAK 1
queue=last=mask; 1
HereDocument 1
hash.put(key3, 1
addTimezones(cal); 1
if((lookaheadCount=regex.lookaheads)>0){ 1
super(implementationClass, 11
this.currentEvent 4
pushFrame(block.getFrame()); 3
pass 3
in.read(); 2
jarFiles.put(entry,current); 1
InstanceFieldGetter(String 1
j++; 1
recv.getRuntime().getGlobalVariables().setTraceVar(var, 1
init__resolver_scanner_actions_0( 1
modEvent.setLocation(); 1
this.docStart 10
r[64]=57; 1
result.append(buf, 1
99999999, 1
if(child.getUid().contains(ModificationUid.RECURRENCEID_DELIMITER)) 1
gpc.returnValue(); 1
map.remove(name); 1
exceptionEvent.getAlarms().add(masterAlarm); 1
this.serializedNodes 2
RubyMatchData 6
matchHere: 1
res.resolve(s,strings[i%(strings.length)],implicit); 1
parameterElement.add(paramValue); 1
staticScope.setModule(context.getRuntime().getObject()); 1
while(cs!=null){ 1
turnLost[i] 1
arr.values[0] 1
if(prev!=null){ 1
this.next=next.next; 1
SourceBrowserOptionsWizard 1
this.body 1
mr.out=wOffset; 1
x 5
t.setDaemon(true); 1
NON_ALPHA_OR_NUM['\t'] 1
if(trailingBreaks) 2
if(dollarIndex 1
Float 1
this.add(message); 1
httpServletResponse.getWriter().write(content); 2
System.err.println(usage); 1
anchorNode(node); 1
currentLock 9
radix 10
switch(level) 1
if(p 1
if(s 6
SearchEntry.popState(defaultEntry,memregs,counters); 2
push(pop().callMethod(context,MethodIndex.OP_TIMES, 1
if(v 6
if(i 4
receiver.callMethod(context, 1
if(m 3
pkg 1
if(o 1
if(n 2
table[ClassIndex.FIXNUM][MethodIndex.HASH] 1
if(c 2
this.floatClass 1
if(e 1
slashes[i] 1
InstanceFieldGetter(){} 1
time.setUSec(other.getUSec()); 1
removeNoteItemFromCollectionInternal((NoteItem) 1
method.invokevirtual(cg.p(Block.class), 1
topgbc.gridwidth=2; 1
NON_ALPHA_OR_NUM['\n'] 1
scheduler.scheduleWithFixedDelay(new 1
runtime.setRandomSeed(integerSeed.getLongValue()); 1
if(config.getPrintQuotesInString().isTrue()) 1
Substitution 2
interfaces[i] 2
gbc.gridy=4; 1
oct 2
if(value 3
if((call_flags 1
context.setClassShutter(new 1
topgbc.gridx=1; 1
if(0 3
HEXA_VALUES['4'] 1
if(chunks.length() 1
procClass.defineAnnotatedMethods(RubyProc.class); 1
root=lastMatchAnchor; 1
if(! 2
weight+=s; 1
popScope(); 8
lastBangOrPredicate 1
Collection<EntryAttributeConfig> 1
if(' 2
Collection<EntrySourceConfig> 2
note.setBody(task.getDescription().getValue()); 1
pollThreadEvents(context); 10
Log.errlog(e); 2
this.process 2
r[96]=9; 1
3855990285L, 1
System.arraycopy(FULL_BITS,0,bits,0,BLOCK_SIZE); 1
this.tOutside=i; 2
size.setText(msg.getString(); 3
at--; 1
result.scores 1
attrs.add(new 7
chunks.append(val); 1
log(event); 7
cnt-=exceed; 2
jumpSquares.add(pos); 40
delegate.variableTableSync(vars); 1
b.append(distance); 3
setServerAdmin(); 1
DOUBLE_ESC[''] 1
t.append(c); 4
mapping[0].putAll((Map)iter.next()); 1
this(27); 1
if(r_check[this.buffer.bytes[this.pointer+i]&0xFF] 1
capacity 4
if((targetbits=target.bits)==null){ 1
newStruct.defineMethod(memberName, 1
runtime.getJavaSupport().getArrayProxyClass(), 1
boardS[i][j]=0; 1
cmdArgumentState.stop(); 3
assertEquals(0x0e, 1
NAME_ID=refPtn.groupId().intValue(); 1
possibleMoves 2
for(i 1
methodsWithName 1
if(key 2
c[4] 2
Native.setLastError(0); 1
regexpClass.defineAnnotatedMethods(RubyRegexp.class, 1
this(null, 1
this.staticScope 5
Tree 1
if(element 1
newMethod.astore(SCOPE_INDEX); 1
globalVariables.define(variable.name(), 1
bes 2
parameterTypes[i] 1
writer.writeCharacters(getMessage()); 1
store(((RubyFixnum)args[0]).getLongValue(), 1
dict.mimicsWithoutCheck(origin); 1
result.setMarshal(ObjectMarshal.NOT_MARSHALABLE_MARSHAL); 1
getGlobalVariables().set()); 2
mv.visitLocalVariable(arg0, 1
STATES[DOCUMENT_ROOT] 1
this.dirsOnly=dirsOnly; 1
hexValue 2
folder 1
obj.setData(new 11
STATES[FIRST_FLOW_SEQUENCE_ITEM] 1
lines.append(this.what).append(); 4
instanceCallbacks.remove(name); 1
Regex 1
RubyFixnum 12
while(en.hasMoreElements()){ 1
if(!(f_nzero 1
super(registry, 1
AntlrTestHelper.checkSanity( 1
assignConstantInModule(name); 1
ccs.setLanguage(); 1
CachingWrapperFilter 1
this.visitor 1
this.tokens.add(Token.BLOCK_SEQUENCE_START); 1
org.objectweb.asm.commons.Method 4
rplArr 2
context.negateCurrentValue(); 1
STUPID_CHAR['#'] 1
newTable[i] 2
this.handlers.get().add(0, 1
this.inlineSource 1
if(colz 2
b.append(stringValue(last)); 2
POP_ELEMENT(args); 1
ite.getTargetException().printStackTrace(); 1
faultString.append(fault).append(); 1
login=new 2
srcBytes 3
runtime.evalScript(new 1
dtStart 1
super(thr); 8
begin++; 1
this.eos 1
'7', 2
if(!args[0].isNil()) 2
timeRangeIndex.setIsFloating(isFloating); 1
panel.setOpaque(false); 1
chunks.append(ss); 1
iterator.next(); 1
if(((i+2)<end) 1
this.eof 2
table[ClassIndex.SYMBOL][MethodIndex.TO_SYM] 1
rubyClass.setClassVar(name, 2
catch 1
w.add(key.attachment()); 1
this.dir 5
fileList.add(split[split.length 1
MState 5
sender 1
MessageDigest 2
finalizers.put(finalizer, 1
if(cnt>=term.maxCount){ 1
entry.hash 1
inspect(((Colon2Node)node).getLeftNode()); 1
block.yield(runtime.getCurrentContext(), 3
frame.getPosition().getEndLine() 1
DummySubstitution(String 1
inspector.inspect(body); 1
pgbc.anchor=GridBagConstraints.CENTER; 1
RubySocket.createSocket(runtime); 1
mixedBreaksSpaces 3
MockNoteItem 1
createSysErr(IErrno.ENOEXEC, 1
newMethod.start(); 1
Visibility.PUBLIC)); 2
array.defineFastMethod()); 1
while(!parseStack.isEmpty()) 1
labels.clear(); 1
CHOMPING['8'] 1
if(compareRegionsI(data,i,regOff,regLen,out)) 1
partitionConfig.setSchedulerConfig(schedulerConfig); 1
r_check 1
this.secondNode 3
ADD_SEQ(ret, 6
fail(scriptName() 1
seq.args_opt_labels 1
r[32]=48; 1
this.wOffset=memregs[0].in=wOffset; 1
array.add(read(new 1
SelectionKey 3
dataStructMap.put(unwrap(self), 1
((DateTime) 1
context.setResourceBase(new 1
Artifact 1
runtime.setCurrentDirectory(realPath); 2
errnoModule.defineClassUnder(name, 1
if(usec 1
packageModuleTemplate 1
super(anchor); 1
ensure(length+1,true); 1
r[360]=1; 1
re.counters=vars[CNTREG_COUNT]; 1
timeClass.defineFastMethod()); 25
logger.trace(id 3
Block[] 4
Room 1
converters['N'] 1
endLong++; 1
n.add((Node) 1
if(key.getTokenNumber() 1
block.yield(ctx, 2
InvalidValueException 1
while(Character.isJavaIdentifierPart(c)){ 1
text.setLayoutData(new 1
System.arraycopy(array, 3
setMethodVisibility(args, 2
checkOpen(); 12
append(str); 4
System.out.println(); 34
runtime.getWarnings().warn( 1
resolver.descendResolver(parent,index); 1
SimpleKey 1
str.setValue(new 1
errorStream.println(); 1
this.httpClient 4
current=b; 1
scope.setArities(required, 2
s+=Block.add(bs1.blocks,bs2.blocks,0,BLOCK_COUNT-1,inv); 1
progress.removeDatabase(dbname); 2
SizedQueue 1
result.append(aref(getRuntime().newFixnum(j 1
RubyBignum.marshalTo((RubyBignum)value, 1
javaRegexFlags 4
type=GROUP_IN; 1
COMPILE(arg_block, 1
currentLine 1
ConfigurationTools.createDocumentGeneratorConfiguration( 1
ga.loadArgArray(); 1
R_FLOWNONZERO[':'] 1
super(ref, 1
method.invokevirtual(cg.p(RubyArray.class), 3
top.setLayout(topgbl); 1
io2Append.ensureCapacity(1024); 1
integer.dispatcher 1
message.setTo(user.getEmail()); 1
synchronized(methods 2
breaks 9
writeObjectData(value); 1
BignumNode 1
.fromObject(post(String.format(, 1
name.replace('/', 1
back.type=BACKTRACK_REG_MIN; 2
array.add(internalSepGets(seperator)); 1
this.offset=offset; 1
runtime.runFromMain(in, 1
if(c>0xff) 2
table[ClassIndex.HASH][MethodIndex.TO_A] 1
r[168]=101; 1
createSysErr(IErrno.EDOM, 1
pushCallFrame(klazz, 1
gbc.anchor=GridBagConstraints.SOUTHWEST; 2
ret.append(consumeInBuffer((idx 1
EventExceptionStamp 11
tab[index] 4
if(tmp<offset) 1
getPrintStream().print(b); 1
Arity.createArity(arity), 4
trace.add(name); 1
pane.setBorder(BorderFactory.createEmptyBorder()); 1
if(lineBreaks) 1
this.config.getError().close(); 1
added.add(methodName); 1
mv.label(ok); 1
numeric.kindOf 2
escape 2
GERMAN 2
ngrams.put(en.getSeq(), 1
metaClass 4
mr=prefixBounds; 1
if(content 1
env.expectNothing(); 1
current=append(t); 1
rhino 9
process_status.defineMethod(, 2
createSysErr(IErrno.EMFILE, 1
activationIdIdx 1
this.dir=dir; 1
system.mimicsWithoutCheck(ground); 1
while(ending 7
Replacer 2
column.setCellEditor(editCellEditor); 1
context.createNewBignum(((BignumNode)node).getValue()); 1
134217728 1
if(nextPEE==null){ 1
inspect(((SplatNode)node).getValue()); 1
executable 3
UNONDIGIT.setDigit(true); 1
this.kcode 1
parseStack.push(P_INDENTLESS_BLOCK_SEQUENCE); 1
config.setProperty(Environment.CONNECTION_PROVIDER, 1
byte[]pa 1
for(Class<?> 2
childTrees[ 1
packageHasPublicMethod.doSomething(); 2
NodeCompilerFactory.getCompiler(classVarAsgnNode.getValueNode()).compile(classVarAsgnNode.getValueNode(), 1
delegate.constantTableSync(vars); 1
showVersion(); 1
javaMethod 1
HttpServletRequest 4
jitLogging 2
cmdArgumentState.reset(); 1
if(ONLY_WORD.matcher(before).matches()) 1
runtime 21
call_result, 1
start(, 1
loadMethod(fast); 1
p.setPath(StringUtils.join(list.iterator(), 1
r[104]=5; 1
for(StackTraceElement 1
this.done 1
if(IokeObject.isMimic(condition, 2
algo.reset(); 2
(toHexDigit(data[i++])<<16)+ 1
this(Locale.getDefault(),rubyObject); 1
val.append(len).append().append((pow+1) 1
callbackFactory.getMethod()); 1
mv.areturn(); 5
getRuntime().defineReadonlyVariable(, 1
context.postScopedBody(); 3
r[72]=57; 1
newMethod.label(labels[i]); 1
en.setFocusable(false); 2
Collections.sort(samples, 1
RubyKernel.IRUBY_OBJECT 1
transform 2
mutex.wait(20); 1
gbc.gridy=i+3; 1
givenArgsCount++; 1
state.gateway.withWriter(sig, 2
this.indents.add(0,new 1
obj.element(, 4
((RubyThreadGroup)rubyThread.group()).remove(rubyThread); 1
arg.setValue(args[i]); 1
if(runtime.getVerbose().isNil()) 1
push(runtime.newFixnum(result)); 2
longval 1
cFiber.defineFastMethod()); 2
head 4
context.createNewFloat(floatNode.getValue()); 1
wizard.setServer(server); 1
newFrameStack[i] 1
method.swap(); 14
setAttribute(self, 1
Assert.fail(); 3
context.getBindingRubyClass(), 1
envVarValue 1
ll.add(fixer); 1
visitNode(iVisited.getCaseNode()); 1
//TODO 2
DtStart 1
answer=0; 2
shm.put(key, 2
context.getCurrentScope().setValue(local,stack[stackTop],0); 1
attr 2
modDtStart.getParameters().remove(modDtStart.getParameter(ICalendarConstants.PARAM_X_OSAF_ANYTIME)); 1
makeWordChar(term,true,unicode); 1
tc.pushRubyClass(self.getType()); 1
recursiveObjects.put(node,new 1
buf.flip(); 1
gzreader.defineClassUnder(, 1
board[i][j].setDigit(counter); 1
fileMetaClass.defineFastMethod(, 13
stopWait(); 1
ArgumentNode 1
ascii.setRange((char)0,(char)0x7f); 1
R_FLOWNONZERO['\r'] 1
config.getOutput().print(getContent()); 1
params.add(param); 1
env.expectBlockSequenceItem(false); 1
image=bi.getScaledInstance(scale, 1
.30280468061771320171736972433e-12, 1
InternalVariables 1
n=(n 1
addMethod(name, 11
if(m>=0){ 3
nY 18
prefixPaths.add(new 1
Collection<FieldConfig> 1
mixins.mimicsWithoutCheck(defaultBehavior); 1
result.append(JavaMethod.create(getRuntime(), 1
negatigeClass=unicode? 3
gzfile.defineFastMethod()); 11
gbc.anchor=GridBagConstraints.NORTHWEST; 1
if(this.representedObjects.containsKey(data)) 1
no 3
this.rescue 1
nc 3
val.append(buffer,0,read); 1
rhino.map(); 1
assertTrue(value.getClass() 2
this.globalVariable 1
initNamedCategory(,So); 1
wOffset=offset; 2
node 37
cache.put(value, 1
proxy.defineFastMethod(this.name,this,this.visibility); 3
result.append(lCurElemString.toCharArray(), 1
rr.close(); 1
ensure(1,false); 1
writable 2
result.append(line); 2
if(month_s 2
if(prev_branch!=null){ 1
ems[i].invoke(outp, 1
printWhileStatement(iVisited); 1
gbc.gridheight=1; 1
RubyArray.marshalTo((RubyArray)value, 1
System.arraycopy(methodArgs, 2
if(!item.getParents().contains(collection)) 1
if('%' 1
icalUidMap.put(note.getIcalUid(), 1
errorStream.print( 4
securityManager 1
objectAccessor.set(this, 1
if(e.getTargetException() 1
config.setError(err); 1
if(iVisited.getArgsNode() 3
this.exclusive 2
getSyncEngine().getNotify().clearSyncNotification(source_id); 1
classProviders 1
createSysErr(IErrno.ESPIPE, 1
cnt=0; 3
y.add(kind); 1
stringIOClass.defineAnnotatedMethods(RubyStringIO.class); 1
if(this.indent 1
q.add(new 1
this.hasMultipleArgsHead 1
state.locator.update(databaseName, 1
assertTrue(si.isNilMapNil()); 1
ServerPropertyService 1
vals.append(values[i].trim()); 1
lexState 1
createSysErr(IErrno.ENOSYS, 1
Assert.assertNull(modEvent.getDuration()); 1
r[288]=57; 1
editCellRender.setResourceBundle(msg); 2
frame.getName().equals(previousFrame.getName()) 1
environment 1
STRANGE_CHAR['-'] 1
CosmoSecurityManager.class); 2
refPtn=new 1
//XXX 1
Module[] 1
if(index==null) 4
doc.add(text(Config.BODY, 1
Socket 3
stringValue 1
IWorkbenchWindow 1
(flags&UNICODE)>0, 1
condition.prev=in; 1
append((byte)b); 1
osr.flush(); 1
this.err 2
suite.addTest(new 9
offset++; 15
rubyDateFormat.applyPattern(format.toString()); 1
for(Long 1
osenvironment 1
ary.sort_bang(block); 1
lb.prev=in; 1
arr.values 1
level 5
current.index=memreg; 1
uc.setUser(login, 2
getRuntime().unregisterInspecting(this); 3
apiAvailable 1
while(type.isIncluded()) 1
if(choices.length 2
CJK 2
grow(result, 3
expandScopesIfNecessary(); 1
fastStoreInternalVariable(name, 3
printProperties(); 1
this.frame 2
writeAndRegister(value); 1
assignAliases((MethodCallback)callback,instanceAssignedNames); 1
warnUnlessEOption(node, 1
Block.NULL_BLOCK); 5
port 2
((MockUser) 2
DocumentMetadata 2
replaceText(startPos, 2
instances.addOverride(event, 1
Thread.sleep(10); 3
mv.arraylength(); 4
writer.writeStartElement(NS_COSMO, 1
AdminServlet(final 1
if(p<l 1
for(;iter.hasNext();) 1
clazz 2
Assert.assertNull(modEvent.getAnyTime()); 1
uidIdx 1
result.defineAlias(); 3
hash.fastASet(values[i], 1
newMethod.invokevirtual(cg.p(Arity.class), 1
table[ClassIndex.SYMBOL][MethodIndex.TO_I] 1
key.addAll(names); 1
super(getThreadLocalRuntime(), 1
this.color 2
cal.set(1982,5-1,3); 1
debugs(msg); 1
while(e.hasMoreElements()){ 1
groups 1
internalPut(key, 2
hasRestArg 1
addMissingTextField(FIELD_DTSTART, 1
Set<ICalendarItem> 1
if(pat 5
YARVMachine.Instruction[] 2
logger.setActionCommand(); 1
bj.setTarget(null); 1
converters['d'] 1
RubyHash.marshalTo(hash, 1
ServerProperty 2
writer.write(CMD_TERM 1
if(name.equals(rp.name)) 1
this.line 3
mv.getstatic(cg.p(Block.class), 4
( 2
((DatagramChannel) 4
jsFunction_add(cx, 2
CharacterClass.makeWordChar(term,inv,(flags&UNICODE)>0); 1
getRuntime().checkSafeString(newPath); 2
newArgs.shift(); 1
GeneratorData 6
begObj 2
context.loadSymbol(alias.getNewName()); 1
rb_cUNIXSocket.defineFastMethod()); 5
serializeNode(key,node,null); 1
setTarget(text,0,text.length()); 1
config.getOutput().print('\n'); 1
noteMod.setIcalUid(null); 1
client.getHttpConnectionManager().getParams().setConnectionTimeout(timeout); 1
this.note 4
replace(beg, 2
defineClass_method 1
term=null; 1
print(iVisited.getName()); 14
FULL_LINEBR['\r'] 1
if(value==null) 2
this.getTags().add(0,tag); 1
assertEquals(ReWriteVisitor.unwrapSingleArrayNode(arrayNode), 2
emitter.writeTagDirective(handleText,prefixText); 1
moveTally.get(1*3+1).score 1
handler 17
RubyLocalJumpError.createLocalJumpErrorClass(this, 1
msg 10
currentMatchingFiles.addAll(getMatchingFiles(parent, 1
entry.isState=true; 2
prev 3
struct.defineFastMethod(,IRubyObject.class)); 1
checkReopen(); 1
this.calendarView 1
skip=3; 6
(request.getServerPort() 1
ImmutableMethodAndType(DynamicMethod 1
editCellRender 1
encodes(runtime, 1
regexpClass.getMetaClass().defineFastMethod(, 1
if(!( 1
RubyBinding 2
OSEnvironmentReaderFromApacheAnt 1
buf.fill('0',intZeroes); 2
table[index] 2
r[88]=1; 1
add(word, 1
if(arr[i]) 1
shared.begin 1
completeCombo.removeAllItems(); 1
reading 7
if(difference_to_utc.callMethod(context,MethodIndex.OP_LT, 1
tmp.append(((RubyArray) 2
address 1
bignum.index 2
buf.append(c); 3
topgbc.gridy=1; 1
LBEGIN 1
stream 2
if(r_le(obj,end)) 1
nTrailingZeroes++; 7
this.restArgNode 1
Argument 1
r[80]=41; 1
s[base] 1
this.field 3
ob.add(newText(ste.toString())); 1
fr.setActionCommand(); 2
startPos 3
this.testDir 2
master.getComponents().removeAll(toRemove); 1
assertThat(td.totalHits, 1
obj.mimicsWithoutCheck(fileMimic); 1
1 1
nestedCallDepth 2
dup.flags 1
writeInt(len); 1
buf.write(digits,intDigits,decDigits); 2
actual=le.actual; 3
Emitter 1
@Before 2
algo 1
methodCompiler.getVariableCompiler().releaseTempLocal(); 4
CHOMPING['1'] 1
if(data[i+1]=='\\'){ 1
table[ClassIndex.ARRAY][MethodIndex.EMPTY_P] 1
StringReference(String 1
dest.append() 1
mv.barraystore(); 1
checkExpression(firstNode); 2
-.142261205103713642378247418996e0, 1
tokenBuffer.append((char) 17
if(!currentIndex.equals(indexCheck)) 1
Thread.sleep(100L); 1
Iterator<VEvent> 1
result.setConstant(,RubyNumeric.int2fix(runtime,-2)); 1
super(405, 1
toURI().toURL().toExternalForm(), 1
ComponentList 11
this.fast 1
SPACES_AND_STUFF['\\'] 1
setError(err); 1
result.append(entry(((RubyFixnum)args[i]).getLongValue())); 1
COMPILE(ret, 3
iVisited.getValueNode().accept(this); 6
setChar(' 1
mv.label(afterCall); 1
IndependentGroup(int 1
digester.push(partitionConfig); 1
baseLine 8
abouter.setPreferredSize(dimBtn); 1
@Test(timeout 1
this.end=end; 1
if(!(subnode 1
cancel.setBackground(this.getContentPane().getBackground()); 1
RuntimeHelpers.invoke(runtime.getCurrentContext(), 1
setExecutableVar 1
//while 1
r[40]=0; 3
gh.endMethod(); 1
javaClassClass 1
warnings.warn(ID.ARGUMENT_EXTRA_SPACE, 1
result.setUseCompoundFile(false); 1
staticCallbacks.remove(name+'='); 1
entrySection.setText(); 1
result.append(lCurElemString); 1
this.setIconImage(getIcon().getImage()); 1
attributePage.setDefaultType(AttributesWizardPage.VARIABLE); 1
linkAsBranch=true; 3
fileClass.dispatcher 1
b.in=b; 7
expandCapacity(newcount); 2
table.setTableHeader(null); 1
super(cause); 1
DEAD_PROPERTY_FILTER.add(NoteItem.class.getName()); 1
exceptionStamp.setExceptionEvent(event); 2
input.unmarshalString(), 1
!superset.isAppendable() 1
ic.setJavaName(javaMethodName); 1
if(endDate==null 1
runtime.setKCode(KCode.create(runtime, 1
term 2
len--; 1
name 28
moduleClass.definePrivateMethod()); 1
org.jruby.RubyDigest.createDigestSHA2(runtime); 1
compiler.startScript(staticScope); 1
top.setBorder(BorderFactory.createMatteBorder(0, 1
if(.equals(s)) 1
testServer.returningHttpStatusCode(HttpServletResponse.SC_FORBIDDEN).start(); 1
100000000000000000L 1
mv.visitInsn(ARRAYLENGTH); 1
noteMod.setModifies(note); 1
if((d=data[i++])=='{'){ 2
setBinmodeIfPossible(in); 1
Move 5
LAEntry 9
frame.setIsBindingFrame(true); 1
this.dispose(); 4
simpleDateFormat.setCalendar(cal); 2
sublist.add(entries[j]); 1
this.setLocationRelativeTo(origin); 2
overlord.setEmail(); 2
dumpToStream(objectToDump, 2
.522210223399585498460798024417e-16, 1
mv.visitTryCatchBlock(arg0, 2
gbc.insets=ins; 13
values[++index] 1
chunks.append('\''); 1
.159214187277090112989358340826e-7, 1
addSyncCommand(new 2
newStruct.index 1
interfaceModule 1
internal.getByteList().append(val.getByteList()); 1
progress.removeView(viewname); 2
column.setCellEditor(delCellEditor); 1
integer.defineMethod(, 2
if(mychars==null 3
replace(val); 1
END 1
Readline.getHistory().previous(); 2
tokenBuffer.setLength(0); 9
iteration 1
convertedArgs[i] 1
if(!NULL_OR_LINEBR[ch]) 1
output.write(linkType(value)); 1
initialCapacity); 1
pat--; 1
if(item.getParents().size()==0) 1
connection=(HttpURLConnection)url.openConnection(); 1
SearchEntry.popState(entry,memregs,counters); 1
if(c<32){ 1
trueClass.defineFastMethod(,IRubyObject.class)); 1
content.getResourceLocator(), 1
}); 139
loader); 1
post.setEntity(new 2
fail(); 26
assertNull(ss.postMatch()); 1
NON_ALPHA_OR_NUM['}'] 1
RubyHashEntry[]newTable 1
currObj=dir; 1
Arrays.fill(ALL_TRUE,true); 1
-.364266647159922287393611843071e-6, 1
view 1
System.arraycopy(nbytes,index,bytes,beg,count); 1
testServer.servingFile(file.getAbsolutePath()).start(); 1
nativeMethod.mimicsWithoutCheck(method); 1
StandardASMCompiler 3
l.add(((FixnumNode)node).getFixnum(runtime)); 1
table[ClassIndex.HASH] 1
this.rubyModules 1
s.open(); 1
fail(faultString.toString()); 1
resolver.ascendResolver(); 1
addPath(); 1
gbc.gridwidth=3; 1
SimpleSampler.startSampleThread(); 1
free=newsize-count; 1
mv.aload(DISPATCHER_RUBYMODULE_INDEX); 2
Arrays.fill(STUPID_CHAR,true); 1
dst[dstBegin 3
+(toHexDigit(data[i++])<<8) 1
this.getContentPane().setBackground(background); 1
Script 4
this.getContentPane().add(title); 1
newFirst.value 1
((RubyIO) 2
Date 15
this.plain 1
RegexpNode 1
connection.setDoOutput(true); 1
m_strFrom 1
if(commandLine.isYARVEnabled()) 1
rawInput 2
message.setSubject(subject); 1
System.arraycopy(args, 18
outBuffer.clear(); 1
checkWriteable(); 2
warnings.warn(); 2
io2 1
STRANGE_CHAR['#'] 1
visitNode(comment); 1
runtime.defineClass(, 1
holder 1
HEXA_VALUES['d'] 1
b.append(Integer.toHexString(c)); 1
pubScore[W]=gS.scores[3]; 1
assertEquals(expected, 1
signalException 1
LOG.info(new 1
'8', 2
return( 1
if(tag.equals()) 1
removeEventHook(callTraceFuncHook); 1
alloc(ilength); 1
gt.cntreg=cntreg; 2
r 9
if(next 3
if(poped) 4
return; 122
entryConfig.setDn(db.toDn()); 1
switch(c2){ 1
obj.element())); 1
method.astore(LOCAL_VARS_INDEX); 1
SizedQueue.setup(runtime); 1
replace(classBytes, 1
runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, 1
addInstanceMethod(method); 1
defl.append(arg); 1
this.env.events.add(event); 1
config.getIndentor().outdent(); 9
if(conf.terminate()) 1
expectNode(true,false,false,false); 1
progress.update(viewname, 4
if(term.type==Term.REG){ 2
integer.defineMethod()); 1
this.isWithinTrace 1
b.out=null; 3
tokens++;iter.next(); 1
exceptionClass.defineFastMethod()); 6
title=f.getName().substring(0, 1
origin.mimicsWithoutCheck(ground); 1
pos.setIndex(source.length()); 1
noteMod.setClientModifiedDate(new 1
NULL_BL_T_LINEBR['\n'] 1
result.defineFastMethod(,RubyKernel.IRUBY_OBJECT)); 17
PathElementEnumerator(PathElementMask 1
this.isLiteral 1
ParserConfiguration 1
HEXA_VALUES['B'] 1
runtime, 3
globalVariable.setAccessor(new 1
writeClass(classname, 1
loadedFeatures 1
LogFactory.getLog(ItemTombstoneTranslator.class); 1
thread.start(); 4
if(Double.isNaN(rFloat.getDoubleValue())){ 1
assertTrue(map.values().contains(new 2
runtime.setSafeLevel(level); 1
contentStart 4
buf.append(this.string); 1
if(Character.isDigit(match.charAt(0,grp))){ 1
if(min<=0 1
if(tok.getName().equals()) 1
ensure(2,true); 1
this.add(loginlab); 1
enm.defineMethod()); 18
cMutex.defineFastMethod()); 4
replace(pattern.matcher(chars,off,len),substitution,tb); 1
canExecute 1
emitter.writeIndicator(ByteList.create(),false,true,false); 3
if(!opened) 1
args.c 1
this.accessor 1
assertTrue(,0 3
.getMethod(PROXY_METHOD_TYPE.getClassName() 1
spaces 8
wizard.setPartitionName(sourcesNode.getPartitionName()); 1
parseStack.push(P_FLOW_SEQUENCE); 2
build.append(sep).append(after.substring(index,next)); 1
print(iVisited.getVariableName()); 1
finalIter.next().finalize(); 1
ms.put(arg_types, 5
nDigits 7
this.$scriptObject 1
ret.initialize(args, 1
if(minIndent 2
mv.visitInsn(ICONST_1); 1
RubyObject 2
assertTrue(!rubyObject.isFrozen()); 1
getSession().update(collection); 2
if(date==null) 1
result.append(RubyArray.newArray(runtime, 1
print(iVisited.getMatchNumber()); 1
env.expectDocumentStart(true); 1
System.arraycopy(bytes,0,newbytes,0,newlen); 1
dup.isShared 1
context.preMethodCall(implementationClass, 1
this(RubyFixnum.newFixnum(runtime,value)); 1
this.cause 1
cal.set(Calendar.SECOND,Integer.parseInt(sec_s)); 1
in.next=term; 1
gbl.setConstraints(loginlab, 1
RubyLocalJumpError 1
rb_cIPSocket.getMetaClass().defineFastMethod(, 1
@Test 45
this.block0=block0=new 1
item.setNeedsReply(Boolean.FALSE); 1
LineLoop 1
fileno 4
mv.visitInsn(DUP); 1
if(prev_out1!=null){ 1
if(Number.class.isAssignableFrom(otherClass)) 2
toAppendTo.append(token.getData()); 1
this.once 2
this.yamlVersion 2
table[ClassIndex.REGEXP][MethodIndex.EQUALEQUAL] 1
handler.setIsSync(newSync.isTrue()); 1
initNamedCategory(,Mn); 1
context.getCurrentScope().getValues()[i] 1
actual=first; 1
mv.visitAttribute(arg0); 1
argsNodeType); 1
list.remove(); 1
runtime.setArray(arrayc); 1
key.add(interfaces[i]); 1
abouter.setActionCommand(); 1
.___getProxyClass(); 1
nilClass.defineFastMethod()); 11
pgbc.gridheight=3; 1
flags.add(fr); 2
c[5] 2
org.jruby.runtime.CallbackFactory 1
failNext=opt.makeBacktrack(back); 1
prefix=pref; 1
chunks.append(ESCAPE_REPLACEMENTS[ch]); 1
HashSet<Long> 1
JavaArray.init(javaArray); 1
invoker 2
if(args.length==0){ 1
CharacterClass.toHexDigit(data[i++])); 2
this.ignoreEmtpyLines 1
while(pat 1
objectClass.setMetaClass(classClass); 1
if(c>'9' 1
Block(){} 1
//basics 1
configModule.defineConstant(, 1
dynamicScope.setBindingScope(extraScope); 1
mr.out=ms.out; 1
toAppendTo.append(formatSymbols.getShortWeekdays()[calendar.get(Calendar.DAY_OF_WEEK)]); 1
((IokeSystem)IokeObject.data(system)).popCurrentFile(); 3
lineno 3
newStruct.fastSetInternalVariable(, 2
Thread.sleep(millis); 1
JavaRegexpMatcher(Matcher 1
mappings.put(method, 1
emitter.emit((Event)iter.next()); 1
TimeZoneRegistryFactory.getInstance().createRegistry(); 2
for(;i<out;isFirst=setFirst,setFirst=false){ 1
tc.preInitCoreClasses(); 1
tmpIdx.put(entry, 1
initCoreClasses(); 1
indexer.updateIndex(); 2
this.fd 1
entry.mCurrent=null; 1
insertCollectionItemStmt.setLong(2, 1
SecurityException, 1
otherClass 1
obj.mimicsWithoutCheck(this.regexp); 1
lastCommit 1
if(cs.getCreationDate()==null) 1
returnMap 1
LogFactory.getLog(DurationFormat.class); 1
this.level 1
if(LINEBR[ch] 1
false); 1
QuickStringBuffer() 1
STUPID_CHAR['{'] 1
assertTrue(trace.indexOf() 4
it2.remove(); 1
close(stmt); 1
message.append(methodArgs[i]); 1
gzwriter.defineMethod()); 1
this.pack(); 7
clazz.setAllocator(allocator); 1
this.intern.reset(); 2
flt.defineFastMethod()); 1
fontFileNameDefault1 1
fontFileNameDefault2 2
gbc.gridy=0; 4
visitNode(iVisited.getValue()); 3
c1--; 1
j.hasNext();) 1
URLConnection 1
newStruct.defineMethod(memberName 1
padSlashes 2
pass=null; 1
excp.printBacktrace(errorStream); 1
ADD_INSN(list_anchor, 1
n[0] 1
support.unread(c); 1
ESCAPE_REPLACEMENTS['t'] 1
printExceptionNode(iVisited.getRescueNode()); 1
.getDoubleValue()); 2
removePossibleSimpleKey(); 7
1.0e6, 1
saxTransformerFactory.setURIResolver( 2
if((flags&IGNORE_CASE)==0 1
this.re=regex; 1
nX 18
closureArg.call(methodCompiler); 5
buffer.append(c); 1
(ensure(1,false) 1
input.registerLinkTarget(result); 11
suite.addTestSuite(ShellLauncherTest.class); 1
usernameIdx.remove(user.getUsername()); 1
if(event.getDateStamp()==null) 1
fixnum.defineFastMethod()); 1
db.Lock(); 1
initNamedCategory(,Sm); 1
packageName 5
f.mkdirs(); 1
Slot 5
OutputFormat 2
table[ClassIndex.REGEXP][MethodIndex.INSPECT] 1
handler.write( 1
ArrayList<ItemTombstone> 1
expandFramesIfNecessary(frameIndex 5
switch(value.getNativeTypeIndex()) 1
paramName.add(new 1
ESCAPE_REPLACEMENTS['n'] 1
if((t1 4
if(spaces) 2
mr.in=ms.in; 1
if(!self.callMethod(context, 1
result.callInit(new 1
LOGGER.warn(, 1
real++; 2
c[0] 2
invoker.addMethod(method,javaClass); 2
SocketAddress 2
print(name); 1
block.setProcObject(this); 1
-.451381838776421089625963281623e-16, 1
RubyClass.checkInheritable(rubyClass); 1
fixnum.defineFastMethod(,IRubyObject.class)); 1
runtimeTLS.set(runtime); 1
status 20
skip=1; 1
proc.call(IRubyObject.NULL_ARRAY); 1
addFields(record); 1
checkInstanceVariablesSettable(); 6
rubyClass.addMethod(name, 1
out.writeObject(null); 1
if(str.equals()) 1
b.failNext=lt; 2
createContentInternal(collection, 1
IN 1
node=current=condition; 1
waitFor(delayMillis); 1
IF 1
implements 13
Arrays.fill(whitespaces,(byte)' 1
this(ptn,DEFAULT); 1
if(begin 1
r[88]=3; 1
if(sequence 1
obj.mimicsWithoutCheck(this.set); 1
tzid 3
methodCompiler.appendToObjectArray(); 3
answer+=(char)c; 1
item.setText(2, 1
getPrintStream().println(); 1
model 1
defl.defineFastMethod()); 3
if(len 5
RuntimeHelpers.invoke(context, 1
methodCompiler.variableCompiler.releaseTempLocal(); 1
scannerClass.defineFastMethod(, 18
env.expectFlowSequenceItem(); 1
nameErrorClass.defineAnnotatedMethods(RubyLocalJumpError.class); 1
this.receiverNode 7
result.defineConstant(,runtime.newFixnum(15)); 1
time.setJavaCalendar(calendar); 1
pushScope(new 6
initNamedCategory(,Zp); 1
cl.add(comp); 1
context.setOptimizationLevel(9); 1
setPosition(getPosition().union(node.getPosition())); 2
finally{ 2
bytes[begin+2] 1
if(!(curr 6
ga.endMethod(); 2
symbol.init(); 1
addUnassignedAlias(javaPropertyName,assignedNames,callback); 3
out.write(writer.toByteArray()); 1
FloatNode 1
initialize() 1
calendar.get(Calendar.MILLISECOND); 1
parseStack.push(P_BLOCK_MAPPING_ENTRY_VALUE); 3
if(bs2.block0!=null){ 1
term.out.type=SUCCESS; 1
gh.returnValue(); 1
recv.getRuntime().newArgumentError(); 1
createSysErr(IErrno.ECONNRESET, 1
nge.inc(); 1
finName.append(Character.toUpperCase(last[i].charAt(0))).append(last[i].substring(1)); 1
inspect(((BeginNode)node).getBodyNode()); 1
obj.setBaseName(name); 1
((AttributesMap)attrs).containsKey(name); 4
back.type=BACKTRACK_MIN; 2
result.append(recv.getRuntime().newString(member.eltInternal(i).asJavaString())); 1
.getEventCalendar().getComponents(Component.VTIMEZONE); 1
this.defaultStyle 1
NULL_BL_LINEBR['\0'] 1
name.equals(DavPropertyName.GETCONTENTTYPE)) 1
runtime.getJavaSupport().getConcreteProxyCallback()); 1
argArray[i] 1
while(countBack>0 1
InetAddress 2
invoker.afterPropertiesSet(); 1
LogFactory.getLog(CosmoAuthenticationEntryPoint.class); 1
this.rubyObject 1
documentMetadata.getCreationTimestamp() 1
(toHexDigit(data[i++])<<12)+ 1
assertTrue(eval(script).indexOf() 1
next.prevNode 1
finalizer.finalize(runtime, 1
methodCompiler.method.dup(); 1
this.other 1
cachedTable 2
for(HandlerInfo 1
RubyStringScanner.createScannerClass(runtime); 1
note.addStamp(eventStamp); 1
this.emitter.emit(new 10
writer.write(script); 1
index=cnt=regLen=0; 1
literals 1
GenericParameters.OPTIONPREFIX 3
super(400, 1
if(flowLevel 2
io.callMethod(context, 1
iVisited.getThenBody().accept(this); 1
result.append(','); 3
Thread.currentThread().getContextClassLoader().getResources(packageDirName); 1
provider 1
if(!(node 5
newMethod.astore(LOCAL_VARS_INDEX); 1
cache_index 1
logger.setPreferredSize(dimBtn); 1
pushMethodAdapter(method); 1
HashSet 1
mname 1
child.setModifies(occurrence.getMasterNote()); 1
r[64]=183; 1
reader.setEntityResolver( 2
this.allocator 1
io.init(); 1
if(eList.size() 1
instruction.callAdapter 1
ok 5
collect.append(block.yield(context, 1
holder.returnReader(reader); 1
.getValue(), 3
lexer.setStrTerm(new 1
callTraceFuncHook.setTraceFunc(traceFunction); 1
traceFrames 2
items.add(item); 1
result.defineConstant(,runtime.newFixnum(7)); 1
analysis 4
mv.invokevirtual(RUBY, 3
mv.label(normalBreak); 1
p.removeInstanceVariable(name); 1
token+=c; 1
bignum.defineAnnotatedMethods(RubyBignum.class); 1
HomeCollectionItem 1
internal.modify(); 4
str=wc; 1
@JRubyMethod 4
if(hash.getIfNone().isNil()){ 1
if(locale.getLanguage().equals()){ 1
_false.init(); 1
SPACE.setSpace(false); 1
search(weight, 2
oo.callInit(new 1
this.staticCallbacks 1
mv.invokespecial(cg.p(JumpException.class), 1
this.lineno 1
Set<Item> 3
setWritableVar 1
EMPTY_TYPE_ARR, 3
expectNode(false,false,true,false); 7
modifyCheck(); 5
assertEquals(,val2,outp3[1]); 1
if(dec>0xffff) 2
if(FULL_LINEBR[ch]) 1
@JRubyMethod(required 1
hash.defineFastMethod(,IRubyObject.class)); 1
i=CharacterClass.parseName(data,i,end,t,false,(flags&IGNORE_SPACES)>0); 1
staticCallbacks.put(name,invoker); 1
bs.setChar(Character.toUpperCase(c1)); 2
context, 4
structClass.getMetaClass().defineMethod()); 1
converters['S'] 1
if(isFull) 2
hasMatch=true; 2
this.name 52
pipeStream.fflush(); 1
sb.append(wcClass); 2
TIMER.schedule(new 1
l.add(r.newArrayNoCopy(c)); 2
c='\u001B'; 1
print('}'); 3
CHOMPING['\n'] 1
switch(base) 4
securityRestricted 1
internal.getByteList().set((int) 2
outp.putAll((Map)ctor.constructMapping(node)); 1
cend 1
superclassSeen 1
getRuntime().getWarnings().warn(ID.BLOCK_BEATS_DEFAULT_VALUE, 1
if(!matchEnd 1
test1.put(new 1
if(!eof 1
this.reading 3
config.getOutput().print(((ArgumentNode) 1
subsetModes.isSubsetOf(modes); 1
frameStack[frameIndex] 2
flushInBuffer(); 2
grow(1); 3
assertEquals(DATE_STRING 1
message.setText(msg.getString()); 2
.190081925136274520253692973329e-18 1
exc.message 2
if(i>=end 2
this.lex_state 1
writer.writeCharacters(token); 1
reset(0); 1
push(runtime.getGlobalVariables().get(bytecodes[ip].s_op0)); 1
toType(superConstructorExceptions), 1
passwordRecoveryIdx 1
(args[0] 1
STRANGE_CHAR['&'] 1
joinColumns 1
createSysErr(IErrno.EAGAIN, 1
log.error(e.getMessage(), 11
initUI(); 1
if(ch 9
if(indent 1
InstantiationException, 1
sender.setText(msg.getString()); 2
Visibility.PRIVATE 2
instanceCallbacks.put(name,invoker); 1
List<Variable<BaseObjectType>> 2
addPath(rubyDir 4
note.getModifies().removeModification(note); 1
UDIGIT.setDigit(true); 1
allComponents.add(key); 1
if(mr==null){ 1
emitter.writeIndicator(ByteList.create(),false,false,false); 8
push(RuntimeHelpers.invoke(context, 1
RubyModule[] 1
suite.addTestSuite(TestReflectionCallback.class); 1
io2Append.ensureCapacity(charCount 1
STANDARD 2
'6', 2
recv.getRuntime(), 1
this.numericClass 1
if(term.eat){ 2
infl.close(); 1
this.objectSpaceModule 1
super(); 25
term.weight=bs.positive? 1
out.write(0); 1
regexp.init(); 1
createContentInternal(parent, 1
checkTaint(self, 19
m_oSyncEngine.doSyncAllSources(); 2
this.rescues.get().add(0, 1
if(key.isRequired()) 1
this.args_arg_opts 1
report.init(home, 1
visitNode(argsNode); 1
//TODO: 2
condition.mimicsWithoutCheck(origin); 1
strcat(s, 1
fixnum.includeModule(runtime.fastGetModule()); 1
createMessageDigest(runtime, 1
while((c=in.read(mychars,count,len))>=0){ 1
this(16); 1
actual.regLen=regLen; 1
bs.setRange((char)first,(char)last); 1
ti.setText(+t.getMessage()); 1
holder.returnSearcher(searcher); 1
setCurrentVisibility(Visibility.PRIVATE); 2
if(converted 1
grow(len); 1
parseStack.push(P_BLOCK_MAPPING_ENTRY); 4
Vs. 4
suite.addTestSuite(TestAdoptedThreading.class); 1
ground.mimicsWithoutCheck(iokeGround); 1
handler.warn(WARNING_ID.DUMMY_VALUE_USED, 2
-1, 4
arr.concat(((RubyHash)v).to_a()); 1
setBaseItemProps(content); 2
i=le; 1
writeAdapter.call(io.getRuntime().getCurrentContext(), 2
exception.printBacktrace(stream); 1
printOpAsgnNode(iVisited.getSecondNode(), 2
bs1[i]=false; 1
cacheLength=text.length(); 1
r[16]=126; 1
((AttributesMap)attrs).containsConstants(); 1
search.addServlet(new 1
recv.getRuntime().checkSafeString(path); 1
timeRangeIndex.setStartDate(fromDateToStringNoTimezone(startDate)); 1
Binding 1
root.add(element); 1
Class 91
INSTANCE 1
mep.put(self.getRuntime().newString()); 4
getSyncEngine().getNotify().addObjectNotify(strSrcName, 1
osr.write(); 7
STATES[FIRST_FLOW_MAPPING_KEY] 1
table[ClassIndex.HASH][MethodIndex.DEFAULT] 1
assignedNames.put(name,new 2
rubyThread.cleanTerminate(result); 1
inRange=true; 1
write(sep); 1
gbl.setConstraints(name, 1
CosmoSecurityManager 2
warn(position, 1
this.origin=(Smash)origin; 1
proc.callMethod(getRuntime().getCurrentContext(), 1
sScope.setModule(executeUnderClass); 1
createSubscriptionFeedGenerator(locator); 5
flags.setBorder(BorderFactory.createMatteBorder(0, 1
ps.setLong(1, 1
calendar.getComponents().add(0,i.next()); 1
this.lastPosition 1
boolean[] 37
write('F'); 1
sub 1
sum 4
superConstructorParameterTypes.length); 1
bigval 2
printCommentsAtEnd(iVisited); 1
version 1
obj.mimicsWithoutCheck(registry.wrap(clz.getSuperclass())); 2
.getArgumentTypes()); 1
mCurrent=null; 1
if(inverse) 1
newCal.setTimeZone(getLocalTimeZone(getRuntime())); 1
mv.visitInsn(POP2); 1
if(a.length 1
.getFactory().createTriageStatus())); 1
IndexWriter 1
tc.setWidth(300); 1
hereDocument 1
if(args 4
loseTurn.add(pos); 32
precisionModule.defineAnnotatedMethods(RubyPrecision.class); 1
newbytes[0] 1
Term(){ 1
inDefinition 1
if('!' 1
this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); 1
.3486659470157107922971245784290e-12, 1
for(final 34
flater.finish(); 1
.192949233326170708624205749803e-12, 1
dstArray[i] 1
errorStream.print(tc.getPosition()); 3
concatter.append(pop().toString()); 1
if(nextMask!=null)nextPEE=nextMask.newEnumerator(); 1
visitNode(iVisited.getNextNode()); 1
createBatchParameters( 1
Instance 20
if(i>=out-4) 1
printCommentsBefore(iVisited); 1
table[ClassIndex.SYMBOL][MethodIndex.EQUALEQUAL] 1
buf.append( 4
setExecutable 1
getFiles(); 1
while(STRANGE_CHAR[ch]) 1
if(ending 5
manager.declareBean(, 5
matcher.setPosition(0); 1
env.expectFlowMappingValue(); 1
possibleMoves.add(new 1
anchorNode((Node)me.getValue()); 1
superClass.remove_const(runtime.newString(name)); 1
(CharacterClass.toHexDigit(data[i++])<<8)+ 2
maxIndent 2
inspect(ifNode.getCondition()); 1
fieldMap.put(parameter.getName(), 1
freeBusy.setClientModifiedDate(vfb.getDateStamp().getDate()); 1
this.intern.update(b,off,len); 2
if(ts!=null 1
ss.scan(new 1
openFileFlags 6
.14358733767849847867287399784e-14, 1
IOModes 2
if(modParents.equals(masterParents)) 1
hasToken=false; 2
if(slen 2
runtime.checkSafeString(oldNameString); 1
mv.getstatic(cg.p(JumpException.JumpType.class), 1
invokeDynamic(, 4
rubyClass 4
if(icase){ 3
.getDescriptor(), 1
while((i<out) 1
System.arraycopy(parameterTypes, 1
CHOMPING['-'] 1
TestResourceTree.initialize() 1
ClassLoader 3
initNamedCategory(,Ll); 1
ary2.infectBy(this); 1
mv.ldc(Boolean.TRUE); 1
v 5
super.initialize(args, 2
myHead.add(format); 1
term.prev=in; 1
if(data[i]=='\n'){ 1
compile_array(list, 1
_klen 2
v.addElement(s); 1
docs[j].add(token(Constants.DB, 1
rb_sys_fail(recv.getRuntime(), 1
btn.setCursor(hand); 1
locateNext(); 3
prev=c; 2
Entry(int 1
@ManyToOne(targetEntity=HibUser.class, 1
labels.put(is.toString(), 1
skipRemainingClasses 1
out.write(buf, 3
recursive 3
while(scanner.peekToken() 2
bigval.compareTo(minus) 1
if(dtStart.getTimeZone()==null 1
assertTrue(entrySet.contains(next1)); 1
l.add(i.i); 1
IS_ESCAPE_REPLACEMENT['N'] 1
pushMethodAdapter(newMethod); 1
write(''); 1
getSyncEngine().stopSyncByUser(); 1
-.284371241276655508750175183152e-5, 1
JavaProxyConstructor 1
privateHasPublicMethod.doSomething(); 2
chunks.append(breaks); 4
print(comment.getContent()); 1
mv.visitInsn(ACONST_NULL); 1
mv.aload(DISPATCHER_CALLTYPE_INDEX); 2
superClazz.callMethod(getRuntime().getCurrentContext(), 1
i-=back; 3
table[ClassIndex.HASH][MethodIndex.AREF] 1
suspect.analyze(text); 1
if((c=data[--i])<=255 1
exporter.setServiceName(); 1
((RubyString)str).modify(); 1
STATES[FLOW_MAPPING_KEY] 1
b.append(stringValue(first)); 2
S4['['] 1
Utils.LOG.fatal(dir.getAbsolutePath() 2
method.pop(); 12
assertEquals(0x04, 1
if((counterCount=regex.counters)>0) 1
sb.append(s); 1
10000000000000000L, 1
short 2
NAMES[OP_PLUS] 1
user.addSubscription(sub); 1
this(new 6
runtime.checkSafeString(newNameString); 1
this.fireTableDataChanged(); 2
method.end(); 1
methodClass.defineFastMethod()); 3
synchronized(metaClassMap) 1
addMultiConstructor(,new 12
this.isPositive=isPositive; 2
flowIndicators 7
counters[term.cntreg]=0; 1
recursiveObjects.put(node, 1
sb.append('('); 1
.9439510239319549230842892218633e-1, 1
print(((INameNode) 3
condition.setCell(, 7
bytes[t] 1
System.arraycopy(value,0,newbytes,pos,vlen); 1
ti.setText(label); 1
getPrintStream().print(f); 1
javaClass 9
if(!bs1.isLarge 2
if(item 11
helper.setBackground(background); 1
ourTurn 5
style 3
super.removeItemFromCollectionInternal(item, 1
STRANGE_CHAR['_'] 1
toAppendTo.append('+'); 1
endMethod(mv); 3
((HibItem) 6
PORTER 2
ldoc.add(new 2
paddedWith 2
return 8154
inSingle 2
inspect(match3Node.getReceiverNode()); 1
obj.defineFastMethod()); 4
inspect(ifNode.getThenBody()); 1
number 8
write(RubyKernel.sprintf(this, 1
if(data!=null)s.append(data.length); 1
r_check3 1
r_check2 1
((RubyMatchData)backref).use(); 1
rb_cSocket.getMetaClass().defineFastMethod()); 4
TableItem 2
mSignal.defineAnnotatedMethods(RubySignal.class); 1
0L, 1
r[72]=227; 1
packageName(selfType.getClassName()))) 1
in.next=condition; 1
((RubyString)obj.callMethod( 2
req.getHeader(); 1
System.arraycopy(bytes,src,bytes,pos,buflen-src); 1
gbc.gridx=1; 4
STRANGE_CHAR[';'] 1
buf.append(tmp.asString().getByteList()); 1
item.setText(0, 1
connectionManagerClient.validateConnection(connectionConfig); 1
this.warnings 2
CHOMPING['#'] 1
topgbl.setConstraints(melipone, 1
(this.buffer.bytes[this.pointer+3] 1
clazzInit.returnValue(); 1
if(misc.isNil()) 1
assertNotNull(, 8
body.branch(this); 1
mv.aload(CLOSURE_INDEX 1
filteredClassName 1
STRANGE_CHAR['.'] 1
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 1
project.setBaseDir(mavenProject.getBasedir()); 1
newMethod.method 2
raiseArgumentError( 1
ProcessingResult 1
this.allowSingleQuoted 1
buf.write(format,start,offset-start); 1
Iterator(Term 1
mv.visitMethodInsn(INVOKESTATIC, 13
runtime.getThreadService().setCritical(false); 1
zstream.defineFastMethod()); 16
scopeStack 1
getPosition(); 3
t1.setDaemon(true); 1
activeTasks.add(databaseName); 1
(line.endsWith())); 1
NailMain 1
runtime.getObject().setConstant(name, 1
assertTrue(eval() 2
moveTally.get(i).score 1
this.getContentPane().add(titlelab); 1
((RubyString) 3
for(ThreadContext 1
range.end 1
Thread.sleep(OldConfig.COMMIT_MIN); 1
zip.append(array); 1
loop: 7
col.element(, 12
sb.append(chars,start,len); 1
super(rubyThread.getRuntime().getThreadService().getRubyThreadGroup(), 1
YAML.load(s()); 1
this.valid 1
get.setFollowRedirects(false); 3
switch(ch) 1
Block 22
converters['E'] 1
res.descendResolver(null,null); 1
topgbc.gridx 1
documentTree 1
if(linkAsBranch){ 1
System.err.println(this.sort); 2
module.setParent(this); 1
body[real] 1
throws 77
nativeMethod.init(); 1
if(item.getUid().equals(uid)) 1
itemList.add(item); 2
System.arraycopy(bytes,0,trimmed,0,length); 1
mv.visitJumpInsn(IFNULL, 1
this.errorCondition(condition); 1
org.jruby.lexer.yacc.ISourcePosition 1
target.isFull=true; 3
this.state 7
this.configuration 1
defl.getDeflater().end(); 1
matchingFiles.add(matchArray[i]); 1
IS_ESCAPE_REPLACEMENT['b'] 1
this(wc,icase? 1
leading 1
read.close(); 1
key.cancel(); 1
timeMetaClass.defineFastMethod()); 5
i.index 1
scriptName 1
map.put(entry.getKey(), 1
ex.printStackTrace(); 1
refMatcher.setTarget(refMatcher,MatchResult.SUFFIX); 1
this.functions 1
array[i 1
store 2
verifyItemInSet(results,); 5
BaseObjectType 9
method.aconst_null(); 6
super.initializeItem(item); 1
defineMethod(name, 3
writer.writeEndElement(); 3
this.backref 3
if(this.pattern.isExtended()) 1
buffer.append(line); 2
popMethodAdapter(); 2
NULL_LOCATION, 10
getenvMethod 4
writeString(value.convertToString().getByteList()); 1
containingClass.addMethod(name, 1
if(isMissingAttribute()) 6
lock.unlock(); 9
servletHolder.setServlet(servlet); 1
validateArgs(targetClassName, 1
(flags&IGNORE_CASE)>0, 1
i>=end 1
if(!getSession().contains(collection)) 1
mv.label(notNull); 1
rb_cUDPSocket.includeModule(runtime.getClass()); 1
out.memreg=memreg; 1
dest.append(nfsClass); 2
bytes[realSize++] 1
mv.invokevirtual(cg.p(HashMap.class), 1
this.firstLine 2
assertTrue(re.toString().indexOf() 1
range.begin 1
moveTally.get(m.getD(ourTurn)*3+m.getM(ourTurn)).score 3
NodeCompilerFactory.getCompiler(ifNode.getCondition()).compile(ifNode.getCondition(), 1
YAMLConfig 16
desktop.mail(new 1
((AttributesMap)attrs).put(name, 7
mLen=p-mOff; 1
hex=(hex<<4)+toHexDigit(d); 1
stream.write(xdata.bytes,0,xdata.realSize); 1
regexpClass.dispatcher 1
pgbl.setConstraints(desk, 1
fos.close(); 1
getMethodAdapter().aload(SELF_INDEX); 1
if(RN[0] 1
getRuntime().getCurrentContext().setCurrentVisibility(visibility); 1
mv.dup(); 29
push(pop().callMethod(context, 4
System.arraycopy(str.bytes, 2
b.append((char)c); 1
gbc.gridy=2; 3
if(target==next){ 1
assertFalse(new 1
warningUnlessEOption(node, 1
ngramsIdx.put(entry.getSeq(), 1
if(propWidth 1
add(word.append(c)); 1
connectionConfig.setName(); 1
stream.write(32); 1
originalModule.cloneMethods(this); 1
if(block0!=null){ 1
UNDEF 1
R_FLOWNONZERO['['] 1
removeContentCommon(mod); 1
ImmutableList.< 9
checkFrozen(self, 19
catch(PatternSyntaxException 2
ensureReadNonBuffered(); 1
y.add(x); 1
super.paintComponents(g); 2
prev_out1.next=next; 1
STATES[FLOW_SEQUENCE_ITEM] 1
if(recurrenceId.equals(newStartDate) 1
if(arg_types.size() 1
context.pushCatch(tag.asSymbol()); 1
this.area 1
list.add(1, 1
handler.reset(modes); 1
methodCompiler.loadSelf(); 6
TestBean 1
font 4
r[8]=11; 1
append(prompt.trim(), 1
out.write(value 2
last_state 2
if(must) 1
Mnum 1
if(free==0){ 1
inspect(((BreakNode)node).getValueNode()); 1
if(arr==null 2
if(rp.index.lessThan(stopIndex)) 1
other.updateCal(cal); 1
NEXT 1
fontStatus.getFontInfos(), 1
sb.append().append(getMetaClass().getRealClass().getName()).append(' 1
SyntacticTree 2
servletConfig 1
actual.cnt=cnt; 12
this.getContentPane().add(ok); 1
if(!mem.eltInternal(i).toString().equals(slot.toString())) 1
RubyTCPSocket.createTCPSocket(runtime); 1
build.append(sep).append(whole.substring(index,next)); 1
lexicalContext.init(); 1
getRuntime().defineGlobalConstant(, 1
channel.configureBlocking(blocking); 1
this.searcher 1
LogFactory.getLog(BaseMockServletTestCase.class); 1
((RubyFixnum)to).getLongValue(), 2
if(thisClass.isAssignableFrom(otherClass)) 1
stopSync(); 4
toAppendTo.append('-'); 1
seqBuf.append(padder); 1
buffer.append(arg.toString()); 1
output.dumpObject(object); 1
R_FLOWNONZERO['}'] 1
newMap[index] 1
dup.realSize 1
updateCollectionInternal(collection); 2
mv.visitMethodInsn(INVOKEVIRTUAL, 13
compare.load(fis); 1
ESCAPE_REPLACEMENTS['v'] 1
javaMethods 1
table[ClassIndex.CLASS][MethodIndex.OP_EQQ] 1
this.memregs=memregs; 1
grp(ANY_G,fsClass+?\\ 1
context.setFrameArgs(args); 1
version[0] 1
mv.invokevirtual(cg.p(Ruby.class), 3
pbeg 1
if(!matcher.matches(name)) 1
arr 1
target.add(o2); 1
Handler.init(handler); 1
nativeThread.interrupt(); 1
env.whitespace 7
buf[buf.length 1
increaseIndent(false,false); 1
noteMod.setLastModification(ContentItem.Action.EDITED); 1
arg 11
gd.widthHint 5
note.setReminderTime(reminderTime); 2
mv.visitVarInsn(ASTORE, 1
ResponseContext 2
emailIdx 1
StackTraceElement[] 1
mv.ldc(methodName); 1
results[0] 1
WHEN 1
mv.label(doNotLoadClass); 1
calendar.setMinimalDaysInFirstWeek(1); 1
ensureGems(gems.split()); 1
DotNode 1
c=data[p]; 1
item.setClientCreationDate(new 1
this.block.yield(context, 1
super(runtime,type); 1
mv.invokestatic(classname, 3
buf.write(bytes,first,numlen); 1
start=i; 1
setControl(composite); 1
ArrayList<SingleMove> 2
assertTrue(set.contains(s1)); 3
mv.go_to(defaultLabel); 3
visitNode(unwrapSingleArrayNode(iVisited.getValueNode())); 1
AND 1
c 104
false, 15
s.append(counters==null? 1
classProviders.remove(provider); 1
-.329507136225284321486631665072e-8, 1
context 1
super(factory); 1
while(!(parser.peekEvent() 2
context.addServlet(servletHolder, 1
ObjectOutputStream 1
VFreeBusy 1
10L, 1
stackTop++; 2
CharsetDecoder 3
suite.addTestSuite(TestRubyException.class); 1
System.arraycopy(stack, 2
newMethod 4
getRuntime().defineReadonlyVariable()); 1
ipScript.start(); 1
assertTrue(!rubyNil.isTrue()); 1
Mnum++; 1
pubScore[E]=gS.scores[1]; 1
checkDirIsTwoSlashesOnWindows(recv.getRuntime(), 1
ps 1
tok.setValue(value); 1
this.visibility 9
completeCombo.addItem(item); 1
assertTrue(rubyObject.isTaint()); 1
this.url 6
r[80]=110; 1
hasScopeAwareMethods 8
pe 2
doSyncAllSources(show); 1
if(((RubyString)object).getValue().length() 1
Properties 1
end=start+len; 1
LogFactory.getLog(StandardMorseCodeController.class); 1
status=0; 1
internal.getByteList().length(len); 1
StringBuilder 4
buflen 4
if(oth 1
precision 14
mv.pop(); 12
super(NAME); 1
System.arraycopy(bytes,length,newbytes,0,newlen); 1
system.init(); 1
sock2.init_sock(); 1
runtime.setNumeric(numeric); 2
file=f; 1
addClass(allClasses, 2
if(la.isPositive){ 1
this.tag 4
monitor.done(); 2
if(on!=null){ 1
context.getCurrentFrame().getVisibility(), 2
setEnvironment(environmentMap(env)); 1
STATIC_RESERVED_NAMES.put(, 1
add(word.subSequence(i, 1
this(LexicalError(EOFSeen, 1
message.append(); 1
delCellRender.setResourceBundle(msg); 2
SPACES_AND_STUFF['\0'] 1
config.getPrintQuotesInString().set(false); 5
((SyncSearchCommand)oSyncCmd).m_strFrom); 1
emitter.writePlain(analysis.scalar,split); 1
if(args.length>2) 2
args.raiseArgumentError(message); 1
dir.mkdir(); 1
print(iVisited.getName().substring(0, 2
loadService 2
.278838966100713713196386034809e-8, 1
JavaEmbedUtils.terminate(runtime); 1
list.add(e.name); 1
if(BasicLibraryService.class.isAssignableFrom(theClass)) 1
if(level<0) 1
if(flow) 1
table[ClassIndex.STRING][MethodIndex.ASET] 1
if(chomping 2
this.serverPropertyService 1
getSession().load(collection, 1
r[56]=186; 1
recordset.setDeleted(true); 1
processThread.interrupt(); 1
bignum.defineFastMethod(, 19
attributePage.setPartitionName(partitionName); 1
YamlConstructor 3
write('e'); 1
checked=true; 2
cacheOffset=m.cacheOffset; 1
topModule.getName(), 1
store(i, 2
username).setParameter(, 1
reset.cntreg=cntreg; 2
out.write(Constants.MARSHAL_MAJOR); 1
b.append(((Lookahead)this).isPositive? 1
if(count 1
b.failNext=gt; 1
if(level 2
message.mimicsWithoutCheck(origin); 1
Item 25
gbl.setConstraints(pane, 1
expectFlowSequence(); 1
-.58811761189951767565211757138362e-1, 1
createSysErr(IErrno.EEXIST, 1
lCurLineLength 3
STUPID_CHAR[' 2
remember.setBackground(this.getContentPane().getBackground()); 1
replace(pattern.matcher(res,group),substitution,tb); 1
while(st.hasMoreTokens()){ 1
note.setIcalUid(event.getUid().getValue()); 1
entityFactory.createEventExceptionStamp(noteMod); 1
runtime.newArray(arg, 2
identities.put(longMaxId, 1
StampUtils.getCalendarCollectionStamp(item); 1
double 113
parseStream(); 3
message.append(e.getMessage()); 1
for(JButton 2
query.setFlushMode(FlushMode.MANUAL); 1
ex, 1
BUILD 1
SPACES_AND_STUFF['\t'] 1
processScalar(); 1
r[48]=169; 1
createSubscriptionFeedGenerator(ServiceLocator 1
mr.getGroup(SPCHAR_G,dest); 1
assertTrue(entry.getKey().getClass() 2
stat.setup(filename, 1
this.realtime 2
COMPILE_DATE 1
process.defineModuleFunction()); 2
super.setUp(); 11
Attributes 1
Lookbehind 1
serverBuilder.with(webAppContext().withContextRoot( 1
addPath(paths[i]); 1
Condition.init(condition); 1
nstart=p; 1
untilDateCalendar.set(java.util.Calendar.HOUR_OF_DAY, 1
term=root; 2
selector.close(); 1
StackTraceElement 1
CharacterClass.parseGroup(data,t.tOffset,t.tOutside,clg, 1
print('['); 4
this.isArgumentScope 1
rewind(self,Block.NULL_BLOCK); 1
table[ClassIndex.BIGNUM][MethodIndex.TO_S] 1
BLANK_OR_LINEBR['\r'] 1
ThreadContext.class, 1
assertTrue(RubyBigDecimal.formatHasLeadingSpace()); 1
r[48]=48; 1
//a 2
oldReader.close(); 4
mv.visitMaxs(0,0); 2
sb.append('/'); 2
popArity(); 1
noteMod.setName(noteMod.getUid()); 1
ie.initCause(ex); 1
IRubyObject[]tmpArgs 1
namespaceUri, 2
//} 1
assertEquals(0x02, 5
verifyItemInSet(later,NOTE_UID 1
arrayc.dispatcher 1
this.attachedObject 3
list.add(i.next()); 1
clazz.makeMetaClass(superClass.getMetaClass()); 1
message.setText(text); 1
super(enclosingScope, 1
out.type=PLOOKAHEAD_OUT; 1
ConfigurationToolsTest.class 1
fileClass.defineFastMethod()); 5
column.setCellRenderer(delCellRender); 1
config.setOutput(new 1
resolverPrefixPaths.remove(0); 1
super_m); 1
Smash 1
Collections.sort(sublist); 1
newPath.append(); 2
context.setFile(iseq.filename); 1
map1[i++] 1
assertTrue(rubyNil.isNil()); 1
dynamicScope); 2
context.setFiber(Fiber.this); 1
.72234397604005554658126115389e-9, 1
CalendarBuilder 1
b.next=gt; 2
yamlConstructors.put(tag,ctor); 4
oldName 1
getValue().getClass() 2
method.label(variableCallType); 1
toRead 1
Channel 2
StyleConstants.setForeground(messageStyle, 1
String 706
fseek(0, 1
completePopup.getList().setVisibleRowCount(10); 1
prop 1
RubyModule.createModuleClass(this, 1
this.verbose 1
exponent--; 5
ConstDeclNode 1
intern_adler 1
proc 12
prob 3
Assert.assertEquals(eventStamp.getEndDate(), 1
rootNode.accept(visitor); 1
logger.setBackground(background); 1
assertEquals(1, 6
r[264]=46; 1
flagbc.gridx=1; 2
this.aborted 2
deleteDatabase(term.text(), 2
while(p<l 1
getRuntime().getMethodCache().clearCache(); 1
sepVal 2
r[208]=84; 1
switch(c) 2
assertFalse(RubyBigDecimal.formatHasLeadingSpace()); 2
Square 2
BranchCallback 6
rubyThread.exceptionRaised(e); 1
playerScore 1
while(ctor.checkData()) 3
turnLost 2
setCategory(Lt); 1
super(message, 6
migrateModifications(conn); 1
initializeInterface(javaClass); 1
fields.add(field); 4
context.getCurrentScope().setValue(restArg, 2
this.isShared 1
resetForWrite(); 1
inspect(((EvStrNode)node).getBody()); 1
setupBlockArg(context, 1
nend=p; 1
ALIASES.load(TimeZoneTranslator.class 1
if(command.trim().endsWith()) 1
copy.setModifies(newSeries); 1
InputStream 15
content.setVerticalAlignment(JLabel.TOP); 1
dimensions[i] 1
if(code 2
arity.checkArity(recv.getRuntime(), 1
imagesList.elementAt(rowIndex).setTitle((String)newTitle); 1
checkExpression(receiver); 2
back.type=BACKTRACK_0; 1
tc.setWidth(100); 1
LOG.debug( 4
str.append(src.readLineBytes()); 1
CHOMPING[' 1
term.append(makeTree(t,data,vars,flags,new 7
if(isFirst){ 1
inbytes 1
sequence 3
callback.execute(new 1
Selector 1
long 177
id=makeNumber(nstart,i,data); 1
JEditorPane 2
b.branchOut=b; 5
sb.append('i'); 1
visitNewlineInParentheses(iVisited.getSecondNode()); 1
SyncNotify.setObjectNotifyUrl(url); 1
substitution.appendSubstitution(m,dest); 1
HEXA_VALUES['a'] 1
if(fconfig.exists()) 1
ScriptThreadProcess 1
CollectionPath 8
ttype=NAMED_GROUP; 1
manager.exec(); 1
on.sub=null; 1
rubyThread.killLock.notifyAll(); 1
System.exit(0); 3
if(canonical 5
md.update(dbname.getBytes(UTF8)); 1
if(ch1Meets^ch2Meets^term.inverse){ 2
this.tokens.add(Token.BLOCK_END); 1
inspect(((BlockAcceptingNode)node).getIterNode()); 1
loadService.registerRubyBuiltin(BUILTIN_LIBRARIES[i]); 1
this.mode 1
if(this.done) 1
table[ClassIndex.ARRAY][MethodIndex.ASET] 1
inserted.values 1
CURRENT.put(tc, 1
.getMethod( 1
symbolClass.defineAnnotatedMethods(RubySymbol.class, 1
getPrintStream().println(x); 9
method.label(end); 1
cSizedQueue.defineFastMethod(, 3
parseStack.push(P_BLOCK_INDENTLESS_SEQUENCE_END); 1
if(block==null) 1
layout.marginWidth 5
newPosition 3
arr.aset(new 1
stop(SYNC_WAIT_BEFOREKILL_SECONDS); 1
2265490386L, 1
this.i_op3 1
this.i_op1 1
emitter.writeIndicator(indicator,true,false,true); 1
logged=false; 1
if(curr 3
assertEquals(RubyFixnum.zero(runtime), 1
this.getContentPane().setForeground(foreground); 1
checkFrozen(); 2
spotFind.getSquareEffect(result, 1
}finally 2
STRANGE_CHAR['+'] 1
gbc.ipady=20; 1
DEAD_PROPERTY_FILTER.add(MessageStamp.class.getName()); 1
.getPackageModuleTemplate().dup(); 1
converters['I'] 1
Method[] 3
pgbc.gridy=2; 1
RubyString[] 1
this.respondToMethod 1
internalPutDirect(realKey, 1
ReadableByteChannel 2
ss.append(); 1
parseStack.push(P_DOCUMENT_START_IMPLICIT); 1
ga.loadLocal(loc, 1
this.serializer 1
assertEquals(c, 1
this.entry 1
type=REPEAT_MIN_INF; 1
this.argumentType 2
ga2.invokeConstructor(superType, 1
patterns.add(i, 1
if(!isLarge){ 1
ngramcounts[e.size()] 1
if(!(bs2[i]^inv)) 2
esc: 1
t3.quit(); 1
InstanceMethodInvoker 1
handler.setFileno(keepFileno); 1
lastIdx 2
List<IokeSystem.AtExitInfo> 1
ADD_CALL_RECEIVER(ret, 1
tokenbox.setText(); 1
runtime.getGlobalVariables().defineReadonly($ 2
freeBusy.setIcalUid(vfb.getUid().getValue()); 1
runtime.secure(4); 2
expected.put(s()); 5
eventStamp 1
if(!term.inverse) 4
'2', 2
startOfExtend 1
buf.write('%'); 2
System.arraycopy(bytes,0,newpath,0,end); 1
mv.visitTableSwitchInsn(arg0, 1
CollectionItem 22
if(actual==null){ 16
((int)(varList.size()/DEFAULT_LOAD_FACTOR) 1
classWriter 1
endLong 3
value--; 1
classPath 4
clazzInit.endMethod(); 1
ChannelDescriptor 3
column.setPreferredWidth(55); 1
mJRubyExt.defineFastPublicModuleFunction(, 1
other.next.prev 1
addPage(attributePage); 1
PagedList 1
adjustment 2
MockReport 1
table[ClassIndex.STRING][MethodIndex.TO_I] 1
setOutput(out); 1
System.out.print(doc.getId()); 1
RubyIPSocket.createIPSocket(runtime); 1
writeAndRegister(runtime.newSymbol(name)); 1
runtime.setDir(dirClass); 2
Object 155
builder.append(c); 2
makeTree(data,0,data.length,flags,re); 1
HEXA_VALUES['C'] 1
languages 2
BLANK_OR_LINEBR[' 1
method.releaseConnection(); 3
term.type=END; 1
.401039258823766482077671768814e-10, 1
if(utf8) 2
'9', 2
getRuntime().registerInspecting(this); 3
mv.invokevirtual(cg.p(ThreadContext.class), 3
java.setFork(true); 1
IS_ESCAPE_REPLACEMENT['\t'] 1
fixnumStep(context, 2
if(cid.getItem().equals(item)) 1
parseStack.push(P_FLOW_ENTRY_MARKER); 4
oct+=d-'0'; 2
validateInstanceVariable(internedName); 3
!NULL_BL_T_LINEBR[this.buffer.bytes[this.pointer+1]&0xFF])) 1
mapDesignDocument(designDocuments.getJSONObject(i).getJSONObject()); 1
pos--; 1
timezones.add(dateProp.getDates().getTimeZone().getVTimeZone()); 1
mv.isub(); 1
topgbc.gridy 1
MultipleAsgnNode 2
pushFrameCopy(); 2
((LinkNode)iter.next()).setAnchor(node); 1
ic.setArgumentTypes(signature); 1
methodCompiler.loadNil(); 2
rootContext 1
for(;c<=0xffff;){ 1
timeMetaClass.defineAlias(); 1
b.append('!'); 1
MockHttpServletRequest 1
r[160]=22; 1
runtime.getCacheMap().add(method, 1
pgbc.gridy=4;; 1
result.getMetaClass().defineFastMethod(, 5
field.getType()); 2
shared=true; 3
if(note.getClientModifiedDate()!=null) 3
.getType(JavaProxyInvocationHandler.class); 1
nodeCheck 6
this.args 6
testServer.returningHttpStatusCode(HttpServletResponse.SC_NOT_FOUND).start(); 1
default:{ 8
mv.invokestatic(cg.p(Ruby.class), 1
SearchEntry.saveMemregState((top!=null)? 1
le.top=top; 6
process_status.defineMethod()); 5
r[304]=92; 1
compile(converted,flags); 1
if((cnt-=back)<=minCnt){ 1
this.scalar 1
this(scanner, 1
ctor 4
heatmapEW[i][j] 1
if(((Class)object).isArray()) 1
if(!ignoreAnchor(node)) 1
addedMaster 1
initNamedCategory(,Mc); 1
ZipEntry 1
proxy.getSingletonClass().defineFastMethod(this.name,this,this.visibility); 2
Smash.getFrames()[0].setCursor(new 4
super(name,INSTANCE_FIELD,field); 2
io.mimicsWithoutCheck(origin); 1
buffer.get(ret); 2
put(entry.getKey(), 1
converter.encode(runtime, 1
n.i 1
NON_ALPHA_OR_NUM[':'] 1
eat=true; 1
GridBagLayout 7
script.append(); 5
NUMBERS.put(NAMES[i], 1
StrNode 1
stuff[i] 1
this.onlyIfAvailable 1
gpc.endMethod(); 1
mv.label(tryEnd); 3
proc.getBlock().getFrame().setName(name); 1
outChannel.close(); 2
progress.load(reader); 5
ga2.returnValue(); 1
xslFileName, 3
converters['c'] 1
note.setDisplayName(StringUtils.substring(task.getSummary() 1
this.lookaheadCount=lookaheadCount; 1
initNamedCategory(,Nd); 1
auxscore 1
field.setMissing(true); 1
buf.write(bytes.unsafeBytes(),bytes.begin(),len); 3
overlord.setUsername(User.USERNAME_OVERLORD); 2
}).start(); 1
out.add(new 2
bytes[roundPos] 3
mv.visitTypeInsn(NEW, 1
ICALENDAR_FILE_EXTENSION); 1
newProfile 2
if(not) 1
loadFactor); 1
b2.append(bytes); 1
runtime.getErrorStream().println(); 3
super.onSetUpInTransaction(); 1
reader.incRef(); 1
}else 6
layoutPage.setLayoutConfig(appenderConfig.getLayoutConfig()); 1
instanceNames.put(name,new 3
switch(bytes[i]) 5
this.argumentTypes 3
mutex.lock(); 1
parseStack.push(P_BLOCK_NODE); 4
_Payload 1
input.append(buff,0,read); 6
RubyIO 14
cal.set(Calendar.MONTH,Integer.parseInt(month_s)-1); 2
if(b==null) 1
json.remove(); 1
chunks.append(scanUriEscapes(name)); 1
start 25
hasPublicDecl 2
this.atom=atom; 1
SearchEntry.popState(actual,memregs,counters); 2
binding, 1
Ustr 9
IntReference(int 1
inspect(((IArgumentNode)node).getArgsNode()); 1
catch(IOException 4
while(t.ttype!=')') 1
HEXA_VALUES['9'] 1
out.add(text(key, 1
table[ClassIndex.STRING][MethodIndex.OP_GE] 1
buf.put((byte)c); 1
replace(pattern.matcher(chars,off,len),substitution,out); 1
NAMES[TO_SYM] 1
executeCmd(commandString); 2
buildStaticScopeNames(method, 1
ZlibInflate 1
if(!match.matches()) 1
len-=c; 1
positive=true; 1
table[ClassIndex.BIGNUM][MethodIndex.OP_LT] 1
inSingleton 1
while(true) 9
proxy.defineAlias((String)iter.next(), 1
runtime.setPrecision(precisionModule); 1
entry.setValue(new 2
List<ByteList> 10
getSession().refresh(content); 1
RubyKernel.createKernelModule(this); 1
singleton.addMethod(mname, 1
ISO_8859_2.name() 1
writeIndent(); 10
sender.addActionListener(this); 1
dup.begin 2
copy.setUid(new 1
System.arraycopy(bytes,0,newbytes,1,buflen); 1
equalsPos 2
write(strObject); 1
if(!leadingSpace 1
this.block 6
inserted.realLength 1
close(parentsStmt); 1
failureException 1
number.mimicsWithoutCheck(origin); 1
ary3.append(elt(i 1
<T> 3
nextChar(); 4
if(this.note 4
STRANGE_CHAR['~'] 1
jrubyJarFile 1
invokeThreadContext(, 17
this.enclosingScope 2
list=new 1
handleUselessWarn(node, 11
b.append('\\'); 1
sig 1
output.write(bignum.value.signum() 2
p.load(classLoader.getResourceAsStream()); 1
fontFileNameAlternate 2
userService 2
wOffset=offset+pos; 1
defaultMethod.init(); 1
//ignore 1
note.setDisplayName(StringUtils.substring(journal.getSummary() 1
this.tombstone 1
exceptionHandlers.put(exceptionClass, 1
if(vars.length!=VARS_LENGTH) 1
toUpdate); 2
writeInt(instanceVars.size()); 1
INVOCATION_HANDLER_INVOKE_METHOD); 1
r[248]=58; 1
logger.setOpaque(false); 1
desk.setTransferHandler(handler); 1
CHOMPING['0'] 1
System.out.println(7*10+ourTurn); 1
this.minLength 1
ArrayList<Move> 1
light 1
leadingSpaces 2
realSize-=len; 1
FileChannel 10
iVisited.getSuperNode().accept(this); 1
if(other 5
module.defineAlias(); 3
parser.setDefaultOperator(Operator.AND); 2
n.accept(visitor); 1
print(' 10
warnings.warning(tail.getPosition(), 1
_true.mimicsWithoutCheck(origin); 1
this.shouldStart 1
((DotNode) 1
pgbl.setConstraints(logger, 1
mv.go_to(afterCall); 2
if(isDtStartMissing) 1
R_FLOWNONZERO['{'] 1
++methodIndex; 3
if(r_le(begin,obj)) 1
IRubyObject[]NMEArgs 1
--last 1
this.setLocationRelativeTo(null); 1
ga2.loadThis(); 1
log.error(t.getMessage(), 1
token=m.prefix(); 1
if(displayAlarm 1
note.setIcalUid(journal.getUid().getValue()); 1
entries.put(iter.next(),null); 1
type=BRANCH; 1
branchOut=this; 2
((DStrNode)tail).prepend(head); 1
r[312]=90; 1
fieldsTable.setLayoutData(new 1
visitNode(iVisited.getVarNode()); 1
b.append(minCount); 6
defl.defineFastMethod(,RubyKernel.IRUBY_OBJECT,RubyKernel.IRUBY_OBJECT)); 1
EXPR_FNAME, 1
count--; 1
ArgsUtil.convertToRubyArray(runtime, 1
checkExpression(value); 1
this.symbol 2
if(this.eof) 1
if(memreg>0)b.append(memreg); 2
eval(); 16
this.classname 1
note.setUid(NOTE_UID 2
if(str!=null) 1
setRange('A','Z'); 1
result.append(new 2
cancel.setText(msg.getString()); 1
env.getTagHandles().put(handle,prefix); 1
defout.callMethod(context, 5
javaProxy.getMetaClass().defineFastMethod(, 1
LinkNode 1
visitNodeInIndentation(n.getThenBody()); 1
containingClass.getSingletonClass().addMethod(name, 1
to[to.length 2
cntrl.setChar((char)0x7f); 1
assertEquals(contents, 2
this.context.setClassShutter(SHUTTER); 1
this.tOutside=end; 1
System.arraycopy(bytes,src,newbytes,pos,newlen-pos); 1
op_plus(runtime, 1
this(runtime, 12
cachedMethodAndType 3
rrs.add(0, 2
print(operator); 1
removeContentRecursive((ContentItem) 1
this.code 1
integer.getMetaClass().defineFastMethod(, 1
List<JarEntry> 1
if(RubyComparable.cmpint(r,a,b) 2
r[336]=57; 1
concreteProxyClass 1
result.append(outp, 2
STUPID_CHAR['\0'] 1
Parameter 2
out 15
CharacterClass.makeDigit(term,inv,(flags&UNICODE)>0); 1
assertEquals(b.length(), 1
this.clazz 1
src.position(src.position()+v); 1
bs.add(nc,inv); 1
assertEquals(,val1,outp3[0]); 1
commentNodes.add(node); 1
someEmptyContentDirectory.mkdirs() 1
metaclass 2
LexState 4
Assert.assertEquals(eventStamp.getStartDate(), 1
this.instanceAssignedNames 1
Pretokenizer(char[] 1
bs.setRange(Character.toLowerCase(c0),Character.toLowerCase(c)); 1
for(CollectionItem 2
JRubyMethod 1
((JavaClass)javaClassVar).addProxyExtender(extender); 1
resetStacks(); 1
server.addLifeCycle(indexer); 1
if(reader==null) 1
context.getCurrentFrame(), 2
checkClassVariablesSettable(); 6
init__resolver_scanner_trans_keys_0( 1
start++; 2
ms=ms.prev; 1
context.loadNil(); 2
close(); 3
val 36
removeContentCommon(content); 1
seq.args_arg_opts 1
this.validate(); 1
serializer.asDOMSerializer().serialize(doc); 1
module.defineFastModuleFunction(, 11
r[56]=31; 1
if(current!=null) 1
note.setIcalUid(task.getUid().getValue()); 1
indexer.setStale(); 2
compiledScriptClass.attr_accessor(new 1
b.append(lookaheadId); 10
this.occurrence 1
for(Entry<String, 1
markerValue 2
current=next; 2
OSEnvironment 1
if(!((scanner.peekToken() 1
assertTrue(rubyObject.isFrozen()); 1
eval.addActionListener(new 1
invoker.setServiceUrl(); 1
!Modifier.isPublic(method.getDeclaringClass().getModifiers())) 1
conditionState.stop(); 3
this.classLoader 4
BLANK_T[' 1
mainStream.fflush(); 1
intern_adler.setInt(intern,val); 1
if(!env.getTagHandles().isEmpty()) 1
FileInputStream 7
p.run(); 1
assertTrue(RubyNil.op_xor(rubyNil, 2
helper.setPreferredSize(dimBtn); 1
undef(args[i].asSymbol()); 1
wOffset=i; 2
exc.errno 1
cc.calendar 1
note.getTriageStatus().setCode(TriageStatus.CODE_DONE); 2
if(i+1 1
variable.addTrace(proc); 1
HEXA_VALUES['E'] 1
RubyHash(Ruby 1
exc.set_backtrace(exc.removeInternalVariable()); 1
while(peek(length) 1
RuntimeHelpers.processBlockArgument(runtime, 1
if(i+6 1
OutputStream 5
script.load(context, 1
b.set(i&0xff); 1
this.parser 1
if(i+4 1
s.append(re); 1
if(next!=null){ 2
.calculateRecurrenceRange(eventStamp.getEventCalendar()); 1
if(xdata 1
theClass 1
this.defaultPrintStream 1
long[]exp 1
cDigest_SHA2_384.setInternalModuleVariable()); 1
remember 1
writeIndicator(ByteList.create(),true,false,false); 2
if(node 10
mv.visitLdcInsn(new 1
passwordRecoveryIdx.put(passwordRecovery.getKey(), 1
initLibraries(); 1
arr[count]=s; 1
this.style 3
fieldsTable.setHeaderVisible(true); 1
exceptionClass.defineFastMethod(, 1
Locale 2
entrySet.remove(next2); 1
osr.close(); 1
addStaticMethod(method); 1
visitNode(iVisited.getRegexpNode()); 1
term=actual.term; 2
pgbl.setConstraints(sender, 1
content.setLastModification(ContentItem.Action.CREATED); 1
recv.getRuntime().getGlobalVariables().set(, 2
resp.setStatus(304); 1
if(off>=out) 2
assertNull(numerics.next()); 1
if(end 2
while(i<end){ 2
fixnum.index 1
registerClass(,alnum,posixClasses); 1
if(enm 1
errorStream.callMethod(runtime.getCurrentContext(), 1
append(moreBytes.bytes, 2
signature.append(ci(params[i])); 1
assertTrue(RubyBigDecimal.formatHasLeadingPlus()); 1
raiseArgumentError(args,ERR_ILLEGAL_FORMAT_CHAR); 2
FastInvocationCallback 10
newDir 1
MockUser 1
this.thread 2
if(zf 1
prevDistance=distance; 1
.getParameterTypes(); 1
CharacterClass.makeWordBoundary(term,inv,(flags&UNICODE)>0); 1
this.list=names; 1
NAMES[TO_ARY] 1
ancestor.fastSetInstanceVariable(,methodNames); 1
switch(c1=data[i+3]){ 1
this.resolver.descendResolver(parent,index); 1
switch(current) 1
Manifest 1
(this.row 2
log.setVisible(true); 2
if(!v.contains(new 2
this.proc 6
print(cluster); 1
set.add(s1); 1
if(.equals(val)) 1
table[ClassIndex.FIXNUM][MethodIndex.OP_LE] 1
Lock 1
setValueNode(valueNode); 5
pipe 1
super(0); 4
(NULL_BL_T_LINEBR[this.buffer.bytes[this.pointer+3]]); 3
if(env.getYamlVersion() 1
mv.label(methodMissing); 1
.createRegistry(); 1
ByteList.plain(#$%&'() 1
ch1Meets= 4
module.getNonIncludedClass())); 1
if(iargs.length 1
re.root0=first; 1
date.defineFastMethod(,IRubyObject.class)); 1
flags.setBorder(BorderFactory.createEmptyBorder()); 1
array.defineFastMethod(,IRubyObject.class)); 1
mv.visitInsn(ICONST_2); 1
CompiledBlock 1
RubyBigDecimal 6
realSize 10
this.unboundMethodClass 1
cg.sig(Void.TYPE)); 1
this(dbname, 1
re.lookaheads=vars[LOOKAHEAD_COUNT]; 1
current.next=next=new 2
in=(mr=memregs[i]).in; 1
cache 1
((RubyMatchData)ret).use(); 2
log.warn(, 3
RDNBuilder 1
(i 1
forward(length); 13
r[192]=111; 1
if(hasSingletonMethods(type) 1
this.xslFileName 1
remember.setOpaque(false); 1
if(FULL_LINEBR[peek()]) 1
yieldLock.notify(); 3
this.nilClass 1
out.print(); 1
cal.set(year, 1
about.setVisible(true); 2
JavaObject.wrap(clazz.getRuntime(), 1
exporter.setRegistryPort(9999); 1
currentFrame 1
invokableNode.setArgsNode(arg_add(lhs.getPosition(), 1
model.fireTableDataChanged(); 2
NIL 1
items.add(convertJournalCalendar(cc.calendar)); 1
writer.flush(); 3
os.write(line.getBytes()); 1
/*public 1
STUPID_CHAR['?'] 1
LOG.INFO( 4
RubyComparable.cmperr(this, 1
ic.setArgumentTypes(descriptor); 12
result.setConstant(,RubyNumeric.int2fix(runtime,BigDecimal.ROUND_HALF_DOWN)); 1
runNormally(scriptNode, 1
switchMap.put(new 1
replaceText(startPos 1
org.jruby.RubyTime 1
module 3
result.defineConstant(,runtime.newFixnum(-1)); 1
if(ceh 29
runtime.getCurrentContext(), 2
r[8]=79; 1
log.debug(event.getMessage()); 2
method.ifle(noMoreArrayElements); 1
addFixer((Node)(((LinkNode)oo).getValue()), 1
realLength++; 1
STRANGE_CHAR[']'] 1
connection.disconnect(); 2
lst.add(java.lang.reflect.Array.get(data,i)); 1
r[48]=160; 1
this.gateway 1
javaInterfaceTemplate 1
writer.write(contents); 2
buf.append(base, 2
method.setCallConfig(callConfig); 2
RubyHash.this.clear(); 4
st_size 1
calendar.setTimeInMillis(getTimeInMillis()); 1
closed 1
r[56]=169; 1
matchDataClass.defineAnnotatedMethods(RubyMatchData.class); 1
limit 1
r[32]=13; 1
NAMES[EQL_P] 1
mimeType, 2
config.getOutput().print(i); 2
inspect(opAsgnNode.getValueNode()); 1
enterContext(); 1
if(master==null) 1
createSysErr(IErrno.EXDEV, 1
flater 2
visitNode(iVisited.getBodyNode()); 7
env.expectBlockMappingSimpleValue(); 1
createContentInternal(parents, 1
b64_table 1
Vector 4
in.next=b; 1
PARAGRAPH_SEPARATOR 1
prepareNext(); 9
if(sc.charAt(1) 1
r[80]=214; 1
node.failNext=out; 2
super( 6
fchar 2
goal 12
if(RubyNumeric.fix2long(r) 1
i++; 54
assertEquals(expectedTraceLine(16), 1
title.setBackground(background); 1
this.viewname 2
links[3].setText(); 1
synchronized(m_mxStackCommands) 4
link(current,term); 1
THEN 1
chunks.append(ch); 1
r[136]=48; 2
a[j] 3
AttributesMap 7
for(Enumeration<JarEntry> 1
LOGGER.log(Level.FINEST, 1
while(Character.isWhitespace(data[p])){ 1
assertTrue(key.getClass() 2
Lookahead(int 1
seperator 1
table 20
mv.invokestatic(cg.p(CallbackFactory.class), 1
interfaceModule.includeModule(extModule); 1
classClass 1
obj.mimicsWithoutCheck(this.call); 1
config.getOutput().print(config.getVersionString()); 1
parentModule 2
hashc.index 1
RubyFloat.newFloat(recv.getRuntime(), 1
REDO 1
callConfig.post(context); 4
symbolMetaClass.undefineMethod(); 1
if(obj.isNil()) 1
CharBuffer 3
COMPILE(then_seq, 1
blockArgs 1
super(item, 1
nkfVersion.freeze(); 1
for(Iterator<Tombstone> 1
while(!isNoCommands()) 1
CACHE.put(key, 1
sock_stream 1
out.writeInt(len 1
.1073554449776116584640731045276e-3, 1
if(oo.isNil()) 1
servletHolder.setInitOrder(1); 1
if(this.pattern.isDotAll()) 1
if(str.length() 1
currentObject 3
this(25, 1
scanner.setPos(RubyFixnum.fix2int(pos)); 1
r[320]=46; 1
state[i] 1
r[104]=102; 1
_LEVEL, 7
this.cpath 2
child.setIcalUid(child.getUid()); 1
format=new 1
inlineBreaks 1
resolverExactPaths.add(0,exactPaths); 1
for(Iterator<NoteItem> 1
expVal 1
lineno++; 1
if((in=mr.in)<0 2
fastStoreConstant(name, 3
STATES[this.env.state].expect(env); 1
builtins.put(name, 1
alive 1
add(out, 2
assertFalse(map.values().contains(new 2
item.getUid() 1
target.bits=bits; 1
ADD_INSN(seq, 1
results.addAll(toRemove); 1
httpResponse.setContentLength(0); 3
getSession().delete(content); 1
System.err.println(); 34
this.socket.close(); 1
floatStep19(context, 1
if(((List)self.callMethod(context, 1
for(;;i++) 1
while(entry!=null){ 1
checkResize(); 2
connection.setRequestProperty(); 2
JavaProxyConstructor(Ruby 1
this(self, 1
-.63976084654366357868752632309681e-10, 1
this.timeout 1
this.parserSupport 1
s[offset++] 10
this(owner); 1
if(actual.isState){ 1
buffer.append(src.read()); 1
m_oSyncEngine.doSyncSource(oSyncCmd.m_nCmdParam,oSyncCmd.m_strCmdParam, 1
if(block 1
numeric.includeModule(runtime.getComparable()); 2
.4497954546494931083083327624533e-18 1
ga.dup(); 2
while(needMoreTokens(index+1)) 1
runtime.getGlobalVariables().set()); 1
visitAndPrintWithSeparator(iVisited.getValueNode().childNodes().iterator()); 1
noteMod.setOwner(masterNote.getOwner()); 1
ConditionVariable.setup(runtime); 1
SelectableChannel 1
runtime.getLoadService().init(new 7
(this.buffer.bytes[this.pointer+1] 4
column.setResizable(false); 5
InstanceVariables 1
target.isFull=false; 4
scheduler.shutdown(); 1
calendar.setTimeZone(cal.getTimeZone()); 1
handler.ungetc(RubyNumeric.fix2int(number)); 1
errorCode 1
OrNode 1
JRubyFile[] 4
project.addReference(reference, 1
gateway.withWriter(sig, 1
AccessController.doPrivileged(new 1
sb.append('\\').append('a'); 1
RubyUNIXSocket 2
preIter(); 17
Fieldable 2
ReWriteVisitor 4
dumpObject(marshaled); 1
s.append(offset); 1
prefixPaths.add(key); 1
defInit0.put(); 1
env.indentation 6
callback.nextValue(this, 4
RubyUDPSocket.createUDPSocket(runtime); 1
removeContentRecursive(content); 2
cGen.getMetaClass().defineMethod()); 1
context.postYieldLight(this); 1
assertEquals(4, 3
item.setText(); 1
this(message, 1
b.out1=term; 1
alloc((int) 1
integer.defineFastMethod()); 10
while(ALPHA[ch]) 2
EMPTY_ARRAY, 1
bytes[begin 1
javaModule.defineModuleFunction()); 2
for(RestartInfo 2
assertFalse(, 7
long[] 4
ext.update(bytes.unsafeBytes(), 2
.getMethod(); 1
future.get(); 1
userPass 1
if(isFirst) 2
re.memregs=vars[MEMREG_COUNT]; 1
runtime.setFileStat(fileStatClass); 1
System.arraycopy(frameStack, 2
result.add(contents[i]); 2
classWriter.visitSource(sourcename, 1
Section 3
-.126124551191552258324954248533e-18 1
cleanBuffer.append(Integer.toHexString(characters[i])).append(); 1
unshare(realSize); 1
loc.openConnection(); 1
this.errno 1
if(Character.isDigit(gname.charAt(0))){ 1
node.branchOut=null; 1
true); 1
r[16]=3; 1
recv, 2
if(!imf.isSent()){ 1
Namespace.getNamespace(http: 1
JavaClass.forName(runtime, 2
HibEventExceptionStamp 1
this.sm 1
runJIT(runtime, 1
jruby.execute(); 3
request.getServerPort()); 1
parseException 1
super(message); 16
LocalSessionFactoryBean 1
SyncCommand 2
runtime.getJavaSupport().getJavaUtilitiesModule(), 2
this.gcModule 1
HashMap<Long, 1
connection.setRequestMethod(); 2
mv.visitTypeInsn(INSTANCEOF, 2
this.exceptionClass 1
this.imf=imf; 1
IS_ESCAPE_REPLACEMENT['f'] 1
hex_table 1
calendar.get(Calendar.MINUTE) 1
System.arraycopy(other.list, 2
signChar 11
maxId 1
Assert.assertEquals(eventStamp.getRecurrenceRules().get(0).toString(), 1
selector.select(timeout); 1
column 4
expectBlockSequence(); 1
tc.setText(); 5
obj.mimicsWithoutCheck(dict); 1
this.lastExitStatus 1
chunks.append(this.buffer.bytes,this.pointer,length); 6
if(cc.type.equals(Component.VEVENT)) 1
imagesList.remove(index); 1
constructor 2
dest.append(); 37
re.initialize(str, 2
encode.order(ByteOrder.BIG_ENDIAN); 3
TopFieldDocCollector 1
data.append(' 1
lexer.setValue(new 2
this.tokens.add(Token.FLOW_ENTRY); 1
distance+=length(t); 1
suite.addTestSuite(TestRaiseException.class); 1
env.expectDocumentEnd(); 1
this.possibleSimpleKeys.put(new 1
buf.fill('0',width); 5
List<Object> 3
ttype=c; 1
dupn((int) 1
((AssignableNode) 1
standardError 1
CallType 7
seek(pos,SEEK_SET); 1
b.next=tmp; 1
table[ClassIndex.SYMBOL][MethodIndex.TO_S] 1
super.addItemToCollectionInternal(mod, 1
flagToString(buffer, 3
Visibility.PUBLIC, 3
setConfig(configHash, 34
getSession().flush(); 11
proxyClass.setAllocator(superClass.getAllocator()); 1
var 4
this.tags 1
setupModes(modes); 1
target.bits=addbits; 1
if(s.equals()) 1
request.setAttribute(, 10
getRuntime().getCurrentContext().getCurrentFrame().setBackRef(getRuntime().getNil()); 1
CallAdapter 1
method.label(readyForCall); 1
io.flush(); 1
Match2Node 1
this( 5
method.anewarray(cg.p(String.class)); 1
start(server); 1
search(false, 1
record 1
this.modes 9
realSize++; 2
out.flush(); 2
data=text; 1
classLoader.defineClass(cg.c(classname), 1
config.depositHereDocument(iVisited.getValue().toString()); 1
tc.preInitBuiltinClasses(objectClass, 1
block 5
collection.setOwner(owner); 1
this.superClassMap 1
cacheOffset=tOffset; 1
getContentService().updateContent((ContentItem) 1
System.arraycopy(files, 1
replace(pattern.matcher(res,group),substitution,out); 1
createSysErr(IErrno.EPIPE, 1
if(!(event 1
if(resourceBase 1
setupModes(args[1].convertToString().toString()); 1
bignum.defineFastMethod()); 8
gzwriter.defineFastMethod()); 5
if(((c=data[i])==firstLower 1
env.expectFirstFlowSequenceItem(); 1
Map 51
RuntimeHelpers.invoke(oo.getRuntime().getCurrentContext(), 2
this.useExplicitEnd 1
clzz.getSingletonClass().addMethod( 1
compileLoop: 1
this.threadClass 1
merge.add(0,constructMapping(subnode)); 1
other 21
getMethodAdapter().aload(VISIBILITY_INDEX); 1
push(peek()); 1
result.setMergePolicy(mp); 3
recordset.setUuid(tombstone.getItemUid()); 1
store(RubyNumeric.num2long(args[0]), 1
i=parseTerm(data,i,end,tmp,flags); 1
invokeUtilityMethod(, 15
StampUtils.getEventExceptionStamp(noteItem); 1
STRANGE_CHAR['='] 1
config.getSource().charAt(getEndOffset(n)) 1
usernameIdx.containsKey(user.getUsername())) 1
cv.visitField(ACC_STATIC 2
desk.setSize(dim); 1
ConnectionManagerClient 1
internal.getByteList().unsafeReplace((int) 1
r[40]=20; 1
result.scores[2] 3
this.revokeTicketBaseView 1
Map<String,String> 3
abouter.setOpaque(false); 1
s[offset] 1
classId 1
this.className 1
expunge(); 6
HEXA_VALUES['8'] 1
'1', 2
SELF 1
methodCache.initialized(); 1
entry.key 1
domainCheck(recv, 7
parserSupport.getCurrentScope().isDefined(value) 1
ensureGems(new 1
1.0e16, 1
toAppendTo.append(); 6
parseStack.push(P_STREAM_END); 1
